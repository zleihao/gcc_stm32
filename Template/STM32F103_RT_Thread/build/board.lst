ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"board.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NVIC_SetPriority,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	NVIC_SetPriority:
  24              	.LFB20:
  25              		.file 1 "./Libraries/CMSIS/core_cm3.h"
   1:./Libraries/CMSIS/core_cm3.h **** /**************************************************************************//**
   2:./Libraries/CMSIS/core_cm3.h ****  * @file     core_cm3.h
   3:./Libraries/CMSIS/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./Libraries/CMSIS/core_cm3.h ****  * @version  V1.30
   5:./Libraries/CMSIS/core_cm3.h ****  * @date     30. October 2009
   6:./Libraries/CMSIS/core_cm3.h ****  *
   7:./Libraries/CMSIS/core_cm3.h ****  * @note
   8:./Libraries/CMSIS/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./Libraries/CMSIS/core_cm3.h ****  *
  10:./Libraries/CMSIS/core_cm3.h ****  * @par
  11:./Libraries/CMSIS/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./Libraries/CMSIS/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./Libraries/CMSIS/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:./Libraries/CMSIS/core_cm3.h ****  *
  15:./Libraries/CMSIS/core_cm3.h ****  * @par
  16:./Libraries/CMSIS/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./Libraries/CMSIS/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./Libraries/CMSIS/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./Libraries/CMSIS/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./Libraries/CMSIS/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./Libraries/CMSIS/core_cm3.h ****  *
  22:./Libraries/CMSIS/core_cm3.h ****  ******************************************************************************/
  23:./Libraries/CMSIS/core_cm3.h **** 
  24:./Libraries/CMSIS/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:./Libraries/CMSIS/core_cm3.h **** #define __CM3_CORE_H__
  26:./Libraries/CMSIS/core_cm3.h **** 
  27:./Libraries/CMSIS/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:./Libraries/CMSIS/core_cm3.h ****  *
  29:./Libraries/CMSIS/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./Libraries/CMSIS/core_cm3.h ****  *   - Error 10: \n
  31:./Libraries/CMSIS/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:./Libraries/CMSIS/core_cm3.h ****  *     Error 10: Expecting ';'
  33:./Libraries/CMSIS/core_cm3.h ****  * .
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 2


  34:./Libraries/CMSIS/core_cm3.h ****  *   - Error 530: \n
  35:./Libraries/CMSIS/core_cm3.h ****  *     return(__regBasePri); \n
  36:./Libraries/CMSIS/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:./Libraries/CMSIS/core_cm3.h ****  * . 
  38:./Libraries/CMSIS/core_cm3.h ****  *   - Error 550: \n
  39:./Libraries/CMSIS/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:./Libraries/CMSIS/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:./Libraries/CMSIS/core_cm3.h ****  * .
  42:./Libraries/CMSIS/core_cm3.h ****  *   - Error 754: \n
  43:./Libraries/CMSIS/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:./Libraries/CMSIS/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:./Libraries/CMSIS/core_cm3.h ****  * .
  46:./Libraries/CMSIS/core_cm3.h ****  *   - Error 750: \n
  47:./Libraries/CMSIS/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:./Libraries/CMSIS/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:./Libraries/CMSIS/core_cm3.h ****  * .
  50:./Libraries/CMSIS/core_cm3.h ****  *   - Error 528: \n
  51:./Libraries/CMSIS/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:./Libraries/CMSIS/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:./Libraries/CMSIS/core_cm3.h ****  * .
  54:./Libraries/CMSIS/core_cm3.h ****  *   - Error 751: \n
  55:./Libraries/CMSIS/core_cm3.h ****  *     } InterruptType_Type; \n
  56:./Libraries/CMSIS/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:./Libraries/CMSIS/core_cm3.h ****  * .
  58:./Libraries/CMSIS/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:./Libraries/CMSIS/core_cm3.h ****  *
  60:./Libraries/CMSIS/core_cm3.h ****  */
  61:./Libraries/CMSIS/core_cm3.h **** 
  62:./Libraries/CMSIS/core_cm3.h **** /*lint -save */
  63:./Libraries/CMSIS/core_cm3.h **** /*lint -e10  */
  64:./Libraries/CMSIS/core_cm3.h **** /*lint -e530 */
  65:./Libraries/CMSIS/core_cm3.h **** /*lint -e550 */
  66:./Libraries/CMSIS/core_cm3.h **** /*lint -e754 */
  67:./Libraries/CMSIS/core_cm3.h **** /*lint -e750 */
  68:./Libraries/CMSIS/core_cm3.h **** /*lint -e528 */
  69:./Libraries/CMSIS/core_cm3.h **** /*lint -e751 */
  70:./Libraries/CMSIS/core_cm3.h **** 
  71:./Libraries/CMSIS/core_cm3.h **** 
  72:./Libraries/CMSIS/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:./Libraries/CMSIS/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:./Libraries/CMSIS/core_cm3.h ****     - CMSIS version number
  75:./Libraries/CMSIS/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:./Libraries/CMSIS/core_cm3.h ****     - Cortex-M core peripheral base address
  77:./Libraries/CMSIS/core_cm3.h ****   @{
  78:./Libraries/CMSIS/core_cm3.h ****  */
  79:./Libraries/CMSIS/core_cm3.h **** 
  80:./Libraries/CMSIS/core_cm3.h **** #ifdef __cplusplus
  81:./Libraries/CMSIS/core_cm3.h ****  extern "C" {
  82:./Libraries/CMSIS/core_cm3.h **** #endif 
  83:./Libraries/CMSIS/core_cm3.h **** 
  84:./Libraries/CMSIS/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:./Libraries/CMSIS/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:./Libraries/CMSIS/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:./Libraries/CMSIS/core_cm3.h **** 
  88:./Libraries/CMSIS/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:./Libraries/CMSIS/core_cm3.h **** 
  90:./Libraries/CMSIS/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 3


  91:./Libraries/CMSIS/core_cm3.h **** 
  92:./Libraries/CMSIS/core_cm3.h **** #if defined (__ICCARM__)
  93:./Libraries/CMSIS/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:./Libraries/CMSIS/core_cm3.h **** #endif
  95:./Libraries/CMSIS/core_cm3.h **** 
  96:./Libraries/CMSIS/core_cm3.h **** 
  97:./Libraries/CMSIS/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:./Libraries/CMSIS/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:./Libraries/CMSIS/core_cm3.h **** #endif
 100:./Libraries/CMSIS/core_cm3.h **** 
 101:./Libraries/CMSIS/core_cm3.h **** 
 102:./Libraries/CMSIS/core_cm3.h **** 
 103:./Libraries/CMSIS/core_cm3.h **** 
 104:./Libraries/CMSIS/core_cm3.h **** /**
 105:./Libraries/CMSIS/core_cm3.h ****  * IO definitions
 106:./Libraries/CMSIS/core_cm3.h ****  *
 107:./Libraries/CMSIS/core_cm3.h ****  * define access restrictions to peripheral registers
 108:./Libraries/CMSIS/core_cm3.h ****  */
 109:./Libraries/CMSIS/core_cm3.h **** 
 110:./Libraries/CMSIS/core_cm3.h **** #ifdef __cplusplus
 111:./Libraries/CMSIS/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:./Libraries/CMSIS/core_cm3.h **** #else
 113:./Libraries/CMSIS/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:./Libraries/CMSIS/core_cm3.h **** #endif
 115:./Libraries/CMSIS/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:./Libraries/CMSIS/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:./Libraries/CMSIS/core_cm3.h **** 
 118:./Libraries/CMSIS/core_cm3.h **** 
 119:./Libraries/CMSIS/core_cm3.h **** 
 120:./Libraries/CMSIS/core_cm3.h **** /*******************************************************************************
 121:./Libraries/CMSIS/core_cm3.h ****  *                 Register Abstraction
 122:./Libraries/CMSIS/core_cm3.h ****  ******************************************************************************/
 123:./Libraries/CMSIS/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:./Libraries/CMSIS/core_cm3.h ****  @{
 125:./Libraries/CMSIS/core_cm3.h **** */
 126:./Libraries/CMSIS/core_cm3.h **** 
 127:./Libraries/CMSIS/core_cm3.h **** 
 128:./Libraries/CMSIS/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:./Libraries/CMSIS/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:./Libraries/CMSIS/core_cm3.h ****   @{
 131:./Libraries/CMSIS/core_cm3.h ****  */
 132:./Libraries/CMSIS/core_cm3.h **** typedef struct
 133:./Libraries/CMSIS/core_cm3.h **** {
 134:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:./Libraries/CMSIS/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:./Libraries/CMSIS/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:./Libraries/CMSIS/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:./Libraries/CMSIS/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:./Libraries/CMSIS/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:./Libraries/CMSIS/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:./Libraries/CMSIS/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:./Libraries/CMSIS/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:./Libraries/CMSIS/core_cm3.h **** }  NVIC_Type;                                               
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 4


 148:./Libraries/CMSIS/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:./Libraries/CMSIS/core_cm3.h **** 
 150:./Libraries/CMSIS/core_cm3.h **** 
 151:./Libraries/CMSIS/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:./Libraries/CMSIS/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:./Libraries/CMSIS/core_cm3.h ****   @{
 154:./Libraries/CMSIS/core_cm3.h ****  */
 155:./Libraries/CMSIS/core_cm3.h **** typedef struct
 156:./Libraries/CMSIS/core_cm3.h **** {
 157:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:./Libraries/CMSIS/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:./Libraries/CMSIS/core_cm3.h **** } SCB_Type;                                                
 177:./Libraries/CMSIS/core_cm3.h **** 
 178:./Libraries/CMSIS/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:./Libraries/CMSIS/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:./Libraries/CMSIS/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:./Libraries/CMSIS/core_cm3.h **** 
 182:./Libraries/CMSIS/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:./Libraries/CMSIS/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:./Libraries/CMSIS/core_cm3.h **** 
 185:./Libraries/CMSIS/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:./Libraries/CMSIS/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:./Libraries/CMSIS/core_cm3.h **** 
 188:./Libraries/CMSIS/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:./Libraries/CMSIS/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:./Libraries/CMSIS/core_cm3.h **** 
 191:./Libraries/CMSIS/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:./Libraries/CMSIS/core_cm3.h **** 
 195:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:./Libraries/CMSIS/core_cm3.h **** 
 198:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:./Libraries/CMSIS/core_cm3.h **** 
 201:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:./Libraries/CMSIS/core_cm3.h **** 
 204:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 5


 205:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:./Libraries/CMSIS/core_cm3.h **** 
 207:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:./Libraries/CMSIS/core_cm3.h **** 
 210:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:./Libraries/CMSIS/core_cm3.h **** 
 213:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:./Libraries/CMSIS/core_cm3.h **** 
 216:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:./Libraries/CMSIS/core_cm3.h **** 
 219:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:./Libraries/CMSIS/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:./Libraries/CMSIS/core_cm3.h **** 
 222:./Libraries/CMSIS/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:./Libraries/CMSIS/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:./Libraries/CMSIS/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:./Libraries/CMSIS/core_cm3.h **** 
 226:./Libraries/CMSIS/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:./Libraries/CMSIS/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:./Libraries/CMSIS/core_cm3.h **** 
 229:./Libraries/CMSIS/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:./Libraries/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:./Libraries/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:./Libraries/CMSIS/core_cm3.h **** 
 233:./Libraries/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:./Libraries/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:./Libraries/CMSIS/core_cm3.h **** 
 236:./Libraries/CMSIS/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:./Libraries/CMSIS/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:./Libraries/CMSIS/core_cm3.h **** 
 239:./Libraries/CMSIS/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:./Libraries/CMSIS/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:./Libraries/CMSIS/core_cm3.h **** 
 242:./Libraries/CMSIS/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:./Libraries/CMSIS/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:./Libraries/CMSIS/core_cm3.h **** 
 245:./Libraries/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:./Libraries/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:./Libraries/CMSIS/core_cm3.h **** 
 248:./Libraries/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:./Libraries/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:./Libraries/CMSIS/core_cm3.h **** 
 251:./Libraries/CMSIS/core_cm3.h **** /* SCB System Control Register Definitions */
 252:./Libraries/CMSIS/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:./Libraries/CMSIS/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:./Libraries/CMSIS/core_cm3.h **** 
 255:./Libraries/CMSIS/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:./Libraries/CMSIS/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:./Libraries/CMSIS/core_cm3.h **** 
 258:./Libraries/CMSIS/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:./Libraries/CMSIS/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:./Libraries/CMSIS/core_cm3.h **** 
 261:./Libraries/CMSIS/core_cm3.h **** /* SCB Configuration Control Register Definitions */
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 6


 262:./Libraries/CMSIS/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:./Libraries/CMSIS/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:./Libraries/CMSIS/core_cm3.h **** 
 265:./Libraries/CMSIS/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:./Libraries/CMSIS/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:./Libraries/CMSIS/core_cm3.h **** 
 268:./Libraries/CMSIS/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:./Libraries/CMSIS/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:./Libraries/CMSIS/core_cm3.h **** 
 271:./Libraries/CMSIS/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:./Libraries/CMSIS/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:./Libraries/CMSIS/core_cm3.h **** 
 274:./Libraries/CMSIS/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:./Libraries/CMSIS/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:./Libraries/CMSIS/core_cm3.h **** 
 277:./Libraries/CMSIS/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:./Libraries/CMSIS/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:./Libraries/CMSIS/core_cm3.h **** 
 280:./Libraries/CMSIS/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:./Libraries/CMSIS/core_cm3.h **** 
 284:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:./Libraries/CMSIS/core_cm3.h **** 
 287:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:./Libraries/CMSIS/core_cm3.h **** 
 290:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:./Libraries/CMSIS/core_cm3.h **** 
 293:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:./Libraries/CMSIS/core_cm3.h **** 
 296:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:./Libraries/CMSIS/core_cm3.h **** 
 299:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:./Libraries/CMSIS/core_cm3.h **** 
 302:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:./Libraries/CMSIS/core_cm3.h **** 
 305:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:./Libraries/CMSIS/core_cm3.h **** 
 308:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:./Libraries/CMSIS/core_cm3.h **** 
 311:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:./Libraries/CMSIS/core_cm3.h ****                                      
 314:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:./Libraries/CMSIS/core_cm3.h **** 
 317:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 7


 319:./Libraries/CMSIS/core_cm3.h **** 
 320:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:./Libraries/CMSIS/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:./Libraries/CMSIS/core_cm3.h **** 
 323:./Libraries/CMSIS/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:./Libraries/CMSIS/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:./Libraries/CMSIS/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:./Libraries/CMSIS/core_cm3.h **** 
 327:./Libraries/CMSIS/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:./Libraries/CMSIS/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:./Libraries/CMSIS/core_cm3.h **** 
 330:./Libraries/CMSIS/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:./Libraries/CMSIS/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:./Libraries/CMSIS/core_cm3.h **** 
 333:./Libraries/CMSIS/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:./Libraries/CMSIS/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:./Libraries/CMSIS/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:./Libraries/CMSIS/core_cm3.h **** 
 337:./Libraries/CMSIS/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:./Libraries/CMSIS/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:./Libraries/CMSIS/core_cm3.h **** 
 340:./Libraries/CMSIS/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:./Libraries/CMSIS/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:./Libraries/CMSIS/core_cm3.h **** 
 343:./Libraries/CMSIS/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:./Libraries/CMSIS/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:./Libraries/CMSIS/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:./Libraries/CMSIS/core_cm3.h **** 
 347:./Libraries/CMSIS/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:./Libraries/CMSIS/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:./Libraries/CMSIS/core_cm3.h **** 
 350:./Libraries/CMSIS/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:./Libraries/CMSIS/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:./Libraries/CMSIS/core_cm3.h **** 
 353:./Libraries/CMSIS/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:./Libraries/CMSIS/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:./Libraries/CMSIS/core_cm3.h **** 
 356:./Libraries/CMSIS/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:./Libraries/CMSIS/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:./Libraries/CMSIS/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:./Libraries/CMSIS/core_cm3.h **** 
 360:./Libraries/CMSIS/core_cm3.h **** 
 361:./Libraries/CMSIS/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:./Libraries/CMSIS/core_cm3.h ****   memory mapped structure for SysTick
 363:./Libraries/CMSIS/core_cm3.h ****   @{
 364:./Libraries/CMSIS/core_cm3.h ****  */
 365:./Libraries/CMSIS/core_cm3.h **** typedef struct
 366:./Libraries/CMSIS/core_cm3.h **** {
 367:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:./Libraries/CMSIS/core_cm3.h **** } SysTick_Type;
 372:./Libraries/CMSIS/core_cm3.h **** 
 373:./Libraries/CMSIS/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:./Libraries/CMSIS/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:./Libraries/CMSIS/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 8


 376:./Libraries/CMSIS/core_cm3.h **** 
 377:./Libraries/CMSIS/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:./Libraries/CMSIS/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:./Libraries/CMSIS/core_cm3.h **** 
 380:./Libraries/CMSIS/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:./Libraries/CMSIS/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:./Libraries/CMSIS/core_cm3.h **** 
 383:./Libraries/CMSIS/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:./Libraries/CMSIS/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:./Libraries/CMSIS/core_cm3.h **** 
 386:./Libraries/CMSIS/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:./Libraries/CMSIS/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:./Libraries/CMSIS/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:./Libraries/CMSIS/core_cm3.h **** 
 390:./Libraries/CMSIS/core_cm3.h **** /* SysTick Current Register Definitions */
 391:./Libraries/CMSIS/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:./Libraries/CMSIS/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:./Libraries/CMSIS/core_cm3.h **** 
 394:./Libraries/CMSIS/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:./Libraries/CMSIS/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:./Libraries/CMSIS/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:./Libraries/CMSIS/core_cm3.h **** 
 398:./Libraries/CMSIS/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:./Libraries/CMSIS/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:./Libraries/CMSIS/core_cm3.h **** 
 401:./Libraries/CMSIS/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:./Libraries/CMSIS/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:./Libraries/CMSIS/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:./Libraries/CMSIS/core_cm3.h **** 
 405:./Libraries/CMSIS/core_cm3.h **** 
 406:./Libraries/CMSIS/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:./Libraries/CMSIS/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:./Libraries/CMSIS/core_cm3.h ****   @{
 409:./Libraries/CMSIS/core_cm3.h ****  */
 410:./Libraries/CMSIS/core_cm3.h **** typedef struct
 411:./Libraries/CMSIS/core_cm3.h **** {
 412:./Libraries/CMSIS/core_cm3.h ****   __O  union  
 413:./Libraries/CMSIS/core_cm3.h ****   {
 414:./Libraries/CMSIS/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:./Libraries/CMSIS/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:./Libraries/CMSIS/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:./Libraries/CMSIS/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:./Libraries/CMSIS/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:./Libraries/CMSIS/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:./Libraries/CMSIS/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:./Libraries/CMSIS/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:./Libraries/CMSIS/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:./Libraries/CMSIS/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 9


 433:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:./Libraries/CMSIS/core_cm3.h **** } ITM_Type;                                                
 445:./Libraries/CMSIS/core_cm3.h **** 
 446:./Libraries/CMSIS/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:./Libraries/CMSIS/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:./Libraries/CMSIS/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:./Libraries/CMSIS/core_cm3.h **** 
 450:./Libraries/CMSIS/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:./Libraries/CMSIS/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:./Libraries/CMSIS/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:./Libraries/CMSIS/core_cm3.h **** 
 454:./Libraries/CMSIS/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:./Libraries/CMSIS/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:./Libraries/CMSIS/core_cm3.h **** 
 457:./Libraries/CMSIS/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:./Libraries/CMSIS/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:./Libraries/CMSIS/core_cm3.h **** 
 460:./Libraries/CMSIS/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:./Libraries/CMSIS/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:./Libraries/CMSIS/core_cm3.h **** 
 463:./Libraries/CMSIS/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:./Libraries/CMSIS/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:./Libraries/CMSIS/core_cm3.h **** 
 466:./Libraries/CMSIS/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:./Libraries/CMSIS/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:./Libraries/CMSIS/core_cm3.h **** 
 469:./Libraries/CMSIS/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:./Libraries/CMSIS/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:./Libraries/CMSIS/core_cm3.h **** 
 472:./Libraries/CMSIS/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:./Libraries/CMSIS/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:./Libraries/CMSIS/core_cm3.h **** 
 475:./Libraries/CMSIS/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:./Libraries/CMSIS/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:./Libraries/CMSIS/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:./Libraries/CMSIS/core_cm3.h **** 
 479:./Libraries/CMSIS/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:./Libraries/CMSIS/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:./Libraries/CMSIS/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:./Libraries/CMSIS/core_cm3.h **** 
 483:./Libraries/CMSIS/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:./Libraries/CMSIS/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:./Libraries/CMSIS/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:./Libraries/CMSIS/core_cm3.h **** 
 487:./Libraries/CMSIS/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:./Libraries/CMSIS/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:./Libraries/CMSIS/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 10


 490:./Libraries/CMSIS/core_cm3.h **** 
 491:./Libraries/CMSIS/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:./Libraries/CMSIS/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:./Libraries/CMSIS/core_cm3.h **** 
 494:./Libraries/CMSIS/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:./Libraries/CMSIS/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:./Libraries/CMSIS/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:./Libraries/CMSIS/core_cm3.h **** 
 498:./Libraries/CMSIS/core_cm3.h **** 
 499:./Libraries/CMSIS/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:./Libraries/CMSIS/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:./Libraries/CMSIS/core_cm3.h ****   @{
 502:./Libraries/CMSIS/core_cm3.h ****  */
 503:./Libraries/CMSIS/core_cm3.h **** typedef struct
 504:./Libraries/CMSIS/core_cm3.h **** {
 505:./Libraries/CMSIS/core_cm3.h ****        uint32_t RESERVED0;
 506:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:./Libraries/CMSIS/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:./Libraries/CMSIS/core_cm3.h **** #else
 510:./Libraries/CMSIS/core_cm3.h ****        uint32_t RESERVED1;
 511:./Libraries/CMSIS/core_cm3.h **** #endif
 512:./Libraries/CMSIS/core_cm3.h **** } InterruptType_Type;
 513:./Libraries/CMSIS/core_cm3.h **** 
 514:./Libraries/CMSIS/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:./Libraries/CMSIS/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:./Libraries/CMSIS/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:./Libraries/CMSIS/core_cm3.h **** 
 518:./Libraries/CMSIS/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:./Libraries/CMSIS/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:./Libraries/CMSIS/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:./Libraries/CMSIS/core_cm3.h **** 
 522:./Libraries/CMSIS/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:./Libraries/CMSIS/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:./Libraries/CMSIS/core_cm3.h **** 
 525:./Libraries/CMSIS/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:./Libraries/CMSIS/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:./Libraries/CMSIS/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:./Libraries/CMSIS/core_cm3.h **** 
 529:./Libraries/CMSIS/core_cm3.h **** 
 530:./Libraries/CMSIS/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:./Libraries/CMSIS/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:./Libraries/CMSIS/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:./Libraries/CMSIS/core_cm3.h ****   @{
 534:./Libraries/CMSIS/core_cm3.h ****  */
 535:./Libraries/CMSIS/core_cm3.h **** typedef struct
 536:./Libraries/CMSIS/core_cm3.h **** {
 537:./Libraries/CMSIS/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 11


 547:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:./Libraries/CMSIS/core_cm3.h **** } MPU_Type;                                                
 549:./Libraries/CMSIS/core_cm3.h **** 
 550:./Libraries/CMSIS/core_cm3.h **** /* MPU Type Register */
 551:./Libraries/CMSIS/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:./Libraries/CMSIS/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:./Libraries/CMSIS/core_cm3.h **** 
 554:./Libraries/CMSIS/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:./Libraries/CMSIS/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:./Libraries/CMSIS/core_cm3.h **** 
 557:./Libraries/CMSIS/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:./Libraries/CMSIS/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:./Libraries/CMSIS/core_cm3.h **** 
 560:./Libraries/CMSIS/core_cm3.h **** /* MPU Control Register */
 561:./Libraries/CMSIS/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:./Libraries/CMSIS/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:./Libraries/CMSIS/core_cm3.h **** 
 564:./Libraries/CMSIS/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:./Libraries/CMSIS/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:./Libraries/CMSIS/core_cm3.h **** 
 567:./Libraries/CMSIS/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:./Libraries/CMSIS/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:./Libraries/CMSIS/core_cm3.h **** 
 570:./Libraries/CMSIS/core_cm3.h **** /* MPU Region Number Register */
 571:./Libraries/CMSIS/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:./Libraries/CMSIS/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:./Libraries/CMSIS/core_cm3.h **** 
 574:./Libraries/CMSIS/core_cm3.h **** /* MPU Region Base Address Register */
 575:./Libraries/CMSIS/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:./Libraries/CMSIS/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:./Libraries/CMSIS/core_cm3.h **** 
 578:./Libraries/CMSIS/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:./Libraries/CMSIS/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:./Libraries/CMSIS/core_cm3.h **** 
 581:./Libraries/CMSIS/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:./Libraries/CMSIS/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:./Libraries/CMSIS/core_cm3.h **** 
 584:./Libraries/CMSIS/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:./Libraries/CMSIS/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:./Libraries/CMSIS/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:./Libraries/CMSIS/core_cm3.h **** 
 588:./Libraries/CMSIS/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:./Libraries/CMSIS/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:./Libraries/CMSIS/core_cm3.h **** 
 591:./Libraries/CMSIS/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:./Libraries/CMSIS/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:./Libraries/CMSIS/core_cm3.h **** 
 594:./Libraries/CMSIS/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:./Libraries/CMSIS/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:./Libraries/CMSIS/core_cm3.h **** 
 597:./Libraries/CMSIS/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:./Libraries/CMSIS/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:./Libraries/CMSIS/core_cm3.h **** 
 600:./Libraries/CMSIS/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:./Libraries/CMSIS/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:./Libraries/CMSIS/core_cm3.h **** 
 603:./Libraries/CMSIS/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 12


 604:./Libraries/CMSIS/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:./Libraries/CMSIS/core_cm3.h **** 
 606:./Libraries/CMSIS/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:./Libraries/CMSIS/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:./Libraries/CMSIS/core_cm3.h **** 
 609:./Libraries/CMSIS/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:./Libraries/CMSIS/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:./Libraries/CMSIS/core_cm3.h **** 
 612:./Libraries/CMSIS/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:./Libraries/CMSIS/core_cm3.h **** #endif
 614:./Libraries/CMSIS/core_cm3.h **** 
 615:./Libraries/CMSIS/core_cm3.h **** 
 616:./Libraries/CMSIS/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:./Libraries/CMSIS/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:./Libraries/CMSIS/core_cm3.h ****   @{
 619:./Libraries/CMSIS/core_cm3.h ****  */
 620:./Libraries/CMSIS/core_cm3.h **** typedef struct
 621:./Libraries/CMSIS/core_cm3.h **** {
 622:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:./Libraries/CMSIS/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:./Libraries/CMSIS/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:./Libraries/CMSIS/core_cm3.h **** } CoreDebug_Type;
 627:./Libraries/CMSIS/core_cm3.h **** 
 628:./Libraries/CMSIS/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:./Libraries/CMSIS/core_cm3.h **** 
 632:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:./Libraries/CMSIS/core_cm3.h **** 
 635:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:./Libraries/CMSIS/core_cm3.h **** 
 638:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:./Libraries/CMSIS/core_cm3.h **** 
 641:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:./Libraries/CMSIS/core_cm3.h **** 
 644:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:./Libraries/CMSIS/core_cm3.h **** 
 647:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:./Libraries/CMSIS/core_cm3.h **** 
 650:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:./Libraries/CMSIS/core_cm3.h **** 
 653:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:./Libraries/CMSIS/core_cm3.h **** 
 656:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:./Libraries/CMSIS/core_cm3.h **** 
 659:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 13


 661:./Libraries/CMSIS/core_cm3.h **** 
 662:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:./Libraries/CMSIS/core_cm3.h **** 
 665:./Libraries/CMSIS/core_cm3.h **** /* Debug Core Register Selector Register */
 666:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:./Libraries/CMSIS/core_cm3.h **** 
 669:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:./Libraries/CMSIS/core_cm3.h **** 
 672:./Libraries/CMSIS/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:./Libraries/CMSIS/core_cm3.h **** 
 676:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:./Libraries/CMSIS/core_cm3.h **** 
 679:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:./Libraries/CMSIS/core_cm3.h **** 
 682:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:./Libraries/CMSIS/core_cm3.h **** 
 685:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:./Libraries/CMSIS/core_cm3.h **** 
 688:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:./Libraries/CMSIS/core_cm3.h **** 
 691:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:./Libraries/CMSIS/core_cm3.h **** 
 694:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:./Libraries/CMSIS/core_cm3.h **** 
 697:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:./Libraries/CMSIS/core_cm3.h **** 
 700:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:./Libraries/CMSIS/core_cm3.h **** 
 703:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:./Libraries/CMSIS/core_cm3.h **** 
 706:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:./Libraries/CMSIS/core_cm3.h **** 
 709:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:./Libraries/CMSIS/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:./Libraries/CMSIS/core_cm3.h **** 
 713:./Libraries/CMSIS/core_cm3.h **** 
 714:./Libraries/CMSIS/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:./Libraries/CMSIS/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:./Libraries/CMSIS/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 14


 718:./Libraries/CMSIS/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:./Libraries/CMSIS/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:./Libraries/CMSIS/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:./Libraries/CMSIS/core_cm3.h **** 
 722:./Libraries/CMSIS/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:./Libraries/CMSIS/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:./Libraries/CMSIS/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:./Libraries/CMSIS/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:./Libraries/CMSIS/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:./Libraries/CMSIS/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:./Libraries/CMSIS/core_cm3.h **** 
 729:./Libraries/CMSIS/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:./Libraries/CMSIS/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:./Libraries/CMSIS/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:./Libraries/CMSIS/core_cm3.h **** #endif
 733:./Libraries/CMSIS/core_cm3.h **** 
 734:./Libraries/CMSIS/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:./Libraries/CMSIS/core_cm3.h **** 
 736:./Libraries/CMSIS/core_cm3.h **** 
 737:./Libraries/CMSIS/core_cm3.h **** /*******************************************************************************
 738:./Libraries/CMSIS/core_cm3.h ****  *                Hardware Abstraction Layer
 739:./Libraries/CMSIS/core_cm3.h ****  ******************************************************************************/
 740:./Libraries/CMSIS/core_cm3.h **** 
 741:./Libraries/CMSIS/core_cm3.h **** #if defined ( __CC_ARM   )
 742:./Libraries/CMSIS/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:./Libraries/CMSIS/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:./Libraries/CMSIS/core_cm3.h **** 
 745:./Libraries/CMSIS/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:./Libraries/CMSIS/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:./Libraries/CMSIS/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:./Libraries/CMSIS/core_cm3.h **** 
 749:./Libraries/CMSIS/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:./Libraries/CMSIS/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:./Libraries/CMSIS/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:./Libraries/CMSIS/core_cm3.h **** 
 753:./Libraries/CMSIS/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:./Libraries/CMSIS/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:./Libraries/CMSIS/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:./Libraries/CMSIS/core_cm3.h **** 
 757:./Libraries/CMSIS/core_cm3.h **** #endif
 758:./Libraries/CMSIS/core_cm3.h **** 
 759:./Libraries/CMSIS/core_cm3.h **** 
 760:./Libraries/CMSIS/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:./Libraries/CMSIS/core_cm3.h **** 
 762:./Libraries/CMSIS/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:./Libraries/CMSIS/core_cm3.h **** /* ARM armcc specific functions */
 764:./Libraries/CMSIS/core_cm3.h **** 
 765:./Libraries/CMSIS/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:./Libraries/CMSIS/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:./Libraries/CMSIS/core_cm3.h **** 
 768:./Libraries/CMSIS/core_cm3.h **** #define __NOP                             __nop
 769:./Libraries/CMSIS/core_cm3.h **** #define __WFI                             __wfi
 770:./Libraries/CMSIS/core_cm3.h **** #define __WFE                             __wfe
 771:./Libraries/CMSIS/core_cm3.h **** #define __SEV                             __sev
 772:./Libraries/CMSIS/core_cm3.h **** #define __ISB()                           __isb(0)
 773:./Libraries/CMSIS/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:./Libraries/CMSIS/core_cm3.h **** #define __DMB()                           __dmb(0)
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 15


 775:./Libraries/CMSIS/core_cm3.h **** #define __REV                             __rev
 776:./Libraries/CMSIS/core_cm3.h **** #define __RBIT                            __rbit
 777:./Libraries/CMSIS/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:./Libraries/CMSIS/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:./Libraries/CMSIS/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:./Libraries/CMSIS/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:./Libraries/CMSIS/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:./Libraries/CMSIS/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:./Libraries/CMSIS/core_cm3.h **** 
 784:./Libraries/CMSIS/core_cm3.h **** 
 785:./Libraries/CMSIS/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:./Libraries/CMSIS/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:./Libraries/CMSIS/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:./Libraries/CMSIS/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:./Libraries/CMSIS/core_cm3.h **** 
 790:./Libraries/CMSIS/core_cm3.h **** 
 791:./Libraries/CMSIS/core_cm3.h **** /**
 792:./Libraries/CMSIS/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:./Libraries/CMSIS/core_cm3.h ****  *
 794:./Libraries/CMSIS/core_cm3.h ****  * @return ProcessStackPointer
 795:./Libraries/CMSIS/core_cm3.h ****  *
 796:./Libraries/CMSIS/core_cm3.h ****  * Return the actual process stack pointer
 797:./Libraries/CMSIS/core_cm3.h ****  */
 798:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:./Libraries/CMSIS/core_cm3.h **** 
 800:./Libraries/CMSIS/core_cm3.h **** /**
 801:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:./Libraries/CMSIS/core_cm3.h ****  *
 803:./Libraries/CMSIS/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:./Libraries/CMSIS/core_cm3.h ****  *
 805:./Libraries/CMSIS/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:./Libraries/CMSIS/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:./Libraries/CMSIS/core_cm3.h ****  */
 808:./Libraries/CMSIS/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:./Libraries/CMSIS/core_cm3.h **** 
 810:./Libraries/CMSIS/core_cm3.h **** /**
 811:./Libraries/CMSIS/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:./Libraries/CMSIS/core_cm3.h ****  *
 813:./Libraries/CMSIS/core_cm3.h ****  * @return Main Stack Pointer
 814:./Libraries/CMSIS/core_cm3.h ****  *
 815:./Libraries/CMSIS/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:./Libraries/CMSIS/core_cm3.h ****  * Cortex processor register
 817:./Libraries/CMSIS/core_cm3.h ****  */
 818:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:./Libraries/CMSIS/core_cm3.h **** 
 820:./Libraries/CMSIS/core_cm3.h **** /**
 821:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:./Libraries/CMSIS/core_cm3.h ****  *
 823:./Libraries/CMSIS/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:./Libraries/CMSIS/core_cm3.h ****  *
 825:./Libraries/CMSIS/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:./Libraries/CMSIS/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:./Libraries/CMSIS/core_cm3.h ****  */
 828:./Libraries/CMSIS/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:./Libraries/CMSIS/core_cm3.h **** 
 830:./Libraries/CMSIS/core_cm3.h **** /**
 831:./Libraries/CMSIS/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 16


 832:./Libraries/CMSIS/core_cm3.h ****  *
 833:./Libraries/CMSIS/core_cm3.h ****  * @param   value  value to reverse
 834:./Libraries/CMSIS/core_cm3.h ****  * @return         reversed value
 835:./Libraries/CMSIS/core_cm3.h ****  *
 836:./Libraries/CMSIS/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:./Libraries/CMSIS/core_cm3.h ****  */
 838:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:./Libraries/CMSIS/core_cm3.h **** 
 840:./Libraries/CMSIS/core_cm3.h **** /**
 841:./Libraries/CMSIS/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:./Libraries/CMSIS/core_cm3.h ****  *
 843:./Libraries/CMSIS/core_cm3.h ****  * @param   value  value to reverse
 844:./Libraries/CMSIS/core_cm3.h ****  * @return         reversed value
 845:./Libraries/CMSIS/core_cm3.h ****  *
 846:./Libraries/CMSIS/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:./Libraries/CMSIS/core_cm3.h ****  */
 848:./Libraries/CMSIS/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:./Libraries/CMSIS/core_cm3.h **** 
 850:./Libraries/CMSIS/core_cm3.h **** 
 851:./Libraries/CMSIS/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:./Libraries/CMSIS/core_cm3.h **** 
 853:./Libraries/CMSIS/core_cm3.h **** /**
 854:./Libraries/CMSIS/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:./Libraries/CMSIS/core_cm3.h ****  *
 856:./Libraries/CMSIS/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:./Libraries/CMSIS/core_cm3.h ****  */
 858:./Libraries/CMSIS/core_cm3.h **** extern void __CLREX(void);
 859:./Libraries/CMSIS/core_cm3.h **** 
 860:./Libraries/CMSIS/core_cm3.h **** /**
 861:./Libraries/CMSIS/core_cm3.h ****  * @brief  Return the Base Priority value
 862:./Libraries/CMSIS/core_cm3.h ****  *
 863:./Libraries/CMSIS/core_cm3.h ****  * @return BasePriority
 864:./Libraries/CMSIS/core_cm3.h ****  *
 865:./Libraries/CMSIS/core_cm3.h ****  * Return the content of the base priority register
 866:./Libraries/CMSIS/core_cm3.h ****  */
 867:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:./Libraries/CMSIS/core_cm3.h **** 
 869:./Libraries/CMSIS/core_cm3.h **** /**
 870:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Base Priority value
 871:./Libraries/CMSIS/core_cm3.h ****  *
 872:./Libraries/CMSIS/core_cm3.h ****  * @param  basePri  BasePriority
 873:./Libraries/CMSIS/core_cm3.h ****  *
 874:./Libraries/CMSIS/core_cm3.h ****  * Set the base priority register
 875:./Libraries/CMSIS/core_cm3.h ****  */
 876:./Libraries/CMSIS/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:./Libraries/CMSIS/core_cm3.h **** 
 878:./Libraries/CMSIS/core_cm3.h **** /**
 879:./Libraries/CMSIS/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:./Libraries/CMSIS/core_cm3.h ****  *
 881:./Libraries/CMSIS/core_cm3.h ****  * @return PriMask
 882:./Libraries/CMSIS/core_cm3.h ****  *
 883:./Libraries/CMSIS/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:./Libraries/CMSIS/core_cm3.h ****  */
 885:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:./Libraries/CMSIS/core_cm3.h **** 
 887:./Libraries/CMSIS/core_cm3.h **** /**
 888:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Priority Mask value
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 17


 889:./Libraries/CMSIS/core_cm3.h ****  *
 890:./Libraries/CMSIS/core_cm3.h ****  * @param   priMask  PriMask
 891:./Libraries/CMSIS/core_cm3.h ****  *
 892:./Libraries/CMSIS/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:./Libraries/CMSIS/core_cm3.h ****  */
 894:./Libraries/CMSIS/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:./Libraries/CMSIS/core_cm3.h **** 
 896:./Libraries/CMSIS/core_cm3.h **** /**
 897:./Libraries/CMSIS/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:./Libraries/CMSIS/core_cm3.h ****  *
 899:./Libraries/CMSIS/core_cm3.h ****  * @return FaultMask
 900:./Libraries/CMSIS/core_cm3.h ****  *
 901:./Libraries/CMSIS/core_cm3.h ****  * Return the content of the fault mask register
 902:./Libraries/CMSIS/core_cm3.h ****  */
 903:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:./Libraries/CMSIS/core_cm3.h **** 
 905:./Libraries/CMSIS/core_cm3.h **** /**
 906:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:./Libraries/CMSIS/core_cm3.h ****  *
 908:./Libraries/CMSIS/core_cm3.h ****  * @param  faultMask faultMask value
 909:./Libraries/CMSIS/core_cm3.h ****  *
 910:./Libraries/CMSIS/core_cm3.h ****  * Set the fault mask register
 911:./Libraries/CMSIS/core_cm3.h ****  */
 912:./Libraries/CMSIS/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:./Libraries/CMSIS/core_cm3.h **** 
 914:./Libraries/CMSIS/core_cm3.h **** /**
 915:./Libraries/CMSIS/core_cm3.h ****  * @brief  Return the Control Register value
 916:./Libraries/CMSIS/core_cm3.h ****  * 
 917:./Libraries/CMSIS/core_cm3.h ****  * @return Control value
 918:./Libraries/CMSIS/core_cm3.h ****  *
 919:./Libraries/CMSIS/core_cm3.h ****  * Return the content of the control register
 920:./Libraries/CMSIS/core_cm3.h ****  */
 921:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:./Libraries/CMSIS/core_cm3.h **** 
 923:./Libraries/CMSIS/core_cm3.h **** /**
 924:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Control Register value
 925:./Libraries/CMSIS/core_cm3.h ****  *
 926:./Libraries/CMSIS/core_cm3.h ****  * @param  control  Control value
 927:./Libraries/CMSIS/core_cm3.h ****  *
 928:./Libraries/CMSIS/core_cm3.h ****  * Set the control register
 929:./Libraries/CMSIS/core_cm3.h ****  */
 930:./Libraries/CMSIS/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:./Libraries/CMSIS/core_cm3.h **** 
 932:./Libraries/CMSIS/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:./Libraries/CMSIS/core_cm3.h **** 
 934:./Libraries/CMSIS/core_cm3.h **** /**
 935:./Libraries/CMSIS/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:./Libraries/CMSIS/core_cm3.h ****  *
 937:./Libraries/CMSIS/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:./Libraries/CMSIS/core_cm3.h ****  */
 939:./Libraries/CMSIS/core_cm3.h **** #define __CLREX                           __clrex
 940:./Libraries/CMSIS/core_cm3.h **** 
 941:./Libraries/CMSIS/core_cm3.h **** /**
 942:./Libraries/CMSIS/core_cm3.h ****  * @brief  Return the Base Priority value
 943:./Libraries/CMSIS/core_cm3.h ****  *
 944:./Libraries/CMSIS/core_cm3.h ****  * @return BasePriority
 945:./Libraries/CMSIS/core_cm3.h ****  *
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 18


 946:./Libraries/CMSIS/core_cm3.h ****  * Return the content of the base priority register
 947:./Libraries/CMSIS/core_cm3.h ****  */
 948:./Libraries/CMSIS/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:./Libraries/CMSIS/core_cm3.h **** {
 950:./Libraries/CMSIS/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:./Libraries/CMSIS/core_cm3.h ****   return(__regBasePri);
 952:./Libraries/CMSIS/core_cm3.h **** }
 953:./Libraries/CMSIS/core_cm3.h **** 
 954:./Libraries/CMSIS/core_cm3.h **** /**
 955:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Base Priority value
 956:./Libraries/CMSIS/core_cm3.h ****  *
 957:./Libraries/CMSIS/core_cm3.h ****  * @param  basePri  BasePriority
 958:./Libraries/CMSIS/core_cm3.h ****  *
 959:./Libraries/CMSIS/core_cm3.h ****  * Set the base priority register
 960:./Libraries/CMSIS/core_cm3.h ****  */
 961:./Libraries/CMSIS/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:./Libraries/CMSIS/core_cm3.h **** {
 963:./Libraries/CMSIS/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:./Libraries/CMSIS/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:./Libraries/CMSIS/core_cm3.h **** }
 966:./Libraries/CMSIS/core_cm3.h **** 
 967:./Libraries/CMSIS/core_cm3.h **** /**
 968:./Libraries/CMSIS/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:./Libraries/CMSIS/core_cm3.h ****  *
 970:./Libraries/CMSIS/core_cm3.h ****  * @return PriMask
 971:./Libraries/CMSIS/core_cm3.h ****  *
 972:./Libraries/CMSIS/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:./Libraries/CMSIS/core_cm3.h ****  */
 974:./Libraries/CMSIS/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:./Libraries/CMSIS/core_cm3.h **** {
 976:./Libraries/CMSIS/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:./Libraries/CMSIS/core_cm3.h ****   return(__regPriMask);
 978:./Libraries/CMSIS/core_cm3.h **** }
 979:./Libraries/CMSIS/core_cm3.h **** 
 980:./Libraries/CMSIS/core_cm3.h **** /**
 981:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:./Libraries/CMSIS/core_cm3.h ****  *
 983:./Libraries/CMSIS/core_cm3.h ****  * @param  priMask  PriMask
 984:./Libraries/CMSIS/core_cm3.h ****  *
 985:./Libraries/CMSIS/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:./Libraries/CMSIS/core_cm3.h ****  */
 987:./Libraries/CMSIS/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:./Libraries/CMSIS/core_cm3.h **** {
 989:./Libraries/CMSIS/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:./Libraries/CMSIS/core_cm3.h ****   __regPriMask = (priMask);
 991:./Libraries/CMSIS/core_cm3.h **** }
 992:./Libraries/CMSIS/core_cm3.h **** 
 993:./Libraries/CMSIS/core_cm3.h **** /**
 994:./Libraries/CMSIS/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:./Libraries/CMSIS/core_cm3.h ****  *
 996:./Libraries/CMSIS/core_cm3.h ****  * @return FaultMask
 997:./Libraries/CMSIS/core_cm3.h ****  *
 998:./Libraries/CMSIS/core_cm3.h ****  * Return the content of the fault mask register
 999:./Libraries/CMSIS/core_cm3.h ****  */
1000:./Libraries/CMSIS/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:./Libraries/CMSIS/core_cm3.h **** {
1002:./Libraries/CMSIS/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 19


1003:./Libraries/CMSIS/core_cm3.h ****   return(__regFaultMask);
1004:./Libraries/CMSIS/core_cm3.h **** }
1005:./Libraries/CMSIS/core_cm3.h **** 
1006:./Libraries/CMSIS/core_cm3.h **** /**
1007:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:./Libraries/CMSIS/core_cm3.h ****  *
1009:./Libraries/CMSIS/core_cm3.h ****  * @param  faultMask  faultMask value
1010:./Libraries/CMSIS/core_cm3.h ****  *
1011:./Libraries/CMSIS/core_cm3.h ****  * Set the fault mask register
1012:./Libraries/CMSIS/core_cm3.h ****  */
1013:./Libraries/CMSIS/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:./Libraries/CMSIS/core_cm3.h **** {
1015:./Libraries/CMSIS/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:./Libraries/CMSIS/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:./Libraries/CMSIS/core_cm3.h **** }
1018:./Libraries/CMSIS/core_cm3.h **** 
1019:./Libraries/CMSIS/core_cm3.h **** /**
1020:./Libraries/CMSIS/core_cm3.h ****  * @brief  Return the Control Register value
1021:./Libraries/CMSIS/core_cm3.h ****  * 
1022:./Libraries/CMSIS/core_cm3.h ****  * @return Control value
1023:./Libraries/CMSIS/core_cm3.h ****  *
1024:./Libraries/CMSIS/core_cm3.h ****  * Return the content of the control register
1025:./Libraries/CMSIS/core_cm3.h ****  */
1026:./Libraries/CMSIS/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:./Libraries/CMSIS/core_cm3.h **** {
1028:./Libraries/CMSIS/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:./Libraries/CMSIS/core_cm3.h ****   return(__regControl);
1030:./Libraries/CMSIS/core_cm3.h **** }
1031:./Libraries/CMSIS/core_cm3.h **** 
1032:./Libraries/CMSIS/core_cm3.h **** /**
1033:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Control Register value
1034:./Libraries/CMSIS/core_cm3.h ****  *
1035:./Libraries/CMSIS/core_cm3.h ****  * @param  control  Control value
1036:./Libraries/CMSIS/core_cm3.h ****  *
1037:./Libraries/CMSIS/core_cm3.h ****  * Set the control register
1038:./Libraries/CMSIS/core_cm3.h ****  */
1039:./Libraries/CMSIS/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:./Libraries/CMSIS/core_cm3.h **** {
1041:./Libraries/CMSIS/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:./Libraries/CMSIS/core_cm3.h ****   __regControl = control;
1043:./Libraries/CMSIS/core_cm3.h **** }
1044:./Libraries/CMSIS/core_cm3.h **** 
1045:./Libraries/CMSIS/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:./Libraries/CMSIS/core_cm3.h **** 
1047:./Libraries/CMSIS/core_cm3.h **** 
1048:./Libraries/CMSIS/core_cm3.h **** 
1049:./Libraries/CMSIS/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:./Libraries/CMSIS/core_cm3.h **** /* IAR iccarm specific functions */
1051:./Libraries/CMSIS/core_cm3.h **** 
1052:./Libraries/CMSIS/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:./Libraries/CMSIS/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:./Libraries/CMSIS/core_cm3.h **** 
1055:./Libraries/CMSIS/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:./Libraries/CMSIS/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:./Libraries/CMSIS/core_cm3.h **** 
1058:./Libraries/CMSIS/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:./Libraries/CMSIS/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 20


1060:./Libraries/CMSIS/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:./Libraries/CMSIS/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:./Libraries/CMSIS/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:./Libraries/CMSIS/core_cm3.h **** 
1064:./Libraries/CMSIS/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:./Libraries/CMSIS/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:./Libraries/CMSIS/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:./Libraries/CMSIS/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:./Libraries/CMSIS/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:./Libraries/CMSIS/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:./Libraries/CMSIS/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:./Libraries/CMSIS/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:./Libraries/CMSIS/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:./Libraries/CMSIS/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:./Libraries/CMSIS/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:./Libraries/CMSIS/core_cm3.h **** 
1076:./Libraries/CMSIS/core_cm3.h **** 
1077:./Libraries/CMSIS/core_cm3.h **** /**
1078:./Libraries/CMSIS/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:./Libraries/CMSIS/core_cm3.h ****  *
1080:./Libraries/CMSIS/core_cm3.h ****  * @return ProcessStackPointer
1081:./Libraries/CMSIS/core_cm3.h ****  *
1082:./Libraries/CMSIS/core_cm3.h ****  * Return the actual process stack pointer
1083:./Libraries/CMSIS/core_cm3.h ****  */
1084:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:./Libraries/CMSIS/core_cm3.h **** 
1086:./Libraries/CMSIS/core_cm3.h **** /**
1087:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:./Libraries/CMSIS/core_cm3.h ****  *
1089:./Libraries/CMSIS/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:./Libraries/CMSIS/core_cm3.h ****  *
1091:./Libraries/CMSIS/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:./Libraries/CMSIS/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:./Libraries/CMSIS/core_cm3.h ****  */
1094:./Libraries/CMSIS/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:./Libraries/CMSIS/core_cm3.h **** 
1096:./Libraries/CMSIS/core_cm3.h **** /**
1097:./Libraries/CMSIS/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:./Libraries/CMSIS/core_cm3.h ****  *
1099:./Libraries/CMSIS/core_cm3.h ****  * @return Main Stack Pointer
1100:./Libraries/CMSIS/core_cm3.h ****  *
1101:./Libraries/CMSIS/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:./Libraries/CMSIS/core_cm3.h ****  * Cortex processor register
1103:./Libraries/CMSIS/core_cm3.h ****  */
1104:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:./Libraries/CMSIS/core_cm3.h **** 
1106:./Libraries/CMSIS/core_cm3.h **** /**
1107:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:./Libraries/CMSIS/core_cm3.h ****  *
1109:./Libraries/CMSIS/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:./Libraries/CMSIS/core_cm3.h ****  *
1111:./Libraries/CMSIS/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:./Libraries/CMSIS/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:./Libraries/CMSIS/core_cm3.h ****  */
1114:./Libraries/CMSIS/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:./Libraries/CMSIS/core_cm3.h **** 
1116:./Libraries/CMSIS/core_cm3.h **** /**
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 21


1117:./Libraries/CMSIS/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:./Libraries/CMSIS/core_cm3.h ****  *
1119:./Libraries/CMSIS/core_cm3.h ****  * @param  value  value to reverse
1120:./Libraries/CMSIS/core_cm3.h ****  * @return        reversed value
1121:./Libraries/CMSIS/core_cm3.h ****  *
1122:./Libraries/CMSIS/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:./Libraries/CMSIS/core_cm3.h ****  */
1124:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:./Libraries/CMSIS/core_cm3.h **** 
1126:./Libraries/CMSIS/core_cm3.h **** /**
1127:./Libraries/CMSIS/core_cm3.h ****  * @brief  Reverse bit order of value
1128:./Libraries/CMSIS/core_cm3.h ****  *
1129:./Libraries/CMSIS/core_cm3.h ****  * @param  value  value to reverse
1130:./Libraries/CMSIS/core_cm3.h ****  * @return        reversed value
1131:./Libraries/CMSIS/core_cm3.h ****  *
1132:./Libraries/CMSIS/core_cm3.h ****  * Reverse bit order of value
1133:./Libraries/CMSIS/core_cm3.h ****  */
1134:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:./Libraries/CMSIS/core_cm3.h **** 
1136:./Libraries/CMSIS/core_cm3.h **** /**
1137:./Libraries/CMSIS/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:./Libraries/CMSIS/core_cm3.h ****  *
1139:./Libraries/CMSIS/core_cm3.h ****  * @param  *addr  address pointer
1140:./Libraries/CMSIS/core_cm3.h ****  * @return        value of (*address)
1141:./Libraries/CMSIS/core_cm3.h ****  *
1142:./Libraries/CMSIS/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:./Libraries/CMSIS/core_cm3.h ****  */
1144:./Libraries/CMSIS/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:./Libraries/CMSIS/core_cm3.h **** 
1146:./Libraries/CMSIS/core_cm3.h **** /**
1147:./Libraries/CMSIS/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:./Libraries/CMSIS/core_cm3.h ****  *
1149:./Libraries/CMSIS/core_cm3.h ****  * @param  *addr  address pointer
1150:./Libraries/CMSIS/core_cm3.h ****  * @return        value of (*address)
1151:./Libraries/CMSIS/core_cm3.h ****  *
1152:./Libraries/CMSIS/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:./Libraries/CMSIS/core_cm3.h ****  */
1154:./Libraries/CMSIS/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:./Libraries/CMSIS/core_cm3.h **** 
1156:./Libraries/CMSIS/core_cm3.h **** /**
1157:./Libraries/CMSIS/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:./Libraries/CMSIS/core_cm3.h ****  *
1159:./Libraries/CMSIS/core_cm3.h ****  * @param  *addr  address pointer
1160:./Libraries/CMSIS/core_cm3.h ****  * @return        value of (*address)
1161:./Libraries/CMSIS/core_cm3.h ****  *
1162:./Libraries/CMSIS/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:./Libraries/CMSIS/core_cm3.h ****  */
1164:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:./Libraries/CMSIS/core_cm3.h **** 
1166:./Libraries/CMSIS/core_cm3.h **** /**
1167:./Libraries/CMSIS/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:./Libraries/CMSIS/core_cm3.h ****  *
1169:./Libraries/CMSIS/core_cm3.h ****  * @param  value  value to store
1170:./Libraries/CMSIS/core_cm3.h ****  * @param  *addr  address pointer
1171:./Libraries/CMSIS/core_cm3.h ****  * @return        successful / failed
1172:./Libraries/CMSIS/core_cm3.h ****  *
1173:./Libraries/CMSIS/core_cm3.h ****  * Exclusive STR command for 8 bit values
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 22


1174:./Libraries/CMSIS/core_cm3.h ****  */
1175:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:./Libraries/CMSIS/core_cm3.h **** 
1177:./Libraries/CMSIS/core_cm3.h **** /**
1178:./Libraries/CMSIS/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:./Libraries/CMSIS/core_cm3.h ****  *
1180:./Libraries/CMSIS/core_cm3.h ****  * @param  value  value to store
1181:./Libraries/CMSIS/core_cm3.h ****  * @param  *addr  address pointer
1182:./Libraries/CMSIS/core_cm3.h ****  * @return        successful / failed
1183:./Libraries/CMSIS/core_cm3.h ****  *
1184:./Libraries/CMSIS/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:./Libraries/CMSIS/core_cm3.h ****  */
1186:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:./Libraries/CMSIS/core_cm3.h **** 
1188:./Libraries/CMSIS/core_cm3.h **** /**
1189:./Libraries/CMSIS/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:./Libraries/CMSIS/core_cm3.h ****  *
1191:./Libraries/CMSIS/core_cm3.h ****  * @param  value  value to store
1192:./Libraries/CMSIS/core_cm3.h ****  * @param  *addr  address pointer
1193:./Libraries/CMSIS/core_cm3.h ****  * @return        successful / failed
1194:./Libraries/CMSIS/core_cm3.h ****  *
1195:./Libraries/CMSIS/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:./Libraries/CMSIS/core_cm3.h ****  */
1197:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:./Libraries/CMSIS/core_cm3.h **** 
1199:./Libraries/CMSIS/core_cm3.h **** 
1200:./Libraries/CMSIS/core_cm3.h **** 
1201:./Libraries/CMSIS/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:./Libraries/CMSIS/core_cm3.h **** /* GNU gcc specific functions */
1203:./Libraries/CMSIS/core_cm3.h **** 
1204:./Libraries/CMSIS/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:./Libraries/CMSIS/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:./Libraries/CMSIS/core_cm3.h **** 
1207:./Libraries/CMSIS/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:./Libraries/CMSIS/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:./Libraries/CMSIS/core_cm3.h **** 
1210:./Libraries/CMSIS/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:./Libraries/CMSIS/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:./Libraries/CMSIS/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:./Libraries/CMSIS/core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:./Libraries/CMSIS/core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:./Libraries/CMSIS/core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:./Libraries/CMSIS/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:./Libraries/CMSIS/core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:./Libraries/CMSIS/core_cm3.h **** 
1219:./Libraries/CMSIS/core_cm3.h **** 
1220:./Libraries/CMSIS/core_cm3.h **** /**
1221:./Libraries/CMSIS/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:./Libraries/CMSIS/core_cm3.h ****  *
1223:./Libraries/CMSIS/core_cm3.h ****  * @return ProcessStackPointer
1224:./Libraries/CMSIS/core_cm3.h ****  *
1225:./Libraries/CMSIS/core_cm3.h ****  * Return the actual process stack pointer
1226:./Libraries/CMSIS/core_cm3.h ****  */
1227:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:./Libraries/CMSIS/core_cm3.h **** 
1229:./Libraries/CMSIS/core_cm3.h **** /**
1230:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Process Stack Pointer
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 23


1231:./Libraries/CMSIS/core_cm3.h ****  *
1232:./Libraries/CMSIS/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:./Libraries/CMSIS/core_cm3.h ****  *
1234:./Libraries/CMSIS/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1235:./Libraries/CMSIS/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:./Libraries/CMSIS/core_cm3.h ****  */
1237:./Libraries/CMSIS/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:./Libraries/CMSIS/core_cm3.h **** 
1239:./Libraries/CMSIS/core_cm3.h **** /**
1240:./Libraries/CMSIS/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:./Libraries/CMSIS/core_cm3.h ****  *
1242:./Libraries/CMSIS/core_cm3.h ****  * @return Main Stack Pointer
1243:./Libraries/CMSIS/core_cm3.h ****  *
1244:./Libraries/CMSIS/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:./Libraries/CMSIS/core_cm3.h ****  * Cortex processor register
1246:./Libraries/CMSIS/core_cm3.h ****  */
1247:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:./Libraries/CMSIS/core_cm3.h **** 
1249:./Libraries/CMSIS/core_cm3.h **** /**
1250:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:./Libraries/CMSIS/core_cm3.h ****  *
1252:./Libraries/CMSIS/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:./Libraries/CMSIS/core_cm3.h ****  *
1254:./Libraries/CMSIS/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1255:./Libraries/CMSIS/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:./Libraries/CMSIS/core_cm3.h ****  */
1257:./Libraries/CMSIS/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:./Libraries/CMSIS/core_cm3.h **** 
1259:./Libraries/CMSIS/core_cm3.h **** /**
1260:./Libraries/CMSIS/core_cm3.h ****  * @brief  Return the Base Priority value
1261:./Libraries/CMSIS/core_cm3.h ****  *
1262:./Libraries/CMSIS/core_cm3.h ****  * @return BasePriority
1263:./Libraries/CMSIS/core_cm3.h ****  *
1264:./Libraries/CMSIS/core_cm3.h ****  * Return the content of the base priority register
1265:./Libraries/CMSIS/core_cm3.h ****  */
1266:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:./Libraries/CMSIS/core_cm3.h **** 
1268:./Libraries/CMSIS/core_cm3.h **** /**
1269:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Base Priority value
1270:./Libraries/CMSIS/core_cm3.h ****  *
1271:./Libraries/CMSIS/core_cm3.h ****  * @param  basePri  BasePriority
1272:./Libraries/CMSIS/core_cm3.h ****  *
1273:./Libraries/CMSIS/core_cm3.h ****  * Set the base priority register
1274:./Libraries/CMSIS/core_cm3.h ****  */
1275:./Libraries/CMSIS/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:./Libraries/CMSIS/core_cm3.h **** 
1277:./Libraries/CMSIS/core_cm3.h **** /**
1278:./Libraries/CMSIS/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:./Libraries/CMSIS/core_cm3.h ****  *
1280:./Libraries/CMSIS/core_cm3.h ****  * @return PriMask
1281:./Libraries/CMSIS/core_cm3.h ****  *
1282:./Libraries/CMSIS/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:./Libraries/CMSIS/core_cm3.h ****  */
1284:./Libraries/CMSIS/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:./Libraries/CMSIS/core_cm3.h **** 
1286:./Libraries/CMSIS/core_cm3.h **** /**
1287:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Priority Mask value
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 24


1288:./Libraries/CMSIS/core_cm3.h ****  *
1289:./Libraries/CMSIS/core_cm3.h ****  * @param  priMask  PriMask
1290:./Libraries/CMSIS/core_cm3.h ****  *
1291:./Libraries/CMSIS/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:./Libraries/CMSIS/core_cm3.h ****  */
1293:./Libraries/CMSIS/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:./Libraries/CMSIS/core_cm3.h **** 
1295:./Libraries/CMSIS/core_cm3.h **** /**
1296:./Libraries/CMSIS/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:./Libraries/CMSIS/core_cm3.h ****  *
1298:./Libraries/CMSIS/core_cm3.h ****  * @return FaultMask
1299:./Libraries/CMSIS/core_cm3.h ****  *
1300:./Libraries/CMSIS/core_cm3.h ****  * Return the content of the fault mask register
1301:./Libraries/CMSIS/core_cm3.h ****  */
1302:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:./Libraries/CMSIS/core_cm3.h **** 
1304:./Libraries/CMSIS/core_cm3.h **** /**
1305:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:./Libraries/CMSIS/core_cm3.h ****  *
1307:./Libraries/CMSIS/core_cm3.h ****  * @param  faultMask  faultMask value
1308:./Libraries/CMSIS/core_cm3.h ****  *
1309:./Libraries/CMSIS/core_cm3.h ****  * Set the fault mask register
1310:./Libraries/CMSIS/core_cm3.h ****  */
1311:./Libraries/CMSIS/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:./Libraries/CMSIS/core_cm3.h **** 
1313:./Libraries/CMSIS/core_cm3.h **** /**
1314:./Libraries/CMSIS/core_cm3.h ****  * @brief  Return the Control Register value
1315:./Libraries/CMSIS/core_cm3.h **** * 
1316:./Libraries/CMSIS/core_cm3.h **** *  @return Control value
1317:./Libraries/CMSIS/core_cm3.h ****  *
1318:./Libraries/CMSIS/core_cm3.h ****  * Return the content of the control register
1319:./Libraries/CMSIS/core_cm3.h ****  */
1320:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:./Libraries/CMSIS/core_cm3.h **** 
1322:./Libraries/CMSIS/core_cm3.h **** /**
1323:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Control Register value
1324:./Libraries/CMSIS/core_cm3.h ****  *
1325:./Libraries/CMSIS/core_cm3.h ****  * @param  control  Control value
1326:./Libraries/CMSIS/core_cm3.h ****  *
1327:./Libraries/CMSIS/core_cm3.h ****  * Set the control register
1328:./Libraries/CMSIS/core_cm3.h ****  */
1329:./Libraries/CMSIS/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:./Libraries/CMSIS/core_cm3.h **** 
1331:./Libraries/CMSIS/core_cm3.h **** /**
1332:./Libraries/CMSIS/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:./Libraries/CMSIS/core_cm3.h ****  *
1334:./Libraries/CMSIS/core_cm3.h ****  * @param  value  value to reverse
1335:./Libraries/CMSIS/core_cm3.h ****  * @return        reversed value
1336:./Libraries/CMSIS/core_cm3.h ****  *
1337:./Libraries/CMSIS/core_cm3.h ****  * Reverse byte order in integer value
1338:./Libraries/CMSIS/core_cm3.h ****  */
1339:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:./Libraries/CMSIS/core_cm3.h **** 
1341:./Libraries/CMSIS/core_cm3.h **** /**
1342:./Libraries/CMSIS/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:./Libraries/CMSIS/core_cm3.h ****  *
1344:./Libraries/CMSIS/core_cm3.h ****  * @param  value  value to reverse
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 25


1345:./Libraries/CMSIS/core_cm3.h ****  * @return        reversed value
1346:./Libraries/CMSIS/core_cm3.h ****  *
1347:./Libraries/CMSIS/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:./Libraries/CMSIS/core_cm3.h ****  */
1349:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:./Libraries/CMSIS/core_cm3.h **** 
1351:./Libraries/CMSIS/core_cm3.h **** /**
1352:./Libraries/CMSIS/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:./Libraries/CMSIS/core_cm3.h ****  *
1354:./Libraries/CMSIS/core_cm3.h ****  * @param  value  value to reverse
1355:./Libraries/CMSIS/core_cm3.h ****  * @return        reversed value
1356:./Libraries/CMSIS/core_cm3.h ****  *
1357:./Libraries/CMSIS/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:./Libraries/CMSIS/core_cm3.h ****  */
1359:./Libraries/CMSIS/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:./Libraries/CMSIS/core_cm3.h **** 
1361:./Libraries/CMSIS/core_cm3.h **** /**
1362:./Libraries/CMSIS/core_cm3.h ****  * @brief  Reverse bit order of value
1363:./Libraries/CMSIS/core_cm3.h ****  *
1364:./Libraries/CMSIS/core_cm3.h ****  * @param  value  value to reverse
1365:./Libraries/CMSIS/core_cm3.h ****  * @return        reversed value
1366:./Libraries/CMSIS/core_cm3.h ****  *
1367:./Libraries/CMSIS/core_cm3.h ****  * Reverse bit order of value
1368:./Libraries/CMSIS/core_cm3.h ****  */
1369:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:./Libraries/CMSIS/core_cm3.h **** 
1371:./Libraries/CMSIS/core_cm3.h **** /**
1372:./Libraries/CMSIS/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:./Libraries/CMSIS/core_cm3.h ****  *
1374:./Libraries/CMSIS/core_cm3.h ****  * @param  *addr  address pointer
1375:./Libraries/CMSIS/core_cm3.h ****  * @return        value of (*address)
1376:./Libraries/CMSIS/core_cm3.h ****  *
1377:./Libraries/CMSIS/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:./Libraries/CMSIS/core_cm3.h ****  */
1379:./Libraries/CMSIS/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:./Libraries/CMSIS/core_cm3.h **** 
1381:./Libraries/CMSIS/core_cm3.h **** /**
1382:./Libraries/CMSIS/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:./Libraries/CMSIS/core_cm3.h ****  *
1384:./Libraries/CMSIS/core_cm3.h ****  * @param  *addr  address pointer
1385:./Libraries/CMSIS/core_cm3.h ****  * @return        value of (*address)
1386:./Libraries/CMSIS/core_cm3.h ****  *
1387:./Libraries/CMSIS/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:./Libraries/CMSIS/core_cm3.h ****  */
1389:./Libraries/CMSIS/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:./Libraries/CMSIS/core_cm3.h **** 
1391:./Libraries/CMSIS/core_cm3.h **** /**
1392:./Libraries/CMSIS/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:./Libraries/CMSIS/core_cm3.h ****  *
1394:./Libraries/CMSIS/core_cm3.h ****  * @param  *addr  address pointer
1395:./Libraries/CMSIS/core_cm3.h ****  * @return        value of (*address)
1396:./Libraries/CMSIS/core_cm3.h ****  *
1397:./Libraries/CMSIS/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:./Libraries/CMSIS/core_cm3.h ****  */
1399:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:./Libraries/CMSIS/core_cm3.h **** 
1401:./Libraries/CMSIS/core_cm3.h **** /**
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 26


1402:./Libraries/CMSIS/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:./Libraries/CMSIS/core_cm3.h ****  *
1404:./Libraries/CMSIS/core_cm3.h ****  * @param  value  value to store
1405:./Libraries/CMSIS/core_cm3.h ****  * @param  *addr  address pointer
1406:./Libraries/CMSIS/core_cm3.h ****  * @return        successful / failed
1407:./Libraries/CMSIS/core_cm3.h ****  *
1408:./Libraries/CMSIS/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:./Libraries/CMSIS/core_cm3.h ****  */
1410:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:./Libraries/CMSIS/core_cm3.h **** 
1412:./Libraries/CMSIS/core_cm3.h **** /**
1413:./Libraries/CMSIS/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:./Libraries/CMSIS/core_cm3.h ****  *
1415:./Libraries/CMSIS/core_cm3.h ****  * @param  value  value to store
1416:./Libraries/CMSIS/core_cm3.h ****  * @param  *addr  address pointer
1417:./Libraries/CMSIS/core_cm3.h ****  * @return        successful / failed
1418:./Libraries/CMSIS/core_cm3.h ****  *
1419:./Libraries/CMSIS/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:./Libraries/CMSIS/core_cm3.h ****  */
1421:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:./Libraries/CMSIS/core_cm3.h **** 
1423:./Libraries/CMSIS/core_cm3.h **** /**
1424:./Libraries/CMSIS/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:./Libraries/CMSIS/core_cm3.h ****  *
1426:./Libraries/CMSIS/core_cm3.h ****  * @param  value  value to store
1427:./Libraries/CMSIS/core_cm3.h ****  * @param  *addr  address pointer
1428:./Libraries/CMSIS/core_cm3.h ****  * @return        successful / failed
1429:./Libraries/CMSIS/core_cm3.h ****  *
1430:./Libraries/CMSIS/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:./Libraries/CMSIS/core_cm3.h ****  */
1432:./Libraries/CMSIS/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:./Libraries/CMSIS/core_cm3.h **** 
1434:./Libraries/CMSIS/core_cm3.h **** 
1435:./Libraries/CMSIS/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:./Libraries/CMSIS/core_cm3.h **** /* TASKING carm specific functions */
1437:./Libraries/CMSIS/core_cm3.h **** 
1438:./Libraries/CMSIS/core_cm3.h **** /*
1439:./Libraries/CMSIS/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:./Libraries/CMSIS/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:./Libraries/CMSIS/core_cm3.h ****  * Including the CMSIS ones.
1442:./Libraries/CMSIS/core_cm3.h ****  */
1443:./Libraries/CMSIS/core_cm3.h **** 
1444:./Libraries/CMSIS/core_cm3.h **** #endif
1445:./Libraries/CMSIS/core_cm3.h **** 
1446:./Libraries/CMSIS/core_cm3.h **** 
1447:./Libraries/CMSIS/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:./Libraries/CMSIS/core_cm3.h ****   Core  Function Interface containing:
1449:./Libraries/CMSIS/core_cm3.h ****   - Core NVIC Functions
1450:./Libraries/CMSIS/core_cm3.h ****   - Core SysTick Functions
1451:./Libraries/CMSIS/core_cm3.h ****   - Core Reset Functions
1452:./Libraries/CMSIS/core_cm3.h **** */
1453:./Libraries/CMSIS/core_cm3.h **** /*@{*/
1454:./Libraries/CMSIS/core_cm3.h **** 
1455:./Libraries/CMSIS/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:./Libraries/CMSIS/core_cm3.h **** 
1457:./Libraries/CMSIS/core_cm3.h **** /**
1458:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 27


1459:./Libraries/CMSIS/core_cm3.h ****  *
1460:./Libraries/CMSIS/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:./Libraries/CMSIS/core_cm3.h ****  *
1462:./Libraries/CMSIS/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:./Libraries/CMSIS/core_cm3.h ****  * The parameter priority_grouping is assigned to the field 
1464:./Libraries/CMSIS/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:./Libraries/CMSIS/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:./Libraries/CMSIS/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:./Libraries/CMSIS/core_cm3.h ****  */
1468:./Libraries/CMSIS/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:./Libraries/CMSIS/core_cm3.h **** {
1470:./Libraries/CMSIS/core_cm3.h ****   uint32_t reg_value;
1471:./Libraries/CMSIS/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:./Libraries/CMSIS/core_cm3.h ****   
1473:./Libraries/CMSIS/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:./Libraries/CMSIS/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:./Libraries/CMSIS/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:./Libraries/CMSIS/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) | 
1477:./Libraries/CMSIS/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:./Libraries/CMSIS/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:./Libraries/CMSIS/core_cm3.h **** }
1480:./Libraries/CMSIS/core_cm3.h **** 
1481:./Libraries/CMSIS/core_cm3.h **** /**
1482:./Libraries/CMSIS/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:./Libraries/CMSIS/core_cm3.h ****  *
1484:./Libraries/CMSIS/core_cm3.h ****  * @return priority grouping field 
1485:./Libraries/CMSIS/core_cm3.h ****  *
1486:./Libraries/CMSIS/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:./Libraries/CMSIS/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:./Libraries/CMSIS/core_cm3.h ****  */
1489:./Libraries/CMSIS/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:./Libraries/CMSIS/core_cm3.h **** {
1491:./Libraries/CMSIS/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:./Libraries/CMSIS/core_cm3.h **** }
1493:./Libraries/CMSIS/core_cm3.h **** 
1494:./Libraries/CMSIS/core_cm3.h **** /**
1495:./Libraries/CMSIS/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:./Libraries/CMSIS/core_cm3.h ****  *
1497:./Libraries/CMSIS/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:./Libraries/CMSIS/core_cm3.h ****  *
1499:./Libraries/CMSIS/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:./Libraries/CMSIS/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:./Libraries/CMSIS/core_cm3.h ****  */
1502:./Libraries/CMSIS/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:./Libraries/CMSIS/core_cm3.h **** {
1504:./Libraries/CMSIS/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
1505:./Libraries/CMSIS/core_cm3.h **** }
1506:./Libraries/CMSIS/core_cm3.h **** 
1507:./Libraries/CMSIS/core_cm3.h **** /**
1508:./Libraries/CMSIS/core_cm3.h ****  * @brief  Disable the interrupt line for external interrupt specified
1509:./Libraries/CMSIS/core_cm3.h ****  * 
1510:./Libraries/CMSIS/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to disable
1511:./Libraries/CMSIS/core_cm3.h ****  * 
1512:./Libraries/CMSIS/core_cm3.h ****  * Disable a device specific interupt in the NVIC interrupt controller.
1513:./Libraries/CMSIS/core_cm3.h ****  * The interrupt number cannot be a negative value.
1514:./Libraries/CMSIS/core_cm3.h ****  */
1515:./Libraries/CMSIS/core_cm3.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 28


1516:./Libraries/CMSIS/core_cm3.h **** {
1517:./Libraries/CMSIS/core_cm3.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1518:./Libraries/CMSIS/core_cm3.h **** }
1519:./Libraries/CMSIS/core_cm3.h **** 
1520:./Libraries/CMSIS/core_cm3.h **** /**
1521:./Libraries/CMSIS/core_cm3.h ****  * @brief  Read the interrupt pending bit for a device specific interrupt source
1522:./Libraries/CMSIS/core_cm3.h ****  * 
1523:./Libraries/CMSIS/core_cm3.h ****  * @param  IRQn    The number of the device specifc interrupt
1524:./Libraries/CMSIS/core_cm3.h ****  * @return         1 = interrupt pending, 0 = interrupt not pending
1525:./Libraries/CMSIS/core_cm3.h ****  *
1526:./Libraries/CMSIS/core_cm3.h ****  * Read the pending register in NVIC and return 1 if its status is pending, 
1527:./Libraries/CMSIS/core_cm3.h ****  * otherwise it returns 0
1528:./Libraries/CMSIS/core_cm3.h ****  */
1529:./Libraries/CMSIS/core_cm3.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1530:./Libraries/CMSIS/core_cm3.h **** {
1531:./Libraries/CMSIS/core_cm3.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1532:./Libraries/CMSIS/core_cm3.h **** }
1533:./Libraries/CMSIS/core_cm3.h **** 
1534:./Libraries/CMSIS/core_cm3.h **** /**
1535:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the pending bit for an external interrupt
1536:./Libraries/CMSIS/core_cm3.h ****  * 
1537:./Libraries/CMSIS/core_cm3.h ****  * @param  IRQn    The number of the interrupt for set pending
1538:./Libraries/CMSIS/core_cm3.h ****  *
1539:./Libraries/CMSIS/core_cm3.h ****  * Set the pending bit for the specified interrupt.
1540:./Libraries/CMSIS/core_cm3.h ****  * The interrupt number cannot be a negative value.
1541:./Libraries/CMSIS/core_cm3.h ****  */
1542:./Libraries/CMSIS/core_cm3.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1543:./Libraries/CMSIS/core_cm3.h **** {
1544:./Libraries/CMSIS/core_cm3.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1545:./Libraries/CMSIS/core_cm3.h **** }
1546:./Libraries/CMSIS/core_cm3.h **** 
1547:./Libraries/CMSIS/core_cm3.h **** /**
1548:./Libraries/CMSIS/core_cm3.h ****  * @brief  Clear the pending bit for an external interrupt
1549:./Libraries/CMSIS/core_cm3.h ****  *
1550:./Libraries/CMSIS/core_cm3.h ****  * @param  IRQn    The number of the interrupt for clear pending
1551:./Libraries/CMSIS/core_cm3.h ****  *
1552:./Libraries/CMSIS/core_cm3.h ****  * Clear the pending bit for the specified interrupt. 
1553:./Libraries/CMSIS/core_cm3.h ****  * The interrupt number cannot be a negative value.
1554:./Libraries/CMSIS/core_cm3.h ****  */
1555:./Libraries/CMSIS/core_cm3.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1556:./Libraries/CMSIS/core_cm3.h **** {
1557:./Libraries/CMSIS/core_cm3.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1558:./Libraries/CMSIS/core_cm3.h **** }
1559:./Libraries/CMSIS/core_cm3.h **** 
1560:./Libraries/CMSIS/core_cm3.h **** /**
1561:./Libraries/CMSIS/core_cm3.h ****  * @brief  Read the active bit for an external interrupt
1562:./Libraries/CMSIS/core_cm3.h ****  *
1563:./Libraries/CMSIS/core_cm3.h ****  * @param  IRQn    The number of the interrupt for read active bit
1564:./Libraries/CMSIS/core_cm3.h ****  * @return         1 = interrupt active, 0 = interrupt not active
1565:./Libraries/CMSIS/core_cm3.h ****  *
1566:./Libraries/CMSIS/core_cm3.h ****  * Read the active register in NVIC and returns 1 if its status is active, 
1567:./Libraries/CMSIS/core_cm3.h ****  * otherwise it returns 0.
1568:./Libraries/CMSIS/core_cm3.h ****  */
1569:./Libraries/CMSIS/core_cm3.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1570:./Libraries/CMSIS/core_cm3.h **** {
1571:./Libraries/CMSIS/core_cm3.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1572:./Libraries/CMSIS/core_cm3.h **** }
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 29


1573:./Libraries/CMSIS/core_cm3.h **** 
1574:./Libraries/CMSIS/core_cm3.h **** /**
1575:./Libraries/CMSIS/core_cm3.h ****  * @brief  Set the priority for an interrupt
1576:./Libraries/CMSIS/core_cm3.h ****  *
1577:./Libraries/CMSIS/core_cm3.h ****  * @param  IRQn      The number of the interrupt for set priority
1578:./Libraries/CMSIS/core_cm3.h ****  * @param  priority  The priority to set
1579:./Libraries/CMSIS/core_cm3.h ****  *
1580:./Libraries/CMSIS/core_cm3.h ****  * Set the priority for the specified interrupt. The interrupt 
1581:./Libraries/CMSIS/core_cm3.h ****  * number can be positive to specify an external (device specific) 
1582:./Libraries/CMSIS/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1583:./Libraries/CMSIS/core_cm3.h ****  *
1584:./Libraries/CMSIS/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1585:./Libraries/CMSIS/core_cm3.h ****  */
1586:./Libraries/CMSIS/core_cm3.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1587:./Libraries/CMSIS/core_cm3.h **** {
  26              		.loc 1 1587 1
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 0346     		mov	r3, r0
  42 0008 3960     		str	r1, [r7]
  43 000a FB71     		strb	r3, [r7, #7]
1588:./Libraries/CMSIS/core_cm3.h ****   if(IRQn < 0) {
  44              		.loc 1 1588 5
  45 000c 97F90730 		ldrsb	r3, [r7, #7]
  46 0010 002B     		cmp	r3, #0
  47 0012 0BDA     		bge	.L2
1589:./Libraries/CMSIS/core_cm3.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
  48              		.loc 1 1589 55
  49 0014 3B68     		ldr	r3, [r7]
  50 0016 DAB2     		uxtb	r2, r3
  51              		.loc 1 1589 8
  52 0018 0C49     		ldr	r1, .L5
  53              		.loc 1 1589 32
  54 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  55 001c 03F00F03 		and	r3, r3, #15
  56              		.loc 1 1589 38
  57 0020 043B     		subs	r3, r3, #4
  58              		.loc 1 1589 55
  59 0022 1201     		lsls	r2, r2, #4
  60 0024 D2B2     		uxtb	r2, r2
  61              		.loc 1 1589 42
  62 0026 0B44     		add	r3, r3, r1
  63 0028 1A76     		strb	r2, [r3, #24]
1590:./Libraries/CMSIS/core_cm3.h ****   else {
1591:./Libraries/CMSIS/core_cm3.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 30


1592:./Libraries/CMSIS/core_cm3.h **** }
  64              		.loc 1 1592 1
  65 002a 09E0     		b	.L4
  66              	.L2:
1591:./Libraries/CMSIS/core_cm3.h **** }
  67              		.loc 1 1591 45
  68 002c 3B68     		ldr	r3, [r7]
  69 002e DAB2     		uxtb	r2, r3
1591:./Libraries/CMSIS/core_cm3.h **** }
  70              		.loc 1 1591 9
  71 0030 0749     		ldr	r1, .L5+4
1591:./Libraries/CMSIS/core_cm3.h **** }
  72              		.loc 1 1591 14
  73 0032 97F90730 		ldrsb	r3, [r7, #7]
1591:./Libraries/CMSIS/core_cm3.h **** }
  74              		.loc 1 1591 45
  75 0036 1201     		lsls	r2, r2, #4
  76 0038 D2B2     		uxtb	r2, r2
1591:./Libraries/CMSIS/core_cm3.h **** }
  77              		.loc 1 1591 32
  78 003a 0B44     		add	r3, r3, r1
  79 003c 83F80023 		strb	r2, [r3, #768]
  80              	.L4:
  81              		.loc 1 1592 1
  82 0040 00BF     		nop
  83 0042 0C37     		adds	r7, r7, #12
  84              	.LCFI3:
  85              		.cfi_def_cfa_offset 4
  86 0044 BD46     		mov	sp, r7
  87              	.LCFI4:
  88              		.cfi_def_cfa_register 13
  89              		@ sp needed
  90 0046 80BC     		pop	{r7}
  91              	.LCFI5:
  92              		.cfi_restore 7
  93              		.cfi_def_cfa_offset 0
  94 0048 7047     		bx	lr
  95              	.L6:
  96 004a 00BF     		.align	2
  97              	.L5:
  98 004c 00ED00E0 		.word	-536810240
  99 0050 00E100E0 		.word	-536813312
 100              		.cfi_endproc
 101              	.LFE20:
 103              		.section	.text.SysTick_Config,"ax",%progbits
 104              		.align	1
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 109              	SysTick_Config:
 110              	.LFB24:
1593:./Libraries/CMSIS/core_cm3.h **** 
1594:./Libraries/CMSIS/core_cm3.h **** /**
1595:./Libraries/CMSIS/core_cm3.h ****  * @brief  Read the priority for an interrupt
1596:./Libraries/CMSIS/core_cm3.h ****  *
1597:./Libraries/CMSIS/core_cm3.h ****  * @param  IRQn      The number of the interrupt for get priority
1598:./Libraries/CMSIS/core_cm3.h ****  * @return           The priority for the interrupt
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 31


1599:./Libraries/CMSIS/core_cm3.h ****  *
1600:./Libraries/CMSIS/core_cm3.h ****  * Read the priority for the specified interrupt. The interrupt 
1601:./Libraries/CMSIS/core_cm3.h ****  * number can be positive to specify an external (device specific) 
1602:./Libraries/CMSIS/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1603:./Libraries/CMSIS/core_cm3.h ****  *
1604:./Libraries/CMSIS/core_cm3.h ****  * The returned priority value is automatically aligned to the implemented
1605:./Libraries/CMSIS/core_cm3.h ****  * priority bits of the microcontroller.
1606:./Libraries/CMSIS/core_cm3.h ****  *
1607:./Libraries/CMSIS/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1608:./Libraries/CMSIS/core_cm3.h ****  */
1609:./Libraries/CMSIS/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1610:./Libraries/CMSIS/core_cm3.h **** {
1611:./Libraries/CMSIS/core_cm3.h **** 
1612:./Libraries/CMSIS/core_cm3.h ****   if(IRQn < 0) {
1613:./Libraries/CMSIS/core_cm3.h ****     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1614:./Libraries/CMSIS/core_cm3.h ****   else {
1615:./Libraries/CMSIS/core_cm3.h ****     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1616:./Libraries/CMSIS/core_cm3.h **** }
1617:./Libraries/CMSIS/core_cm3.h **** 
1618:./Libraries/CMSIS/core_cm3.h **** 
1619:./Libraries/CMSIS/core_cm3.h **** /**
1620:./Libraries/CMSIS/core_cm3.h ****  * @brief  Encode the priority for an interrupt
1621:./Libraries/CMSIS/core_cm3.h ****  *
1622:./Libraries/CMSIS/core_cm3.h ****  * @param  PriorityGroup    The used priority group
1623:./Libraries/CMSIS/core_cm3.h ****  * @param  PreemptPriority  The preemptive priority value (starting from 0)
1624:./Libraries/CMSIS/core_cm3.h ****  * @param  SubPriority      The sub priority value (starting from 0)
1625:./Libraries/CMSIS/core_cm3.h ****  * @return                  The encoded priority for the interrupt
1626:./Libraries/CMSIS/core_cm3.h ****  *
1627:./Libraries/CMSIS/core_cm3.h ****  * Encode the priority for an interrupt with the given priority group,
1628:./Libraries/CMSIS/core_cm3.h ****  * preemptive priority value and sub priority value.
1629:./Libraries/CMSIS/core_cm3.h ****  * In case of a conflict between priority grouping and available
1630:./Libraries/CMSIS/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1631:./Libraries/CMSIS/core_cm3.h ****  *
1632:./Libraries/CMSIS/core_cm3.h ****  * The returned priority value can be used for NVIC_SetPriority(...) function
1633:./Libraries/CMSIS/core_cm3.h ****  */
1634:./Libraries/CMSIS/core_cm3.h **** static __INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1635:./Libraries/CMSIS/core_cm3.h **** {
1636:./Libraries/CMSIS/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1637:./Libraries/CMSIS/core_cm3.h ****   uint32_t PreemptPriorityBits;
1638:./Libraries/CMSIS/core_cm3.h ****   uint32_t SubPriorityBits;
1639:./Libraries/CMSIS/core_cm3.h **** 
1640:./Libraries/CMSIS/core_cm3.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1641:./Libraries/CMSIS/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1642:./Libraries/CMSIS/core_cm3.h ****  
1643:./Libraries/CMSIS/core_cm3.h ****   return (
1644:./Libraries/CMSIS/core_cm3.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
1645:./Libraries/CMSIS/core_cm3.h ****            ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
1646:./Libraries/CMSIS/core_cm3.h ****          );
1647:./Libraries/CMSIS/core_cm3.h **** }
1648:./Libraries/CMSIS/core_cm3.h **** 
1649:./Libraries/CMSIS/core_cm3.h **** 
1650:./Libraries/CMSIS/core_cm3.h **** /**
1651:./Libraries/CMSIS/core_cm3.h ****  * @brief  Decode the priority of an interrupt
1652:./Libraries/CMSIS/core_cm3.h ****  *
1653:./Libraries/CMSIS/core_cm3.h ****  * @param  Priority           The priority for the interrupt
1654:./Libraries/CMSIS/core_cm3.h ****  * @param  PriorityGroup      The used priority group
1655:./Libraries/CMSIS/core_cm3.h ****  * @param  pPreemptPriority   The preemptive priority value (starting from 0)
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 32


1656:./Libraries/CMSIS/core_cm3.h ****  * @param  pSubPriority       The sub priority value (starting from 0)
1657:./Libraries/CMSIS/core_cm3.h ****  *
1658:./Libraries/CMSIS/core_cm3.h ****  * Decode an interrupt priority value with the given priority group to 
1659:./Libraries/CMSIS/core_cm3.h ****  * preemptive priority value and sub priority value.
1660:./Libraries/CMSIS/core_cm3.h ****  * In case of a conflict between priority grouping and available
1661:./Libraries/CMSIS/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1662:./Libraries/CMSIS/core_cm3.h ****  *
1663:./Libraries/CMSIS/core_cm3.h ****  * The priority value can be retrieved with NVIC_GetPriority(...) function
1664:./Libraries/CMSIS/core_cm3.h ****  */
1665:./Libraries/CMSIS/core_cm3.h **** static __INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1666:./Libraries/CMSIS/core_cm3.h **** {
1667:./Libraries/CMSIS/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1668:./Libraries/CMSIS/core_cm3.h ****   uint32_t PreemptPriorityBits;
1669:./Libraries/CMSIS/core_cm3.h ****   uint32_t SubPriorityBits;
1670:./Libraries/CMSIS/core_cm3.h **** 
1671:./Libraries/CMSIS/core_cm3.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1672:./Libraries/CMSIS/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1673:./Libraries/CMSIS/core_cm3.h ****   
1674:./Libraries/CMSIS/core_cm3.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);
1675:./Libraries/CMSIS/core_cm3.h ****   *pSubPriority     = (Priority                   ) & ((1 << (SubPriorityBits    )) - 1);
1676:./Libraries/CMSIS/core_cm3.h **** }
1677:./Libraries/CMSIS/core_cm3.h **** 
1678:./Libraries/CMSIS/core_cm3.h **** 
1679:./Libraries/CMSIS/core_cm3.h **** 
1680:./Libraries/CMSIS/core_cm3.h **** /* ##################################    SysTick function  ########################################
1681:./Libraries/CMSIS/core_cm3.h **** 
1682:./Libraries/CMSIS/core_cm3.h **** #if (!defined (__Vendor_SysTickConfig)) || (__Vendor_SysTickConfig == 0)
1683:./Libraries/CMSIS/core_cm3.h **** 
1684:./Libraries/CMSIS/core_cm3.h **** /**
1685:./Libraries/CMSIS/core_cm3.h ****  * @brief  Initialize and start the SysTick counter and its interrupt.
1686:./Libraries/CMSIS/core_cm3.h ****  *
1687:./Libraries/CMSIS/core_cm3.h ****  * @param   ticks   number of ticks between two interrupts
1688:./Libraries/CMSIS/core_cm3.h ****  * @return  1 = failed, 0 = successful
1689:./Libraries/CMSIS/core_cm3.h ****  *
1690:./Libraries/CMSIS/core_cm3.h ****  * Initialise the system tick timer and its interrupt and start the
1691:./Libraries/CMSIS/core_cm3.h ****  * system tick timer / counter in free running mode to generate 
1692:./Libraries/CMSIS/core_cm3.h ****  * periodical interrupts.
1693:./Libraries/CMSIS/core_cm3.h ****  */
1694:./Libraries/CMSIS/core_cm3.h **** static __INLINE uint32_t SysTick_Config(uint32_t ticks)
1695:./Libraries/CMSIS/core_cm3.h **** { 
 111              		.loc 1 1695 1
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 8
 114              		@ frame_needed = 1, uses_anonymous_args = 0
 115 0000 80B5     		push	{r7, lr}
 116              	.LCFI6:
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 7, -8
 119              		.cfi_offset 14, -4
 120 0002 82B0     		sub	sp, sp, #8
 121              	.LCFI7:
 122              		.cfi_def_cfa_offset 16
 123 0004 00AF     		add	r7, sp, #0
 124              	.LCFI8:
 125              		.cfi_def_cfa_register 7
 126 0006 7860     		str	r0, [r7, #4]
1696:./Libraries/CMSIS/core_cm3.h ****   if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 33


 127              		.loc 1 1696 6
 128 0008 7B68     		ldr	r3, [r7, #4]
 129 000a B3F1807F 		cmp	r3, #16777216
 130 000e 01D3     		bcc	.L8
 131              		.loc 1 1696 48 discriminator 1
 132 0010 0123     		movs	r3, #1
 133 0012 11E0     		b	.L9
 134              	.L8:
1697:./Libraries/CMSIS/core_cm3.h ****                                                                
1698:./Libraries/CMSIS/core_cm3.h ****   SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
 135              		.loc 1 1698 27
 136 0014 7B68     		ldr	r3, [r7, #4]
 137 0016 23F07F43 		bic	r3, r3, #-16777216
 138              		.loc 1 1698 10
 139 001a 094A     		ldr	r2, .L10
 140              		.loc 1 1698 54
 141 001c 013B     		subs	r3, r3, #1
 142              		.loc 1 1698 18
 143 001e 5360     		str	r3, [r2, #4]
1699:./Libraries/CMSIS/core_cm3.h ****   NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Cortex-M0 System
 144              		.loc 1 1699 3
 145 0020 0F21     		movs	r1, #15
 146 0022 4FF0FF30 		mov	r0, #-1
 147 0026 FFF7FEFF 		bl	NVIC_SetPriority
1700:./Libraries/CMSIS/core_cm3.h ****   SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 148              		.loc 1 1700 10
 149 002a 054B     		ldr	r3, .L10
 150              		.loc 1 1700 18
 151 002c 0022     		movs	r2, #0
 152 002e 9A60     		str	r2, [r3, #8]
1701:./Libraries/CMSIS/core_cm3.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk | 
 153              		.loc 1 1701 10
 154 0030 034B     		ldr	r3, .L10
 155              		.loc 1 1701 18
 156 0032 0722     		movs	r2, #7
 157 0034 1A60     		str	r2, [r3]
1702:./Libraries/CMSIS/core_cm3.h ****                    SysTick_CTRL_TICKINT_Msk   | 
1703:./Libraries/CMSIS/core_cm3.h ****                    SysTick_CTRL_ENABLE_Msk;                    /* Enable SysTick IRQ and SysTick Ti
1704:./Libraries/CMSIS/core_cm3.h ****   return (0);                                                  /* Function successful */
 158              		.loc 1 1704 10
 159 0036 0023     		movs	r3, #0
 160              	.L9:
1705:./Libraries/CMSIS/core_cm3.h **** }
 161              		.loc 1 1705 1
 162 0038 1846     		mov	r0, r3
 163 003a 0837     		adds	r7, r7, #8
 164              	.LCFI9:
 165              		.cfi_def_cfa_offset 8
 166 003c BD46     		mov	sp, r7
 167              	.LCFI10:
 168              		.cfi_def_cfa_register 13
 169              		@ sp needed
 170 003e 80BD     		pop	{r7, pc}
 171              	.L11:
 172              		.align	2
 173              	.L10:
 174 0040 10E000E0 		.word	-536813552
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 34


 175              		.cfi_endproc
 176              	.LFE24:
 178              		.section	.bss.rt_heap,"aw",%nobits
 179              		.align	2
 182              	rt_heap:
 183 0000 00000000 		.space	4096
 183      00000000 
 183      00000000 
 183      00000000 
 183      00000000 
 184              		.section	.text.rt_heap_begin_get,"ax",%progbits
 185              		.align	1
 186              		.weak	rt_heap_begin_get
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 191              	rt_heap_begin_get:
 192              	.LFB47:
 193              		.file 2 "./User/Src/board.c"
   1:./User/Src/board.c **** /* 开发板硬件相关头文件 */
   2:./User/Src/board.c **** #include "board.h"
   3:./User/Src/board.c **** 
   4:./User/Src/board.c **** /* RT-Thread相关头文件 */
   5:./User/Src/board.c **** #include <rthw.h>
   6:./User/Src/board.c **** #include <rtthread.h>
   7:./User/Src/board.c **** 
   8:./User/Src/board.c **** #if 0
   9:./User/Src/board.c **** /*========================================================*/ 修改(2)
  10:./User/Src/board.c **** /* 内核外设NVIC相关的寄存器定义 */
  11:./User/Src/board.c **** #define _SCB_BASE       (0xE000E010UL)
  12:./User/Src/board.c **** #define _SYSTICK_CTRL   (*(rt_uint32_t *)(_SCB_BASE + 0x0))
  13:./User/Src/board.c **** #define _SYSTICK_LOAD   (*(rt_uint32_t *)(_SCB_BASE + 0x4))
  14:./User/Src/board.c **** #define _SYSTICK_VAL    (*(rt_uint32_t *)(_SCB_BASE + 0x8))
  15:./User/Src/board.c **** #define _SYSTICK_CALIB  (*(rt_uint32_t *)(_SCB_BASE + 0xC))
  16:./User/Src/board.c **** #define _SYSTICK_PRI    (*(rt_uint8_t  *)(0xE000ED23UL))
  17:./User/Src/board.c **** 
  18:./User/Src/board.c **** /* 外部时钟和函数声明 */
  19:./User/Src/board.c **** extern void SystemCoreClockUpdate(void);
  20:./User/Src/board.c **** extern uint32_t SystemCoreClock;
  21:./User/Src/board.c **** 
  22:./User/Src/board.c **** /* 系统定时器SysTick初始化 */
  23:./User/Src/board.c **** static uint32_t _SysTick_Config(rt_uint32_t ticks)
  24:./User/Src/board.c **** {
  25:./User/Src/board.c ****     if ((ticks - 1) > 0xFFFFFF)
  26:./User/Src/board.c ****     {
  27:./User/Src/board.c ****         return 1;
  28:./User/Src/board.c ****     }
  29:./User/Src/board.c **** 
  30:./User/Src/board.c ****     _SYSTICK_LOAD = ticks - 1;
  31:./User/Src/board.c ****     _SYSTICK_PRI = 0xFF;
  32:./User/Src/board.c ****     _SYSTICK_VAL  = 0;
  33:./User/Src/board.c ****     _SYSTICK_CTRL = 0x07;
  34:./User/Src/board.c **** 
  35:./User/Src/board.c ****     return 0;
  36:./User/Src/board.c **** }
  37:./User/Src/board.c **** /*=====================================================*/
  38:./User/Src/board.c **** #endif
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 35


  39:./User/Src/board.c **** 
  40:./User/Src/board.c **** #if defined(RT_USING_USER_MAIN) && defined(RT_USING_HEAP)
  41:./User/Src/board.c **** #define RT_HEAP_SIZE 1024
  42:./User/Src/board.c **** /* 从内部SRAM里面分配一部分静态内存来作为rtt的堆空间，这里配置为4KB */
  43:./User/Src/board.c **** static uint32_t rt_heap[RT_HEAP_SIZE];
  44:./User/Src/board.c **** RT_WEAK void *rt_heap_begin_get(void)
  45:./User/Src/board.c **** {
 194              		.loc 2 45 1
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 1, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 199 0000 80B4     		push	{r7}
 200              	.LCFI11:
 201              		.cfi_def_cfa_offset 4
 202              		.cfi_offset 7, -4
 203 0002 00AF     		add	r7, sp, #0
 204              	.LCFI12:
 205              		.cfi_def_cfa_register 7
  46:./User/Src/board.c ****     return rt_heap;
 206              		.loc 2 46 12
 207 0004 024B     		ldr	r3, .L14
  47:./User/Src/board.c **** }
 208              		.loc 2 47 1
 209 0006 1846     		mov	r0, r3
 210 0008 BD46     		mov	sp, r7
 211              	.LCFI13:
 212              		.cfi_def_cfa_register 13
 213              		@ sp needed
 214 000a 80BC     		pop	{r7}
 215              	.LCFI14:
 216              		.cfi_restore 7
 217              		.cfi_def_cfa_offset 0
 218 000c 7047     		bx	lr
 219              	.L15:
 220 000e 00BF     		.align	2
 221              	.L14:
 222 0010 00000000 		.word	rt_heap
 223              		.cfi_endproc
 224              	.LFE47:
 226              		.section	.text.rt_heap_end_get,"ax",%progbits
 227              		.align	1
 228              		.weak	rt_heap_end_get
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 233              	rt_heap_end_get:
 234              	.LFB48:
  48:./User/Src/board.c **** 
  49:./User/Src/board.c **** RT_WEAK void *rt_heap_end_get(void)
  50:./User/Src/board.c **** {
 235              		.loc 2 50 1
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 1, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240 0000 80B4     		push	{r7}
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 36


 241              	.LCFI15:
 242              		.cfi_def_cfa_offset 4
 243              		.cfi_offset 7, -4
 244 0002 00AF     		add	r7, sp, #0
 245              	.LCFI16:
 246              		.cfi_def_cfa_register 7
  51:./User/Src/board.c ****     return rt_heap + RT_HEAP_SIZE;
 247              		.loc 2 51 20
 248 0004 024B     		ldr	r3, .L18
  52:./User/Src/board.c **** }
 249              		.loc 2 52 1
 250 0006 1846     		mov	r0, r3
 251 0008 BD46     		mov	sp, r7
 252              	.LCFI17:
 253              		.cfi_def_cfa_register 13
 254              		@ sp needed
 255 000a 80BC     		pop	{r7}
 256              	.LCFI18:
 257              		.cfi_restore 7
 258              		.cfi_def_cfa_offset 0
 259 000c 7047     		bx	lr
 260              	.L19:
 261 000e 00BF     		.align	2
 262              	.L18:
 263 0010 00100000 		.word	rt_heap+4096
 264              		.cfi_endproc
 265              	.LFE48:
 267              		.section	.text.rt_hw_board_init,"ax",%progbits
 268              		.align	1
 269              		.global	rt_hw_board_init
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 274              	rt_hw_board_init:
 275              	.LFB49:
  53:./User/Src/board.c **** #endif
  54:./User/Src/board.c **** 
  55:./User/Src/board.c **** /**
  56:./User/Src/board.c **** * @brief  开发板硬件初始化函数
  57:./User/Src/board.c **** * @param  无
  58:./User/Src/board.c **** * @retval 无
  59:./User/Src/board.c **** *
  60:./User/Src/board.c **** * @attention
  61:./User/Src/board.c **** * RTT把开发板相关的初始化函数统一放到board.c文件中实现，
  62:./User/Src/board.c **** * 当然，你想把这些函数统一放到main.c文件也是可以的。
  63:./User/Src/board.c **** */
  64:./User/Src/board.c **** void rt_hw_board_init()
  65:./User/Src/board.c **** {
 276              		.loc 2 65 1
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 98B5     		push	{r3, r4, r7, lr}
 281              	.LCFI19:
 282              		.cfi_def_cfa_offset 16
 283              		.cfi_offset 3, -16
 284              		.cfi_offset 4, -12
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 37


 285              		.cfi_offset 7, -8
 286              		.cfi_offset 14, -4
 287 0002 00AF     		add	r7, sp, #0
 288              	.LCFI20:
 289              		.cfi_def_cfa_register 7
  66:./User/Src/board.c ****      
  67:./User/Src/board.c ****     /* 初始化SysTick */
  68:./User/Src/board.c ****     SysTick_Config( SystemCoreClock / RT_TICK_PER_SECOND );
 290              		.loc 2 68 5
 291 0004 0D4B     		ldr	r3, .L21
 292 0006 1B68     		ldr	r3, [r3]
 293 0008 0D4A     		ldr	r2, .L21+4
 294 000a A2FB0323 		umull	r2, r3, r2, r3
 295 000e 9B09     		lsrs	r3, r3, #6
 296 0010 1846     		mov	r0, r3
 297 0012 FFF7FEFF 		bl	SysTick_Config
  69:./User/Src/board.c **** 
  70:./User/Src/board.c ****     /* 硬件BSP初始化统统放在这里，比如LED，串口，LCD等 */
  71:./User/Src/board.c ****     /* 初始化开发板的LED */
  72:./User/Src/board.c ****     LED_GPIO_Config();                 
 298              		.loc 2 72 5
 299 0016 FFF7FEFF 		bl	LED_GPIO_Config
  73:./User/Src/board.c ****     USART_Config();
 300              		.loc 2 73 5
 301 001a FFF7FEFF 		bl	USART_Config
  74:./User/Src/board.c **** 
  75:./User/Src/board.c ****     /* 测试硬件是否正常工作 */
  76:./User/Src/board.c ****     // LED_G(ON);
  77:./User/Src/board.c **** 
  78:./User/Src/board.c ****     /* 其它硬件初始化和测试 */                    
  79:./User/Src/board.c **** 
  80:./User/Src/board.c ****     /* 让程序停在这里，不再继续往下执行 */          
  81:./User/Src/board.c ****     // while (1);
  82:./User/Src/board.c ****     /* 调用组件初始化函数 (use INIT_BOARD_EXPORT()) */
  83:./User/Src/board.c **** #ifdef RT_USING_COMPONENTS_INIT
  84:./User/Src/board.c ****     rt_components_board_init();
 302              		.loc 2 84 5
 303 001e FFF7FEFF 		bl	rt_components_board_init
  85:./User/Src/board.c **** #endif
  86:./User/Src/board.c **** 
  87:./User/Src/board.c **** #if defined(RT_USING_CONSOLE) && defined(RT_USING_DEVICE)
  88:./User/Src/board.c ****     rt_console_set_device(RT_CONSOLE_DEVICE_NAME);
  89:./User/Src/board.c **** #endif
  90:./User/Src/board.c **** 
  91:./User/Src/board.c **** #if defined(RT_USING_USER_MAIN) && defined(RT_USING_HEAP)
  92:./User/Src/board.c ****     rt_system_heap_init(rt_heap_begin_get(), rt_heap_end_get());
 304              		.loc 2 92 5
 305 0022 FFF7FEFF 		bl	rt_heap_begin_get
 306 0026 0446     		mov	r4, r0
 307 0028 FFF7FEFF 		bl	rt_heap_end_get
 308 002c 0346     		mov	r3, r0
 309 002e 1946     		mov	r1, r3
 310 0030 2046     		mov	r0, r4
 311 0032 FFF7FEFF 		bl	rt_system_heap_init
  93:./User/Src/board.c **** #endif
  94:./User/Src/board.c **** }
 312              		.loc 2 94 1
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 38


 313 0036 00BF     		nop
 314 0038 98BD     		pop	{r3, r4, r7, pc}
 315              	.L22:
 316 003a 00BF     		.align	2
 317              	.L21:
 318 003c 00000000 		.word	SystemCoreClock
 319 0040 D34D6210 		.word	274877907
 320              		.cfi_endproc
 321              	.LFE49:
 323              		.section	.text.rt_hw_console_output,"ax",%progbits
 324              		.align	1
 325              		.global	rt_hw_console_output
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 330              	rt_hw_console_output:
 331              	.LFB50:
  95:./User/Src/board.c **** 
  96:./User/Src/board.c **** /**
  97:./User/Src/board.c **** * @brief  重映射串口DEBUG_USARTx到rt_kprintf()函数
  98:./User/Src/board.c **** *   Note：DEBUG_USARTx是在bsp_usart.h中定义的宏，默认使用串口1
  99:./User/Src/board.c **** * @param  str：要输出到串口的字符串
 100:./User/Src/board.c **** * @retval 无
 101:./User/Src/board.c **** *
 102:./User/Src/board.c **** * @attention
 103:./User/Src/board.c **** *
 104:./User/Src/board.c **** */
 105:./User/Src/board.c **** void rt_hw_console_output(const char *str)
 106:./User/Src/board.c **** {
 332              		.loc 2 106 1
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 8
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336 0000 80B5     		push	{r7, lr}
 337              	.LCFI21:
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 7, -8
 340              		.cfi_offset 14, -4
 341 0002 82B0     		sub	sp, sp, #8
 342              	.LCFI22:
 343              		.cfi_def_cfa_offset 16
 344 0004 00AF     		add	r7, sp, #0
 345              	.LCFI23:
 346              		.cfi_def_cfa_register 7
 347 0006 7860     		str	r0, [r7, #4]
 107:./User/Src/board.c ****     /* 进入临界段 */
 108:./User/Src/board.c ****     rt_enter_critical();
 348              		.loc 2 108 5
 349 0008 FFF7FEFF 		bl	rt_enter_critical
 109:./User/Src/board.c **** 
 110:./User/Src/board.c ****     /* 直到字符串结束 */
 111:./User/Src/board.c ****     while (*str!='\0')
 350              		.loc 2 111 11
 351 000c 20E0     		b	.L24
 352              	.L28:
 112:./User/Src/board.c ****     {
 113:./User/Src/board.c ****         /* 换行 */
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 39


 114:./User/Src/board.c ****         if (*str=='\n')
 353              		.loc 2 114 13
 354 000e 7B68     		ldr	r3, [r7, #4]
 355 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 356              		.loc 2 114 12
 357 0012 0A2B     		cmp	r3, #10
 358 0014 0BD1     		bne	.L25
 115:./User/Src/board.c ****         {
 116:./User/Src/board.c ****             USART_SendData(DEBUG_USARTx, '\r');
 359              		.loc 2 116 13
 360 0016 0D21     		movs	r1, #13
 361 0018 1248     		ldr	r0, .L29
 362 001a FFF7FEFF 		bl	USART_SendData
 117:./User/Src/board.c ****             while (USART_GetFlagStatus(DEBUG_USARTx, USART_FLAG_TXE) == RESET);
 363              		.loc 2 117 19
 364 001e 00BF     		nop
 365              	.L26:
 366              		.loc 2 117 20 discriminator 1
 367 0020 8021     		movs	r1, #128
 368 0022 1048     		ldr	r0, .L29
 369 0024 FFF7FEFF 		bl	USART_GetFlagStatus
 370 0028 0346     		mov	r3, r0
 371              		.loc 2 117 19 discriminator 1
 372 002a 002B     		cmp	r3, #0
 373 002c F8D0     		beq	.L26
 374              	.L25:
 118:./User/Src/board.c ****         }
 119:./User/Src/board.c **** 
 120:./User/Src/board.c ****         USART_SendData(DEBUG_USARTx, *str++);
 375              		.loc 2 120 42
 376 002e 7B68     		ldr	r3, [r7, #4]
 377 0030 5A1C     		adds	r2, r3, #1
 378 0032 7A60     		str	r2, [r7, #4]
 379              		.loc 2 120 38
 380 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 381              		.loc 2 120 9
 382 0036 9BB2     		uxth	r3, r3
 383 0038 1946     		mov	r1, r3
 384 003a 0A48     		ldr	r0, .L29
 385 003c FFF7FEFF 		bl	USART_SendData
 121:./User/Src/board.c ****         while (USART_GetFlagStatus(DEBUG_USARTx, USART_FLAG_TXE) == RESET);
 386              		.loc 2 121 15
 387 0040 00BF     		nop
 388              	.L27:
 389              		.loc 2 121 16 discriminator 1
 390 0042 8021     		movs	r1, #128
 391 0044 0748     		ldr	r0, .L29
 392 0046 FFF7FEFF 		bl	USART_GetFlagStatus
 393 004a 0346     		mov	r3, r0
 394              		.loc 2 121 15 discriminator 1
 395 004c 002B     		cmp	r3, #0
 396 004e F8D0     		beq	.L27
 397              	.L24:
 111:./User/Src/board.c ****     {
 398              		.loc 2 111 12
 399 0050 7B68     		ldr	r3, [r7, #4]
 400 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 40


 111:./User/Src/board.c ****     {
 401              		.loc 2 111 11
 402 0054 002B     		cmp	r3, #0
 403 0056 DAD1     		bne	.L28
 122:./User/Src/board.c ****     }
 123:./User/Src/board.c **** 
 124:./User/Src/board.c ****     /* 退出临界段 */
 125:./User/Src/board.c ****     rt_exit_critical();
 404              		.loc 2 125 5
 405 0058 FFF7FEFF 		bl	rt_exit_critical
 126:./User/Src/board.c **** }
 406              		.loc 2 126 1
 407 005c 00BF     		nop
 408 005e 0837     		adds	r7, r7, #8
 409              	.LCFI24:
 410              		.cfi_def_cfa_offset 8
 411 0060 BD46     		mov	sp, r7
 412              	.LCFI25:
 413              		.cfi_def_cfa_register 13
 414              		@ sp needed
 415 0062 80BD     		pop	{r7, pc}
 416              	.L30:
 417              		.align	2
 418              	.L29:
 419 0064 00380140 		.word	1073821696
 420              		.cfi_endproc
 421              	.LFE50:
 423              		.section	.text.SysTick_Handler,"ax",%progbits
 424              		.align	1
 425              		.global	SysTick_Handler
 426              		.syntax unified
 427              		.thumb
 428              		.thumb_func
 430              	SysTick_Handler:
 431              	.LFB51:
 127:./User/Src/board.c **** 
 128:./User/Src/board.c **** /**
 129:./User/Src/board.c **** * @brief  SysTick中断服务函数
 130:./User/Src/board.c **** * @param  无
 131:./User/Src/board.c **** * @retval 无
 132:./User/Src/board.c **** *
 133:./User/Src/board.c **** * @attention
 134:./User/Src/board.c **** * SysTick中断服务函数在固件库文件stm32f10x_it.c中也定义了，而现在
 135:./User/Src/board.c **** * 在board.c中又定义一次，那么编译的时候会出现重复定义的错误，解决
 136:./User/Src/board.c **** * 方法是可以把stm32f10x_it.c中的注释或者删除即可。
 137:./User/Src/board.c **** */
 138:./User/Src/board.c **** void SysTick_Handler(void)
 139:./User/Src/board.c **** {
 432              		.loc 2 139 1
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 1, uses_anonymous_args = 0
 436 0000 80B5     		push	{r7, lr}
 437              	.LCFI26:
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 7, -8
 440              		.cfi_offset 14, -4
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 41


 441 0002 00AF     		add	r7, sp, #0
 442              	.LCFI27:
 443              		.cfi_def_cfa_register 7
 140:./User/Src/board.c ****     /* 进入中断 */
 141:./User/Src/board.c ****     rt_interrupt_enter();
 444              		.loc 2 141 5
 445 0004 FFF7FEFF 		bl	rt_interrupt_enter
 142:./User/Src/board.c **** 
 143:./User/Src/board.c ****     /* 更新时基 */
 144:./User/Src/board.c ****     rt_tick_increase();
 446              		.loc 2 144 5
 447 0008 FFF7FEFF 		bl	rt_tick_increase
 145:./User/Src/board.c **** 
 146:./User/Src/board.c ****     /* 离开中断 */
 147:./User/Src/board.c ****     rt_interrupt_leave();
 448              		.loc 2 147 5
 449 000c FFF7FEFF 		bl	rt_interrupt_leave
 148:./User/Src/board.c **** }...
 450              		.loc 2 148 1
 451 0010 00BF     		nop
 452 0012 80BD     		pop	{r7, pc}
 453              		.cfi_endproc
 454              	.LFE51:
 456              		.text
 457              	.Letext0:
 458              		.file 3 "./Libraries/CMSIS/stm32f10x.h"
 459              		.file 4 "c:\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 460              		.file 5 "c:\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 461              		.file 6 "./Libraries/CMSIS/system_stm32f10x.h"
ARM GAS  C:\Users\hao\AppData\Local\Temp\cciv7W9l.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 board.c
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:18     .text.NVIC_SetPriority:00000000 $t
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:23     .text.NVIC_SetPriority:00000000 NVIC_SetPriority
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:98     .text.NVIC_SetPriority:0000004c $d
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:104    .text.SysTick_Config:00000000 $t
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:109    .text.SysTick_Config:00000000 SysTick_Config
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:174    .text.SysTick_Config:00000040 $d
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:179    .bss.rt_heap:00000000 $d
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:182    .bss.rt_heap:00000000 rt_heap
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:185    .text.rt_heap_begin_get:00000000 $t
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:191    .text.rt_heap_begin_get:00000000 rt_heap_begin_get
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:222    .text.rt_heap_begin_get:00000010 $d
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:227    .text.rt_heap_end_get:00000000 $t
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:233    .text.rt_heap_end_get:00000000 rt_heap_end_get
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:263    .text.rt_heap_end_get:00000010 $d
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:268    .text.rt_hw_board_init:00000000 $t
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:274    .text.rt_hw_board_init:00000000 rt_hw_board_init
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:318    .text.rt_hw_board_init:0000003c $d
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:324    .text.rt_hw_console_output:00000000 $t
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:330    .text.rt_hw_console_output:00000000 rt_hw_console_output
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:419    .text.rt_hw_console_output:00000064 $d
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:424    .text.SysTick_Handler:00000000 $t
C:\Users\hao\AppData\Local\Temp\cciv7W9l.s:430    .text.SysTick_Handler:00000000 SysTick_Handler

UNDEFINED SYMBOLS
LED_GPIO_Config
USART_Config
rt_components_board_init
rt_system_heap_init
SystemCoreClock
rt_enter_critical
USART_SendData
USART_GetFlagStatus
rt_exit_critical
rt_interrupt_enter
rt_tick_increase
rt_interrupt_leave
