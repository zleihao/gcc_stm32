ARM GAS  /tmp/ccdUPIhe.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_ADC_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_ADC_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_ADC_Init:
  27              	.LFB126:
  28              		.file 1 "./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c"
   1:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
   2:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
   3:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @file    stm32f4xx_hal_adc.c
   4:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @author  MCD Application Team
   5:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   6:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC) peripheral:
   7:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   8:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + IO operation functions
   9:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + State and errors functions
  10:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         
  11:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   @verbatim
  12:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  13:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                     ##### ADC Peripheral features #####
  14:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  15:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..] 
  16:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  17:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Interrupt generation at the end of conversion, end of injected conversion,  
  18:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and in case of analog watchdog or overrun events
  19:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Single and continuous conversion modes.
  20:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Scan mode for automatic conversion of channel 0 to channel x.
  21:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Data alignment with in-built data coherency.
  22:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Channel-wise programmable sampling time.
  23:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) External trigger option with configurable polarity for both regular and 
  24:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       injected conversion.
  25:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Dual/Triple mode (on devices with 2 ADCs or more).
  26:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configurable DMA data storage in Dual/Triple ADC mode. 
  27:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configurable delay between conversions in Dual/Triple interleaved mode.
  28:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC conversion type (refer to the datasheets).
  29:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC supply requirements: 2.4 V to 3.6 V at full speed and down to 1.8 V at 
  30:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       slower speed.
ARM GAS  /tmp/ccdUPIhe.s 			page 2


  31:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC input range: VREF(minus) = VIN = VREF(plus).
  32:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) DMA request generation during regular channel conversion.
  33:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  34:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  35:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                      ##### How to use this driver #####
  36:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  37:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
  38:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#)Initialize the ADC low level resources by implementing the HAL_ADC_MspInit():
  39:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) Enable the ADC interface clock using __HAL_RCC_ADC_CLK_ENABLE()
  40:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) ADC pins configuration
  41:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the clock for the ADC GPIOs using the following function:
  42:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    __HAL_RCC_GPIOx_CLK_ENABLE()  
  43:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure these ADC pins in analog mode using HAL_GPIO_Init() 
  44:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) In case of using interrupts (e.g. HAL_ADC_Start_IT())
  45:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure the ADC interrupt priority using HAL_NVIC_SetPriority()
  46:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the ADC IRQ handler using HAL_NVIC_EnableIRQ()
  47:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) In ADC IRQ handler, call HAL_ADC_IRQHandler()
  48:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) In case of using DMA to control data transfer (e.g. HAL_ADC_Start_DMA())
  49:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the DMAx interface clock using __HAL_RCC_DMAx_CLK_ENABLE()
  50:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure and enable two DMA streams stream for managing data
  51:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  transfer from peripheral to memory (output stream)
  52:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Associate the initialized DMA handle to the CRYP DMA handle
  53:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  using  __HAL_LINKDMA()
  54:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure the priority and enable the NVIC for the transfer complete
  55:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  interrupt on the two DMA Streams. The output stream should have higher
  56:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  priority than the input stream.
  57:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                        
  58:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     *** Configuration of ADC, groups regular/injected, channels parameters ***
  59:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  60:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
  61:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configure the ADC parameters (resolution, data alignment, ...)
  62:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and regular group parameters (conversion trigger, sequencer, ...)
  63:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADC_Init().
  64:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  65:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configure the channels for regular group parameters (channel number, 
  66:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       channel rank into sequencer, ..., into regular group)
  67:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADC_ConfigChannel().
  68:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  69:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, configure the injected group parameters (conversion trigger, 
  70:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       sequencer, ..., of injected group)
  71:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and the channels for injected group parameters (channel number, 
  72:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       channel rank into sequencer, ..., into injected group)
  73:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADCEx_InjectedConfigChannel().
  74:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  75:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, configure the analog watchdog parameters (channels
  76:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       monitored, thresholds, ...) using function HAL_ADC_AnalogWDGConfig().
  77:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  78:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, for devices with several ADC instances: configure the 
  79:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       multimode parameters using function HAL_ADCEx_MultiModeConfigChannel().
  80:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  81:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                        *** Execution of ADC conversions ***
  82:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  83:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]  
  84:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC driver can be used among three modes: polling, interruption,
  85:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       transfer by DMA.    
  86:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  87:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** Polling mode IO operation ***
ARM GAS  /tmp/ccdUPIhe.s 			page 3


  88:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      =================================
  89:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
  90:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start() 
  91:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Wait for end of conversion using HAL_ADC_PollForConversion(), at this stage
  92:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            user can specify the value of timeout according to his end application      
  93:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) To read the ADC converted values, use the HAL_ADC_GetValue() function.
  94:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop()
  95:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        
  96:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** Interrupt mode IO operation ***    
  97:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ===================================
  98:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
  99:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_IT() 
 100:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Use HAL_ADC_IRQHandler() called under ADC_IRQHandler() Interrupt subroutine
 101:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) At ADC end of conversion HAL_ADC_ConvCpltCallback() function is executed and user can 
 102:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 103:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) In case of ADC Error, HAL_ADC_ErrorCallback() function is executed and user can 
 104:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 105:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_IT()     
 106:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 107:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** DMA mode IO operation ***    
 108:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ==============================
 109:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
 110:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_DMA(), at this stage the user specify the l
 111:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            of data to be transferred at each end of conversion 
 112:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) At The end of data transfer by HAL_ADC_ConvCpltCallback() function is executed and user 
 113:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 114:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) In case of transfer Error, HAL_ADC_ErrorCallback() function is executed and user can 
 115:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 116:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_DMA()
 117:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                     
 118:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** ADC HAL driver macros list ***
 119:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ============================================= 
 120:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 121:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        Below the list of most used macros in ADC HAL driver.
 122:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        
 123:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE : Enable the ADC peripheral
 124:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE : Disable the ADC peripheral
 125:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE_IT: Enable the ADC end of conversion interrupt
 126:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE_IT: Disable the ADC end of conversion interrupt
 127:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_GET_IT_SOURCE: Check if the specified ADC interrupt source is enabled or disabl
 128:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_CLEAR_FLAG: Clear the ADC's pending flags
 129:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_GET_FLAG: Get the selected ADC's flag status
 130:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) ADC_GET_RESOLUTION: Return resolution bits in CR1 register 
 131:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 132:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..] 
 133:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (@) You can refer to the ADC HAL driver header file for more useful macros 
 134:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 135:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       *** Deinitialization of ADC ***
 136:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
 137:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
 138:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Disable the ADC interface
 139:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) ADC clock can be hard reset and disabled at RCC top level.
 140:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Hard reset of ADC peripherals
 141:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           using macro __HAL_RCC_ADC_FORCE_RESET(), __HAL_RCC_ADC_RELEASE_RESET().
 142:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) ADC clock disable using the equivalent macro/functions as configuration step.
 143:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) Example:
 144:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
ARM GAS  /tmp/ccdUPIhe.s 			page 4


 145:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    other device clock parameters configuration:
 146:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) HAL_RCC_GetOscConfig(&RCC_OscInitStructure);
 147:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 148:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSIState = RCC_HSI_OFF; (if not used for system clock)
 149:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 150:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 151:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC pins configuration
 152:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Disable the clock for the ADC GPIOs using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 153:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 154:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, in case of usage of ADC with interruptions:
 155:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Disable the NVIC for ADC using function HAL_NVIC_DisableIRQ(ADCx_IRQn)
 156:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 157:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, in case of usage of DMA:
 158:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (++) Deinitialize the DMA using function HAL_DMA_DeInit().
 159:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (++) Disable the NVIC for DMA using function HAL_NVIC_DisableIRQ(DMAx_Channelx_IRQn)   
 160:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 161:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     @endverbatim
 162:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
 163:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @attention
 164:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 165:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 166:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 167:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * Redistribution and use in source and binary forms, with or without modification,
 168:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * are permitted provided that the following conditions are met:
 169:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 170:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      this list of conditions and the following disclaimer.
 171:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 172:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      this list of conditions and the following disclaimer in the documentation
 173:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      and/or other materials provided with the distribution.
 174:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 175:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      may be used to endorse or promote products derived from this software
 176:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      without specific prior written permission.
 177:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 179:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 180:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 181:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 182:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 183:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 184:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 185:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 186:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 187:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 188:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 189:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
 190:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */ 
 191:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 192:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 193:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #include "stm32f4xx_hal.h"
 194:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 195:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup STM32F4xx_HAL_Driver
 196:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 197:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 198:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 199:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC ADC
 200:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief ADC driver modules
 201:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
ARM GAS  /tmp/ccdUPIhe.s 			page 5


 202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */ 
 203:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 204:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 205:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 206:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 207:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 208:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 209:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 210:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
 211:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 212:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 213:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 214:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc);
 215:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 216:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 217:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 218:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 219:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
 220:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 221:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 222:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 223:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 224:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 225:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 226:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions 
 227:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief    Initialization and Configuration functions 
 228:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
 229:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim    
 230:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 231:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 232:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 233:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 234:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 235:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) De-initialize the ADC. 
 236:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****          
 237:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
 238:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 239:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 240:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 242:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
 243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in the ADC_InitStruct and initializes the ADC MSP.
 244:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           
 245:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   This function is used to configure the global features of the ADC ( 
 246:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         ClockPrescaler, Resolution, Data Alignment and number of conversion), however,
 247:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the rest of the configuration parameters are specific to the regular
 248:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         channels group (scan mode activation, continuous mode activation,
 249:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         External trigger source and edge, DMA continuous request after the  
 250:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         last transfer and End of conversion selection).
 251:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *             
 252:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 253:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 254:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 255:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 256:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 257:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
  29              		.loc 1 257 1
ARM GAS  /tmp/ccdUPIhe.s 			page 6


  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 84B0     		sub	sp, sp, #16
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 258:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  45              		.loc 1 258 21
  46 0008 0023     		movs	r3, #0
  47 000a FB73     		strb	r3, [r7, #15]
 259:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 260:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check ADC handle */
 261:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc == NULL)
  48              		.loc 1 261 5
  49 000c 7B68     		ldr	r3, [r7, #4]
  50 000e 002B     		cmp	r3, #0
  51 0010 01D1     		bne	.L2
 262:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 263:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
  52              		.loc 1 263 12
  53 0012 0123     		movs	r3, #1
  54 0014 33E0     		b	.L3
  55              	.L2:
 264:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 265:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 266:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 267:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 268:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 269:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 270:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ScanConvMode));
 271:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 272:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG(hadc->Init.ExternalTrigConv));
 273:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 274:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
 275:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 276:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
 277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 278:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 279:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 280:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 281:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 282:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 283:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 284:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->State == HAL_ADC_STATE_RESET)
  56              		.loc 1 284 10
  57 0016 7B68     		ldr	r3, [r7, #4]
  58 0018 1B6C     		ldr	r3, [r3, #64]
  59              		.loc 1 284 5
ARM GAS  /tmp/ccdUPIhe.s 			page 7


  60 001a 002B     		cmp	r3, #0
  61 001c 09D1     		bne	.L4
 285:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 286:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Initialize ADC error code */
 287:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
  62              		.loc 1 287 5
  63 001e 7B68     		ldr	r3, [r7, #4]
  64 0020 0022     		movs	r2, #0
  65 0022 5A64     		str	r2, [r3, #68]
 288:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 289:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Allocate lock resource and initialize it */
 290:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
  66              		.loc 1 290 16
  67 0024 7B68     		ldr	r3, [r7, #4]
  68 0026 0022     		movs	r2, #0
  69 0028 83F83C20 		strb	r2, [r3, #60]
 291:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 292:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Init the low level hardware */
 293:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
  70              		.loc 1 293 5
  71 002c 7868     		ldr	r0, [r7, #4]
  72 002e FFF7FEFF 		bl	HAL_ADC_MspInit
  73              	.L4:
 294:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 295:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 296:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 297:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* correctly completed.                                                     */
 298:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
  74              		.loc 1 298 7
  75 0032 7B68     		ldr	r3, [r7, #4]
  76 0034 1B6C     		ldr	r3, [r3, #64]
  77 0036 03F01003 		and	r3, r3, #16
  78              		.loc 1 298 6
  79 003a 002B     		cmp	r3, #0
  80 003c 18D1     		bne	.L5
 299:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 300:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 301:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
  81              		.loc 1 301 5
  82 003e 7B68     		ldr	r3, [r7, #4]
  83 0040 1B6C     		ldr	r3, [r3, #64]
  84 0042 23F48853 		bic	r3, r3, #4352
  85 0046 23F00203 		bic	r3, r3, #2
  86 004a 43F00202 		orr	r2, r3, #2
  87 004e 7B68     		ldr	r3, [r7, #4]
  88 0050 1A64     		str	r2, [r3, #64]
 302:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 303:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 304:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 305:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC parameters */
 306:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_Init(hadc);
  89              		.loc 1 306 5
  90 0052 7868     		ldr	r0, [r7, #4]
  91 0054 FFF7FEFF 		bl	ADC_Init
 307:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 308:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to none */
 309:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
ARM GAS  /tmp/ccdUPIhe.s 			page 8


  92              		.loc 1 309 5
  93 0058 7B68     		ldr	r3, [r7, #4]
  94 005a 0022     		movs	r2, #0
  95 005c 5A64     		str	r2, [r3, #68]
 310:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 311:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the ADC state */
 312:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
  96              		.loc 1 312 5
  97 005e 7B68     		ldr	r3, [r7, #4]
  98 0060 1B6C     		ldr	r3, [r3, #64]
  99 0062 23F00303 		bic	r3, r3, #3
 100 0066 43F00102 		orr	r2, r3, #1
 101 006a 7B68     		ldr	r3, [r7, #4]
 102 006c 1A64     		str	r2, [r3, #64]
 103 006e 01E0     		b	.L6
 104              	.L5:
 313:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 314:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 315:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 316:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 317:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 318:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 105              		.loc 1 318 20
 106 0070 0123     		movs	r3, #1
 107 0072 FB73     		strb	r3, [r7, #15]
 108              	.L6:
 319:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 320:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 321:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Release Lock */
 322:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 109              		.loc 1 322 3
 110 0074 7B68     		ldr	r3, [r7, #4]
 111 0076 0022     		movs	r2, #0
 112 0078 83F83C20 		strb	r2, [r3, #60]
 323:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 324:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 325:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 113              		.loc 1 325 10
 114 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 115              	.L3:
 326:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 116              		.loc 1 326 1
 117 007e 1846     		mov	r0, r3
 118 0080 1037     		adds	r7, r7, #16
 119              	.LCFI3:
 120              		.cfi_def_cfa_offset 8
 121 0082 BD46     		mov	sp, r7
 122              	.LCFI4:
 123              		.cfi_def_cfa_register 13
 124              		@ sp needed
 125 0084 80BD     		pop	{r7, pc}
 126              		.cfi_endproc
 127              	.LFE126:
 129              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 130              		.align	1
 131              		.global	HAL_ADC_DeInit
 132              		.syntax unified
ARM GAS  /tmp/ccdUPIhe.s 			page 9


 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	HAL_ADC_DeInit:
 138              	.LFB127:
 327:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 328:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 329:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values. 
 330:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 331:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 332:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 333:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 334:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 335:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 139              		.loc 1 335 1
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 16
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143 0000 80B5     		push	{r7, lr}
 144              	.LCFI5:
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 7, -8
 147              		.cfi_offset 14, -4
 148 0002 84B0     		sub	sp, sp, #16
 149              	.LCFI6:
 150              		.cfi_def_cfa_offset 24
 151 0004 00AF     		add	r7, sp, #0
 152              	.LCFI7:
 153              		.cfi_def_cfa_register 7
 154 0006 7860     		str	r0, [r7, #4]
 336:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 155              		.loc 1 336 21
 156 0008 0023     		movs	r3, #0
 157 000a FB73     		strb	r3, [r7, #15]
 337:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 338:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check ADC handle */
 339:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc == NULL)
 158              		.loc 1 339 5
 159 000c 7B68     		ldr	r3, [r7, #4]
 160 000e 002B     		cmp	r3, #0
 161 0010 01D1     		bne	.L8
 340:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 341:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 162              		.loc 1 341 12
 163 0012 0123     		movs	r3, #1
 164 0014 22E0     		b	.L9
 165              	.L8:
 342:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 343:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 344:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 345:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 346:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 347:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC state */
 348:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 166              		.loc 1 348 3
 167 0016 7B68     		ldr	r3, [r7, #4]
 168 0018 1B6C     		ldr	r3, [r3, #64]
ARM GAS  /tmp/ccdUPIhe.s 			page 10


 169 001a 43F00202 		orr	r2, r3, #2
 170 001e 7B68     		ldr	r3, [r7, #4]
 171 0020 1A64     		str	r2, [r3, #64]
 349:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 350:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 351:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
 352:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 172              		.loc 1 352 3
 173 0022 7B68     		ldr	r3, [r7, #4]
 174 0024 1B68     		ldr	r3, [r3]
 175 0026 9A68     		ldr	r2, [r3, #8]
 176 0028 7B68     		ldr	r3, [r7, #4]
 177 002a 1B68     		ldr	r3, [r3]
 178 002c 22F00102 		bic	r2, r2, #1
 179 0030 9A60     		str	r2, [r3, #8]
 353:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 354:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 355:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* correctly completed.                                                     */
 356:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 180              		.loc 1 356 6
 181 0032 7B68     		ldr	r3, [r7, #4]
 182 0034 1B68     		ldr	r3, [r3]
 183 0036 9B68     		ldr	r3, [r3, #8]
 184 0038 03F00103 		and	r3, r3, #1
 185              		.loc 1 356 5
 186 003c 002B     		cmp	r3, #0
 187 003e 08D1     		bne	.L10
 357:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 358:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* DeInit the low level hardware */
 359:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_MspDeInit(hadc);
 188              		.loc 1 359 5
 189 0040 7868     		ldr	r0, [r7, #4]
 190 0042 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 360:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 361:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to none */
 362:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 191              		.loc 1 362 5
 192 0046 7B68     		ldr	r3, [r7, #4]
 193 0048 0022     		movs	r2, #0
 194 004a 5A64     		str	r2, [r3, #68]
 363:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 364:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 365:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_RESET;
 195              		.loc 1 365 17
 196 004c 7B68     		ldr	r3, [r7, #4]
 197 004e 0022     		movs	r2, #0
 198 0050 1A64     		str	r2, [r3, #64]
 199              	.L10:
 366:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 367:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 368:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 369:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 200              		.loc 1 369 3
 201 0052 7B68     		ldr	r3, [r7, #4]
 202 0054 0022     		movs	r2, #0
 203 0056 83F83C20 		strb	r2, [r3, #60]
 370:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
ARM GAS  /tmp/ccdUPIhe.s 			page 11


 371:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 372:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 204              		.loc 1 372 10
 205 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 206              	.L9:
 373:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 207              		.loc 1 373 1
 208 005c 1846     		mov	r0, r3
 209 005e 1037     		adds	r7, r7, #16
 210              	.LCFI8:
 211              		.cfi_def_cfa_offset 8
 212 0060 BD46     		mov	sp, r7
 213              	.LCFI9:
 214              		.cfi_def_cfa_register 13
 215              		@ sp needed
 216 0062 80BD     		pop	{r7, pc}
 217              		.cfi_endproc
 218              	.LFE127:
 220              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 221              		.align	1
 222              		.weak	HAL_ADC_MspInit
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 226              		.fpu fpv4-sp-d16
 228              	HAL_ADC_MspInit:
 229              	.LFB128:
 374:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 375:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 376:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADC MSP.
 377:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 378:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 379:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 380:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 381:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 382:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 230              		.loc 1 382 1
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 8
 233              		@ frame_needed = 1, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235 0000 80B4     		push	{r7}
 236              	.LCFI10:
 237              		.cfi_def_cfa_offset 4
 238              		.cfi_offset 7, -4
 239 0002 83B0     		sub	sp, sp, #12
 240              	.LCFI11:
 241              		.cfi_def_cfa_offset 16
 242 0004 00AF     		add	r7, sp, #0
 243              	.LCFI12:
 244              		.cfi_def_cfa_register 7
 245 0006 7860     		str	r0, [r7, #4]
 383:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 384:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
 385:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 386:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_MspInit could be implemented in the user file
 387:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */ 
ARM GAS  /tmp/ccdUPIhe.s 			page 12


 388:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 246              		.loc 1 388 1
 247 0008 00BF     		nop
 248 000a 0C37     		adds	r7, r7, #12
 249              	.LCFI13:
 250              		.cfi_def_cfa_offset 4
 251 000c BD46     		mov	sp, r7
 252              	.LCFI14:
 253              		.cfi_def_cfa_register 13
 254              		@ sp needed
 255 000e 5DF8047B 		ldr	r7, [sp], #4
 256              	.LCFI15:
 257              		.cfi_restore 7
 258              		.cfi_def_cfa_offset 0
 259 0012 7047     		bx	lr
 260              		.cfi_endproc
 261              	.LFE128:
 263              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 264              		.align	1
 265              		.weak	HAL_ADC_MspDeInit
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 269              		.fpu fpv4-sp-d16
 271              	HAL_ADC_MspDeInit:
 272              	.LFB129:
 389:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 390:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 391:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DeInitializes the ADC MSP.
 392:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 393:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 394:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 395:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 396:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 397:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 273              		.loc 1 397 1
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 8
 276              		@ frame_needed = 1, uses_anonymous_args = 0
 277              		@ link register save eliminated.
 278 0000 80B4     		push	{r7}
 279              	.LCFI16:
 280              		.cfi_def_cfa_offset 4
 281              		.cfi_offset 7, -4
 282 0002 83B0     		sub	sp, sp, #12
 283              	.LCFI17:
 284              		.cfi_def_cfa_offset 16
 285 0004 00AF     		add	r7, sp, #0
 286              	.LCFI18:
 287              		.cfi_def_cfa_register 7
 288 0006 7860     		str	r0, [r7, #4]
 398:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 399:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
 400:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 401:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_MspDeInit could be implemented in the user file
 402:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */ 
 403:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
ARM GAS  /tmp/ccdUPIhe.s 			page 13


 289              		.loc 1 403 1
 290 0008 00BF     		nop
 291 000a 0C37     		adds	r7, r7, #12
 292              	.LCFI19:
 293              		.cfi_def_cfa_offset 4
 294 000c BD46     		mov	sp, r7
 295              	.LCFI20:
 296              		.cfi_def_cfa_register 13
 297              		@ sp needed
 298 000e 5DF8047B 		ldr	r7, [sp], #4
 299              	.LCFI21:
 300              		.cfi_restore 7
 301              		.cfi_def_cfa_offset 0
 302 0012 7047     		bx	lr
 303              		.cfi_endproc
 304              	.LFE129:
 306              		.section	.text.HAL_ADC_Start,"ax",%progbits
 307              		.align	1
 308              		.global	HAL_ADC_Start
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 312              		.fpu fpv4-sp-d16
 314              	HAL_ADC_Start:
 315              	.LFB130:
 404:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 405:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 406:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
 407:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 408:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 409:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 IO operation functions
 410:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief    IO operation functions 
 411:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
 412:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
 413:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 414:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              ##### IO operation functions #####
 415:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
 416:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 417:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel.
 418:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel.
 419:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel and enable interrupt.
 420:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable interrupt.
 421:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel and enable DMA transfer.
 422:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable DMA transfer.
 423:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Handle ADC interrupt request. 
 424:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                
 425:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
 426:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 427:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 428:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 429:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 430:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables ADC and starts conversion of the regular channels.
 431:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 432:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 433:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 434:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 435:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
ARM GAS  /tmp/ccdUPIhe.s 			page 14


 436:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 316              		.loc 1 436 1
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 16
 319              		@ frame_needed = 1, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 321 0000 80B4     		push	{r7}
 322              	.LCFI22:
 323              		.cfi_def_cfa_offset 4
 324              		.cfi_offset 7, -4
 325 0002 85B0     		sub	sp, sp, #20
 326              	.LCFI23:
 327              		.cfi_def_cfa_offset 24
 328 0004 00AF     		add	r7, sp, #0
 329              	.LCFI24:
 330              		.cfi_def_cfa_register 7
 331 0006 7860     		str	r0, [r7, #4]
 437:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 332              		.loc 1 437 17
 333 0008 0023     		movs	r3, #0
 334 000a BB60     		str	r3, [r7, #8]
 438:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 439:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 440:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 441:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 442:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
 443:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 444:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 445:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 335              		.loc 1 445 3
 336 000c 7B68     		ldr	r3, [r7, #4]
 337 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 338 0012 012B     		cmp	r3, #1
 339 0014 01D1     		bne	.L14
 340              		.loc 1 445 3 is_stmt 0 discriminator 1
 341 0016 0223     		movs	r3, #2
 342 0018 89E0     		b	.L15
 343              	.L14:
 344              		.loc 1 445 3 discriminator 2
 345 001a 7B68     		ldr	r3, [r7, #4]
 346 001c 0122     		movs	r2, #1
 347 001e 83F83C20 		strb	r2, [r3, #60]
 446:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 447:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
 448:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 449:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
 450:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 348              		.loc 1 450 11 is_stmt 1 discriminator 2
 349 0022 7B68     		ldr	r3, [r7, #4]
 350 0024 1B68     		ldr	r3, [r3]
 351              		.loc 1 450 21 discriminator 2
 352 0026 9B68     		ldr	r3, [r3, #8]
 353              		.loc 1 450 27 discriminator 2
 354 0028 03F00103 		and	r3, r3, #1
 355              		.loc 1 450 5 discriminator 2
 356 002c 012B     		cmp	r3, #1
 357 002e 18D0     		beq	.L16
ARM GAS  /tmp/ccdUPIhe.s 			page 15


 451:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 452:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
 453:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 358              		.loc 1 453 5
 359 0030 7B68     		ldr	r3, [r7, #4]
 360 0032 1B68     		ldr	r3, [r3]
 361 0034 9A68     		ldr	r2, [r3, #8]
 362 0036 7B68     		ldr	r3, [r7, #4]
 363 0038 1B68     		ldr	r3, [r3]
 364 003a 42F00102 		orr	r2, r2, #1
 365 003e 9A60     		str	r2, [r3, #8]
 454:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 455:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 456:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
 457:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 366              		.loc 1 457 53
 367 0040 3E4B     		ldr	r3, .L24
 368 0042 1B68     		ldr	r3, [r3]
 369 0044 3E4A     		ldr	r2, .L24+4
 370 0046 A2FB0323 		umull	r2, r3, r2, r3
 371 004a 9A0C     		lsrs	r2, r3, #18
 372              		.loc 1 457 34
 373 004c 1346     		mov	r3, r2
 374 004e 5B00     		lsls	r3, r3, #1
 375 0050 1344     		add	r3, r3, r2
 376              		.loc 1 457 13
 377 0052 BB60     		str	r3, [r7, #8]
 458:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 378              		.loc 1 458 10
 379 0054 02E0     		b	.L17
 380              	.L18:
 459:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 460:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 381              		.loc 1 460 14
 382 0056 BB68     		ldr	r3, [r7, #8]
 383 0058 013B     		subs	r3, r3, #1
 384 005a BB60     		str	r3, [r7, #8]
 385              	.L17:
 458:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 386              		.loc 1 458 19
 387 005c BB68     		ldr	r3, [r7, #8]
 458:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 388              		.loc 1 458 10
 389 005e 002B     		cmp	r3, #0
 390 0060 F9D1     		bne	.L18
 391              	.L16:
 461:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 462:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 463:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 464:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
 465:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 392              		.loc 1 465 6
 393 0062 7B68     		ldr	r3, [r7, #4]
 394 0064 1B68     		ldr	r3, [r3]
 395 0066 9B68     		ldr	r3, [r3, #8]
 396 0068 03F00103 		and	r3, r3, #1
 397              		.loc 1 465 5
ARM GAS  /tmp/ccdUPIhe.s 			page 16


 398 006c 002B     		cmp	r3, #0
 399 006e 5DD0     		beq	.L19
 466:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 467:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
 468:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
 469:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
 470:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 400              		.loc 1 470 5
 401 0070 7B68     		ldr	r3, [r7, #4]
 402 0072 1B6C     		ldr	r3, [r3, #64]
 403 0074 23F4E063 		bic	r3, r3, #1792
 404 0078 23F00103 		bic	r3, r3, #1
 405 007c 43F48072 		orr	r2, r3, #256
 406 0080 7B68     		ldr	r3, [r7, #4]
 407 0082 1A64     		str	r2, [r3, #64]
 471:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 472:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
 473:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 474:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
 475:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
 476:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 408              		.loc 1 476 9
 409 0084 7B68     		ldr	r3, [r7, #4]
 410 0086 1B68     		ldr	r3, [r3]
 411 0088 5B68     		ldr	r3, [r3, #4]
 412 008a 03F48063 		and	r3, r3, #1024
 413              		.loc 1 476 8
 414 008e 002B     		cmp	r3, #0
 415 0090 07D0     		beq	.L20
 477:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 478:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 416              		.loc 1 478 7
 417 0092 7B68     		ldr	r3, [r7, #4]
 418 0094 1B6C     		ldr	r3, [r3, #64]
 419 0096 23F44053 		bic	r3, r3, #12288
 420 009a 43F48052 		orr	r2, r3, #4096
 421 009e 7B68     		ldr	r3, [r7, #4]
 422 00a0 1A64     		str	r2, [r3, #64]
 423              	.L20:
 479:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 480:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 481:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
 482:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 424              		.loc 1 482 9
 425 00a2 7B68     		ldr	r3, [r7, #4]
 426 00a4 1B6C     		ldr	r3, [r3, #64]
 427 00a6 03F48053 		and	r3, r3, #4096
 428              		.loc 1 482 8
 429 00aa 002B     		cmp	r3, #0
 430 00ac 06D0     		beq	.L21
 483:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 484:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
 485:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 431              		.loc 1 485 7
 432 00ae 7B68     		ldr	r3, [r7, #4]
 433 00b0 5B6C     		ldr	r3, [r3, #68]
 434 00b2 23F00602 		bic	r2, r3, #6
ARM GAS  /tmp/ccdUPIhe.s 			page 17


 435 00b6 7B68     		ldr	r3, [r7, #4]
 436 00b8 5A64     		str	r2, [r3, #68]
 437 00ba 02E0     		b	.L22
 438              	.L21:
 486:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 487:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 488:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 489:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
 490:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 439              		.loc 1 490 7
 440 00bc 7B68     		ldr	r3, [r7, #4]
 441 00be 0022     		movs	r2, #0
 442 00c0 5A64     		str	r2, [r3, #68]
 443              	.L22:
 491:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     } 
 492:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 493:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
 494:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 495:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 496:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 444              		.loc 1 496 5
 445 00c2 7B68     		ldr	r3, [r7, #4]
 446 00c4 0022     		movs	r2, #0
 447 00c6 83F83C20 		strb	r2, [r3, #60]
 497:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 498:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
 499:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
 500:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
 501:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 448              		.loc 1 501 19
 449 00ca 1E4B     		ldr	r3, .L24+8
 450 00cc FB60     		str	r3, [r7, #12]
 502:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 503:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
 504:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 505:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 451              		.loc 1 505 5
 452 00ce 7B68     		ldr	r3, [r7, #4]
 453 00d0 1B68     		ldr	r3, [r3]
 454 00d2 6FF02202 		mvn	r2, #34
 455 00d6 1A60     		str	r2, [r3]
 506:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 507:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
 508:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 456              		.loc 1 508 8
 457 00d8 FB68     		ldr	r3, [r7, #12]
 458 00da 5B68     		ldr	r3, [r3, #4]
 459 00dc 03F01F03 		and	r3, r3, #31
 460              		.loc 1 508 7
 461 00e0 002B     		cmp	r3, #0
 462 00e2 0FD1     		bne	.L23
 509:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 510:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if no external trigger present enable software conversion of regular channels */
 511:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 463              		.loc 1 511 15
 464 00e4 7B68     		ldr	r3, [r7, #4]
 465 00e6 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccdUPIhe.s 			page 18


 466              		.loc 1 511 25
 467 00e8 9B68     		ldr	r3, [r3, #8]
 468              		.loc 1 511 31
 469 00ea 03F04053 		and	r3, r3, #805306368
 470              		.loc 1 511 9
 471 00ee 002B     		cmp	r3, #0
 472 00f0 1CD1     		bne	.L19
 512:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 513:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 514:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 473              		.loc 1 514 13
 474 00f2 7B68     		ldr	r3, [r7, #4]
 475 00f4 1B68     		ldr	r3, [r3]
 476              		.loc 1 514 29
 477 00f6 9A68     		ldr	r2, [r3, #8]
 478              		.loc 1 514 13
 479 00f8 7B68     		ldr	r3, [r7, #4]
 480 00fa 1B68     		ldr	r3, [r3]
 481              		.loc 1 514 29
 482 00fc 42F08042 		orr	r2, r2, #1073741824
 483 0100 9A60     		str	r2, [r3, #8]
 484 0102 13E0     		b	.L19
 485              	.L23:
 515:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 516:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 517:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 518:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 519:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
 520:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 486              		.loc 1 520 15
 487 0104 7B68     		ldr	r3, [r7, #4]
 488 0106 1B68     		ldr	r3, [r3]
 489              		.loc 1 520 9
 490 0108 0F4A     		ldr	r2, .L24+12
 491 010a 9342     		cmp	r3, r2
 492 010c 0ED1     		bne	.L19
 493              		.loc 1 520 44 discriminator 1
 494 010e 7B68     		ldr	r3, [r7, #4]
 495 0110 1B68     		ldr	r3, [r3]
 496              		.loc 1 520 54 discriminator 1
 497 0112 9B68     		ldr	r3, [r3, #8]
 498              		.loc 1 520 60 discriminator 1
 499 0114 03F04053 		and	r3, r3, #805306368
 500              		.loc 1 520 35 discriminator 1
 501 0118 002B     		cmp	r3, #0
 502 011a 07D1     		bne	.L19
 521:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 522:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 523:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 503              		.loc 1 523 15
 504 011c 7B68     		ldr	r3, [r7, #4]
 505 011e 1B68     		ldr	r3, [r3]
 506              		.loc 1 523 31
 507 0120 9A68     		ldr	r2, [r3, #8]
 508              		.loc 1 523 15
 509 0122 7B68     		ldr	r3, [r7, #4]
 510 0124 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccdUPIhe.s 			page 19


 511              		.loc 1 523 31
 512 0126 42F08042 		orr	r2, r2, #1073741824
 513 012a 9A60     		str	r2, [r3, #8]
 514              	.L19:
 524:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 525:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 526:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 527:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 528:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 529:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 515              		.loc 1 529 10
 516 012c 0023     		movs	r3, #0
 517              	.L15:
 530:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 518              		.loc 1 530 1
 519 012e 1846     		mov	r0, r3
 520 0130 1437     		adds	r7, r7, #20
 521              	.LCFI25:
 522              		.cfi_def_cfa_offset 4
 523 0132 BD46     		mov	sp, r7
 524              	.LCFI26:
 525              		.cfi_def_cfa_register 13
 526              		@ sp needed
 527 0134 5DF8047B 		ldr	r7, [sp], #4
 528              	.LCFI27:
 529              		.cfi_restore 7
 530              		.cfi_def_cfa_offset 0
 531 0138 7047     		bx	lr
 532              	.L25:
 533 013a 00BF     		.align	2
 534              	.L24:
 535 013c 00000000 		.word	SystemCoreClock
 536 0140 83DE1B43 		.word	1125899907
 537 0144 00230140 		.word	1073816320
 538 0148 00200140 		.word	1073815552
 539              		.cfi_endproc
 540              	.LFE130:
 542              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 543              		.align	1
 544              		.global	HAL_ADC_Stop
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 548              		.fpu fpv4-sp-d16
 550              	HAL_ADC_Stop:
 551              	.LFB131:
 531:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 532:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 533:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables ADC and stop conversion of regular channels.
 534:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * 
 535:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
 536:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 537:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 538:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 539:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 540:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
 541:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
ARM GAS  /tmp/ccdUPIhe.s 			page 20


 542:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
 543:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 552              		.loc 1 543 1
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 8
 555              		@ frame_needed = 1, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 557 0000 80B4     		push	{r7}
 558              	.LCFI28:
 559              		.cfi_def_cfa_offset 4
 560              		.cfi_offset 7, -4
 561 0002 83B0     		sub	sp, sp, #12
 562              	.LCFI29:
 563              		.cfi_def_cfa_offset 16
 564 0004 00AF     		add	r7, sp, #0
 565              	.LCFI30:
 566              		.cfi_def_cfa_register 7
 567 0006 7860     		str	r0, [r7, #4]
 544:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 545:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 546:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 547:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 548:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 568              		.loc 1 548 3
 569 0008 7B68     		ldr	r3, [r7, #4]
 570 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 571 000e 012B     		cmp	r3, #1
 572 0010 01D1     		bne	.L27
 573              		.loc 1 548 3 is_stmt 0 discriminator 1
 574 0012 0223     		movs	r3, #2
 575 0014 21E0     		b	.L28
 576              	.L27:
 577              		.loc 1 548 3 discriminator 2
 578 0016 7B68     		ldr	r3, [r7, #4]
 579 0018 0122     		movs	r2, #1
 580 001a 83F83C20 		strb	r2, [r3, #60]
 549:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 550:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 551:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
 552:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 581              		.loc 1 552 3 is_stmt 1 discriminator 2
 582 001e 7B68     		ldr	r3, [r7, #4]
 583 0020 1B68     		ldr	r3, [r3]
 584 0022 9A68     		ldr	r2, [r3, #8]
 585 0024 7B68     		ldr	r3, [r7, #4]
 586 0026 1B68     		ldr	r3, [r3]
 587 0028 22F00102 		bic	r2, r2, #1
 588 002c 9A60     		str	r2, [r3, #8]
 553:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 554:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
 555:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 589              		.loc 1 555 6 discriminator 2
 590 002e 7B68     		ldr	r3, [r7, #4]
 591 0030 1B68     		ldr	r3, [r3]
 592 0032 9B68     		ldr	r3, [r3, #8]
 593 0034 03F00103 		and	r3, r3, #1
 594              		.loc 1 555 5 discriminator 2
ARM GAS  /tmp/ccdUPIhe.s 			page 21


 595 0038 002B     		cmp	r3, #0
 596 003a 09D1     		bne	.L29
 556:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 557:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 558:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 597              		.loc 1 558 5
 598 003c 7B68     		ldr	r3, [r7, #4]
 599 003e 1B6C     		ldr	r3, [r3, #64]
 600 0040 23F48853 		bic	r3, r3, #4352
 601 0044 23F00103 		bic	r3, r3, #1
 602 0048 43F00102 		orr	r2, r3, #1
 603 004c 7B68     		ldr	r3, [r7, #4]
 604 004e 1A64     		str	r2, [r3, #64]
 605              	.L29:
 559:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 560:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 561:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 562:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 563:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 564:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 606              		.loc 1 564 3
 607 0050 7B68     		ldr	r3, [r7, #4]
 608 0052 0022     		movs	r2, #0
 609 0054 83F83C20 		strb	r2, [r3, #60]
 565:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 566:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 567:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 610              		.loc 1 567 10
 611 0058 0023     		movs	r3, #0
 612              	.L28:
 568:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 613              		.loc 1 568 1
 614 005a 1846     		mov	r0, r3
 615 005c 0C37     		adds	r7, r7, #12
 616              	.LCFI31:
 617              		.cfi_def_cfa_offset 4
 618 005e BD46     		mov	sp, r7
 619              	.LCFI32:
 620              		.cfi_def_cfa_register 13
 621              		@ sp needed
 622 0060 5DF8047B 		ldr	r7, [sp], #4
 623              	.LCFI33:
 624              		.cfi_restore 7
 625              		.cfi_def_cfa_offset 0
 626 0064 7047     		bx	lr
 627              		.cfi_endproc
 628              	.LFE131:
 630              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 631              		.align	1
 632              		.global	HAL_ADC_PollForConversion
 633              		.syntax unified
 634              		.thumb
 635              		.thumb_func
 636              		.fpu fpv4-sp-d16
 638              	HAL_ADC_PollForConversion:
 639              	.LFB132:
 569:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
ARM GAS  /tmp/ccdUPIhe.s 			page 22


 570:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 571:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Poll for regular conversion complete
 572:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
 573:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         conversion) are cleared by this function.
 574:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
 575:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
 576:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
 577:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
 578:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still 
 579:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         be performed on the complete sequence.
 580:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 581:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 582:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.  
 583:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 584:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 585:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 586:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 640              		.loc 1 586 1
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 16
 643              		@ frame_needed = 1, uses_anonymous_args = 0
 644 0000 80B5     		push	{r7, lr}
 645              	.LCFI34:
 646              		.cfi_def_cfa_offset 8
 647              		.cfi_offset 7, -8
 648              		.cfi_offset 14, -4
 649 0002 84B0     		sub	sp, sp, #16
 650              	.LCFI35:
 651              		.cfi_def_cfa_offset 24
 652 0004 00AF     		add	r7, sp, #0
 653              	.LCFI36:
 654              		.cfi_def_cfa_register 7
 655 0006 7860     		str	r0, [r7, #4]
 656 0008 3960     		str	r1, [r7]
 587:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0U;
 657              		.loc 1 587 12
 658 000a 0023     		movs	r3, #0
 659 000c FB60     		str	r3, [r7, #12]
 588:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  
 589:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Verification that ADC configuration is compliant with polling for      */
 590:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* each conversion:                                                       */
 591:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
 592:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* several ranks and polling for end of each conversion.                  */
 593:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For code simplicity sake, this particular case is generalized to       */
 594:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* ADC configured in DMA mode and polling for end of each conversion.     */
 595:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 660              		.loc 1 595 7
 661 000e 7B68     		ldr	r3, [r7, #4]
 662 0010 1B68     		ldr	r3, [r3]
 663 0012 9B68     		ldr	r3, [r3, #8]
 664 0014 03F48063 		and	r3, r3, #1024
 665              		.loc 1 595 6
 666 0018 002B     		cmp	r3, #0
 667 001a 12D0     		beq	.L31
 596:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 668              		.loc 1 596 7 discriminator 1
 669 001c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccdUPIhe.s 			page 23


 670 001e 1B68     		ldr	r3, [r3]
 671 0020 9B68     		ldr	r3, [r3, #8]
 672 0022 03F48073 		and	r3, r3, #256
 595:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 673              		.loc 1 595 57 discriminator 1
 674 0026 002B     		cmp	r3, #0
 675 0028 0BD0     		beq	.L31
 597:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 598:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine to error */
 599:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 676              		.loc 1 599 5
 677 002a 7B68     		ldr	r3, [r7, #4]
 678 002c 1B6C     		ldr	r3, [r3, #64]
 679 002e 43F02002 		orr	r2, r3, #32
 680 0032 7B68     		ldr	r3, [r7, #4]
 681 0034 1A64     		str	r2, [r3, #64]
 600:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 601:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
 602:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 682              		.loc 1 602 5
 683 0036 7B68     		ldr	r3, [r7, #4]
 684 0038 0022     		movs	r2, #0
 685 003a 83F83C20 		strb	r2, [r3, #60]
 603:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 604:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 686              		.loc 1 604 12
 687 003e 0123     		movs	r3, #1
 688 0040 5CE0     		b	.L32
 689              	.L31:
 605:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 606:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 607:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Get tick */ 
 608:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 690              		.loc 1 608 15
 691 0042 FFF7FEFF 		bl	HAL_GetTick
 692 0046 F860     		str	r0, [r7, #12]
 609:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 610:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag */
 611:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 693              		.loc 1 611 8
 694 0048 1AE0     		b	.L33
 695              	.L35:
 612:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 613:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
 614:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 696              		.loc 1 614 7
 697 004a 3B68     		ldr	r3, [r7]
 698 004c B3F1FF3F 		cmp	r3, #-1
 699 0050 16D0     		beq	.L33
 615:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 616:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 700              		.loc 1 616 9
 701 0052 3B68     		ldr	r3, [r7]
 702 0054 002B     		cmp	r3, #0
 703 0056 07D0     		beq	.L34
 704              		.loc 1 616 31 discriminator 1
 705 0058 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccdUPIhe.s 			page 24


 706 005c 0246     		mov	r2, r0
 707              		.loc 1 616 45 discriminator 1
 708 005e FB68     		ldr	r3, [r7, #12]
 709 0060 D31A     		subs	r3, r2, r3
 710              		.loc 1 616 26 discriminator 1
 711 0062 3A68     		ldr	r2, [r7]
 712 0064 9A42     		cmp	r2, r3
 713 0066 0BD2     		bcs	.L33
 714              	.L34:
 617:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 618:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update ADC state machine to timeout */
 619:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 715              		.loc 1 619 9
 716 0068 7B68     		ldr	r3, [r7, #4]
 717 006a 1B6C     		ldr	r3, [r3, #64]
 718 006c 43F00402 		orr	r2, r3, #4
 719 0070 7B68     		ldr	r3, [r7, #4]
 720 0072 1A64     		str	r2, [r3, #64]
 620:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 621:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Process unlocked */
 622:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 721              		.loc 1 622 9
 722 0074 7B68     		ldr	r3, [r7, #4]
 723 0076 0022     		movs	r2, #0
 724 0078 83F83C20 		strb	r2, [r3, #60]
 623:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 624:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         return HAL_TIMEOUT;
 725              		.loc 1 624 16
 726 007c 0323     		movs	r3, #3
 727 007e 3DE0     		b	.L32
 728              	.L33:
 611:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 729              		.loc 1 611 11
 730 0080 7B68     		ldr	r3, [r7, #4]
 731 0082 1B68     		ldr	r3, [r3]
 732 0084 1B68     		ldr	r3, [r3]
 733 0086 03F00203 		and	r3, r3, #2
 611:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 734              		.loc 1 611 8
 735 008a 022B     		cmp	r3, #2
 736 008c DDD1     		bne	.L35
 625:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 626:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 627:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 628:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 629:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear regular group conversion flag */
 630:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 737              		.loc 1 630 3
 738 008e 7B68     		ldr	r3, [r7, #4]
 739 0090 1B68     		ldr	r3, [r3]
 740 0092 6FF01202 		mvn	r2, #18
 741 0096 1A60     		str	r2, [r3]
 631:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 632:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Update ADC state machine */
 633:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 742              		.loc 1 633 3
 743 0098 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccdUPIhe.s 			page 25


 744 009a 1B6C     		ldr	r3, [r3, #64]
 745 009c 43F40072 		orr	r2, r3, #512
 746 00a0 7B68     		ldr	r3, [r7, #4]
 747 00a2 1A64     		str	r2, [r3, #64]
 634:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 635:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
 636:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
 637:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Note: On STM32F4, there is no independent flag of end of sequence.       */
 638:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       The test of scan sequence on going is done either with scan        */
 639:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       sequence disabled or with end of conversion flag set to            */
 640:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       of end of sequence.                                                */
 641:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 748              		.loc 1 641 6
 749 00a4 7B68     		ldr	r3, [r7, #4]
 750 00a6 1B68     		ldr	r3, [r3]
 751 00a8 9B68     		ldr	r3, [r3, #8]
 752 00aa 03F04053 		and	r3, r3, #805306368
 753              		.loc 1 641 5
 754 00ae 002B     		cmp	r3, #0
 755 00b0 23D1     		bne	.L36
 642:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 756              		.loc 1 642 17 discriminator 1
 757 00b2 7B68     		ldr	r3, [r7, #4]
 758 00b4 9B69     		ldr	r3, [r3, #24]
 641:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 759              		.loc 1 641 60 discriminator 1
 760 00b6 002B     		cmp	r3, #0
 761 00b8 1FD1     		bne	.L36
 643:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 762              		.loc 1 643 7
 763 00ba 7B68     		ldr	r3, [r7, #4]
 764 00bc 1B68     		ldr	r3, [r3]
 765 00be DB6A     		ldr	r3, [r3, #44]
 766 00c0 03F47003 		and	r3, r3, #15728640
 642:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 767              		.loc 1 642 60
 768 00c4 002B     		cmp	r3, #0
 769 00c6 06D0     		beq	.L37
 644:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 770              		.loc 1 644 7
 771 00c8 7B68     		ldr	r3, [r7, #4]
 772 00ca 1B68     		ldr	r3, [r3]
 773 00cc 9B68     		ldr	r3, [r3, #8]
 774 00ce 03F48063 		and	r3, r3, #1024
 643:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 775              		.loc 1 643 56
 776 00d2 002B     		cmp	r3, #0
 777 00d4 11D1     		bne	.L36
 778              	.L37:
 645:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 646:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 647:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 779              		.loc 1 647 5
 780 00d6 7B68     		ldr	r3, [r7, #4]
 781 00d8 1B6C     		ldr	r3, [r3, #64]
 782 00da 23F48072 		bic	r2, r3, #256
 783 00de 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccdUPIhe.s 			page 26


 784 00e0 1A64     		str	r2, [r3, #64]
 648:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 649:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 785              		.loc 1 649 9
 786 00e2 7B68     		ldr	r3, [r7, #4]
 787 00e4 1B6C     		ldr	r3, [r3, #64]
 788 00e6 03F48053 		and	r3, r3, #4096
 789              		.loc 1 649 8
 790 00ea 002B     		cmp	r3, #0
 791 00ec 05D1     		bne	.L36
 650:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     { 
 651:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 792              		.loc 1 651 7
 793 00ee 7B68     		ldr	r3, [r7, #4]
 794 00f0 1B6C     		ldr	r3, [r3, #64]
 795 00f2 43F00102 		orr	r2, r3, #1
 796 00f6 7B68     		ldr	r3, [r7, #4]
 797 00f8 1A64     		str	r2, [r3, #64]
 798              	.L36:
 652:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 653:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 654:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 655:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
 656:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 799              		.loc 1 656 10
 800 00fa 0023     		movs	r3, #0
 801              	.L32:
 657:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 802              		.loc 1 657 1
 803 00fc 1846     		mov	r0, r3
 804 00fe 1037     		adds	r7, r7, #16
 805              	.LCFI37:
 806              		.cfi_def_cfa_offset 8
 807 0100 BD46     		mov	sp, r7
 808              	.LCFI38:
 809              		.cfi_def_cfa_register 13
 810              		@ sp needed
 811 0102 80BD     		pop	{r7, pc}
 812              		.cfi_endproc
 813              	.LFE132:
 815              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 816              		.align	1
 817              		.global	HAL_ADC_PollForEvent
 818              		.syntax unified
 819              		.thumb
 820              		.thumb_func
 821              		.fpu fpv4-sp-d16
 823              	HAL_ADC_PollForEvent:
 824              	.LFB133:
 658:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 659:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 660:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Poll for conversion event
 661:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 662:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 663:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  EventType the ADC event type.
 664:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          This parameter can be one of the following values:
 665:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watch Dog event.
ARM GAS  /tmp/ccdUPIhe.s 			page 27


 666:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *            @arg ADC_OVR_EVENT: ADC Overrun event.
 667:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.   
 668:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 669:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 670:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
 671:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 825              		.loc 1 671 1
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 24
 828              		@ frame_needed = 1, uses_anonymous_args = 0
 829 0000 80B5     		push	{r7, lr}
 830              	.LCFI39:
 831              		.cfi_def_cfa_offset 8
 832              		.cfi_offset 7, -8
 833              		.cfi_offset 14, -4
 834 0002 86B0     		sub	sp, sp, #24
 835              	.LCFI40:
 836              		.cfi_def_cfa_offset 32
 837 0004 00AF     		add	r7, sp, #0
 838              	.LCFI41:
 839              		.cfi_def_cfa_register 7
 840 0006 F860     		str	r0, [r7, #12]
 841 0008 B960     		str	r1, [r7, #8]
 842 000a 7A60     		str	r2, [r7, #4]
 672:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0U;
 843              		.loc 1 672 12
 844 000c 0023     		movs	r3, #0
 845 000e 7B61     		str	r3, [r7, #20]
 673:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 674:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 675:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 676:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 677:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 678:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Get tick */
 679:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 846              		.loc 1 679 15
 847 0010 FFF7FEFF 		bl	HAL_GetTick
 848 0014 7861     		str	r0, [r7, #20]
 680:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 681:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check selected event flag */
 682:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc,EventType)))
 849              		.loc 1 682 8
 850 0016 1AE0     		b	.L39
 851              	.L42:
 683:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 684:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check for the Timeout */
 685:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 852              		.loc 1 685 7
 853 0018 7B68     		ldr	r3, [r7, #4]
 854 001a B3F1FF3F 		cmp	r3, #-1
 855 001e 16D0     		beq	.L39
 686:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 687:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 856              		.loc 1 687 9
 857 0020 7B68     		ldr	r3, [r7, #4]
 858 0022 002B     		cmp	r3, #0
 859 0024 07D0     		beq	.L40
ARM GAS  /tmp/ccdUPIhe.s 			page 28


 860              		.loc 1 687 31 discriminator 1
 861 0026 FFF7FEFF 		bl	HAL_GetTick
 862 002a 0246     		mov	r2, r0
 863              		.loc 1 687 45 discriminator 1
 864 002c 7B69     		ldr	r3, [r7, #20]
 865 002e D31A     		subs	r3, r2, r3
 866              		.loc 1 687 26 discriminator 1
 867 0030 7A68     		ldr	r2, [r7, #4]
 868 0032 9A42     		cmp	r2, r3
 869 0034 0BD2     		bcs	.L39
 870              	.L40:
 688:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 689:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update ADC state machine to timeout */
 690:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 871              		.loc 1 690 9
 872 0036 FB68     		ldr	r3, [r7, #12]
 873 0038 1B6C     		ldr	r3, [r3, #64]
 874 003a 43F00402 		orr	r2, r3, #4
 875 003e FB68     		ldr	r3, [r7, #12]
 876 0040 1A64     		str	r2, [r3, #64]
 691:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 692:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Process unlocked */
 693:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 877              		.loc 1 693 9
 878 0042 FB68     		ldr	r3, [r7, #12]
 879 0044 0022     		movs	r2, #0
 880 0046 83F83C20 		strb	r2, [r3, #60]
 694:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 695:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         return HAL_TIMEOUT;
 881              		.loc 1 695 16
 882 004a 0323     		movs	r3, #3
 883 004c 28E0     		b	.L41
 884              	.L39:
 682:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 885              		.loc 1 682 11
 886 004e FB68     		ldr	r3, [r7, #12]
 887 0050 1B68     		ldr	r3, [r3]
 888 0052 1A68     		ldr	r2, [r3]
 889 0054 BB68     		ldr	r3, [r7, #8]
 890 0056 1340     		ands	r3, r3, r2
 682:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 891              		.loc 1 682 8
 892 0058 BA68     		ldr	r2, [r7, #8]
 893 005a 9A42     		cmp	r2, r3
 894 005c DCD1     		bne	.L42
 696:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 697:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 698:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 699:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 700:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Analog watchdog (level out of window) event */
 701:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(EventType == ADC_AWD_EVENT)
 895              		.loc 1 701 5
 896 005e BB68     		ldr	r3, [r7, #8]
 897 0060 012B     		cmp	r3, #1
 898 0062 0BD1     		bne	.L43
 702:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 703:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
ARM GAS  /tmp/ccdUPIhe.s 			page 29


 704:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 899              		.loc 1 704 5
 900 0064 FB68     		ldr	r3, [r7, #12]
 901 0066 1B6C     		ldr	r3, [r3, #64]
 902 0068 43F48032 		orr	r2, r3, #65536
 903 006c FB68     		ldr	r3, [r7, #12]
 904 006e 1A64     		str	r2, [r3, #64]
 705:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 706:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
 707:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 905              		.loc 1 707 5
 906 0070 FB68     		ldr	r3, [r7, #12]
 907 0072 1B68     		ldr	r3, [r3]
 908 0074 6FF00102 		mvn	r2, #1
 909 0078 1A60     		str	r2, [r3]
 910 007a 10E0     		b	.L44
 911              	.L43:
 708:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 709:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Overrun event */
 710:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 711:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 712:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 713:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
 912              		.loc 1 713 5
 913 007c FB68     		ldr	r3, [r7, #12]
 914 007e 1B6C     		ldr	r3, [r3, #64]
 915 0080 43F48062 		orr	r2, r3, #1024
 916 0084 FB68     		ldr	r3, [r7, #12]
 917 0086 1A64     		str	r2, [r3, #64]
 714:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to overrun */
 715:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 918              		.loc 1 715 5
 919 0088 FB68     		ldr	r3, [r7, #12]
 920 008a 5B6C     		ldr	r3, [r3, #68]
 921 008c 43F00202 		orr	r2, r3, #2
 922 0090 FB68     		ldr	r3, [r7, #12]
 923 0092 5A64     		str	r2, [r3, #68]
 716:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 717:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC overrun flag */
 718:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 924              		.loc 1 718 5
 925 0094 FB68     		ldr	r3, [r7, #12]
 926 0096 1B68     		ldr	r3, [r3]
 927 0098 6FF02002 		mvn	r2, #32
 928 009c 1A60     		str	r2, [r3]
 929              	.L44:
 719:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 720:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 721:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
 722:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 930              		.loc 1 722 10
 931 009e 0023     		movs	r3, #0
 932              	.L41:
 723:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 933              		.loc 1 723 1
 934 00a0 1846     		mov	r0, r3
 935 00a2 1837     		adds	r7, r7, #24
ARM GAS  /tmp/ccdUPIhe.s 			page 30


 936              	.LCFI42:
 937              		.cfi_def_cfa_offset 8
 938 00a4 BD46     		mov	sp, r7
 939              	.LCFI43:
 940              		.cfi_def_cfa_register 13
 941              		@ sp needed
 942 00a6 80BD     		pop	{r7, pc}
 943              		.cfi_endproc
 944              	.LFE133:
 946              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 947              		.align	1
 948              		.global	HAL_ADC_Start_IT
 949              		.syntax unified
 950              		.thumb
 951              		.thumb_func
 952              		.fpu fpv4-sp-d16
 954              	HAL_ADC_Start_IT:
 955              	.LFB134:
 724:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 725:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 726:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 727:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables the interrupt and starts ADC conversion of regular channels.
 728:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 729:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 730:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
 731:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 732:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
 733:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 956              		.loc 1 733 1
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 16
 959              		@ frame_needed = 1, uses_anonymous_args = 0
 960              		@ link register save eliminated.
 961 0000 80B4     		push	{r7}
 962              	.LCFI44:
 963              		.cfi_def_cfa_offset 4
 964              		.cfi_offset 7, -4
 965 0002 85B0     		sub	sp, sp, #20
 966              	.LCFI45:
 967              		.cfi_def_cfa_offset 24
 968 0004 00AF     		add	r7, sp, #0
 969              	.LCFI46:
 970              		.cfi_def_cfa_register 7
 971 0006 7860     		str	r0, [r7, #4]
 734:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 972              		.loc 1 734 17
 973 0008 0023     		movs	r3, #0
 974 000a BB60     		str	r3, [r7, #8]
 735:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 736:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 737:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 738:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 739:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
 740:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 741:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 742:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 975              		.loc 1 742 3
ARM GAS  /tmp/ccdUPIhe.s 			page 31


 976 000c 7B68     		ldr	r3, [r7, #4]
 977 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 978 0012 012B     		cmp	r3, #1
 979 0014 01D1     		bne	.L46
 980              		.loc 1 742 3 is_stmt 0 discriminator 1
 981 0016 0223     		movs	r3, #2
 982 0018 93E0     		b	.L47
 983              	.L46:
 984              		.loc 1 742 3 discriminator 2
 985 001a 7B68     		ldr	r3, [r7, #4]
 986 001c 0122     		movs	r2, #1
 987 001e 83F83C20 		strb	r2, [r3, #60]
 743:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 744:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
 745:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 746:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
 747:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 988              		.loc 1 747 11 is_stmt 1 discriminator 2
 989 0022 7B68     		ldr	r3, [r7, #4]
 990 0024 1B68     		ldr	r3, [r3]
 991              		.loc 1 747 21 discriminator 2
 992 0026 9B68     		ldr	r3, [r3, #8]
 993              		.loc 1 747 27 discriminator 2
 994 0028 03F00103 		and	r3, r3, #1
 995              		.loc 1 747 5 discriminator 2
 996 002c 012B     		cmp	r3, #1
 997 002e 18D0     		beq	.L48
 748:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 749:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
 750:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 998              		.loc 1 750 5
 999 0030 7B68     		ldr	r3, [r7, #4]
 1000 0032 1B68     		ldr	r3, [r3]
 1001 0034 9A68     		ldr	r2, [r3, #8]
 1002 0036 7B68     		ldr	r3, [r7, #4]
 1003 0038 1B68     		ldr	r3, [r3]
 1004 003a 42F00102 		orr	r2, r2, #1
 1005 003e 9A60     		str	r2, [r3, #8]
 751:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 752:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 753:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
 754:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 1006              		.loc 1 754 53
 1007 0040 434B     		ldr	r3, .L56
 1008 0042 1B68     		ldr	r3, [r3]
 1009 0044 434A     		ldr	r2, .L56+4
 1010 0046 A2FB0323 		umull	r2, r3, r2, r3
 1011 004a 9A0C     		lsrs	r2, r3, #18
 1012              		.loc 1 754 34
 1013 004c 1346     		mov	r3, r2
 1014 004e 5B00     		lsls	r3, r3, #1
 1015 0050 1344     		add	r3, r3, r2
 1016              		.loc 1 754 13
 1017 0052 BB60     		str	r3, [r7, #8]
 755:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1018              		.loc 1 755 10
 1019 0054 02E0     		b	.L49
ARM GAS  /tmp/ccdUPIhe.s 			page 32


 1020              	.L50:
 756:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 757:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 1021              		.loc 1 757 14
 1022 0056 BB68     		ldr	r3, [r7, #8]
 1023 0058 013B     		subs	r3, r3, #1
 1024 005a BB60     		str	r3, [r7, #8]
 1025              	.L49:
 755:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1026              		.loc 1 755 19
 1027 005c BB68     		ldr	r3, [r7, #8]
 755:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1028              		.loc 1 755 10
 1029 005e 002B     		cmp	r3, #0
 1030 0060 F9D1     		bne	.L50
 1031              	.L48:
 758:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 759:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 760:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 761:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
 762:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 1032              		.loc 1 762 6
 1033 0062 7B68     		ldr	r3, [r7, #4]
 1034 0064 1B68     		ldr	r3, [r3]
 1035 0066 9B68     		ldr	r3, [r3, #8]
 1036 0068 03F00103 		and	r3, r3, #1
 1037              		.loc 1 762 5
 1038 006c 002B     		cmp	r3, #0
 1039 006e 67D0     		beq	.L51
 763:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 764:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
 765:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
 766:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
 767:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1040              		.loc 1 767 5
 1041 0070 7B68     		ldr	r3, [r7, #4]
 1042 0072 1B6C     		ldr	r3, [r3, #64]
 1043 0074 23F4E063 		bic	r3, r3, #1792
 1044 0078 23F00103 		bic	r3, r3, #1
 1045 007c 43F48072 		orr	r2, r3, #256
 1046 0080 7B68     		ldr	r3, [r7, #4]
 1047 0082 1A64     		str	r2, [r3, #64]
 768:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 769:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
 770:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 771:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
 772:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
 773:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 1048              		.loc 1 773 9
 1049 0084 7B68     		ldr	r3, [r7, #4]
 1050 0086 1B68     		ldr	r3, [r3]
 1051 0088 5B68     		ldr	r3, [r3, #4]
 1052 008a 03F48063 		and	r3, r3, #1024
 1053              		.loc 1 773 8
 1054 008e 002B     		cmp	r3, #0
 1055 0090 07D0     		beq	.L52
 774:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
ARM GAS  /tmp/ccdUPIhe.s 			page 33


 775:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 1056              		.loc 1 775 7
 1057 0092 7B68     		ldr	r3, [r7, #4]
 1058 0094 1B6C     		ldr	r3, [r3, #64]
 1059 0096 23F44053 		bic	r3, r3, #12288
 1060 009a 43F48052 		orr	r2, r3, #4096
 1061 009e 7B68     		ldr	r3, [r7, #4]
 1062 00a0 1A64     		str	r2, [r3, #64]
 1063              	.L52:
 776:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 777:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 778:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
 779:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1064              		.loc 1 779 9
 1065 00a2 7B68     		ldr	r3, [r7, #4]
 1066 00a4 1B6C     		ldr	r3, [r3, #64]
 1067 00a6 03F48053 		and	r3, r3, #4096
 1068              		.loc 1 779 8
 1069 00aa 002B     		cmp	r3, #0
 1070 00ac 06D0     		beq	.L53
 780:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 781:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
 782:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 1071              		.loc 1 782 7
 1072 00ae 7B68     		ldr	r3, [r7, #4]
 1073 00b0 5B6C     		ldr	r3, [r3, #68]
 1074 00b2 23F00602 		bic	r2, r3, #6
 1075 00b6 7B68     		ldr	r3, [r7, #4]
 1076 00b8 5A64     		str	r2, [r3, #68]
 1077 00ba 02E0     		b	.L54
 1078              	.L53:
 783:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 784:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 785:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 786:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
 787:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 1079              		.loc 1 787 7
 1080 00bc 7B68     		ldr	r3, [r7, #4]
 1081 00be 0022     		movs	r2, #0
 1082 00c0 5A64     		str	r2, [r3, #68]
 1083              	.L54:
 788:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 789:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 790:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
 791:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 792:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 793:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 1084              		.loc 1 793 5
 1085 00c2 7B68     		ldr	r3, [r7, #4]
 1086 00c4 0022     		movs	r2, #0
 1087 00c6 83F83C20 		strb	r2, [r3, #60]
 794:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 795:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
 796:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
 797:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
 798:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 1088              		.loc 1 798 19
ARM GAS  /tmp/ccdUPIhe.s 			page 34


 1089 00ca 234B     		ldr	r3, .L56+8
 1090 00cc FB60     		str	r3, [r7, #12]
 799:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 800:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
 801:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 802:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 1091              		.loc 1 802 5
 1092 00ce 7B68     		ldr	r3, [r7, #4]
 1093 00d0 1B68     		ldr	r3, [r3]
 1094 00d2 6FF02202 		mvn	r2, #34
 1095 00d6 1A60     		str	r2, [r3]
 803:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 804:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable end of conversion interrupt for regular group */
 805:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
 1096              		.loc 1 805 5
 1097 00d8 7B68     		ldr	r3, [r7, #4]
 1098 00da 1B68     		ldr	r3, [r3]
 1099 00dc 5B68     		ldr	r3, [r3, #4]
 1100 00de 7A68     		ldr	r2, [r7, #4]
 1101 00e0 1268     		ldr	r2, [r2]
 1102 00e2 43F08063 		orr	r3, r3, #67108864
 1103 00e6 43F02003 		orr	r3, r3, #32
 1104 00ea 5360     		str	r3, [r2, #4]
 806:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 807:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
 808:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 1105              		.loc 1 808 8
 1106 00ec FB68     		ldr	r3, [r7, #12]
 1107 00ee 5B68     		ldr	r3, [r3, #4]
 1108 00f0 03F01F03 		and	r3, r3, #31
 1109              		.loc 1 808 7
 1110 00f4 002B     		cmp	r3, #0
 1111 00f6 0FD1     		bne	.L55
 809:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 810:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if no external trigger present enable software conversion of regular channels */
 811:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 1112              		.loc 1 811 15
 1113 00f8 7B68     		ldr	r3, [r7, #4]
 1114 00fa 1B68     		ldr	r3, [r3]
 1115              		.loc 1 811 25
 1116 00fc 9B68     		ldr	r3, [r3, #8]
 1117              		.loc 1 811 31
 1118 00fe 03F04053 		and	r3, r3, #805306368
 1119              		.loc 1 811 9
 1120 0102 002B     		cmp	r3, #0
 1121 0104 1CD1     		bne	.L51
 812:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 813:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 814:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1122              		.loc 1 814 13
 1123 0106 7B68     		ldr	r3, [r7, #4]
 1124 0108 1B68     		ldr	r3, [r3]
 1125              		.loc 1 814 29
 1126 010a 9A68     		ldr	r2, [r3, #8]
 1127              		.loc 1 814 13
 1128 010c 7B68     		ldr	r3, [r7, #4]
 1129 010e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccdUPIhe.s 			page 35


 1130              		.loc 1 814 29
 1131 0110 42F08042 		orr	r2, r2, #1073741824
 1132 0114 9A60     		str	r2, [r3, #8]
 1133 0116 13E0     		b	.L51
 1134              	.L55:
 815:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 816:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 817:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 818:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 819:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
 820:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 1135              		.loc 1 820 15
 1136 0118 7B68     		ldr	r3, [r7, #4]
 1137 011a 1B68     		ldr	r3, [r3]
 1138              		.loc 1 820 9
 1139 011c 0F4A     		ldr	r2, .L56+12
 1140 011e 9342     		cmp	r3, r2
 1141 0120 0ED1     		bne	.L51
 1142              		.loc 1 820 44 discriminator 1
 1143 0122 7B68     		ldr	r3, [r7, #4]
 1144 0124 1B68     		ldr	r3, [r3]
 1145              		.loc 1 820 54 discriminator 1
 1146 0126 9B68     		ldr	r3, [r3, #8]
 1147              		.loc 1 820 60 discriminator 1
 1148 0128 03F04053 		and	r3, r3, #805306368
 1149              		.loc 1 820 35 discriminator 1
 1150 012c 002B     		cmp	r3, #0
 1151 012e 07D1     		bne	.L51
 821:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 822:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 823:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1152              		.loc 1 823 15
 1153 0130 7B68     		ldr	r3, [r7, #4]
 1154 0132 1B68     		ldr	r3, [r3]
 1155              		.loc 1 823 31
 1156 0134 9A68     		ldr	r2, [r3, #8]
 1157              		.loc 1 823 15
 1158 0136 7B68     		ldr	r3, [r7, #4]
 1159 0138 1B68     		ldr	r3, [r3]
 1160              		.loc 1 823 31
 1161 013a 42F08042 		orr	r2, r2, #1073741824
 1162 013e 9A60     		str	r2, [r3, #8]
 1163              	.L51:
 824:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 825:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 826:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 827:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 828:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 829:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1164              		.loc 1 829 10
 1165 0140 0023     		movs	r3, #0
 1166              	.L47:
 830:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1167              		.loc 1 830 1
 1168 0142 1846     		mov	r0, r3
 1169 0144 1437     		adds	r7, r7, #20
 1170              	.LCFI47:
ARM GAS  /tmp/ccdUPIhe.s 			page 36


 1171              		.cfi_def_cfa_offset 4
 1172 0146 BD46     		mov	sp, r7
 1173              	.LCFI48:
 1174              		.cfi_def_cfa_register 13
 1175              		@ sp needed
 1176 0148 5DF8047B 		ldr	r7, [sp], #4
 1177              	.LCFI49:
 1178              		.cfi_restore 7
 1179              		.cfi_def_cfa_offset 0
 1180 014c 7047     		bx	lr
 1181              	.L57:
 1182 014e 00BF     		.align	2
 1183              	.L56:
 1184 0150 00000000 		.word	SystemCoreClock
 1185 0154 83DE1B43 		.word	1125899907
 1186 0158 00230140 		.word	1073816320
 1187 015c 00200140 		.word	1073815552
 1188              		.cfi_endproc
 1189              	.LFE134:
 1191              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 1192              		.align	1
 1193              		.global	HAL_ADC_Stop_IT
 1194              		.syntax unified
 1195              		.thumb
 1196              		.thumb_func
 1197              		.fpu fpv4-sp-d16
 1199              	HAL_ADC_Stop_IT:
 1200              	.LFB135:
 831:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 832:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 833:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables the interrupt and stop ADC conversion of regular channels.
 834:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * 
 835:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
 836:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 837:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 838:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 839:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
 840:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 841:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
 842:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1201              		.loc 1 842 1
 1202              		.cfi_startproc
 1203              		@ args = 0, pretend = 0, frame = 8
 1204              		@ frame_needed = 1, uses_anonymous_args = 0
 1205              		@ link register save eliminated.
 1206 0000 80B4     		push	{r7}
 1207              	.LCFI50:
 1208              		.cfi_def_cfa_offset 4
 1209              		.cfi_offset 7, -4
 1210 0002 83B0     		sub	sp, sp, #12
 1211              	.LCFI51:
 1212              		.cfi_def_cfa_offset 16
 1213 0004 00AF     		add	r7, sp, #0
 1214              	.LCFI52:
 1215              		.cfi_def_cfa_register 7
 1216 0006 7860     		str	r0, [r7, #4]
 843:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
ARM GAS  /tmp/ccdUPIhe.s 			page 37


 844:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 845:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 846:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 847:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1217              		.loc 1 847 3
 1218 0008 7B68     		ldr	r3, [r7, #4]
 1219 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1220 000e 012B     		cmp	r3, #1
 1221 0010 01D1     		bne	.L59
 1222              		.loc 1 847 3 is_stmt 0 discriminator 1
 1223 0012 0223     		movs	r3, #2
 1224 0014 2BE0     		b	.L60
 1225              	.L59:
 1226              		.loc 1 847 3 discriminator 2
 1227 0016 7B68     		ldr	r3, [r7, #4]
 1228 0018 0122     		movs	r2, #1
 1229 001a 83F83C20 		strb	r2, [r3, #60]
 848:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 849:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 850:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
 851:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 1230              		.loc 1 851 3 is_stmt 1 discriminator 2
 1231 001e 7B68     		ldr	r3, [r7, #4]
 1232 0020 1B68     		ldr	r3, [r3]
 1233 0022 9A68     		ldr	r2, [r3, #8]
 1234 0024 7B68     		ldr	r3, [r7, #4]
 1235 0026 1B68     		ldr	r3, [r3]
 1236 0028 22F00102 		bic	r2, r2, #1
 1237 002c 9A60     		str	r2, [r3, #8]
 852:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 853:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
 854:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 1238              		.loc 1 854 6 discriminator 2
 1239 002e 7B68     		ldr	r3, [r7, #4]
 1240 0030 1B68     		ldr	r3, [r3]
 1241 0032 9B68     		ldr	r3, [r3, #8]
 1242 0034 03F00103 		and	r3, r3, #1
 1243              		.loc 1 854 5 discriminator 2
 1244 0038 002B     		cmp	r3, #0
 1245 003a 13D1     		bne	.L61
 855:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 856:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   	/* Disable ADC end of conversion interrupt for regular group */
 857:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
 1246              		.loc 1 857 5
 1247 003c 7B68     		ldr	r3, [r7, #4]
 1248 003e 1B68     		ldr	r3, [r3]
 1249 0040 5B68     		ldr	r3, [r3, #4]
 1250 0042 7A68     		ldr	r2, [r7, #4]
 1251 0044 1268     		ldr	r2, [r2]
 1252 0046 23F08063 		bic	r3, r3, #67108864
 1253 004a 23F02003 		bic	r3, r3, #32
 1254 004e 5360     		str	r3, [r2, #4]
 858:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 859:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 860:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1255              		.loc 1 860 5
 1256 0050 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccdUPIhe.s 			page 38


 1257 0052 1B6C     		ldr	r3, [r3, #64]
 1258 0054 23F48853 		bic	r3, r3, #4352
 1259 0058 23F00103 		bic	r3, r3, #1
 1260 005c 43F00102 		orr	r2, r3, #1
 1261 0060 7B68     		ldr	r3, [r7, #4]
 1262 0062 1A64     		str	r2, [r3, #64]
 1263              	.L61:
 861:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 862:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 863:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 864:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 865:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 866:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 1264              		.loc 1 866 3
 1265 0064 7B68     		ldr	r3, [r7, #4]
 1266 0066 0022     		movs	r2, #0
 1267 0068 83F83C20 		strb	r2, [r3, #60]
 867:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 868:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 869:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1268              		.loc 1 869 10
 1269 006c 0023     		movs	r3, #0
 1270              	.L60:
 870:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1271              		.loc 1 870 1
 1272 006e 1846     		mov	r0, r3
 1273 0070 0C37     		adds	r7, r7, #12
 1274              	.LCFI53:
 1275              		.cfi_def_cfa_offset 4
 1276 0072 BD46     		mov	sp, r7
 1277              	.LCFI54:
 1278              		.cfi_def_cfa_register 13
 1279              		@ sp needed
 1280 0074 5DF8047B 		ldr	r7, [sp], #4
 1281              	.LCFI55:
 1282              		.cfi_restore 7
 1283              		.cfi_def_cfa_offset 0
 1284 0078 7047     		bx	lr
 1285              		.cfi_endproc
 1286              	.LFE135:
 1288              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1289              		.align	1
 1290              		.global	HAL_ADC_IRQHandler
 1291              		.syntax unified
 1292              		.thumb
 1293              		.thumb_func
 1294              		.fpu fpv4-sp-d16
 1296              	HAL_ADC_IRQHandler:
 1297              	.LFB136:
 871:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 872:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 873:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Handles ADC interrupt request  
 874:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 875:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 876:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 877:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 878:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
ARM GAS  /tmp/ccdUPIhe.s 			page 39


 879:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1298              		.loc 1 879 1
 1299              		.cfi_startproc
 1300              		@ args = 0, pretend = 0, frame = 16
 1301              		@ frame_needed = 1, uses_anonymous_args = 0
 1302 0000 80B5     		push	{r7, lr}
 1303              	.LCFI56:
 1304              		.cfi_def_cfa_offset 8
 1305              		.cfi_offset 7, -8
 1306              		.cfi_offset 14, -4
 1307 0002 84B0     		sub	sp, sp, #16
 1308              	.LCFI57:
 1309              		.cfi_def_cfa_offset 24
 1310 0004 00AF     		add	r7, sp, #0
 1311              	.LCFI58:
 1312              		.cfi_def_cfa_register 7
 1313 0006 7860     		str	r0, [r7, #4]
 880:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp1 = 0U, tmp2 = 0U;
 1314              		.loc 1 880 12
 1315 0008 0023     		movs	r3, #0
 1316 000a FB60     		str	r3, [r7, #12]
 1317              		.loc 1 880 23
 1318 000c 0023     		movs	r3, #0
 1319 000e BB60     		str	r3, [r7, #8]
 881:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 882:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 883:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 884:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
 885:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
 886:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 887:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC);
 1320              		.loc 1 887 10
 1321 0010 7B68     		ldr	r3, [r7, #4]
 1322 0012 1B68     		ldr	r3, [r3]
 1323 0014 1B68     		ldr	r3, [r3]
 1324 0016 03F00203 		and	r3, r3, #2
 1325 001a 022B     		cmp	r3, #2
 1326 001c 0CBF     		ite	eq
 1327 001e 0123     		moveq	r3, #1
 1328 0020 0023     		movne	r3, #0
 1329 0022 DBB2     		uxtb	r3, r3
 1330              		.loc 1 887 8
 1331 0024 FB60     		str	r3, [r7, #12]
 888:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC);
 1332              		.loc 1 888 10
 1333 0026 7B68     		ldr	r3, [r7, #4]
 1334 0028 1B68     		ldr	r3, [r3]
 1335 002a 5B68     		ldr	r3, [r3, #4]
 1336 002c 03F02003 		and	r3, r3, #32
 1337 0030 202B     		cmp	r3, #32
 1338 0032 0CBF     		ite	eq
 1339 0034 0123     		moveq	r3, #1
 1340 0036 0023     		movne	r3, #0
 1341 0038 DBB2     		uxtb	r3, r3
 1342              		.loc 1 888 8
 1343 003a BB60     		str	r3, [r7, #8]
 889:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag for regular channels */
ARM GAS  /tmp/ccdUPIhe.s 			page 40


 890:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1344              		.loc 1 890 5
 1345 003c FB68     		ldr	r3, [r7, #12]
 1346 003e 002B     		cmp	r3, #0
 1347 0040 49D0     		beq	.L63
 1348              		.loc 1 890 11 discriminator 1
 1349 0042 BB68     		ldr	r3, [r7, #8]
 1350 0044 002B     		cmp	r3, #0
 1351 0046 46D0     		beq	.L63
 891:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 892:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
 893:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 1352              		.loc 1 893 9
 1353 0048 7B68     		ldr	r3, [r7, #4]
 1354 004a 1B6C     		ldr	r3, [r3, #64]
 1355 004c 03F01003 		and	r3, r3, #16
 1356              		.loc 1 893 8
 1357 0050 002B     		cmp	r3, #0
 1358 0052 05D1     		bne	.L64
 894:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 895:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
 896:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
 1359              		.loc 1 896 7
 1360 0054 7B68     		ldr	r3, [r7, #4]
 1361 0056 1B6C     		ldr	r3, [r3, #64]
 1362 0058 43F40072 		orr	r2, r3, #512
 1363 005c 7B68     		ldr	r3, [r7, #4]
 1364 005e 1A64     		str	r2, [r3, #64]
 1365              	.L64:
 897:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 898:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 899:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
 900:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
 901:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, there is no independent flag of end of sequence.   */
 902:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
 903:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
 904:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       of end of sequence.                                            */
 905:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 1366              		.loc 1 905 8
 1367 0060 7B68     		ldr	r3, [r7, #4]
 1368 0062 1B68     		ldr	r3, [r3]
 1369 0064 9B68     		ldr	r3, [r3, #8]
 1370 0066 03F04053 		and	r3, r3, #805306368
 1371              		.loc 1 905 7
 1372 006a 002B     		cmp	r3, #0
 1373 006c 2BD1     		bne	.L65
 906:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1374              		.loc 1 906 19 discriminator 1
 1375 006e 7B68     		ldr	r3, [r7, #4]
 1376 0070 9B69     		ldr	r3, [r3, #24]
 905:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1377              		.loc 1 905 62 discriminator 1
 1378 0072 002B     		cmp	r3, #0
 1379 0074 27D1     		bne	.L65
 907:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1380              		.loc 1 907 9
 1381 0076 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccdUPIhe.s 			page 41


 1382 0078 1B68     		ldr	r3, [r3]
 1383 007a DB6A     		ldr	r3, [r3, #44]
 1384 007c 03F47003 		and	r3, r3, #15728640
 906:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1385              		.loc 1 906 62
 1386 0080 002B     		cmp	r3, #0
 1387 0082 06D0     		beq	.L66
 908:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 1388              		.loc 1 908 9
 1389 0084 7B68     		ldr	r3, [r7, #4]
 1390 0086 1B68     		ldr	r3, [r3]
 1391 0088 9B68     		ldr	r3, [r3, #8]
 1392 008a 03F48063 		and	r3, r3, #1024
 907:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1393              		.loc 1 907 58
 1394 008e 002B     		cmp	r3, #0
 1395 0090 19D1     		bne	.L65
 1396              	.L66:
 909:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 910:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
 911:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
 912:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
 913:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
 914:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 1397              		.loc 1 914 7
 1398 0092 7B68     		ldr	r3, [r7, #4]
 1399 0094 1B68     		ldr	r3, [r3]
 1400 0096 5A68     		ldr	r2, [r3, #4]
 1401 0098 7B68     		ldr	r3, [r7, #4]
 1402 009a 1B68     		ldr	r3, [r3]
 1403 009c 22F02002 		bic	r2, r2, #32
 1404 00a0 5A60     		str	r2, [r3, #4]
 915:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 916:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
 917:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 1405              		.loc 1 917 7
 1406 00a2 7B68     		ldr	r3, [r7, #4]
 1407 00a4 1B6C     		ldr	r3, [r3, #64]
 1408 00a6 23F48072 		bic	r2, r3, #256
 1409 00aa 7B68     		ldr	r3, [r7, #4]
 1410 00ac 1A64     		str	r2, [r3, #64]
 918:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 919:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1411              		.loc 1 919 11
 1412 00ae 7B68     		ldr	r3, [r7, #4]
 1413 00b0 1B6C     		ldr	r3, [r3, #64]
 1414 00b2 03F48053 		and	r3, r3, #4096
 1415              		.loc 1 919 10
 1416 00b6 002B     		cmp	r3, #0
 1417 00b8 05D1     		bne	.L65
 920:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 921:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 1418              		.loc 1 921 9
 1419 00ba 7B68     		ldr	r3, [r7, #4]
 1420 00bc 1B6C     		ldr	r3, [r3, #64]
 1421 00be 43F00102 		orr	r2, r3, #1
 1422 00c2 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccdUPIhe.s 			page 42


 1423 00c4 1A64     		str	r2, [r3, #64]
 1424              	.L65:
 922:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 923:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 924:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 925:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */ 
 926:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 1425              		.loc 1 926 5
 1426 00c6 7868     		ldr	r0, [r7, #4]
 1427 00c8 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 927:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 928:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag */
 929:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 1428              		.loc 1 929 5
 1429 00cc 7B68     		ldr	r3, [r7, #4]
 1430 00ce 1B68     		ldr	r3, [r3]
 1431 00d0 6FF01202 		mvn	r2, #18
 1432 00d4 1A60     		str	r2, [r3]
 1433              	.L63:
 930:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 931:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 932:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOC);
 1434              		.loc 1 932 10
 1435 00d6 7B68     		ldr	r3, [r7, #4]
 1436 00d8 1B68     		ldr	r3, [r3]
 1437 00da 1B68     		ldr	r3, [r3]
 1438 00dc 03F00403 		and	r3, r3, #4
 1439 00e0 042B     		cmp	r3, #4
 1440 00e2 0CBF     		ite	eq
 1441 00e4 0123     		moveq	r3, #1
 1442 00e6 0023     		movne	r3, #0
 1443 00e8 DBB2     		uxtb	r3, r3
 1444              		.loc 1 932 8
 1445 00ea FB60     		str	r3, [r7, #12]
 933:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC);                               
 1446              		.loc 1 933 10
 1447 00ec 7B68     		ldr	r3, [r7, #4]
 1448 00ee 1B68     		ldr	r3, [r3]
 1449 00f0 5B68     		ldr	r3, [r3, #4]
 1450 00f2 03F08003 		and	r3, r3, #128
 1451 00f6 802B     		cmp	r3, #128
 1452 00f8 0CBF     		ite	eq
 1453 00fa 0123     		moveq	r3, #1
 1454 00fc 0023     		movne	r3, #0
 1455 00fe DBB2     		uxtb	r3, r3
 1456              		.loc 1 933 8
 1457 0100 BB60     		str	r3, [r7, #8]
 934:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag for injected channels */
 935:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1458              		.loc 1 935 5
 1459 0102 FB68     		ldr	r3, [r7, #12]
 1460 0104 002B     		cmp	r3, #0
 1461 0106 57D0     		beq	.L67
 1462              		.loc 1 935 11 discriminator 1
 1463 0108 BB68     		ldr	r3, [r7, #8]
 1464 010a 002B     		cmp	r3, #0
 1465 010c 54D0     		beq	.L67
ARM GAS  /tmp/ccdUPIhe.s 			page 43


 936:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 937:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
 938:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 1466              		.loc 1 938 9
 1467 010e 7B68     		ldr	r3, [r7, #4]
 1468 0110 1B6C     		ldr	r3, [r3, #64]
 1469 0112 03F01003 		and	r3, r3, #16
 1470              		.loc 1 938 8
 1471 0116 002B     		cmp	r3, #0
 1472 0118 05D1     		bne	.L68
 939:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 940:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
 941:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 1473              		.loc 1 941 7
 1474 011a 7B68     		ldr	r3, [r7, #4]
 1475 011c 1B6C     		ldr	r3, [r3, #64]
 1476 011e 43F40052 		orr	r2, r3, #8192
 1477 0122 7B68     		ldr	r3, [r7, #4]
 1478 0124 1A64     		str	r2, [r3, #64]
 1479              	.L68:
 942:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 943:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 944:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group injected  */
 945:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, scan sequence on going or by automatic injected */
 946:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* conversion from group regular (same conditions as group regular      */
 947:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption disabling above).                                       */
 948:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 1480              		.loc 1 948 8
 1481 0126 7B68     		ldr	r3, [r7, #4]
 1482 0128 1B68     		ldr	r3, [r3]
 1483 012a 9B68     		ldr	r3, [r3, #8]
 1484 012c 03F44013 		and	r3, r3, #3145728
 1485              		.loc 1 948 7
 1486 0130 002B     		cmp	r3, #0
 1487 0132 39D1     		bne	.L69
 949:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1488              		.loc 1 949 9 discriminator 1
 1489 0134 7B68     		ldr	r3, [r7, #4]
 1490 0136 1B68     		ldr	r3, [r3]
 1491 0138 9B6B     		ldr	r3, [r3, #56]
 1492 013a 03F44013 		and	r3, r3, #3145728
 948:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1493              		.loc 1 948 64 discriminator 1
 1494 013e 002B     		cmp	r3, #0
 1495 0140 06D0     		beq	.L70
 950:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 1496              		.loc 1 950 9
 1497 0142 7B68     		ldr	r3, [r7, #4]
 1498 0144 1B68     		ldr	r3, [r3]
 1499 0146 9B68     		ldr	r3, [r3, #8]
 1500 0148 03F48063 		and	r3, r3, #1024
 949:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1501              		.loc 1 949 60
 1502 014c 002B     		cmp	r3, #0
 1503 014e 2BD1     		bne	.L69
 1504              	.L70:
 951:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
ARM GAS  /tmp/ccdUPIhe.s 			page 44


 1505              		.loc 1 951 9
 1506 0150 7B68     		ldr	r3, [r7, #4]
 1507 0152 1B68     		ldr	r3, [r3]
 1508 0154 5B68     		ldr	r3, [r3, #4]
 1509 0156 03F48063 		and	r3, r3, #1024
 950:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 1510              		.loc 1 950 64
 1511 015a 002B     		cmp	r3, #0
 1512 015c 24D1     		bne	.L69
 952:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 1513              		.loc 1 952 10
 1514 015e 7B68     		ldr	r3, [r7, #4]
 1515 0160 1B68     		ldr	r3, [r3]
 1516 0162 9B68     		ldr	r3, [r3, #8]
 1517 0164 03F04053 		and	r3, r3, #805306368
 951:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 1518              		.loc 1 951 60
 1519 0168 002B     		cmp	r3, #0
 1520 016a 1DD1     		bne	.L69
 953:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
 1521              		.loc 1 953 20
 1522 016c 7B68     		ldr	r3, [r7, #4]
 1523 016e 9B69     		ldr	r3, [r3, #24]
 952:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 1524              		.loc 1 952 52
 1525 0170 002B     		cmp	r3, #0
 1526 0172 19D1     		bne	.L69
 954:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 955:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group injected */
 956:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 1527              		.loc 1 956 7
 1528 0174 7B68     		ldr	r3, [r7, #4]
 1529 0176 1B68     		ldr	r3, [r3]
 1530 0178 5A68     		ldr	r2, [r3, #4]
 1531 017a 7B68     		ldr	r3, [r7, #4]
 1532 017c 1B68     		ldr	r3, [r3]
 1533 017e 22F08002 		bic	r2, r2, #128
 1534 0182 5A60     		str	r2, [r3, #4]
 957:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 958:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
 959:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
 1535              		.loc 1 959 7
 1536 0184 7B68     		ldr	r3, [r7, #4]
 1537 0186 1B6C     		ldr	r3, [r3, #64]
 1538 0188 23F48052 		bic	r2, r3, #4096
 1539 018c 7B68     		ldr	r3, [r7, #4]
 1540 018e 1A64     		str	r2, [r3, #64]
 960:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 961:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 1541              		.loc 1 961 11
 1542 0190 7B68     		ldr	r3, [r7, #4]
 1543 0192 1B6C     		ldr	r3, [r3, #64]
 1544 0194 03F48073 		and	r3, r3, #256
 1545              		.loc 1 961 10
 1546 0198 002B     		cmp	r3, #0
 1547 019a 05D1     		bne	.L69
 962:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       { 
ARM GAS  /tmp/ccdUPIhe.s 			page 45


 963:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 1548              		.loc 1 963 9
 1549 019c 7B68     		ldr	r3, [r7, #4]
 1550 019e 1B6C     		ldr	r3, [r3, #64]
 1551 01a0 43F00102 		orr	r2, r3, #1
 1552 01a4 7B68     		ldr	r3, [r7, #4]
 1553 01a6 1A64     		str	r2, [r3, #64]
 1554              	.L69:
 964:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 965:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 966:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 967:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */ 
 968:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
 1555              		.loc 1 968 5
 1556 01a8 7868     		ldr	r0, [r7, #4]
 1557 01aa FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 969:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 970:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear injected group conversion flag */
 971:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
 1558              		.loc 1 971 5
 1559 01ae 7B68     		ldr	r3, [r7, #4]
 1560 01b0 1B68     		ldr	r3, [r3]
 1561 01b2 6FF00C02 		mvn	r2, #12
 1562 01b6 1A60     		str	r2, [r3]
 1563              	.L67:
 972:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 973:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 974:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD);
 1564              		.loc 1 974 10
 1565 01b8 7B68     		ldr	r3, [r7, #4]
 1566 01ba 1B68     		ldr	r3, [r3]
 1567 01bc 1B68     		ldr	r3, [r3]
 1568 01be 03F00103 		and	r3, r3, #1
 1569 01c2 012B     		cmp	r3, #1
 1570 01c4 0CBF     		ite	eq
 1571 01c6 0123     		moveq	r3, #1
 1572 01c8 0023     		movne	r3, #0
 1573 01ca DBB2     		uxtb	r3, r3
 1574              		.loc 1 974 8
 1575 01cc FB60     		str	r3, [r7, #12]
 975:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD);                          
 1576              		.loc 1 975 10
 1577 01ce 7B68     		ldr	r3, [r7, #4]
 1578 01d0 1B68     		ldr	r3, [r3]
 1579 01d2 5B68     		ldr	r3, [r3, #4]
 1580 01d4 03F04003 		and	r3, r3, #64
 1581 01d8 402B     		cmp	r3, #64
 1582 01da 0CBF     		ite	eq
 1583 01dc 0123     		moveq	r3, #1
 1584 01de 0023     		movne	r3, #0
 1585 01e0 DBB2     		uxtb	r3, r3
 1586              		.loc 1 975 8
 1587 01e2 BB60     		str	r3, [r7, #8]
 976:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check Analog watchdog flag */
 977:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1588              		.loc 1 977 5
 1589 01e4 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccdUPIhe.s 			page 46


 1590 01e6 002B     		cmp	r3, #0
 1591 01e8 17D0     		beq	.L71
 1592              		.loc 1 977 11 discriminator 1
 1593 01ea BB68     		ldr	r3, [r7, #8]
 1594 01ec 002B     		cmp	r3, #0
 1595 01ee 14D0     		beq	.L71
 978:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 979:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
 1596              		.loc 1 979 8
 1597 01f0 7B68     		ldr	r3, [r7, #4]
 1598 01f2 1B68     		ldr	r3, [r3]
 1599 01f4 1B68     		ldr	r3, [r3]
 1600 01f6 03F00103 		and	r3, r3, #1
 1601              		.loc 1 979 7
 1602 01fa 012B     		cmp	r3, #1
 1603 01fc 0DD1     		bne	.L71
 980:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 981:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
 982:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 1604              		.loc 1 982 7
 1605 01fe 7B68     		ldr	r3, [r7, #4]
 1606 0200 1B6C     		ldr	r3, [r3, #64]
 1607 0202 43F48032 		orr	r2, r3, #65536
 1608 0206 7B68     		ldr	r3, [r7, #4]
 1609 0208 1A64     		str	r2, [r3, #64]
 983:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 984:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Level out of window callback */ 
 985:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADC_LevelOutOfWindowCallback(hadc);
 1610              		.loc 1 985 7
 1611 020a 7868     		ldr	r0, [r7, #4]
 1612 020c FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 986:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 987:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Clear the ADC analog watchdog flag */
 988:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 1613              		.loc 1 988 7
 1614 0210 7B68     		ldr	r3, [r7, #4]
 1615 0212 1B68     		ldr	r3, [r3]
 1616 0214 6FF00102 		mvn	r2, #1
 1617 0218 1A60     		str	r2, [r3]
 1618              	.L71:
 989:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 990:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 991:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 992:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_OVR);
 1619              		.loc 1 992 10
 1620 021a 7B68     		ldr	r3, [r7, #4]
 1621 021c 1B68     		ldr	r3, [r3]
 1622 021e 1B68     		ldr	r3, [r3]
 1623 0220 03F02003 		and	r3, r3, #32
 1624 0224 202B     		cmp	r3, #32
 1625 0226 0CBF     		ite	eq
 1626 0228 0123     		moveq	r3, #1
 1627 022a 0023     		movne	r3, #0
 1628 022c DBB2     		uxtb	r3, r3
 1629              		.loc 1 992 8
 1630 022e FB60     		str	r3, [r7, #12]
 993:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_OVR);
ARM GAS  /tmp/ccdUPIhe.s 			page 47


 1631              		.loc 1 993 10
 1632 0230 7B68     		ldr	r3, [r7, #4]
 1633 0232 1B68     		ldr	r3, [r3]
 1634 0234 5B68     		ldr	r3, [r3, #4]
 1635 0236 03F08063 		and	r3, r3, #67108864
 1636 023a B3F1806F 		cmp	r3, #67108864
 1637 023e 0CBF     		ite	eq
 1638 0240 0123     		moveq	r3, #1
 1639 0242 0023     		movne	r3, #0
 1640 0244 DBB2     		uxtb	r3, r3
 1641              		.loc 1 993 8
 1642 0246 BB60     		str	r3, [r7, #8]
 994:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check Overrun flag */
 995:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1643              		.loc 1 995 5
 1644 0248 FB68     		ldr	r3, [r7, #12]
 1645 024a 002B     		cmp	r3, #0
 1646 024c 15D0     		beq	.L73
 1647              		.loc 1 995 11 discriminator 1
 1648 024e BB68     		ldr	r3, [r7, #8]
 1649 0250 002B     		cmp	r3, #0
 1650 0252 12D0     		beq	.L73
 996:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 997:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, ADC overrun can be set through other parameters    */
 998:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       refer to description of parameter "EOCSelection" for more      */
 999:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       details.                                                       */
1000:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1001:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to overrun */
1002:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 1651              		.loc 1 1002 5
 1652 0254 7B68     		ldr	r3, [r7, #4]
 1653 0256 5B6C     		ldr	r3, [r3, #68]
 1654 0258 43F00202 		orr	r2, r3, #2
 1655 025c 7B68     		ldr	r3, [r7, #4]
 1656 025e 5A64     		str	r2, [r3, #68]
1003:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1004:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC overrun flag */
1005:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 1657              		.loc 1 1005 5
 1658 0260 7B68     		ldr	r3, [r7, #4]
 1659 0262 1B68     		ldr	r3, [r3]
 1660 0264 6FF02002 		mvn	r2, #32
 1661 0268 1A60     		str	r2, [r3]
1006:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1007:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Error callback */ 
1008:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ErrorCallback(hadc);
 1662              		.loc 1 1008 5
 1663 026a 7868     		ldr	r0, [r7, #4]
 1664 026c FFF7FEFF 		bl	HAL_ADC_ErrorCallback
1009:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1010:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the Overrun flag */
1011:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 1665              		.loc 1 1011 5
 1666 0270 7B68     		ldr	r3, [r7, #4]
 1667 0272 1B68     		ldr	r3, [r3]
 1668 0274 6FF02002 		mvn	r2, #32
 1669 0278 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccdUPIhe.s 			page 48


 1670              	.L73:
1012:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1013:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1671              		.loc 1 1013 1
 1672 027a 00BF     		nop
 1673 027c 1037     		adds	r7, r7, #16
 1674              	.LCFI59:
 1675              		.cfi_def_cfa_offset 8
 1676 027e BD46     		mov	sp, r7
 1677              	.LCFI60:
 1678              		.cfi_def_cfa_register 13
 1679              		@ sp needed
 1680 0280 80BD     		pop	{r7, pc}
 1681              		.cfi_endproc
 1682              	.LFE136:
 1684              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 1685              		.align	1
 1686              		.global	HAL_ADC_Start_DMA
 1687              		.syntax unified
 1688              		.thumb
 1689              		.thumb_func
 1690              		.fpu fpv4-sp-d16
 1692              	HAL_ADC_Start_DMA:
 1693              	.LFB137:
1014:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1015:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1016:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables ADC DMA request after last transfer (Single-ADC mode) and enables ADC periphera
1017:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1018:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1019:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  pData The destination Buffer address.
1020:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Length The length of data to be transferred from ADC peripheral to memory.
1021:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1022:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1023:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
1024:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1694              		.loc 1 1024 1
 1695              		.cfi_startproc
 1696              		@ args = 0, pretend = 0, frame = 24
 1697              		@ frame_needed = 1, uses_anonymous_args = 0
 1698 0000 80B5     		push	{r7, lr}
 1699              	.LCFI61:
 1700              		.cfi_def_cfa_offset 8
 1701              		.cfi_offset 7, -8
 1702              		.cfi_offset 14, -4
 1703 0002 86B0     		sub	sp, sp, #24
 1704              	.LCFI62:
 1705              		.cfi_def_cfa_offset 32
 1706 0004 00AF     		add	r7, sp, #0
 1707              	.LCFI63:
 1708              		.cfi_def_cfa_register 7
 1709 0006 F860     		str	r0, [r7, #12]
 1710 0008 B960     		str	r1, [r7, #8]
 1711 000a 7A60     		str	r2, [r7, #4]
1025:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 1712              		.loc 1 1025 17
 1713 000c 0023     		movs	r3, #0
 1714 000e 3B61     		str	r3, [r7, #16]
ARM GAS  /tmp/ccdUPIhe.s 			page 49


1026:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1027:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1028:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1029:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1030:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
1031:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1032:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1033:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1715              		.loc 1 1033 3
 1716 0010 FB68     		ldr	r3, [r7, #12]
 1717 0012 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1718 0016 012B     		cmp	r3, #1
 1719 0018 01D1     		bne	.L75
 1720              		.loc 1 1033 3 is_stmt 0 discriminator 1
 1721 001a 0223     		movs	r3, #2
 1722 001c B0E0     		b	.L76
 1723              	.L75:
 1724              		.loc 1 1033 3 discriminator 2
 1725 001e FB68     		ldr	r3, [r7, #12]
 1726 0020 0122     		movs	r2, #1
 1727 0022 83F83C20 		strb	r2, [r3, #60]
1034:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1035:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
1036:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
1037:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
1038:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 1728              		.loc 1 1038 11 is_stmt 1 discriminator 2
 1729 0026 FB68     		ldr	r3, [r7, #12]
 1730 0028 1B68     		ldr	r3, [r3]
 1731              		.loc 1 1038 21 discriminator 2
 1732 002a 9B68     		ldr	r3, [r3, #8]
 1733              		.loc 1 1038 27 discriminator 2
 1734 002c 03F00103 		and	r3, r3, #1
 1735              		.loc 1 1038 5 discriminator 2
 1736 0030 012B     		cmp	r3, #1
 1737 0032 18D0     		beq	.L77
1039:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
1040:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
1041:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 1738              		.loc 1 1041 5
 1739 0034 FB68     		ldr	r3, [r7, #12]
 1740 0036 1B68     		ldr	r3, [r3]
 1741 0038 9A68     		ldr	r2, [r3, #8]
 1742 003a FB68     		ldr	r3, [r7, #12]
 1743 003c 1B68     		ldr	r3, [r3]
 1744 003e 42F00102 		orr	r2, r2, #1
 1745 0042 9A60     		str	r2, [r3, #8]
1042:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1043:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
1044:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
1045:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 1746              		.loc 1 1045 53
 1747 0044 504B     		ldr	r3, .L85
 1748 0046 1B68     		ldr	r3, [r3]
 1749 0048 504A     		ldr	r2, .L85+4
 1750 004a A2FB0323 		umull	r2, r3, r2, r3
 1751 004e 9A0C     		lsrs	r2, r3, #18
ARM GAS  /tmp/ccdUPIhe.s 			page 50


 1752              		.loc 1 1045 34
 1753 0050 1346     		mov	r3, r2
 1754 0052 5B00     		lsls	r3, r3, #1
 1755 0054 1344     		add	r3, r3, r2
 1756              		.loc 1 1045 13
 1757 0056 3B61     		str	r3, [r7, #16]
1046:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1758              		.loc 1 1046 10
 1759 0058 02E0     		b	.L78
 1760              	.L79:
1047:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1048:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 1761              		.loc 1 1048 14
 1762 005a 3B69     		ldr	r3, [r7, #16]
 1763 005c 013B     		subs	r3, r3, #1
 1764 005e 3B61     		str	r3, [r7, #16]
 1765              	.L78:
1046:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1766              		.loc 1 1046 19
 1767 0060 3B69     		ldr	r3, [r7, #16]
1046:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1768              		.loc 1 1046 10
 1769 0062 002B     		cmp	r3, #0
 1770 0064 F9D1     		bne	.L79
 1771              	.L77:
1049:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1050:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1051:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1052:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1053:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 1772              		.loc 1 1053 6
 1773 0066 FB68     		ldr	r3, [r7, #12]
 1774 0068 1B68     		ldr	r3, [r3]
 1775 006a 9B68     		ldr	r3, [r3, #8]
 1776 006c 03F00103 		and	r3, r3, #1
 1777              		.loc 1 1053 5
 1778 0070 002B     		cmp	r3, #0
 1779 0072 00F08480 		beq	.L80
1054:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1055:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
1056:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1057:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
1058:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1780              		.loc 1 1058 5
 1781 0076 FB68     		ldr	r3, [r7, #12]
 1782 0078 1B6C     		ldr	r3, [r3, #64]
 1783 007a 23F4E063 		bic	r3, r3, #1792
 1784 007e 23F00103 		bic	r3, r3, #1
 1785 0082 43F48072 		orr	r2, r3, #256
 1786 0086 FB68     		ldr	r3, [r7, #12]
 1787 0088 1A64     		str	r2, [r3, #64]
1059:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
1060:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1061:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1062:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
1063:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
1064:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
ARM GAS  /tmp/ccdUPIhe.s 			page 51


 1788              		.loc 1 1064 9
 1789 008a FB68     		ldr	r3, [r7, #12]
 1790 008c 1B68     		ldr	r3, [r3]
 1791 008e 5B68     		ldr	r3, [r3, #4]
 1792 0090 03F48063 		and	r3, r3, #1024
 1793              		.loc 1 1064 8
 1794 0094 002B     		cmp	r3, #0
 1795 0096 07D0     		beq	.L81
1065:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1066:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 1796              		.loc 1 1066 7
 1797 0098 FB68     		ldr	r3, [r7, #12]
 1798 009a 1B6C     		ldr	r3, [r3, #64]
 1799 009c 23F44053 		bic	r3, r3, #12288
 1800 00a0 43F48052 		orr	r2, r3, #4096
 1801 00a4 FB68     		ldr	r3, [r7, #12]
 1802 00a6 1A64     		str	r2, [r3, #64]
 1803              	.L81:
1067:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1068:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1069:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1070:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1804              		.loc 1 1070 9
 1805 00a8 FB68     		ldr	r3, [r7, #12]
 1806 00aa 1B6C     		ldr	r3, [r3, #64]
 1807 00ac 03F48053 		and	r3, r3, #4096
 1808              		.loc 1 1070 8
 1809 00b0 002B     		cmp	r3, #0
 1810 00b2 06D0     		beq	.L82
1071:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1072:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1073:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 1811              		.loc 1 1073 7
 1812 00b4 FB68     		ldr	r3, [r7, #12]
 1813 00b6 5B6C     		ldr	r3, [r3, #68]
 1814 00b8 23F00602 		bic	r2, r3, #6
 1815 00bc FB68     		ldr	r3, [r7, #12]
 1816 00be 5A64     		str	r2, [r3, #68]
 1817 00c0 02E0     		b	.L83
 1818              	.L82:
1074:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1075:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1076:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1077:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
1078:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 1819              		.loc 1 1078 7
 1820 00c2 FB68     		ldr	r3, [r7, #12]
 1821 00c4 0022     		movs	r2, #0
 1822 00c6 5A64     		str	r2, [r3, #68]
 1823              	.L83:
1079:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1080:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1081:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
1082:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1083:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1084:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);   
 1824              		.loc 1 1084 5
ARM GAS  /tmp/ccdUPIhe.s 			page 52


 1825 00c8 FB68     		ldr	r3, [r7, #12]
 1826 00ca 0022     		movs	r2, #0
 1827 00cc 83F83C20 		strb	r2, [r3, #60]
1085:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1086:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
1087:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1088:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
1089:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 1828              		.loc 1 1089 19
 1829 00d0 2F4B     		ldr	r3, .L85+8
 1830 00d2 7B61     		str	r3, [r7, #20]
1090:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1091:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA transfer complete callback */
1092:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 1831              		.loc 1 1092 9
 1832 00d4 FB68     		ldr	r3, [r7, #12]
 1833 00d6 9B6B     		ldr	r3, [r3, #56]
 1834              		.loc 1 1092 40
 1835 00d8 2E4A     		ldr	r2, .L85+12
 1836 00da DA63     		str	r2, [r3, #60]
1093:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1094:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA half transfer complete callback */
1095:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 1837              		.loc 1 1095 9
 1838 00dc FB68     		ldr	r3, [r7, #12]
 1839 00de 9B6B     		ldr	r3, [r3, #56]
 1840              		.loc 1 1095 44
 1841 00e0 2D4A     		ldr	r2, .L85+16
 1842 00e2 1A64     		str	r2, [r3, #64]
1096:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1097:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA error callback */
1098:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 1843              		.loc 1 1098 9
 1844 00e4 FB68     		ldr	r3, [r7, #12]
 1845 00e6 9B6B     		ldr	r3, [r3, #56]
 1846              		.loc 1 1098 41
 1847 00e8 2C4A     		ldr	r2, .L85+20
 1848 00ea DA64     		str	r2, [r3, #76]
1099:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1100:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1101:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
1102:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* start (in case of SW start):                                           */
1103:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1104:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1105:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1106:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 1849              		.loc 1 1106 5
 1850 00ec FB68     		ldr	r3, [r7, #12]
 1851 00ee 1B68     		ldr	r3, [r3]
 1852 00f0 6FF02202 		mvn	r2, #34
 1853 00f4 1A60     		str	r2, [r3]
1107:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1108:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable ADC overrun interrupt */
1109:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 1854              		.loc 1 1109 5
 1855 00f6 FB68     		ldr	r3, [r7, #12]
 1856 00f8 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccdUPIhe.s 			page 53


 1857 00fa 5A68     		ldr	r2, [r3, #4]
 1858 00fc FB68     		ldr	r3, [r7, #12]
 1859 00fe 1B68     		ldr	r3, [r3]
 1860 0100 42F08062 		orr	r2, r2, #67108864
 1861 0104 5A60     		str	r2, [r3, #4]
1110:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1111:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable ADC DMA mode */
1112:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= ADC_CR2_DMA;
 1862              		.loc 1 1112 9
 1863 0106 FB68     		ldr	r3, [r7, #12]
 1864 0108 1B68     		ldr	r3, [r3]
 1865              		.loc 1 1112 25
 1866 010a 9A68     		ldr	r2, [r3, #8]
 1867              		.loc 1 1112 9
 1868 010c FB68     		ldr	r3, [r7, #12]
 1869 010e 1B68     		ldr	r3, [r3]
 1870              		.loc 1 1112 25
 1871 0110 42F48072 		orr	r2, r2, #256
 1872 0114 9A60     		str	r2, [r3, #8]
1113:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1114:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Start the DMA channel */
1115:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 1873              		.loc 1 1115 5
 1874 0116 FB68     		ldr	r3, [r7, #12]
 1875 0118 986B     		ldr	r0, [r3, #56]
 1876              		.loc 1 1115 55
 1877 011a FB68     		ldr	r3, [r7, #12]
 1878 011c 1B68     		ldr	r3, [r3]
 1879              		.loc 1 1115 50
 1880 011e 4C33     		adds	r3, r3, #76
 1881              		.loc 1 1115 5
 1882 0120 1946     		mov	r1, r3
 1883 0122 BA68     		ldr	r2, [r7, #8]
 1884 0124 7B68     		ldr	r3, [r7, #4]
 1885 0126 FFF7FEFF 		bl	HAL_DMA_Start_IT
1116:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1117:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
1118:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 1886              		.loc 1 1118 8
 1887 012a 7B69     		ldr	r3, [r7, #20]
 1888 012c 5B68     		ldr	r3, [r3, #4]
 1889 012e 03F01F03 		and	r3, r3, #31
 1890              		.loc 1 1118 7
 1891 0132 002B     		cmp	r3, #0
 1892 0134 0FD1     		bne	.L84
1119:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1120:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if no external trigger present enable software conversion of regular channels */
1121:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 1893              		.loc 1 1121 15
 1894 0136 FB68     		ldr	r3, [r7, #12]
 1895 0138 1B68     		ldr	r3, [r3]
 1896              		.loc 1 1121 25
 1897 013a 9B68     		ldr	r3, [r3, #8]
 1898              		.loc 1 1121 31
 1899 013c 03F04053 		and	r3, r3, #805306368
 1900              		.loc 1 1121 9
 1901 0140 002B     		cmp	r3, #0
ARM GAS  /tmp/ccdUPIhe.s 			page 54


 1902 0142 1CD1     		bne	.L80
1122:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1123:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1124:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1903              		.loc 1 1124 13
 1904 0144 FB68     		ldr	r3, [r7, #12]
 1905 0146 1B68     		ldr	r3, [r3]
 1906              		.loc 1 1124 29
 1907 0148 9A68     		ldr	r2, [r3, #8]
 1908              		.loc 1 1124 13
 1909 014a FB68     		ldr	r3, [r7, #12]
 1910 014c 1B68     		ldr	r3, [r3]
 1911              		.loc 1 1124 29
 1912 014e 42F08042 		orr	r2, r2, #1073741824
 1913 0152 9A60     		str	r2, [r3, #8]
 1914 0154 13E0     		b	.L80
 1915              	.L84:
1125:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1126:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1127:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1128:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1129:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
1130:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 1916              		.loc 1 1130 15
 1917 0156 FB68     		ldr	r3, [r7, #12]
 1918 0158 1B68     		ldr	r3, [r3]
 1919              		.loc 1 1130 9
 1920 015a 114A     		ldr	r2, .L85+24
 1921 015c 9342     		cmp	r3, r2
 1922 015e 0ED1     		bne	.L80
 1923              		.loc 1 1130 44 discriminator 1
 1924 0160 FB68     		ldr	r3, [r7, #12]
 1925 0162 1B68     		ldr	r3, [r3]
 1926              		.loc 1 1130 54 discriminator 1
 1927 0164 9B68     		ldr	r3, [r3, #8]
 1928              		.loc 1 1130 60 discriminator 1
 1929 0166 03F04053 		and	r3, r3, #805306368
 1930              		.loc 1 1130 35 discriminator 1
 1931 016a 002B     		cmp	r3, #0
 1932 016c 07D1     		bne	.L80
1131:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1132:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1133:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1933              		.loc 1 1133 15
 1934 016e FB68     		ldr	r3, [r7, #12]
 1935 0170 1B68     		ldr	r3, [r3]
 1936              		.loc 1 1133 31
 1937 0172 9A68     		ldr	r2, [r3, #8]
 1938              		.loc 1 1133 15
 1939 0174 FB68     		ldr	r3, [r7, #12]
 1940 0176 1B68     		ldr	r3, [r3]
 1941              		.loc 1 1133 31
 1942 0178 42F08042 		orr	r2, r2, #1073741824
 1943 017c 9A60     		str	r2, [r3, #8]
 1944              	.L80:
1134:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1135:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
ARM GAS  /tmp/ccdUPIhe.s 			page 55


1136:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1137:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1138:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1139:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1945              		.loc 1 1139 10
 1946 017e 0023     		movs	r3, #0
 1947              	.L76:
1140:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1948              		.loc 1 1140 1
 1949 0180 1846     		mov	r0, r3
 1950 0182 1837     		adds	r7, r7, #24
 1951              	.LCFI64:
 1952              		.cfi_def_cfa_offset 8
 1953 0184 BD46     		mov	sp, r7
 1954              	.LCFI65:
 1955              		.cfi_def_cfa_register 13
 1956              		@ sp needed
 1957 0186 80BD     		pop	{r7, pc}
 1958              	.L86:
 1959              		.align	2
 1960              	.L85:
 1961 0188 00000000 		.word	SystemCoreClock
 1962 018c 83DE1B43 		.word	1125899907
 1963 0190 00230140 		.word	1073816320
 1964 0194 00000000 		.word	ADC_DMAConvCplt
 1965 0198 00000000 		.word	ADC_DMAHalfConvCplt
 1966 019c 00000000 		.word	ADC_DMAError
 1967 01a0 00200140 		.word	1073815552
 1968              		.cfi_endproc
 1969              	.LFE137:
 1971              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 1972              		.align	1
 1973              		.global	HAL_ADC_Stop_DMA
 1974              		.syntax unified
 1975              		.thumb
 1976              		.thumb_func
 1977              		.fpu fpv4-sp-d16
 1979              	HAL_ADC_Stop_DMA:
 1980              	.LFB138:
1141:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1142:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1143:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables ADC DMA (Single-ADC mode) and disables ADC peripheral    
1144:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1145:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1146:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1147:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1148:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
1149:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1981              		.loc 1 1149 1
 1982              		.cfi_startproc
 1983              		@ args = 0, pretend = 0, frame = 16
 1984              		@ frame_needed = 1, uses_anonymous_args = 0
 1985 0000 80B5     		push	{r7, lr}
 1986              	.LCFI66:
 1987              		.cfi_def_cfa_offset 8
 1988              		.cfi_offset 7, -8
 1989              		.cfi_offset 14, -4
ARM GAS  /tmp/ccdUPIhe.s 			page 56


 1990 0002 84B0     		sub	sp, sp, #16
 1991              	.LCFI67:
 1992              		.cfi_def_cfa_offset 24
 1993 0004 00AF     		add	r7, sp, #0
 1994              	.LCFI68:
 1995              		.cfi_def_cfa_register 7
 1996 0006 7860     		str	r0, [r7, #4]
1150:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1997              		.loc 1 1150 21
 1998 0008 0023     		movs	r3, #0
 1999 000a FB73     		strb	r3, [r7, #15]
1151:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1152:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1153:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1154:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1155:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1156:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2000              		.loc 1 1156 3
 2001 000c 7B68     		ldr	r3, [r7, #4]
 2002 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2003 0012 012B     		cmp	r3, #1
 2004 0014 01D1     		bne	.L88
 2005              		.loc 1 1156 3 is_stmt 0 discriminator 1
 2006 0016 0223     		movs	r3, #2
 2007 0018 38E0     		b	.L89
 2008              	.L88:
 2009              		.loc 1 1156 3 discriminator 2
 2010 001a 7B68     		ldr	r3, [r7, #4]
 2011 001c 0122     		movs	r2, #1
 2012 001e 83F83C20 		strb	r2, [r3, #60]
1157:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1158:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1159:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
1160:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 2013              		.loc 1 1160 3 is_stmt 1 discriminator 2
 2014 0022 7B68     		ldr	r3, [r7, #4]
 2015 0024 1B68     		ldr	r3, [r3]
 2016 0026 9A68     		ldr	r2, [r3, #8]
 2017 0028 7B68     		ldr	r3, [r7, #4]
 2018 002a 1B68     		ldr	r3, [r3]
 2019 002c 22F00102 		bic	r2, r2, #1
 2020 0030 9A60     		str	r2, [r3, #8]
1161:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1162:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1163:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 2021              		.loc 1 1163 6 discriminator 2
 2022 0032 7B68     		ldr	r3, [r7, #4]
 2023 0034 1B68     		ldr	r3, [r3]
 2024 0036 9B68     		ldr	r3, [r3, #8]
 2025 0038 03F00103 		and	r3, r3, #1
 2026              		.loc 1 1163 5 discriminator 2
 2027 003c 002B     		cmp	r3, #0
 2028 003e 20D1     		bne	.L90
1164:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1165:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the selected ADC DMA mode */
1166:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~ADC_CR2_DMA;
 2029              		.loc 1 1166 9
ARM GAS  /tmp/ccdUPIhe.s 			page 57


 2030 0040 7B68     		ldr	r3, [r7, #4]
 2031 0042 1B68     		ldr	r3, [r3]
 2032              		.loc 1 1166 25
 2033 0044 9A68     		ldr	r2, [r3, #8]
 2034              		.loc 1 1166 9
 2035 0046 7B68     		ldr	r3, [r7, #4]
 2036 0048 1B68     		ldr	r3, [r3]
 2037              		.loc 1 1166 25
 2038 004a 22F48072 		bic	r2, r2, #256
 2039 004e 9A60     		str	r2, [r3, #8]
1167:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1168:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1169:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* DMA transfer is on going)                                              */
1170:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 2040              		.loc 1 1170 22
 2041 0050 7B68     		ldr	r3, [r7, #4]
 2042 0052 9B6B     		ldr	r3, [r3, #56]
 2043 0054 1846     		mov	r0, r3
 2044 0056 FFF7FEFF 		bl	HAL_DMA_Abort
 2045 005a 0346     		mov	r3, r0
 2046 005c FB73     		strb	r3, [r7, #15]
1171:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1172:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1173:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 2047              		.loc 1 1173 5
 2048 005e 7B68     		ldr	r3, [r7, #4]
 2049 0060 1B68     		ldr	r3, [r3]
 2050 0062 5A68     		ldr	r2, [r3, #4]
 2051 0064 7B68     		ldr	r3, [r7, #4]
 2052 0066 1B68     		ldr	r3, [r3]
 2053 0068 22F08062 		bic	r2, r2, #67108864
 2054 006c 5A60     		str	r2, [r3, #4]
1174:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1175:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
1176:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 2055              		.loc 1 1176 5
 2056 006e 7B68     		ldr	r3, [r7, #4]
 2057 0070 1B6C     		ldr	r3, [r3, #64]
 2058 0072 23F48853 		bic	r3, r3, #4352
 2059 0076 23F00103 		bic	r3, r3, #1
 2060 007a 43F00102 		orr	r2, r3, #1
 2061 007e 7B68     		ldr	r3, [r7, #4]
 2062 0080 1A64     		str	r2, [r3, #64]
 2063              	.L90:
1177:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1179:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1180:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1181:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1182:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2064              		.loc 1 1182 3
 2065 0082 7B68     		ldr	r3, [r7, #4]
 2066 0084 0022     		movs	r2, #0
 2067 0086 83F83C20 		strb	r2, [r3, #60]
1183:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1184:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1185:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
ARM GAS  /tmp/ccdUPIhe.s 			page 58


 2068              		.loc 1 1185 10
 2069 008a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2070              	.L89:
1186:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2071              		.loc 1 1186 1
 2072 008c 1846     		mov	r0, r3
 2073 008e 1037     		adds	r7, r7, #16
 2074              	.LCFI69:
 2075              		.cfi_def_cfa_offset 8
 2076 0090 BD46     		mov	sp, r7
 2077              	.LCFI70:
 2078              		.cfi_def_cfa_register 13
 2079              		@ sp needed
 2080 0092 80BD     		pop	{r7, pc}
 2081              		.cfi_endproc
 2082              	.LFE138:
 2084              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 2085              		.align	1
 2086              		.global	HAL_ADC_GetValue
 2087              		.syntax unified
 2088              		.thumb
 2089              		.thumb_func
 2090              		.fpu fpv4-sp-d16
 2092              	HAL_ADC_GetValue:
 2093              	.LFB139:
1187:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1188:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1189:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Gets the converted value from data register of regular channel.
1190:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1191:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1192:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval Converted value
1193:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1194:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
1195:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {       
 2094              		.loc 1 1195 1
 2095              		.cfi_startproc
 2096              		@ args = 0, pretend = 0, frame = 8
 2097              		@ frame_needed = 1, uses_anonymous_args = 0
 2098              		@ link register save eliminated.
 2099 0000 80B4     		push	{r7}
 2100              	.LCFI71:
 2101              		.cfi_def_cfa_offset 4
 2102              		.cfi_offset 7, -4
 2103 0002 83B0     		sub	sp, sp, #12
 2104              	.LCFI72:
 2105              		.cfi_def_cfa_offset 16
 2106 0004 00AF     		add	r7, sp, #0
 2107              	.LCFI73:
 2108              		.cfi_def_cfa_register 7
 2109 0006 7860     		str	r0, [r7, #4]
1196:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return the selected ADC converted value */ 
1197:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->Instance->DR;
 2110              		.loc 1 1197 14
 2111 0008 7B68     		ldr	r3, [r7, #4]
 2112 000a 1B68     		ldr	r3, [r3]
 2113              		.loc 1 1197 24
 2114 000c DB6C     		ldr	r3, [r3, #76]
ARM GAS  /tmp/ccdUPIhe.s 			page 59


1198:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2115              		.loc 1 1198 1
 2116 000e 1846     		mov	r0, r3
 2117 0010 0C37     		adds	r7, r7, #12
 2118              	.LCFI74:
 2119              		.cfi_def_cfa_offset 4
 2120 0012 BD46     		mov	sp, r7
 2121              	.LCFI75:
 2122              		.cfi_def_cfa_register 13
 2123              		@ sp needed
 2124 0014 5DF8047B 		ldr	r7, [sp], #4
 2125              	.LCFI76:
 2126              		.cfi_restore 7
 2127              		.cfi_def_cfa_offset 0
 2128 0018 7047     		bx	lr
 2129              		.cfi_endproc
 2130              	.LFE139:
 2132              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 2133              		.align	1
 2134              		.weak	HAL_ADC_ConvCpltCallback
 2135              		.syntax unified
 2136              		.thumb
 2137              		.thumb_func
 2138              		.fpu fpv4-sp-d16
 2140              	HAL_ADC_ConvCpltCallback:
 2141              	.LFB140:
1199:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1200:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1201:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Regular conversion complete callback in non blocking mode 
1202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1203:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1204:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1205:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1206:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
1207:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2142              		.loc 1 1207 1
 2143              		.cfi_startproc
 2144              		@ args = 0, pretend = 0, frame = 8
 2145              		@ frame_needed = 1, uses_anonymous_args = 0
 2146              		@ link register save eliminated.
 2147 0000 80B4     		push	{r7}
 2148              	.LCFI77:
 2149              		.cfi_def_cfa_offset 4
 2150              		.cfi_offset 7, -4
 2151 0002 83B0     		sub	sp, sp, #12
 2152              	.LCFI78:
 2153              		.cfi_def_cfa_offset 16
 2154 0004 00AF     		add	r7, sp, #0
 2155              	.LCFI79:
 2156              		.cfi_def_cfa_register 7
 2157 0006 7860     		str	r0, [r7, #4]
1208:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1209:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1210:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1211:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ConvCpltCallback could be implemented in the user file
1212:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1213:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
ARM GAS  /tmp/ccdUPIhe.s 			page 60


 2158              		.loc 1 1213 1
 2159 0008 00BF     		nop
 2160 000a 0C37     		adds	r7, r7, #12
 2161              	.LCFI80:
 2162              		.cfi_def_cfa_offset 4
 2163 000c BD46     		mov	sp, r7
 2164              	.LCFI81:
 2165              		.cfi_def_cfa_register 13
 2166              		@ sp needed
 2167 000e 5DF8047B 		ldr	r7, [sp], #4
 2168              	.LCFI82:
 2169              		.cfi_restore 7
 2170              		.cfi_def_cfa_offset 0
 2171 0012 7047     		bx	lr
 2172              		.cfi_endproc
 2173              	.LFE140:
 2175              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 2176              		.align	1
 2177              		.weak	HAL_ADC_ConvHalfCpltCallback
 2178              		.syntax unified
 2179              		.thumb
 2180              		.thumb_func
 2181              		.fpu fpv4-sp-d16
 2183              	HAL_ADC_ConvHalfCpltCallback:
 2184              	.LFB141:
1214:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1215:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1216:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Regular conversion half DMA transfer callback in non blocking mode 
1217:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1218:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1219:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1220:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1221:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
1222:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2185              		.loc 1 1222 1
 2186              		.cfi_startproc
 2187              		@ args = 0, pretend = 0, frame = 8
 2188              		@ frame_needed = 1, uses_anonymous_args = 0
 2189              		@ link register save eliminated.
 2190 0000 80B4     		push	{r7}
 2191              	.LCFI83:
 2192              		.cfi_def_cfa_offset 4
 2193              		.cfi_offset 7, -4
 2194 0002 83B0     		sub	sp, sp, #12
 2195              	.LCFI84:
 2196              		.cfi_def_cfa_offset 16
 2197 0004 00AF     		add	r7, sp, #0
 2198              	.LCFI85:
 2199              		.cfi_def_cfa_register 7
 2200 0006 7860     		str	r0, [r7, #4]
1223:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1224:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1225:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1226:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ConvHalfCpltCallback could be implemented in the user file
1227:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1228:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2201              		.loc 1 1228 1
ARM GAS  /tmp/ccdUPIhe.s 			page 61


 2202 0008 00BF     		nop
 2203 000a 0C37     		adds	r7, r7, #12
 2204              	.LCFI86:
 2205              		.cfi_def_cfa_offset 4
 2206 000c BD46     		mov	sp, r7
 2207              	.LCFI87:
 2208              		.cfi_def_cfa_register 13
 2209              		@ sp needed
 2210 000e 5DF8047B 		ldr	r7, [sp], #4
 2211              	.LCFI88:
 2212              		.cfi_restore 7
 2213              		.cfi_def_cfa_offset 0
 2214 0012 7047     		bx	lr
 2215              		.cfi_endproc
 2216              	.LFE141:
 2218              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 2219              		.align	1
 2220              		.weak	HAL_ADC_LevelOutOfWindowCallback
 2221              		.syntax unified
 2222              		.thumb
 2223              		.thumb_func
 2224              		.fpu fpv4-sp-d16
 2226              	HAL_ADC_LevelOutOfWindowCallback:
 2227              	.LFB142:
1229:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1230:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1231:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Analog watchdog callback in non blocking mode 
1232:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1233:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1234:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1235:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1236:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
1237:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2228              		.loc 1 1237 1
 2229              		.cfi_startproc
 2230              		@ args = 0, pretend = 0, frame = 8
 2231              		@ frame_needed = 1, uses_anonymous_args = 0
 2232              		@ link register save eliminated.
 2233 0000 80B4     		push	{r7}
 2234              	.LCFI89:
 2235              		.cfi_def_cfa_offset 4
 2236              		.cfi_offset 7, -4
 2237 0002 83B0     		sub	sp, sp, #12
 2238              	.LCFI90:
 2239              		.cfi_def_cfa_offset 16
 2240 0004 00AF     		add	r7, sp, #0
 2241              	.LCFI91:
 2242              		.cfi_def_cfa_register 7
 2243 0006 7860     		str	r0, [r7, #4]
1238:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1239:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1240:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_LevelOoutOfWindowCallback could be implemented in the user file
1242:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2244              		.loc 1 1243 1
 2245 0008 00BF     		nop
ARM GAS  /tmp/ccdUPIhe.s 			page 62


 2246 000a 0C37     		adds	r7, r7, #12
 2247              	.LCFI92:
 2248              		.cfi_def_cfa_offset 4
 2249 000c BD46     		mov	sp, r7
 2250              	.LCFI93:
 2251              		.cfi_def_cfa_register 13
 2252              		@ sp needed
 2253 000e 5DF8047B 		ldr	r7, [sp], #4
 2254              	.LCFI94:
 2255              		.cfi_restore 7
 2256              		.cfi_def_cfa_offset 0
 2257 0012 7047     		bx	lr
 2258              		.cfi_endproc
 2259              	.LFE142:
 2261              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 2262              		.align	1
 2263              		.weak	HAL_ADC_ErrorCallback
 2264              		.syntax unified
 2265              		.thumb
 2266              		.thumb_func
 2267              		.fpu fpv4-sp-d16
 2269              	HAL_ADC_ErrorCallback:
 2270              	.LFB143:
1244:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1245:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1246:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Error ADC callback.
1247:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer 
1248:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         (HAL ADC handle paramater "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
1249:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
1250:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
1251:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
1252:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
1253:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1254:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1255:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1256:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1257:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
1258:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2271              		.loc 1 1258 1
 2272              		.cfi_startproc
 2273              		@ args = 0, pretend = 0, frame = 8
 2274              		@ frame_needed = 1, uses_anonymous_args = 0
 2275              		@ link register save eliminated.
 2276 0000 80B4     		push	{r7}
 2277              	.LCFI95:
 2278              		.cfi_def_cfa_offset 4
 2279              		.cfi_offset 7, -4
 2280 0002 83B0     		sub	sp, sp, #12
 2281              	.LCFI96:
 2282              		.cfi_def_cfa_offset 16
 2283 0004 00AF     		add	r7, sp, #0
 2284              	.LCFI97:
 2285              		.cfi_def_cfa_register 7
 2286 0006 7860     		str	r0, [r7, #4]
1259:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1260:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1261:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
ARM GAS  /tmp/ccdUPIhe.s 			page 63


1262:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ErrorCallback could be implemented in the user file
1263:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1264:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2287              		.loc 1 1264 1
 2288 0008 00BF     		nop
 2289 000a 0C37     		adds	r7, r7, #12
 2290              	.LCFI98:
 2291              		.cfi_def_cfa_offset 4
 2292 000c BD46     		mov	sp, r7
 2293              	.LCFI99:
 2294              		.cfi_def_cfa_register 13
 2295              		@ sp needed
 2296 000e 5DF8047B 		ldr	r7, [sp], #4
 2297              	.LCFI100:
 2298              		.cfi_restore 7
 2299              		.cfi_def_cfa_offset 0
 2300 0012 7047     		bx	lr
 2301              		.cfi_endproc
 2302              	.LFE143:
 2304              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 2305              		.align	1
 2306              		.global	HAL_ADC_ConfigChannel
 2307              		.syntax unified
 2308              		.thumb
 2309              		.thumb_func
 2310              		.fpu fpv4-sp-d16
 2312              	HAL_ADC_ConfigChannel:
 2313              	.LFB144:
1265:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1266:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1267:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1268:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1269:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1270:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
1271:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief   	Peripheral Control functions 
1272:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
1273:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
1274:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
1275:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              ##### Peripheral Control functions #####
1276:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
1277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1278:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure regular channels. 
1279:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure injected channels.
1280:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure multimode.
1281:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure the analog watch dog.
1282:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1283:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
1284:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1285:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1286:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1287:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /**
1288:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
1289:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         rank in the sequencer and its sample time.
1290:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1291:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1292:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  sConfig ADC configuration structure. 
1293:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
ARM GAS  /tmp/ccdUPIhe.s 			page 64


1294:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1295:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
1296:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2314              		.loc 1 1296 1
 2315              		.cfi_startproc
 2316              		@ args = 0, pretend = 0, frame = 16
 2317              		@ frame_needed = 1, uses_anonymous_args = 0
 2318              		@ link register save eliminated.
 2319 0000 80B4     		push	{r7}
 2320              	.LCFI101:
 2321              		.cfi_def_cfa_offset 4
 2322              		.cfi_offset 7, -4
 2323 0002 85B0     		sub	sp, sp, #20
 2324              	.LCFI102:
 2325              		.cfi_def_cfa_offset 24
 2326 0004 00AF     		add	r7, sp, #0
 2327              	.LCFI103:
 2328              		.cfi_def_cfa_register 7
 2329 0006 7860     		str	r0, [r7, #4]
 2330 0008 3960     		str	r1, [r7]
1297:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 2331              		.loc 1 1297 17
 2332 000a 0023     		movs	r3, #0
 2333 000c BB60     		str	r3, [r7, #8]
1298:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1299:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1300:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1301:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
1302:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
1303:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
1304:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1305:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1306:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2334              		.loc 1 1306 3
 2335 000e 7B68     		ldr	r3, [r7, #4]
 2336 0010 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2337 0014 012B     		cmp	r3, #1
 2338 0016 01D1     		bne	.L98
 2339              		.loc 1 1306 3 is_stmt 0 discriminator 1
 2340 0018 0223     		movs	r3, #2
 2341 001a 07E1     		b	.L99
 2342              	.L98:
 2343              		.loc 1 1306 3 discriminator 2
 2344 001c 7B68     		ldr	r3, [r7, #4]
 2345 001e 0122     		movs	r2, #1
 2346 0020 83F83C20 		strb	r2, [r3, #60]
1307:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1308:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
1309:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (sConfig->Channel > ADC_CHANNEL_9)
 2347              		.loc 1 1309 14 is_stmt 1 discriminator 2
 2348 0024 3B68     		ldr	r3, [r7]
 2349 0026 1B68     		ldr	r3, [r3]
 2350              		.loc 1 1309 6 discriminator 2
 2351 0028 092B     		cmp	r3, #9
 2352 002a 25D9     		bls	.L100
1310:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1311:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old sample time */
ARM GAS  /tmp/ccdUPIhe.s 			page 65


1312:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 2353              		.loc 1 1312 9
 2354 002c 7B68     		ldr	r3, [r7, #4]
 2355 002e 1B68     		ldr	r3, [r3]
 2356              		.loc 1 1312 27
 2357 0030 D968     		ldr	r1, [r3, #12]
 2358              		.loc 1 1312 31
 2359 0032 3B68     		ldr	r3, [r7]
 2360 0034 1B68     		ldr	r3, [r3]
 2361 0036 9BB2     		uxth	r3, r3
 2362 0038 1A46     		mov	r2, r3
 2363 003a 1346     		mov	r3, r2
 2364 003c 5B00     		lsls	r3, r3, #1
 2365 003e 1344     		add	r3, r3, r2
 2366 0040 1E3B     		subs	r3, r3, #30
 2367 0042 0722     		movs	r2, #7
 2368 0044 02FA03F3 		lsl	r3, r2, r3
 2369              		.loc 1 1312 30
 2370 0048 DA43     		mvns	r2, r3
 2371              		.loc 1 1312 9
 2372 004a 7B68     		ldr	r3, [r7, #4]
 2373 004c 1B68     		ldr	r3, [r3]
 2374              		.loc 1 1312 27
 2375 004e 0A40     		ands	r2, r2, r1
 2376 0050 DA60     		str	r2, [r3, #12]
1313:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1314:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the new sample time */
1315:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 2377              		.loc 1 1315 9
 2378 0052 7B68     		ldr	r3, [r7, #4]
 2379 0054 1B68     		ldr	r3, [r3]
 2380              		.loc 1 1315 27
 2381 0056 D968     		ldr	r1, [r3, #12]
 2382              		.loc 1 1315 30
 2383 0058 3B68     		ldr	r3, [r7]
 2384 005a 9A68     		ldr	r2, [r3, #8]
 2385 005c 3B68     		ldr	r3, [r7]
 2386 005e 1B68     		ldr	r3, [r3]
 2387 0060 9BB2     		uxth	r3, r3
 2388 0062 1846     		mov	r0, r3
 2389 0064 0346     		mov	r3, r0
 2390 0066 5B00     		lsls	r3, r3, #1
 2391 0068 0344     		add	r3, r3, r0
 2392 006a 1E3B     		subs	r3, r3, #30
 2393 006c 9A40     		lsls	r2, r2, r3
 2394              		.loc 1 1315 9
 2395 006e 7B68     		ldr	r3, [r7, #4]
 2396 0070 1B68     		ldr	r3, [r3]
 2397              		.loc 1 1315 27
 2398 0072 0A43     		orrs	r2, r2, r1
 2399 0074 DA60     		str	r2, [r3, #12]
 2400 0076 22E0     		b	.L101
 2401              	.L100:
1316:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1317:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
1318:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1319:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old sample time */
ARM GAS  /tmp/ccdUPIhe.s 			page 66


1320:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 2402              		.loc 1 1320 9
 2403 0078 7B68     		ldr	r3, [r7, #4]
 2404 007a 1B68     		ldr	r3, [r3]
 2405              		.loc 1 1320 27
 2406 007c 1969     		ldr	r1, [r3, #16]
 2407              		.loc 1 1320 31
 2408 007e 3B68     		ldr	r3, [r7]
 2409 0080 1B68     		ldr	r3, [r3]
 2410 0082 9BB2     		uxth	r3, r3
 2411 0084 1A46     		mov	r2, r3
 2412 0086 1346     		mov	r3, r2
 2413 0088 5B00     		lsls	r3, r3, #1
 2414 008a 1344     		add	r3, r3, r2
 2415 008c 0722     		movs	r2, #7
 2416 008e 02FA03F3 		lsl	r3, r2, r3
 2417              		.loc 1 1320 30
 2418 0092 DA43     		mvns	r2, r3
 2419              		.loc 1 1320 9
 2420 0094 7B68     		ldr	r3, [r7, #4]
 2421 0096 1B68     		ldr	r3, [r3]
 2422              		.loc 1 1320 27
 2423 0098 0A40     		ands	r2, r2, r1
 2424 009a 1A61     		str	r2, [r3, #16]
1321:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1322:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the new sample time */
1323:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 2425              		.loc 1 1323 9
 2426 009c 7B68     		ldr	r3, [r7, #4]
 2427 009e 1B68     		ldr	r3, [r3]
 2428              		.loc 1 1323 27
 2429 00a0 1969     		ldr	r1, [r3, #16]
 2430              		.loc 1 1323 30
 2431 00a2 3B68     		ldr	r3, [r7]
 2432 00a4 9A68     		ldr	r2, [r3, #8]
 2433 00a6 3B68     		ldr	r3, [r7]
 2434 00a8 1B68     		ldr	r3, [r3]
 2435 00aa 9BB2     		uxth	r3, r3
 2436 00ac 1846     		mov	r0, r3
 2437 00ae 0346     		mov	r3, r0
 2438 00b0 5B00     		lsls	r3, r3, #1
 2439 00b2 0344     		add	r3, r3, r0
 2440 00b4 9A40     		lsls	r2, r2, r3
 2441              		.loc 1 1323 9
 2442 00b6 7B68     		ldr	r3, [r7, #4]
 2443 00b8 1B68     		ldr	r3, [r3]
 2444              		.loc 1 1323 27
 2445 00ba 0A43     		orrs	r2, r2, r1
 2446 00bc 1A61     		str	r2, [r3, #16]
 2447              	.L101:
1324:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1325:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1326:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 1 to 6 */
1327:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (sConfig->Rank < 7U)
 2448              		.loc 1 1327 14
 2449 00be 3B68     		ldr	r3, [r7]
 2450 00c0 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccdUPIhe.s 			page 67


 2451              		.loc 1 1327 6
 2452 00c2 062B     		cmp	r3, #6
 2453 00c4 24D8     		bhi	.L102
1328:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1329:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1330:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 2454              		.loc 1 1330 9
 2455 00c6 7B68     		ldr	r3, [r7, #4]
 2456 00c8 1B68     		ldr	r3, [r3]
 2457              		.loc 1 1330 26
 2458 00ca 596B     		ldr	r1, [r3, #52]
 2459              		.loc 1 1330 30
 2460 00cc 3B68     		ldr	r3, [r7]
 2461 00ce 5A68     		ldr	r2, [r3, #4]
 2462 00d0 1346     		mov	r3, r2
 2463 00d2 9B00     		lsls	r3, r3, #2
 2464 00d4 1344     		add	r3, r3, r2
 2465 00d6 053B     		subs	r3, r3, #5
 2466 00d8 1F22     		movs	r2, #31
 2467 00da 02FA03F3 		lsl	r3, r2, r3
 2468              		.loc 1 1330 29
 2469 00de DA43     		mvns	r2, r3
 2470              		.loc 1 1330 9
 2471 00e0 7B68     		ldr	r3, [r7, #4]
 2472 00e2 1B68     		ldr	r3, [r3]
 2473              		.loc 1 1330 26
 2474 00e4 0A40     		ands	r2, r2, r1
 2475 00e6 5A63     		str	r2, [r3, #52]
1331:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1332:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1333:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 2476              		.loc 1 1333 9
 2477 00e8 7B68     		ldr	r3, [r7, #4]
 2478 00ea 1B68     		ldr	r3, [r3]
 2479              		.loc 1 1333 26
 2480 00ec 596B     		ldr	r1, [r3, #52]
 2481              		.loc 1 1333 29
 2482 00ee 3B68     		ldr	r3, [r7]
 2483 00f0 1B68     		ldr	r3, [r3]
 2484 00f2 9BB2     		uxth	r3, r3
 2485 00f4 1846     		mov	r0, r3
 2486 00f6 3B68     		ldr	r3, [r7]
 2487 00f8 5A68     		ldr	r2, [r3, #4]
 2488 00fa 1346     		mov	r3, r2
 2489 00fc 9B00     		lsls	r3, r3, #2
 2490 00fe 1344     		add	r3, r3, r2
 2491 0100 053B     		subs	r3, r3, #5
 2492 0102 00FA03F2 		lsl	r2, r0, r3
 2493              		.loc 1 1333 9
 2494 0106 7B68     		ldr	r3, [r7, #4]
 2495 0108 1B68     		ldr	r3, [r3]
 2496              		.loc 1 1333 26
 2497 010a 0A43     		orrs	r2, r2, r1
 2498 010c 5A63     		str	r2, [r3, #52]
 2499 010e 4CE0     		b	.L103
 2500              	.L102:
1334:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
ARM GAS  /tmp/ccdUPIhe.s 			page 68


1335:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 7 to 12 */
1336:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else if (sConfig->Rank < 13U)
 2501              		.loc 1 1336 19
 2502 0110 3B68     		ldr	r3, [r7]
 2503 0112 5B68     		ldr	r3, [r3, #4]
 2504              		.loc 1 1336 11
 2505 0114 0C2B     		cmp	r3, #12
 2506 0116 24D8     		bhi	.L104
1337:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1338:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1339:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 2507              		.loc 1 1339 9
 2508 0118 7B68     		ldr	r3, [r7, #4]
 2509 011a 1B68     		ldr	r3, [r3]
 2510              		.loc 1 1339 26
 2511 011c 196B     		ldr	r1, [r3, #48]
 2512              		.loc 1 1339 30
 2513 011e 3B68     		ldr	r3, [r7]
 2514 0120 5A68     		ldr	r2, [r3, #4]
 2515 0122 1346     		mov	r3, r2
 2516 0124 9B00     		lsls	r3, r3, #2
 2517 0126 1344     		add	r3, r3, r2
 2518 0128 233B     		subs	r3, r3, #35
 2519 012a 1F22     		movs	r2, #31
 2520 012c 02FA03F3 		lsl	r3, r2, r3
 2521              		.loc 1 1339 29
 2522 0130 DA43     		mvns	r2, r3
 2523              		.loc 1 1339 9
 2524 0132 7B68     		ldr	r3, [r7, #4]
 2525 0134 1B68     		ldr	r3, [r3]
 2526              		.loc 1 1339 26
 2527 0136 0A40     		ands	r2, r2, r1
 2528 0138 1A63     		str	r2, [r3, #48]
1340:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1341:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1342:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 2529              		.loc 1 1342 9
 2530 013a 7B68     		ldr	r3, [r7, #4]
 2531 013c 1B68     		ldr	r3, [r3]
 2532              		.loc 1 1342 26
 2533 013e 196B     		ldr	r1, [r3, #48]
 2534              		.loc 1 1342 29
 2535 0140 3B68     		ldr	r3, [r7]
 2536 0142 1B68     		ldr	r3, [r3]
 2537 0144 9BB2     		uxth	r3, r3
 2538 0146 1846     		mov	r0, r3
 2539 0148 3B68     		ldr	r3, [r7]
 2540 014a 5A68     		ldr	r2, [r3, #4]
 2541 014c 1346     		mov	r3, r2
 2542 014e 9B00     		lsls	r3, r3, #2
 2543 0150 1344     		add	r3, r3, r2
 2544 0152 233B     		subs	r3, r3, #35
 2545 0154 00FA03F2 		lsl	r2, r0, r3
 2546              		.loc 1 1342 9
 2547 0158 7B68     		ldr	r3, [r7, #4]
 2548 015a 1B68     		ldr	r3, [r3]
 2549              		.loc 1 1342 26
ARM GAS  /tmp/ccdUPIhe.s 			page 69


 2550 015c 0A43     		orrs	r2, r2, r1
 2551 015e 1A63     		str	r2, [r3, #48]
 2552 0160 23E0     		b	.L103
 2553              	.L104:
1343:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1344:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 13 to 16 */
1345:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1346:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1347:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1348:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 2554              		.loc 1 1348 9
 2555 0162 7B68     		ldr	r3, [r7, #4]
 2556 0164 1B68     		ldr	r3, [r3]
 2557              		.loc 1 1348 26
 2558 0166 D96A     		ldr	r1, [r3, #44]
 2559              		.loc 1 1348 30
 2560 0168 3B68     		ldr	r3, [r7]
 2561 016a 5A68     		ldr	r2, [r3, #4]
 2562 016c 1346     		mov	r3, r2
 2563 016e 9B00     		lsls	r3, r3, #2
 2564 0170 1344     		add	r3, r3, r2
 2565 0172 413B     		subs	r3, r3, #65
 2566 0174 1F22     		movs	r2, #31
 2567 0176 02FA03F3 		lsl	r3, r2, r3
 2568              		.loc 1 1348 29
 2569 017a DA43     		mvns	r2, r3
 2570              		.loc 1 1348 9
 2571 017c 7B68     		ldr	r3, [r7, #4]
 2572 017e 1B68     		ldr	r3, [r3]
 2573              		.loc 1 1348 26
 2574 0180 0A40     		ands	r2, r2, r1
 2575 0182 DA62     		str	r2, [r3, #44]
1349:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1350:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1351:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 2576              		.loc 1 1351 9
 2577 0184 7B68     		ldr	r3, [r7, #4]
 2578 0186 1B68     		ldr	r3, [r3]
 2579              		.loc 1 1351 26
 2580 0188 D96A     		ldr	r1, [r3, #44]
 2581              		.loc 1 1351 29
 2582 018a 3B68     		ldr	r3, [r7]
 2583 018c 1B68     		ldr	r3, [r3]
 2584 018e 9BB2     		uxth	r3, r3
 2585 0190 1846     		mov	r0, r3
 2586 0192 3B68     		ldr	r3, [r7]
 2587 0194 5A68     		ldr	r2, [r3, #4]
 2588 0196 1346     		mov	r3, r2
 2589 0198 9B00     		lsls	r3, r3, #2
 2590 019a 1344     		add	r3, r3, r2
 2591 019c 413B     		subs	r3, r3, #65
 2592 019e 00FA03F2 		lsl	r2, r0, r3
 2593              		.loc 1 1351 9
 2594 01a2 7B68     		ldr	r3, [r7, #4]
 2595 01a4 1B68     		ldr	r3, [r3]
 2596              		.loc 1 1351 26
 2597 01a6 0A43     		orrs	r2, r2, r1
ARM GAS  /tmp/ccdUPIhe.s 			page 70


 2598 01a8 DA62     		str	r2, [r3, #44]
 2599              	.L103:
1352:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1353:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1354:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
1355:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1356:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
1357:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 2600              		.loc 1 1357 19
 2601 01aa 234B     		ldr	r3, .L110
 2602 01ac FB60     		str	r3, [r7, #12]
1358:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1359:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC1 Channel_18 is selected enable VBAT Channel */
1360:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 2603              		.loc 1 1360 12
 2604 01ae 7B68     		ldr	r3, [r7, #4]
 2605 01b0 1B68     		ldr	r3, [r3]
 2606              		.loc 1 1360 6
 2607 01b2 224A     		ldr	r2, .L110+4
 2608 01b4 9342     		cmp	r3, r2
 2609 01b6 09D1     		bne	.L105
 2610              		.loc 1 1360 43 discriminator 1
 2611 01b8 3B68     		ldr	r3, [r7]
 2612 01ba 1B68     		ldr	r3, [r3]
 2613              		.loc 1 1360 32 discriminator 1
 2614 01bc 122B     		cmp	r3, #18
 2615 01be 05D1     		bne	.L105
1361:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1362:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the VBAT channel*/
1363:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common->CCR |= ADC_CCR_VBATE;
 2616              		.loc 1 1363 24
 2617 01c0 FB68     		ldr	r3, [r7, #12]
 2618 01c2 5B68     		ldr	r3, [r3, #4]
 2619 01c4 43F48002 		orr	r2, r3, #4194304
 2620 01c8 FB68     		ldr	r3, [r7, #12]
 2621 01ca 5A60     		str	r2, [r3, #4]
 2622              	.L105:
1364:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1365:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1366:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC1 Channel_16 or Channel_17 is selected enable TSVREFE Channel(Temperature sensor and VRE
1367:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channe
 2623              		.loc 1 1367 12
 2624 01cc 7B68     		ldr	r3, [r7, #4]
 2625 01ce 1B68     		ldr	r3, [r3]
 2626              		.loc 1 1367 6
 2627 01d0 1A4A     		ldr	r2, .L110+4
 2628 01d2 9342     		cmp	r3, r2
 2629 01d4 25D1     		bne	.L106
 2630              		.loc 1 1367 44 discriminator 1
 2631 01d6 3B68     		ldr	r3, [r7]
 2632 01d8 1B68     		ldr	r3, [r3]
 2633              		.loc 1 1367 32 discriminator 1
 2634 01da 194A     		ldr	r2, .L110+8
 2635 01dc 9342     		cmp	r3, r2
 2636 01de 03D0     		beq	.L107
 2637              		.loc 1 1367 92 discriminator 2
 2638 01e0 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccdUPIhe.s 			page 71


 2639 01e2 1B68     		ldr	r3, [r3]
 2640              		.loc 1 1367 81 discriminator 2
 2641 01e4 112B     		cmp	r3, #17
 2642 01e6 1CD1     		bne	.L106
 2643              	.L107:
1368:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1369:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the TSVREFE channel*/
1370:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 2644              		.loc 1 1370 24
 2645 01e8 FB68     		ldr	r3, [r7, #12]
 2646 01ea 5B68     		ldr	r3, [r3, #4]
 2647 01ec 43F40002 		orr	r2, r3, #8388608
 2648 01f0 FB68     		ldr	r3, [r7, #12]
 2649 01f2 5A60     		str	r2, [r3, #4]
1371:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1372:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 2650              		.loc 1 1372 16
 2651 01f4 3B68     		ldr	r3, [r7]
 2652 01f6 1B68     		ldr	r3, [r3]
 2653              		.loc 1 1372 7
 2654 01f8 114A     		ldr	r2, .L110+8
 2655 01fa 9342     		cmp	r3, r2
 2656 01fc 11D1     		bne	.L106
1373:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1374:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Delay for temperature sensor stabilization time */
1375:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Compute number of CPU cycles to wait for */
1376:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 2657              		.loc 1 1376 61
 2658 01fe 114B     		ldr	r3, .L110+12
 2659 0200 1B68     		ldr	r3, [r3]
 2660 0202 114A     		ldr	r2, .L110+16
 2661 0204 A2FB0323 		umull	r2, r3, r2, r3
 2662 0208 9A0C     		lsrs	r2, r3, #18
 2663              		.loc 1 1376 42
 2664 020a 1346     		mov	r3, r2
 2665 020c 9B00     		lsls	r3, r3, #2
 2666 020e 1344     		add	r3, r3, r2
 2667 0210 5B00     		lsls	r3, r3, #1
 2668              		.loc 1 1376 15
 2669 0212 BB60     		str	r3, [r7, #8]
1377:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0U)
 2670              		.loc 1 1377 12
 2671 0214 02E0     		b	.L108
 2672              	.L109:
1378:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1379:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         counter--;
 2673              		.loc 1 1379 16
 2674 0216 BB68     		ldr	r3, [r7, #8]
 2675 0218 013B     		subs	r3, r3, #1
 2676 021a BB60     		str	r3, [r7, #8]
 2677              	.L108:
1377:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0U)
 2678              		.loc 1 1377 21
 2679 021c BB68     		ldr	r3, [r7, #8]
1377:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0U)
 2680              		.loc 1 1377 12
 2681 021e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccdUPIhe.s 			page 72


 2682 0220 F9D1     		bne	.L109
 2683              	.L106:
1380:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1381:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1382:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1383:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1384:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1385:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2684              		.loc 1 1385 3
 2685 0222 7B68     		ldr	r3, [r7, #4]
 2686 0224 0022     		movs	r2, #0
 2687 0226 83F83C20 		strb	r2, [r3, #60]
1386:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1387:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1388:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 2688              		.loc 1 1388 10
 2689 022a 0023     		movs	r3, #0
 2690              	.L99:
1389:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2691              		.loc 1 1389 1
 2692 022c 1846     		mov	r0, r3
 2693 022e 1437     		adds	r7, r7, #20
 2694              	.LCFI104:
 2695              		.cfi_def_cfa_offset 4
 2696 0230 BD46     		mov	sp, r7
 2697              	.LCFI105:
 2698              		.cfi_def_cfa_register 13
 2699              		@ sp needed
 2700 0232 5DF8047B 		ldr	r7, [sp], #4
 2701              	.LCFI106:
 2702              		.cfi_restore 7
 2703              		.cfi_def_cfa_offset 0
 2704 0236 7047     		bx	lr
 2705              	.L111:
 2706              		.align	2
 2707              	.L110:
 2708 0238 00230140 		.word	1073816320
 2709 023c 00200140 		.word	1073815552
 2710 0240 12000010 		.word	268435474
 2711 0244 00000000 		.word	SystemCoreClock
 2712 0248 83DE1B43 		.word	1125899907
 2713              		.cfi_endproc
 2714              	.LFE144:
 2716              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 2717              		.align	1
 2718              		.global	HAL_ADC_AnalogWDGConfig
 2719              		.syntax unified
 2720              		.thumb
 2721              		.thumb_func
 2722              		.fpu fpv4-sp-d16
 2724              	HAL_ADC_AnalogWDGConfig:
 2725              	.LFB145:
1390:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1391:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1392:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Configures the analog watchdog.
1393:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note Analog watchdog thresholds can be modified while ADC conversion
1394:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * is on going.
ARM GAS  /tmp/ccdUPIhe.s 			page 73


1395:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * In this case, some constraints must be taken into account:
1396:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * The programmed threshold values are effective from the next
1397:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * ADC EOC (end of unitary conversion).
1398:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * Considering that registers write delay may happen due to
1399:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * bus activity, this might cause an uncertainty on the
1400:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * effective timing of the new programmed threshold values.
1401:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1402:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1403:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  AnalogWDGConfig  pointer to an ADC_AnalogWDGConfTypeDef structure 
1404:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         that contains the configuration information of ADC analog watchdog.
1405:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status	  
1406:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1407:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
1408:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2726              		.loc 1 1408 1
 2727              		.cfi_startproc
 2728              		@ args = 0, pretend = 0, frame = 8
 2729              		@ frame_needed = 1, uses_anonymous_args = 0
 2730              		@ link register save eliminated.
 2731 0000 80B4     		push	{r7}
 2732              	.LCFI107:
 2733              		.cfi_def_cfa_offset 4
 2734              		.cfi_offset 7, -4
 2735 0002 83B0     		sub	sp, sp, #12
 2736              	.LCFI108:
 2737              		.cfi_def_cfa_offset 16
 2738 0004 00AF     		add	r7, sp, #0
 2739              	.LCFI109:
 2740              		.cfi_def_cfa_register 7
 2741 0006 7860     		str	r0, [r7, #4]
 2742 0008 3960     		str	r1, [r7]
1409:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1410:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp = 0U;
1411:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */  
1412:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1413:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1414:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(AnalogWDGConfig->WatchdogMode));
1415:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
1416:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
1417:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1418:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1419:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp = ADC_GET_RESOLUTION(hadc);
1420:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->HighThreshold));
1421:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->LowThreshold));
1422:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */
1423:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1424:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1425:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2743              		.loc 1 1425 3
 2744 000a 7B68     		ldr	r3, [r7, #4]
 2745 000c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2746 0010 012B     		cmp	r3, #1
 2747 0012 01D1     		bne	.L113
 2748              		.loc 1 1425 3 is_stmt 0 discriminator 1
 2749 0014 0223     		movs	r3, #2
 2750 0016 4DE0     		b	.L114
 2751              	.L113:
ARM GAS  /tmp/ccdUPIhe.s 			page 74


 2752              		.loc 1 1425 3 discriminator 2
 2753 0018 7B68     		ldr	r3, [r7, #4]
 2754 001a 0122     		movs	r2, #1
 2755 001c 83F83C20 		strb	r2, [r3, #60]
1426:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1427:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(AnalogWDGConfig->ITMode == ENABLE)
 2756              		.loc 1 1427 21 is_stmt 1 discriminator 2
 2757 0020 3B68     		ldr	r3, [r7]
 2758 0022 1B69     		ldr	r3, [r3, #16]
 2759              		.loc 1 1427 5 discriminator 2
 2760 0024 012B     		cmp	r3, #1
 2761 0026 08D1     		bne	.L115
1428:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1429:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the ADC Analog watchdog interrupt */
1430:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
 2762              		.loc 1 1430 5
 2763 0028 7B68     		ldr	r3, [r7, #4]
 2764 002a 1B68     		ldr	r3, [r3]
 2765 002c 5A68     		ldr	r2, [r3, #4]
 2766 002e 7B68     		ldr	r3, [r7, #4]
 2767 0030 1B68     		ldr	r3, [r3]
 2768 0032 42F04002 		orr	r2, r2, #64
 2769 0036 5A60     		str	r2, [r3, #4]
 2770 0038 07E0     		b	.L116
 2771              	.L115:
1431:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1432:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1433:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1434:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the ADC Analog watchdog interrupt */
1435:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
 2772              		.loc 1 1435 5
 2773 003a 7B68     		ldr	r3, [r7, #4]
 2774 003c 1B68     		ldr	r3, [r3]
 2775 003e 5A68     		ldr	r2, [r3, #4]
 2776 0040 7B68     		ldr	r3, [r7, #4]
 2777 0042 1B68     		ldr	r3, [r3]
 2778 0044 22F04002 		bic	r2, r2, #64
 2779 0048 5A60     		str	r2, [r3, #4]
 2780              	.L116:
1436:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1437:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1438:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear AWDEN, JAWDEN and AWDSGL bits */
1439:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &=  ~(ADC_CR1_AWDSGL | ADC_CR1_JAWDEN | ADC_CR1_AWDEN);
 2781              		.loc 1 1439 7
 2782 004a 7B68     		ldr	r3, [r7, #4]
 2783 004c 1B68     		ldr	r3, [r3]
 2784              		.loc 1 1439 23
 2785 004e 5B68     		ldr	r3, [r3, #4]
 2786              		.loc 1 1439 7
 2787 0050 7A68     		ldr	r2, [r7, #4]
 2788 0052 1268     		ldr	r2, [r2]
 2789              		.loc 1 1439 23
 2790 0054 23F44003 		bic	r3, r3, #12582912
 2791 0058 23F40073 		bic	r3, r3, #512
 2792 005c 5360     		str	r3, [r2, #4]
1440:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1441:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the analog watchdog enable mode */
ARM GAS  /tmp/ccdUPIhe.s 			page 75


1442:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |= AnalogWDGConfig->WatchdogMode;
 2793              		.loc 1 1442 7
 2794 005e 7B68     		ldr	r3, [r7, #4]
 2795 0060 1B68     		ldr	r3, [r3]
 2796              		.loc 1 1442 23
 2797 0062 5968     		ldr	r1, [r3, #4]
 2798              		.loc 1 1442 41
 2799 0064 3B68     		ldr	r3, [r7]
 2800 0066 1A68     		ldr	r2, [r3]
 2801              		.loc 1 1442 7
 2802 0068 7B68     		ldr	r3, [r7, #4]
 2803 006a 1B68     		ldr	r3, [r3]
 2804              		.loc 1 1442 23
 2805 006c 0A43     		orrs	r2, r2, r1
 2806 006e 5A60     		str	r2, [r3, #4]
1443:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1444:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the high threshold */
1445:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->HTR = AnalogWDGConfig->HighThreshold;
 2807              		.loc 1 1445 7
 2808 0070 7B68     		ldr	r3, [r7, #4]
 2809 0072 1B68     		ldr	r3, [r3]
 2810              		.loc 1 1445 40
 2811 0074 3A68     		ldr	r2, [r7]
 2812 0076 5268     		ldr	r2, [r2, #4]
 2813              		.loc 1 1445 23
 2814 0078 5A62     		str	r2, [r3, #36]
1446:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1447:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the low threshold */
1448:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->LTR = AnalogWDGConfig->LowThreshold;
 2815              		.loc 1 1448 7
 2816 007a 7B68     		ldr	r3, [r7, #4]
 2817 007c 1B68     		ldr	r3, [r3]
 2818              		.loc 1 1448 40
 2819 007e 3A68     		ldr	r2, [r7]
 2820 0080 9268     		ldr	r2, [r2, #8]
 2821              		.loc 1 1448 23
 2822 0082 9A62     		str	r2, [r3, #40]
1449:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1450:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear the Analog watchdog channel select bits */
1451:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~ADC_CR1_AWDCH;
 2823              		.loc 1 1451 7
 2824 0084 7B68     		ldr	r3, [r7, #4]
 2825 0086 1B68     		ldr	r3, [r3]
 2826              		.loc 1 1451 23
 2827 0088 5A68     		ldr	r2, [r3, #4]
 2828              		.loc 1 1451 7
 2829 008a 7B68     		ldr	r3, [r7, #4]
 2830 008c 1B68     		ldr	r3, [r3]
 2831              		.loc 1 1451 23
 2832 008e 22F01F02 		bic	r2, r2, #31
 2833 0092 5A60     		str	r2, [r3, #4]
1452:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1453:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the Analog watchdog channel */
1454:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |= (uint32_t)((uint16_t)(AnalogWDGConfig->Channel));
 2834              		.loc 1 1454 7
 2835 0094 7B68     		ldr	r3, [r7, #4]
 2836 0096 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccdUPIhe.s 			page 76


 2837              		.loc 1 1454 23
 2838 0098 5A68     		ldr	r2, [r3, #4]
 2839              		.loc 1 1454 63
 2840 009a 3B68     		ldr	r3, [r7]
 2841 009c DB68     		ldr	r3, [r3, #12]
 2842              		.loc 1 1454 37
 2843 009e 9BB2     		uxth	r3, r3
 2844              		.loc 1 1454 26
 2845 00a0 1946     		mov	r1, r3
 2846              		.loc 1 1454 7
 2847 00a2 7B68     		ldr	r3, [r7, #4]
 2848 00a4 1B68     		ldr	r3, [r3]
 2849              		.loc 1 1454 23
 2850 00a6 0A43     		orrs	r2, r2, r1
 2851 00a8 5A60     		str	r2, [r3, #4]
1455:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1456:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1457:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2852              		.loc 1 1457 3
 2853 00aa 7B68     		ldr	r3, [r7, #4]
 2854 00ac 0022     		movs	r2, #0
 2855 00ae 83F83C20 		strb	r2, [r3, #60]
1458:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1459:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1460:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 2856              		.loc 1 1460 10
 2857 00b2 0023     		movs	r3, #0
 2858              	.L114:
1461:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2859              		.loc 1 1461 1
 2860 00b4 1846     		mov	r0, r3
 2861 00b6 0C37     		adds	r7, r7, #12
 2862              	.LCFI110:
 2863              		.cfi_def_cfa_offset 4
 2864 00b8 BD46     		mov	sp, r7
 2865              	.LCFI111:
 2866              		.cfi_def_cfa_register 13
 2867              		@ sp needed
 2868 00ba 5DF8047B 		ldr	r7, [sp], #4
 2869              	.LCFI112:
 2870              		.cfi_restore 7
 2871              		.cfi_def_cfa_offset 0
 2872 00be 7047     		bx	lr
 2873              		.cfi_endproc
 2874              	.LFE145:
 2876              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 2877              		.align	1
 2878              		.global	HAL_ADC_GetState
 2879              		.syntax unified
 2880              		.thumb
 2881              		.thumb_func
 2882              		.fpu fpv4-sp-d16
 2884              	HAL_ADC_GetState:
 2885              	.LFB146:
1462:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1463:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1464:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
ARM GAS  /tmp/ccdUPIhe.s 			page 77


1465:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1466:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1467:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 ADC Peripheral State functions
1468:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief   ADC Peripheral State functions 
1469:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
1470:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
1471:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
1472:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             ##### Peripheral State and errors functions #####
1473:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
1474:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
1475:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     This subsection provides functions allowing to
1476:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Check the ADC state
1477:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Check the ADC Error
1478:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****          
1479:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
1480:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1481:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1482:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1483:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1484:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  return the ADC state
1485:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1486:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1487:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL state
1488:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1489:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
1490:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2886              		.loc 1 1490 1
 2887              		.cfi_startproc
 2888              		@ args = 0, pretend = 0, frame = 8
 2889              		@ frame_needed = 1, uses_anonymous_args = 0
 2890              		@ link register save eliminated.
 2891 0000 80B4     		push	{r7}
 2892              	.LCFI113:
 2893              		.cfi_def_cfa_offset 4
 2894              		.cfi_offset 7, -4
 2895 0002 83B0     		sub	sp, sp, #12
 2896              	.LCFI114:
 2897              		.cfi_def_cfa_offset 16
 2898 0004 00AF     		add	r7, sp, #0
 2899              	.LCFI115:
 2900              		.cfi_def_cfa_register 7
 2901 0006 7860     		str	r0, [r7, #4]
1491:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
1492:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->State;
 2902              		.loc 1 1492 14
 2903 0008 7B68     		ldr	r3, [r7, #4]
 2904 000a 1B6C     		ldr	r3, [r3, #64]
1493:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2905              		.loc 1 1493 1
 2906 000c 1846     		mov	r0, r3
 2907 000e 0C37     		adds	r7, r7, #12
 2908              	.LCFI116:
 2909              		.cfi_def_cfa_offset 4
 2910 0010 BD46     		mov	sp, r7
 2911              	.LCFI117:
 2912              		.cfi_def_cfa_register 13
 2913              		@ sp needed
ARM GAS  /tmp/ccdUPIhe.s 			page 78


 2914 0012 5DF8047B 		ldr	r7, [sp], #4
 2915              	.LCFI118:
 2916              		.cfi_restore 7
 2917              		.cfi_def_cfa_offset 0
 2918 0016 7047     		bx	lr
 2919              		.cfi_endproc
 2920              	.LFE146:
 2922              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 2923              		.align	1
 2924              		.global	HAL_ADC_GetError
 2925              		.syntax unified
 2926              		.thumb
 2927              		.thumb_func
 2928              		.fpu fpv4-sp-d16
 2930              	HAL_ADC_GetError:
 2931              	.LFB147:
1494:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1495:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1496:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Return the ADC error code
1497:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1498:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1499:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval ADC Error Code
1500:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1501:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
1502:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2932              		.loc 1 1502 1
 2933              		.cfi_startproc
 2934              		@ args = 0, pretend = 0, frame = 8
 2935              		@ frame_needed = 1, uses_anonymous_args = 0
 2936              		@ link register save eliminated.
 2937 0000 80B4     		push	{r7}
 2938              	.LCFI119:
 2939              		.cfi_def_cfa_offset 4
 2940              		.cfi_offset 7, -4
 2941 0002 83B0     		sub	sp, sp, #12
 2942              	.LCFI120:
 2943              		.cfi_def_cfa_offset 16
 2944 0004 00AF     		add	r7, sp, #0
 2945              	.LCFI121:
 2946              		.cfi_def_cfa_register 7
 2947 0006 7860     		str	r0, [r7, #4]
1503:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->ErrorCode;
 2948              		.loc 1 1503 14
 2949 0008 7B68     		ldr	r3, [r7, #4]
 2950 000a 5B6C     		ldr	r3, [r3, #68]
1504:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2951              		.loc 1 1504 1
 2952 000c 1846     		mov	r0, r3
 2953 000e 0C37     		adds	r7, r7, #12
 2954              	.LCFI122:
 2955              		.cfi_def_cfa_offset 4
 2956 0010 BD46     		mov	sp, r7
 2957              	.LCFI123:
 2958              		.cfi_def_cfa_register 13
 2959              		@ sp needed
 2960 0012 5DF8047B 		ldr	r7, [sp], #4
 2961              	.LCFI124:
ARM GAS  /tmp/ccdUPIhe.s 			page 79


 2962              		.cfi_restore 7
 2963              		.cfi_def_cfa_offset 0
 2964 0016 7047     		bx	lr
 2965              		.cfi_endproc
 2966              	.LFE147:
 2968              		.section	.text.ADC_Init,"ax",%progbits
 2969              		.align	1
 2970              		.syntax unified
 2971              		.thumb
 2972              		.thumb_func
 2973              		.fpu fpv4-sp-d16
 2975              	ADC_Init:
 2976              	.LFB148:
1505:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1506:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1507:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1508:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1509:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1510:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
1511:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1512:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1513:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1514:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1515:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
1516:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in the ADC_InitStruct without initializing the ADC MSP.       
1517:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1518:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
1519:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1520:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1521:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc)
1522:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2977              		.loc 1 1522 1
 2978              		.cfi_startproc
 2979              		@ args = 0, pretend = 0, frame = 16
 2980              		@ frame_needed = 1, uses_anonymous_args = 0
 2981              		@ link register save eliminated.
 2982 0000 80B4     		push	{r7}
 2983              	.LCFI125:
 2984              		.cfi_def_cfa_offset 4
 2985              		.cfi_offset 7, -4
 2986 0002 85B0     		sub	sp, sp, #20
 2987              	.LCFI126:
 2988              		.cfi_def_cfa_offset 24
 2989 0004 00AF     		add	r7, sp, #0
 2990              	.LCFI127:
 2991              		.cfi_def_cfa_register 7
 2992 0006 7860     		str	r0, [r7, #4]
1523:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1524:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1525:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC parameters */
1526:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Pointer to the common control register to which is belonging hadc    */
1527:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1528:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* control register)                                                    */
1529:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 2993              		.loc 1 1529 17
 2994 0008 784B     		ldr	r3, .L126
 2995 000a FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccdUPIhe.s 			page 80


1530:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1531:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the ADC clock prescaler */
1532:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 2996              		.loc 1 1532 22
 2997 000c FB68     		ldr	r3, [r7, #12]
 2998 000e 5B68     		ldr	r3, [r3, #4]
 2999 0010 23F44032 		bic	r2, r3, #196608
 3000 0014 FB68     		ldr	r3, [r7, #12]
 3001 0016 5A60     		str	r2, [r3, #4]
1533:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 3002              		.loc 1 1533 22
 3003 0018 FB68     		ldr	r3, [r7, #12]
 3004 001a 5A68     		ldr	r2, [r3, #4]
 3005              		.loc 1 1533 36
 3006 001c 7B68     		ldr	r3, [r7, #4]
 3007 001e 5B68     		ldr	r3, [r3, #4]
 3008              		.loc 1 1533 22
 3009 0020 1A43     		orrs	r2, r2, r3
 3010 0022 FB68     		ldr	r3, [r7, #12]
 3011 0024 5A60     		str	r2, [r3, #4]
1534:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1535:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC scan mode */
1536:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 3012              		.loc 1 1536 7
 3013 0026 7B68     		ldr	r3, [r7, #4]
 3014 0028 1B68     		ldr	r3, [r3]
 3015              		.loc 1 1536 23
 3016 002a 5A68     		ldr	r2, [r3, #4]
 3017              		.loc 1 1536 7
 3018 002c 7B68     		ldr	r3, [r7, #4]
 3019 002e 1B68     		ldr	r3, [r3]
 3020              		.loc 1 1536 23
 3021 0030 22F48072 		bic	r2, r2, #256
 3022 0034 5A60     		str	r2, [r3, #4]
1537:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 3023              		.loc 1 1537 7
 3024 0036 7B68     		ldr	r3, [r7, #4]
 3025 0038 1B68     		ldr	r3, [r3]
 3026              		.loc 1 1537 23
 3027 003a 5968     		ldr	r1, [r3, #4]
 3028              		.loc 1 1537 27
 3029 003c 7B68     		ldr	r3, [r7, #4]
 3030 003e 1B69     		ldr	r3, [r3, #16]
 3031 0040 1A02     		lsls	r2, r3, #8
 3032              		.loc 1 1537 7
 3033 0042 7B68     		ldr	r3, [r7, #4]
 3034 0044 1B68     		ldr	r3, [r3]
 3035              		.loc 1 1537 23
 3036 0046 0A43     		orrs	r2, r2, r1
 3037 0048 5A60     		str	r2, [r3, #4]
1538:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1539:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC resolution */
1540:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 3038              		.loc 1 1540 7
 3039 004a 7B68     		ldr	r3, [r7, #4]
 3040 004c 1B68     		ldr	r3, [r3]
 3041              		.loc 1 1540 23
ARM GAS  /tmp/ccdUPIhe.s 			page 81


 3042 004e 5A68     		ldr	r2, [r3, #4]
 3043              		.loc 1 1540 7
 3044 0050 7B68     		ldr	r3, [r7, #4]
 3045 0052 1B68     		ldr	r3, [r3]
 3046              		.loc 1 1540 23
 3047 0054 22F04072 		bic	r2, r2, #50331648
 3048 0058 5A60     		str	r2, [r3, #4]
1541:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  hadc->Init.Resolution;
 3049              		.loc 1 1541 7
 3050 005a 7B68     		ldr	r3, [r7, #4]
 3051 005c 1B68     		ldr	r3, [r3]
 3052              		.loc 1 1541 23
 3053 005e 5968     		ldr	r1, [r3, #4]
 3054              		.loc 1 1541 37
 3055 0060 7B68     		ldr	r3, [r7, #4]
 3056 0062 9A68     		ldr	r2, [r3, #8]
 3057              		.loc 1 1541 7
 3058 0064 7B68     		ldr	r3, [r7, #4]
 3059 0066 1B68     		ldr	r3, [r3]
 3060              		.loc 1 1541 23
 3061 0068 0A43     		orrs	r2, r2, r1
 3062 006a 5A60     		str	r2, [r3, #4]
1542:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1543:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC data alignment */
1544:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 3063              		.loc 1 1544 7
 3064 006c 7B68     		ldr	r3, [r7, #4]
 3065 006e 1B68     		ldr	r3, [r3]
 3066              		.loc 1 1544 23
 3067 0070 9A68     		ldr	r2, [r3, #8]
 3068              		.loc 1 1544 7
 3069 0072 7B68     		ldr	r3, [r7, #4]
 3070 0074 1B68     		ldr	r3, [r3]
 3071              		.loc 1 1544 23
 3072 0076 22F40062 		bic	r2, r2, #2048
 3073 007a 9A60     		str	r2, [r3, #8]
1545:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= hadc->Init.DataAlign;
 3074              		.loc 1 1545 7
 3075 007c 7B68     		ldr	r3, [r7, #4]
 3076 007e 1B68     		ldr	r3, [r3]
 3077              		.loc 1 1545 23
 3078 0080 9968     		ldr	r1, [r3, #8]
 3079              		.loc 1 1545 36
 3080 0082 7B68     		ldr	r3, [r7, #4]
 3081 0084 DA68     		ldr	r2, [r3, #12]
 3082              		.loc 1 1545 7
 3083 0086 7B68     		ldr	r3, [r7, #4]
 3084 0088 1B68     		ldr	r3, [r3]
 3085              		.loc 1 1545 23
 3086 008a 0A43     		orrs	r2, r2, r1
 3087 008c 9A60     		str	r2, [r3, #8]
1546:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1547:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable external trigger if trigger selection is different of software  */
1548:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* start.                                                                 */
1549:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Note: This configuration keeps the hardware feature of parameter       */
1550:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
1551:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       software start.                                                  */
ARM GAS  /tmp/ccdUPIhe.s 			page 82


1552:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 3088              		.loc 1 1552 16
 3089 008e 7B68     		ldr	r3, [r7, #4]
 3090 0090 9B6A     		ldr	r3, [r3, #40]
 3091              		.loc 1 1552 5
 3092 0092 574A     		ldr	r2, .L126+4
 3093 0094 9342     		cmp	r3, r2
 3094 0096 22D0     		beq	.L122
1553:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1554:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Select external trigger to start conversion */
1555:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 3095              		.loc 1 1555 9
 3096 0098 7B68     		ldr	r3, [r7, #4]
 3097 009a 1B68     		ldr	r3, [r3]
 3098              		.loc 1 1555 25
 3099 009c 9A68     		ldr	r2, [r3, #8]
 3100              		.loc 1 1555 9
 3101 009e 7B68     		ldr	r3, [r7, #4]
 3102 00a0 1B68     		ldr	r3, [r3]
 3103              		.loc 1 1555 25
 3104 00a2 22F07062 		bic	r2, r2, #251658240
 3105 00a6 9A60     		str	r2, [r3, #8]
1556:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 3106              		.loc 1 1556 9
 3107 00a8 7B68     		ldr	r3, [r7, #4]
 3108 00aa 1B68     		ldr	r3, [r3]
 3109              		.loc 1 1556 25
 3110 00ac 9968     		ldr	r1, [r3, #8]
 3111              		.loc 1 1556 38
 3112 00ae 7B68     		ldr	r3, [r7, #4]
 3113 00b0 9A6A     		ldr	r2, [r3, #40]
 3114              		.loc 1 1556 9
 3115 00b2 7B68     		ldr	r3, [r7, #4]
 3116 00b4 1B68     		ldr	r3, [r3]
 3117              		.loc 1 1556 25
 3118 00b6 0A43     		orrs	r2, r2, r1
 3119 00b8 9A60     		str	r2, [r3, #8]
1557:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1558:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Select external trigger polarity */
1559:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 3120              		.loc 1 1559 9
 3121 00ba 7B68     		ldr	r3, [r7, #4]
 3122 00bc 1B68     		ldr	r3, [r3]
 3123              		.loc 1 1559 25
 3124 00be 9A68     		ldr	r2, [r3, #8]
 3125              		.loc 1 1559 9
 3126 00c0 7B68     		ldr	r3, [r7, #4]
 3127 00c2 1B68     		ldr	r3, [r3]
 3128              		.loc 1 1559 25
 3129 00c4 22F04052 		bic	r2, r2, #805306368
 3130 00c8 9A60     		str	r2, [r3, #8]
1560:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 3131              		.loc 1 1560 9
 3132 00ca 7B68     		ldr	r3, [r7, #4]
 3133 00cc 1B68     		ldr	r3, [r3]
 3134              		.loc 1 1560 25
 3135 00ce 9968     		ldr	r1, [r3, #8]
ARM GAS  /tmp/ccdUPIhe.s 			page 83


 3136              		.loc 1 1560 38
 3137 00d0 7B68     		ldr	r3, [r7, #4]
 3138 00d2 DA6A     		ldr	r2, [r3, #44]
 3139              		.loc 1 1560 9
 3140 00d4 7B68     		ldr	r3, [r7, #4]
 3141 00d6 1B68     		ldr	r3, [r3]
 3142              		.loc 1 1560 25
 3143 00d8 0A43     		orrs	r2, r2, r1
 3144 00da 9A60     		str	r2, [r3, #8]
 3145 00dc 0FE0     		b	.L123
 3146              	.L122:
1561:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1562:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1563:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1564:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Reset the external trigger */
1565:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 3147              		.loc 1 1565 9
 3148 00de 7B68     		ldr	r3, [r7, #4]
 3149 00e0 1B68     		ldr	r3, [r3]
 3150              		.loc 1 1565 25
 3151 00e2 9A68     		ldr	r2, [r3, #8]
 3152              		.loc 1 1565 9
 3153 00e4 7B68     		ldr	r3, [r7, #4]
 3154 00e6 1B68     		ldr	r3, [r3]
 3155              		.loc 1 1565 25
 3156 00e8 22F07062 		bic	r2, r2, #251658240
 3157 00ec 9A60     		str	r2, [r3, #8]
1566:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 3158              		.loc 1 1566 9
 3159 00ee 7B68     		ldr	r3, [r7, #4]
 3160 00f0 1B68     		ldr	r3, [r3]
 3161              		.loc 1 1566 25
 3162 00f2 9A68     		ldr	r2, [r3, #8]
 3163              		.loc 1 1566 9
 3164 00f4 7B68     		ldr	r3, [r7, #4]
 3165 00f6 1B68     		ldr	r3, [r3]
 3166              		.loc 1 1566 25
 3167 00f8 22F04052 		bic	r2, r2, #805306368
 3168 00fc 9A60     		str	r2, [r3, #8]
 3169              	.L123:
1567:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1568:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1569:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC continuous conversion mode */
1570:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 3170              		.loc 1 1570 7
 3171 00fe 7B68     		ldr	r3, [r7, #4]
 3172 0100 1B68     		ldr	r3, [r3]
 3173              		.loc 1 1570 23
 3174 0102 9A68     		ldr	r2, [r3, #8]
 3175              		.loc 1 1570 7
 3176 0104 7B68     		ldr	r3, [r7, #4]
 3177 0106 1B68     		ldr	r3, [r3]
 3178              		.loc 1 1570 23
 3179 0108 22F00202 		bic	r2, r2, #2
 3180 010c 9A60     		str	r2, [r3, #8]
1571:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode);
 3181              		.loc 1 1571 7
ARM GAS  /tmp/ccdUPIhe.s 			page 84


 3182 010e 7B68     		ldr	r3, [r7, #4]
 3183 0110 1B68     		ldr	r3, [r3]
 3184              		.loc 1 1571 23
 3185 0112 9968     		ldr	r1, [r3, #8]
 3186              		.loc 1 1571 26
 3187 0114 7B68     		ldr	r3, [r7, #4]
 3188 0116 9B69     		ldr	r3, [r3, #24]
 3189 0118 5A00     		lsls	r2, r3, #1
 3190              		.loc 1 1571 7
 3191 011a 7B68     		ldr	r3, [r7, #4]
 3192 011c 1B68     		ldr	r3, [r3]
 3193              		.loc 1 1571 23
 3194 011e 0A43     		orrs	r2, r2, r1
 3195 0120 9A60     		str	r2, [r3, #8]
1572:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1573:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.DiscontinuousConvMode != DISABLE)
 3196              		.loc 1 1573 16
 3197 0122 7B68     		ldr	r3, [r7, #4]
 3198 0124 1B6A     		ldr	r3, [r3, #32]
 3199              		.loc 1 1573 5
 3200 0126 002B     		cmp	r3, #0
 3201 0128 1BD0     		beq	.L124
1574:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1575:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
1576:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1577:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
1578:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 3202              		.loc 1 1578 9
 3203 012a 7B68     		ldr	r3, [r7, #4]
 3204 012c 1B68     		ldr	r3, [r3]
 3205              		.loc 1 1578 25
 3206 012e 5A68     		ldr	r2, [r3, #4]
 3207              		.loc 1 1578 9
 3208 0130 7B68     		ldr	r3, [r7, #4]
 3209 0132 1B68     		ldr	r3, [r3]
 3210              		.loc 1 1578 25
 3211 0134 42F40062 		orr	r2, r2, #2048
 3212 0138 5A60     		str	r2, [r3, #4]
1579:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1580:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the number of channels to be converted in discontinuous mode */
1581:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 3213              		.loc 1 1581 9
 3214 013a 7B68     		ldr	r3, [r7, #4]
 3215 013c 1B68     		ldr	r3, [r3]
 3216              		.loc 1 1581 25
 3217 013e 5A68     		ldr	r2, [r3, #4]
 3218              		.loc 1 1581 9
 3219 0140 7B68     		ldr	r3, [r7, #4]
 3220 0142 1B68     		ldr	r3, [r3]
 3221              		.loc 1 1581 25
 3222 0144 22F46042 		bic	r2, r2, #57344
 3223 0148 5A60     		str	r2, [r3, #4]
1582:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 3224              		.loc 1 1582 9
 3225 014a 7B68     		ldr	r3, [r7, #4]
 3226 014c 1B68     		ldr	r3, [r3]
 3227              		.loc 1 1582 25
ARM GAS  /tmp/ccdUPIhe.s 			page 85


 3228 014e 5968     		ldr	r1, [r3, #4]
 3229              		.loc 1 1582 29
 3230 0150 7B68     		ldr	r3, [r7, #4]
 3231 0152 5B6A     		ldr	r3, [r3, #36]
 3232 0154 013B     		subs	r3, r3, #1
 3233 0156 5A03     		lsls	r2, r3, #13
 3234              		.loc 1 1582 9
 3235 0158 7B68     		ldr	r3, [r7, #4]
 3236 015a 1B68     		ldr	r3, [r3]
 3237              		.loc 1 1582 25
 3238 015c 0A43     		orrs	r2, r2, r1
 3239 015e 5A60     		str	r2, [r3, #4]
 3240 0160 07E0     		b	.L125
 3241              	.L124:
1583:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1584:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1585:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1586:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
1587:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 3242              		.loc 1 1587 9
 3243 0162 7B68     		ldr	r3, [r7, #4]
 3244 0164 1B68     		ldr	r3, [r3]
 3245              		.loc 1 1587 25
 3246 0166 5A68     		ldr	r2, [r3, #4]
 3247              		.loc 1 1587 9
 3248 0168 7B68     		ldr	r3, [r7, #4]
 3249 016a 1B68     		ldr	r3, [r3]
 3250              		.loc 1 1587 25
 3251 016c 22F40062 		bic	r2, r2, #2048
 3252 0170 5A60     		str	r2, [r3, #4]
 3253              	.L125:
1588:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1589:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1590:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC number of conversion */
1591:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 3254              		.loc 1 1591 7
 3255 0172 7B68     		ldr	r3, [r7, #4]
 3256 0174 1B68     		ldr	r3, [r3]
 3257              		.loc 1 1591 24
 3258 0176 DA6A     		ldr	r2, [r3, #44]
 3259              		.loc 1 1591 7
 3260 0178 7B68     		ldr	r3, [r7, #4]
 3261 017a 1B68     		ldr	r3, [r3]
 3262              		.loc 1 1591 24
 3263 017c 22F47002 		bic	r2, r2, #15728640
 3264 0180 DA62     		str	r2, [r3, #44]
1592:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 3265              		.loc 1 1592 7
 3266 0182 7B68     		ldr	r3, [r7, #4]
 3267 0184 1B68     		ldr	r3, [r3]
 3268              		.loc 1 1592 24
 3269 0186 D96A     		ldr	r1, [r3, #44]
 3270              		.loc 1 1592 28
 3271 0188 7B68     		ldr	r3, [r7, #4]
 3272 018a DB69     		ldr	r3, [r3, #28]
 3273 018c 013B     		subs	r3, r3, #1
 3274 018e 1A05     		lsls	r2, r3, #20
ARM GAS  /tmp/ccdUPIhe.s 			page 86


 3275              		.loc 1 1592 7
 3276 0190 7B68     		ldr	r3, [r7, #4]
 3277 0192 1B68     		ldr	r3, [r3]
 3278              		.loc 1 1592 24
 3279 0194 0A43     		orrs	r2, r2, r1
 3280 0196 DA62     		str	r2, [r3, #44]
1593:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1594:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC DMA continuous request */
1595:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 3281              		.loc 1 1595 7
 3282 0198 7B68     		ldr	r3, [r7, #4]
 3283 019a 1B68     		ldr	r3, [r3]
 3284              		.loc 1 1595 23
 3285 019c 9A68     		ldr	r2, [r3, #8]
 3286              		.loc 1 1595 7
 3287 019e 7B68     		ldr	r3, [r7, #4]
 3288 01a0 1B68     		ldr	r3, [r3]
 3289              		.loc 1 1595 23
 3290 01a2 22F40072 		bic	r2, r2, #512
 3291 01a6 9A60     		str	r2, [r3, #8]
1596:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_DMAContReq(hadc->Init.DMAContinuousRequests);
 3292              		.loc 1 1596 7
 3293 01a8 7B68     		ldr	r3, [r7, #4]
 3294 01aa 1B68     		ldr	r3, [r3]
 3295              		.loc 1 1596 23
 3296 01ac 9968     		ldr	r1, [r3, #8]
 3297              		.loc 1 1596 26
 3298 01ae 7B68     		ldr	r3, [r7, #4]
 3299 01b0 1B6B     		ldr	r3, [r3, #48]
 3300 01b2 5A02     		lsls	r2, r3, #9
 3301              		.loc 1 1596 7
 3302 01b4 7B68     		ldr	r3, [r7, #4]
 3303 01b6 1B68     		ldr	r3, [r3]
 3304              		.loc 1 1596 23
 3305 01b8 0A43     		orrs	r2, r2, r1
 3306 01ba 9A60     		str	r2, [r3, #8]
1597:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1598:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC end of conversion selection */
1599:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 3307              		.loc 1 1599 7
 3308 01bc 7B68     		ldr	r3, [r7, #4]
 3309 01be 1B68     		ldr	r3, [r3]
 3310              		.loc 1 1599 23
 3311 01c0 9A68     		ldr	r2, [r3, #8]
 3312              		.loc 1 1599 7
 3313 01c2 7B68     		ldr	r3, [r7, #4]
 3314 01c4 1B68     		ldr	r3, [r3]
 3315              		.loc 1 1599 23
 3316 01c6 22F48062 		bic	r2, r2, #1024
 3317 01ca 9A60     		str	r2, [r3, #8]
1600:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 3318              		.loc 1 1600 7
 3319 01cc 7B68     		ldr	r3, [r7, #4]
 3320 01ce 1B68     		ldr	r3, [r3]
 3321              		.loc 1 1600 23
 3322 01d0 9968     		ldr	r1, [r3, #8]
 3323              		.loc 1 1600 26
ARM GAS  /tmp/ccdUPIhe.s 			page 87


 3324 01d2 7B68     		ldr	r3, [r7, #4]
 3325 01d4 5B69     		ldr	r3, [r3, #20]
 3326 01d6 9A02     		lsls	r2, r3, #10
 3327              		.loc 1 1600 7
 3328 01d8 7B68     		ldr	r3, [r7, #4]
 3329 01da 1B68     		ldr	r3, [r3]
 3330              		.loc 1 1600 23
 3331 01dc 0A43     		orrs	r2, r2, r1
 3332 01de 9A60     		str	r2, [r3, #8]
1601:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3333              		.loc 1 1601 1
 3334 01e0 00BF     		nop
 3335 01e2 1437     		adds	r7, r7, #20
 3336              	.LCFI128:
 3337              		.cfi_def_cfa_offset 4
 3338 01e4 BD46     		mov	sp, r7
 3339              	.LCFI129:
 3340              		.cfi_def_cfa_register 13
 3341              		@ sp needed
 3342 01e6 5DF8047B 		ldr	r7, [sp], #4
 3343              	.LCFI130:
 3344              		.cfi_restore 7
 3345              		.cfi_def_cfa_offset 0
 3346 01ea 7047     		bx	lr
 3347              	.L127:
 3348              		.align	2
 3349              	.L126:
 3350 01ec 00230140 		.word	1073816320
 3351 01f0 0100000F 		.word	251658241
 3352              		.cfi_endproc
 3353              	.LFE148:
 3355              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 3356              		.align	1
 3357              		.syntax unified
 3358              		.thumb
 3359              		.thumb_func
 3360              		.fpu fpv4-sp-d16
 3362              	ADC_DMAConvCplt:
 3363              	.LFB149:
1602:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1603:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1604:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA transfer complete callback. 
1605:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1606:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1607:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1608:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1609:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)   
1610:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3364              		.loc 1 1610 1
 3365              		.cfi_startproc
 3366              		@ args = 0, pretend = 0, frame = 16
 3367              		@ frame_needed = 1, uses_anonymous_args = 0
 3368 0000 80B5     		push	{r7, lr}
 3369              	.LCFI131:
 3370              		.cfi_def_cfa_offset 8
 3371              		.cfi_offset 7, -8
 3372              		.cfi_offset 14, -4
ARM GAS  /tmp/ccdUPIhe.s 			page 88


 3373 0002 84B0     		sub	sp, sp, #16
 3374              	.LCFI132:
 3375              		.cfi_def_cfa_offset 24
 3376 0004 00AF     		add	r7, sp, #0
 3377              	.LCFI133:
 3378              		.cfi_def_cfa_register 7
 3379 0006 7860     		str	r0, [r7, #4]
1611:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
1612:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3380              		.loc 1 1612 22
 3381 0008 7B68     		ldr	r3, [r7, #4]
 3382 000a 9B6B     		ldr	r3, [r3, #56]
 3383 000c FB60     		str	r3, [r7, #12]
1613:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1614:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
1615:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 3384              		.loc 1 1615 7
 3385 000e FB68     		ldr	r3, [r7, #12]
 3386 0010 1B6C     		ldr	r3, [r3, #64]
 3387 0012 03F05003 		and	r3, r3, #80
 3388              		.loc 1 1615 6
 3389 0016 002B     		cmp	r3, #0
 3390 0018 3CD1     		bne	.L129
1616:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1617:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine */
1618:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 3391              		.loc 1 1618 5
 3392 001a FB68     		ldr	r3, [r7, #12]
 3393 001c 1B6C     		ldr	r3, [r3, #64]
 3394 001e 43F40072 		orr	r2, r3, #512
 3395 0022 FB68     		ldr	r3, [r7, #12]
 3396 0024 1A64     		str	r2, [r3, #64]
1619:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1620:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
1621:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
1622:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, there is no independent flag of end of sequence.   */
1623:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
1624:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
1625:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       of end of sequence.                                            */
1626:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 3397              		.loc 1 1626 8
 3398 0026 FB68     		ldr	r3, [r7, #12]
 3399 0028 1B68     		ldr	r3, [r3]
 3400 002a 9B68     		ldr	r3, [r3, #8]
 3401 002c 03F04053 		and	r3, r3, #805306368
 3402              		.loc 1 1626 7
 3403 0030 002B     		cmp	r3, #0
 3404 0032 2BD1     		bne	.L130
1627:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 3405              		.loc 1 1627 19 discriminator 1
 3406 0034 FB68     		ldr	r3, [r7, #12]
 3407 0036 9B69     		ldr	r3, [r3, #24]
1626:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 3408              		.loc 1 1626 62 discriminator 1
 3409 0038 002B     		cmp	r3, #0
 3410 003a 27D1     		bne	.L130
1628:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
ARM GAS  /tmp/ccdUPIhe.s 			page 89


 3411              		.loc 1 1628 9
 3412 003c FB68     		ldr	r3, [r7, #12]
 3413 003e 1B68     		ldr	r3, [r3]
 3414 0040 DB6A     		ldr	r3, [r3, #44]
 3415 0042 03F47003 		and	r3, r3, #15728640
1627:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 3416              		.loc 1 1627 62
 3417 0046 002B     		cmp	r3, #0
 3418 0048 06D0     		beq	.L131
1629:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 3419              		.loc 1 1629 9
 3420 004a FB68     		ldr	r3, [r7, #12]
 3421 004c 1B68     		ldr	r3, [r3]
 3422 004e 9B68     		ldr	r3, [r3, #8]
 3423 0050 03F48063 		and	r3, r3, #1024
1628:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 3424              		.loc 1 1628 58
 3425 0054 002B     		cmp	r3, #0
 3426 0056 19D1     		bne	.L130
 3427              	.L131:
1630:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1631:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
1632:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
1633:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
1634:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
1635:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 3428              		.loc 1 1635 7
 3429 0058 FB68     		ldr	r3, [r7, #12]
 3430 005a 1B68     		ldr	r3, [r3]
 3431 005c 5A68     		ldr	r2, [r3, #4]
 3432 005e FB68     		ldr	r3, [r7, #12]
 3433 0060 1B68     		ldr	r3, [r3]
 3434 0062 22F02002 		bic	r2, r2, #32
 3435 0066 5A60     		str	r2, [r3, #4]
1636:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1637:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1638:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 3436              		.loc 1 1638 7
 3437 0068 FB68     		ldr	r3, [r7, #12]
 3438 006a 1B6C     		ldr	r3, [r3, #64]
 3439 006c 23F48072 		bic	r2, r3, #256
 3440 0070 FB68     		ldr	r3, [r7, #12]
 3441 0072 1A64     		str	r2, [r3, #64]
1639:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1640:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 3442              		.loc 1 1640 11
 3443 0074 FB68     		ldr	r3, [r7, #12]
 3444 0076 1B6C     		ldr	r3, [r3, #64]
 3445 0078 03F48053 		and	r3, r3, #4096
 3446              		.loc 1 1640 10
 3447 007c 002B     		cmp	r3, #0
 3448 007e 05D1     		bne	.L130
1641:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1642:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 3449              		.loc 1 1642 9
 3450 0080 FB68     		ldr	r3, [r7, #12]
 3451 0082 1B6C     		ldr	r3, [r3, #64]
ARM GAS  /tmp/ccdUPIhe.s 			page 90


 3452 0084 43F00102 		orr	r2, r3, #1
 3453 0088 FB68     		ldr	r3, [r7, #12]
 3454 008a 1A64     		str	r2, [r3, #64]
 3455              	.L130:
1643:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1644:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1645:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1646:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */
1647:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 3456              		.loc 1 1647 5
 3457 008c F868     		ldr	r0, [r7, #12]
 3458 008e FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
1648:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1649:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1650:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1651:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Call DMA error callback */
1652:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback(hdma);
1653:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1654:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3459              		.loc 1 1654 1
 3460 0092 04E0     		b	.L133
 3461              	.L129:
1652:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 3462              		.loc 1 1652 9
 3463 0094 FB68     		ldr	r3, [r7, #12]
 3464 0096 9B6B     		ldr	r3, [r3, #56]
1652:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 3465              		.loc 1 1652 21
 3466 0098 DB6C     		ldr	r3, [r3, #76]
1652:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 3467              		.loc 1 1652 5
 3468 009a 7868     		ldr	r0, [r7, #4]
 3469 009c 9847     		blx	r3
 3470              	.LVL0:
 3471              	.L133:
 3472              		.loc 1 1654 1
 3473 009e 00BF     		nop
 3474 00a0 1037     		adds	r7, r7, #16
 3475              	.LCFI134:
 3476              		.cfi_def_cfa_offset 8
 3477 00a2 BD46     		mov	sp, r7
 3478              	.LCFI135:
 3479              		.cfi_def_cfa_register 13
 3480              		@ sp needed
 3481 00a4 80BD     		pop	{r7, pc}
 3482              		.cfi_endproc
 3483              	.LFE149:
 3485              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 3486              		.align	1
 3487              		.syntax unified
 3488              		.thumb
 3489              		.thumb_func
 3490              		.fpu fpv4-sp-d16
 3492              	ADC_DMAHalfConvCplt:
 3493              	.LFB150:
1655:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1656:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
ARM GAS  /tmp/ccdUPIhe.s 			page 91


1657:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA half transfer complete callback. 
1658:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1659:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1660:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1661:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1662:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
1663:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3494              		.loc 1 1663 1
 3495              		.cfi_startproc
 3496              		@ args = 0, pretend = 0, frame = 16
 3497              		@ frame_needed = 1, uses_anonymous_args = 0
 3498 0000 80B5     		push	{r7, lr}
 3499              	.LCFI136:
 3500              		.cfi_def_cfa_offset 8
 3501              		.cfi_offset 7, -8
 3502              		.cfi_offset 14, -4
 3503 0002 84B0     		sub	sp, sp, #16
 3504              	.LCFI137:
 3505              		.cfi_def_cfa_offset 24
 3506 0004 00AF     		add	r7, sp, #0
 3507              	.LCFI138:
 3508              		.cfi_def_cfa_register 7
 3509 0006 7860     		str	r0, [r7, #4]
1664:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3510              		.loc 1 1664 22
 3511 0008 7B68     		ldr	r3, [r7, #4]
 3512 000a 9B6B     		ldr	r3, [r3, #56]
 3513 000c FB60     		str	r3, [r7, #12]
1665:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Conversion complete callback */
1666:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc); 
 3514              		.loc 1 1666 3
 3515 000e F868     		ldr	r0, [r7, #12]
 3516 0010 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
1667:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3517              		.loc 1 1667 1
 3518 0014 00BF     		nop
 3519 0016 1037     		adds	r7, r7, #16
 3520              	.LCFI139:
 3521              		.cfi_def_cfa_offset 8
 3522 0018 BD46     		mov	sp, r7
 3523              	.LCFI140:
 3524              		.cfi_def_cfa_register 13
 3525              		@ sp needed
 3526 001a 80BD     		pop	{r7, pc}
 3527              		.cfi_endproc
 3528              	.LFE150:
 3530              		.section	.text.ADC_DMAError,"ax",%progbits
 3531              		.align	1
 3532              		.syntax unified
 3533              		.thumb
 3534              		.thumb_func
 3535              		.fpu fpv4-sp-d16
 3537              	ADC_DMAError:
 3538              	.LFB151:
1668:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1669:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1670:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA error callback 
ARM GAS  /tmp/ccdUPIhe.s 			page 92


1671:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1672:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1673:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1674:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1675:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
1676:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3539              		.loc 1 1676 1
 3540              		.cfi_startproc
 3541              		@ args = 0, pretend = 0, frame = 16
 3542              		@ frame_needed = 1, uses_anonymous_args = 0
 3543 0000 80B5     		push	{r7, lr}
 3544              	.LCFI141:
 3545              		.cfi_def_cfa_offset 8
 3546              		.cfi_offset 7, -8
 3547              		.cfi_offset 14, -4
 3548 0002 84B0     		sub	sp, sp, #16
 3549              	.LCFI142:
 3550              		.cfi_def_cfa_offset 24
 3551 0004 00AF     		add	r7, sp, #0
 3552              	.LCFI143:
 3553              		.cfi_def_cfa_register 7
 3554 0006 7860     		str	r0, [r7, #4]
1677:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3555              		.loc 1 1677 22
 3556 0008 7B68     		ldr	r3, [r7, #4]
 3557 000a 9B6B     		ldr	r3, [r3, #56]
 3558 000c FB60     		str	r3, [r7, #12]
1678:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->State= HAL_ADC_STATE_ERROR_DMA;
 3559              		.loc 1 1678 14
 3560 000e FB68     		ldr	r3, [r7, #12]
 3561 0010 4022     		movs	r2, #64
 3562 0012 1A64     		str	r2, [r3, #64]
1679:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC error code to DMA error */
1680:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 3563              		.loc 1 1680 19
 3564 0014 FB68     		ldr	r3, [r7, #12]
 3565 0016 5B6C     		ldr	r3, [r3, #68]
 3566 0018 43F00402 		orr	r2, r3, #4
 3567 001c FB68     		ldr	r3, [r7, #12]
 3568 001e 5A64     		str	r2, [r3, #68]
1681:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc); 
 3569              		.loc 1 1681 3
 3570 0020 F868     		ldr	r0, [r7, #12]
 3571 0022 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
1682:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3572              		.loc 1 1682 1
 3573 0026 00BF     		nop
 3574 0028 1037     		adds	r7, r7, #16
 3575              	.LCFI144:
 3576              		.cfi_def_cfa_offset 8
 3577 002a BD46     		mov	sp, r7
 3578              	.LCFI145:
 3579              		.cfi_def_cfa_register 13
 3580              		@ sp needed
 3581 002c 80BD     		pop	{r7, pc}
 3582              		.cfi_endproc
 3583              	.LFE151:
ARM GAS  /tmp/ccdUPIhe.s 			page 93


 3585              		.text
 3586              	.Letext0:
 3587              		.file 2 "/home/hao/Documents/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 3588              		.file 3 "/home/hao/Documents/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 3589              		.file 4 "./Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 3590              		.file 5 "./Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3591              		.file 6 "./Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3592              		.file 7 "./Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3593              		.file 8 "./Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 3594              		.file 9 "./Libraries/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
ARM GAS  /tmp/ccdUPIhe.s 			page 94


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_adc.c
     /tmp/ccdUPIhe.s:18     .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/ccdUPIhe.s:26     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/ccdUPIhe.s:228    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccdUPIhe.s:2975   .text.ADC_Init:0000000000000000 ADC_Init
     /tmp/ccdUPIhe.s:130    .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/ccdUPIhe.s:137    .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/ccdUPIhe.s:271    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccdUPIhe.s:221    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccdUPIhe.s:264    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccdUPIhe.s:307    .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/ccdUPIhe.s:314    .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/ccdUPIhe.s:535    .text.HAL_ADC_Start:000000000000013c $d
     /tmp/ccdUPIhe.s:543    .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/ccdUPIhe.s:550    .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/ccdUPIhe.s:631    .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/ccdUPIhe.s:638    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/ccdUPIhe.s:816    .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/ccdUPIhe.s:823    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/ccdUPIhe.s:947    .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/ccdUPIhe.s:954    .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/ccdUPIhe.s:1184   .text.HAL_ADC_Start_IT:0000000000000150 $d
     /tmp/ccdUPIhe.s:1192   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/ccdUPIhe.s:1199   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/ccdUPIhe.s:1289   .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/ccdUPIhe.s:1296   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/ccdUPIhe.s:2140   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccdUPIhe.s:2226   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/ccdUPIhe.s:2269   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/ccdUPIhe.s:1685   .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/ccdUPIhe.s:1692   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/ccdUPIhe.s:1961   .text.HAL_ADC_Start_DMA:0000000000000188 $d
     /tmp/ccdUPIhe.s:3362   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/ccdUPIhe.s:3492   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/ccdUPIhe.s:3537   .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/ccdUPIhe.s:1972   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/ccdUPIhe.s:1979   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
     /tmp/ccdUPIhe.s:2085   .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/ccdUPIhe.s:2092   .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/ccdUPIhe.s:2133   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccdUPIhe.s:2176   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccdUPIhe.s:2183   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccdUPIhe.s:2219   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/ccdUPIhe.s:2262   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/ccdUPIhe.s:2305   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/ccdUPIhe.s:2312   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/ccdUPIhe.s:2708   .text.HAL_ADC_ConfigChannel:0000000000000238 $d
     /tmp/ccdUPIhe.s:2717   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/ccdUPIhe.s:2724   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccdUPIhe.s:2877   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/ccdUPIhe.s:2884   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/ccdUPIhe.s:2923   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/ccdUPIhe.s:2930   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
     /tmp/ccdUPIhe.s:2969   .text.ADC_Init:0000000000000000 $t
     /tmp/ccdUPIhe.s:3350   .text.ADC_Init:00000000000001ec $d
     /tmp/ccdUPIhe.s:3356   .text.ADC_DMAConvCplt:0000000000000000 $t
ARM GAS  /tmp/ccdUPIhe.s 			page 95


     /tmp/ccdUPIhe.s:3486   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/ccdUPIhe.s:3531   .text.ADC_DMAError:0000000000000000 $t

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_ADCEx_InjectedConvCpltCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
