ARM GAS  /tmp/ccIGChKB.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_USART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_USART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_USART_Init:
  27              	.LFB126:
  28              		.file 1 "./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c"
   1:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
   2:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   ******************************************************************************
   3:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @file    stm32f4xx_hal_usart.c
   4:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @author  MCD Application Team
   5:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief   USART HAL module driver.
   6:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *          This file provides firmware functions to manage the following
   7:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *          functionalities of the Universal Synchronous Asynchronous Receiver Transmitter (USART)
   8:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *           + Initialization and de-initialization functions
   9:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *           + IO operation functions
  10:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *           + Peripheral Control functions
  11:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   @verbatim
  12:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   ==============================================================================
  13:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****                         ##### How to use this driver #####
  14:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   ==============================================================================
  15:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   [..]
  16:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     The USART HAL driver can be used as follows:
  17:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
  18:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     (#) Declare a USART_HandleTypeDef handle structure.
  19:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     (#) Initialize the USART low level resources by implementing the HAL_USART_MspInit () API:
  20:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (##) Enable the USARTx interface clock.
  21:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (##) USART pins configuration:
  22:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              (+++) Enable the clock for the USART GPIOs.
  23:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              (+++) Configure these USART pins as alternate function pull-up.
  24:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_USART_Transmit_IT(),
  25:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              HAL_USART_Receive_IT() and HAL_USART_TransmitReceive_IT() APIs):
  26:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              (+++) Configure the USARTx interrupt priority.
  27:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              (+++) Enable the NVIC USART IRQ handle.
  28:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_USART_Transmit_DMA()
  29:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              HAL_USART_Receive_IT() and HAL_USART_TransmitReceive_IT() APIs):
  30:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              (+++) Declare a DMA handle structure for the Tx/Rx stream.
ARM GAS  /tmp/ccIGChKB.s 			page 2


  31:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              (+++) Enable the DMAx interface clock.
  32:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  33:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              (+++) Configure the DMA Tx/Rx Stream.
  34:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              (+++) Associate the initialized DMA handle to the USART DMA Tx/Rx handle.
  35:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              (+++) Configure the priority and enable the NVIC for the transfer complete interrupt o
  36:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
  37:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  38:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         flow control and Mode(Receiver/Transmitter) in the husart Init structure.
  39:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
  40:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     (#) Initialize the USART registers by calling the HAL_USART_Init() API:
  41:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) These APIs configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  42:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              by calling the customized HAL_USART_MspInit(&husart) API.
  43:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
  44:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         -@@- The specific USART interrupts (Transmission complete interrupt,
  45:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              RXNE interrupt and Error Interrupts) will be managed using the macros
  46:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              __HAL_USART_ENABLE_IT() and __HAL_USART_DISABLE_IT() inside the transmit and receive p
  47:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
  48:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     (#) Three operation modes are available within this driver :
  49:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
  50:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      *** Polling mode IO operation ***
  51:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      =================================
  52:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      [..]
  53:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) Send an amount of data in blocking mode using HAL_USART_Transmit()
  54:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) Receive an amount of data in blocking mode using HAL_USART_Receive()
  55:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
  56:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      *** Interrupt mode IO operation ***
  57:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      ===================================
  58:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      [..]
  59:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) Send an amount of data in non blocking mode using HAL_USART_Transmit_IT()
  60:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) At transmission end of transfer HAL_USART_TxHalfCpltCallback is executed and user can
  61:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_TxCpltCallback
  62:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) Receive an amount of data in non blocking mode using HAL_USART_Receive_IT()
  63:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) At reception end of transfer HAL_USART_RxCpltCallback is executed and user can
  64:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_RxCpltCallback
  65:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) In case of transfer Error, HAL_USART_ErrorCallback() function is executed and user can
  66:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_ErrorCallback
  67:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
  68:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      *** DMA mode IO operation ***
  69:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      ==============================
  70:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      [..]
  71:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_USART_Transmit_DMA()
  72:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) At transmission end of half transfer HAL_USART_TxHalfCpltCallback is executed and user c
  73:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_TxHalfCpltCallback
  74:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) At transmission end of transfer HAL_USART_TxCpltCallback is executed and user can
  75:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_TxCpltCallback
  76:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_USART_Receive_DMA()
  77:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) At reception end of half transfer HAL_USART_RxHalfCpltCallback is executed and user can
  78:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_RxHalfCpltCallback
  79:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) At reception end of transfer HAL_USART_RxCpltCallback is executed and user can
  80:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_RxCpltCallback
  81:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) In case of transfer Error, HAL_USART_ErrorCallback() function is executed and user can
  82:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_ErrorCallback
  83:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) Pause the DMA Transfer using HAL_USART_DMAPause()
  84:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) Resume the DMA Transfer using HAL_USART_DMAResume()
  85:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) Stop the DMA Transfer using HAL_USART_DMAStop()
  86:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
  87:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      *** USART HAL driver macros list ***
ARM GAS  /tmp/ccIGChKB.s 			page 3


  88:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      =============================================
  89:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      [..]
  90:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        Below the list of most used macros in USART HAL driver.
  91:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
  92:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) __HAL_USART_ENABLE: Enable the USART peripheral
  93:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) __HAL_USART_DISABLE: Disable the USART peripheral
  94:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) __HAL_USART_GET_FLAG : Check whether the specified USART flag is set or not
  95:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) __HAL_USART_CLEAR_FLAG : Clear the specified USART pending flag
  96:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) __HAL_USART_ENABLE_IT: Enable the specified USART interrupt
  97:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (+) __HAL_USART_DISABLE_IT: Disable the specified USART interrupt
  98:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
  99:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      [..]
 100:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        (@) You can refer to the USART HAL driver header file for more useful macros
 101:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 102:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   @endverbatim
 103:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   ******************************************************************************
 104:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @attention
 105:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *
 106:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 107:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *
 108:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 109:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * are permitted provided that the following conditions are met:
 110:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 111:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *      this list of conditions and the following disclaimer.
 112:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 113:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *      this list of conditions and the following disclaimer in the documentation
 114:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *      and/or other materials provided with the distribution.
 115:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 116:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *      may be used to endorse or promote products derived from this software
 117:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *      without specific prior written permission.
 118:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *
 119:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 120:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 121:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 122:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 123:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 124:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 125:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 126:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 127:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 128:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 129:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *
 130:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   ******************************************************************************
 131:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 132:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 133:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /* Includes ------------------------------------------------------------------*/
 134:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** #include "stm32f4xx_hal.h"
 135:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 136:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 137:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @{
 138:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 139:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 140:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /** @defgroup USART USART
 141:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief HAL USART Synchronous module driver
 142:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @{
 143:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 144:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** #ifdef HAL_USART_MODULE_ENABLED
ARM GAS  /tmp/ccIGChKB.s 			page 4


 145:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /* Private typedef -----------------------------------------------------------*/
 146:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /* Private define ------------------------------------------------------------*/
 147:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /** @addtogroup USART_Private_Constants
 148:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @{
 149:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 150:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** #define DUMMY_DATA           0xFFFFU
 151:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** #define USART_TIMEOUT_VALUE  22000U
 152:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
 153:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @}
 154:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 155:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /* Private macro -------------------------------------------------------------*/
 156:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /* Private variables ---------------------------------------------------------*/
 157:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /* Private function prototypes -----------------------------------------------*/
 158:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /* Private functions ---------------------------------------------------------*/
 159:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /** @addtogroup USART_Private_Functions
 160:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @{
 161:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 162:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_EndTxTransfer(USART_HandleTypeDef *husart);
 163:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_EndRxTransfer(USART_HandleTypeDef *husart);
 164:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static HAL_StatusTypeDef USART_Transmit_IT(USART_HandleTypeDef *husart);
 165:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static HAL_StatusTypeDef USART_EndTransmit_IT(USART_HandleTypeDef *husart);
 166:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static HAL_StatusTypeDef USART_Receive_IT(USART_HandleTypeDef *husart);
 167:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static HAL_StatusTypeDef USART_TransmitReceive_IT(USART_HandleTypeDef *husart);
 168:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_SetConfig (USART_HandleTypeDef *husart);
 169:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 170:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 171:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 172:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 173:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_DMAError(DMA_HandleTypeDef *hdma);
 174:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 175:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 176:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 177:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static HAL_StatusTypeDef USART_WaitOnFlagUntilTimeout(USART_HandleTypeDef *husart, uint32_t Flag, F
 179:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
 180:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @}
 181:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 182:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 183:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /* Exported functions --------------------------------------------------------*/
 184:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /** @defgroup USART_Exported_Functions USART Exported Functions
 185:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @{
 186:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 187:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 188:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /** @defgroup USART_Exported_Functions_Group1 USART Initialization and de-initialization functions
 189:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *  @brief    Initialization and Configuration functions
 190:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *
 191:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** @verbatim
 192:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   ==============================================================================
 193:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****               ##### Initialization and Configuration functions #####
 194:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   ==============================================================================
 195:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   [..]
 196:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   This subsection provides a set of functions allowing to initialize the USART
 197:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   in asynchronous and in synchronous modes.
 198:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   (+) For the asynchronous mode only these parameters can be configured:
 199:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       (++) Baud Rate
 200:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       (++) Word Length
 201:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       (++) Stop Bit
ARM GAS  /tmp/ccIGChKB.s 			page 5


 202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       (++) Parity: If the parity is enabled, then the MSB bit of the data written
 203:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****            in the data register is transmitted but is changed by the parity bit.
 204:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 205:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****            please refer to Reference manual for possible USART frame formats.
 206:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       (++) USART polarity
 207:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       (++) USART phase
 208:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       (++) USART LastBit
 209:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       (++) Receiver/transmitter modes
 210:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 211:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   [..]
 212:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     The HAL_USART_Init() function follows the USART  synchronous configuration
 213:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     procedure (details for the procedure are available in reference manual (RM0329)).
 214:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 215:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** @endverbatim
 216:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @{
 217:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 218:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 219:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
 220:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Initializes the USART mode according to the specified
 221:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *         parameters in the USART_InitTypeDef and create the associated handle.
 222:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
 223:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
 224:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
 225:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 226:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Init(USART_HandleTypeDef *husart)
 227:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
  29              		.loc 1 227 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 228:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Check the USART handle allocation */
 229:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart == NULL)
  45              		.loc 1 229 5
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 230:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 231:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_ERROR;
  49              		.loc 1 231 12
  50 000e 0123     		movs	r3, #1
  51 0010 33E0     		b	.L3
  52              	.L2:
 232:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 233:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 234:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Check the parameters */
ARM GAS  /tmp/ccIGChKB.s 			page 6


 235:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   assert_param(IS_USART_INSTANCE(husart->Instance));
 236:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 237:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_RESET)
  53              		.loc 1 237 12
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 93F83D30 		ldrb	r3, [r3, #61]
  56 0018 DBB2     		uxtb	r3, r3
  57              		.loc 1 237 5
  58 001a 002B     		cmp	r3, #0
  59 001c 06D1     		bne	.L4
 238:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 239:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Allocate lock resource and initialize it */
 240:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->Lock = HAL_UNLOCKED;
  60              		.loc 1 240 18
  61 001e 7B68     		ldr	r3, [r7, #4]
  62 0020 0022     		movs	r2, #0
  63 0022 83F83C20 		strb	r2, [r3, #60]
 241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Init the low level hardware */
 242:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     HAL_USART_MspInit(husart);
  64              		.loc 1 242 5
  65 0026 7868     		ldr	r0, [r7, #4]
  66 0028 FFF7FEFF 		bl	HAL_USART_MspInit
  67              	.L4:
 243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 244:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 245:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->State = HAL_USART_STATE_BUSY;
  68              		.loc 1 245 17
  69 002c 7B68     		ldr	r3, [r7, #4]
  70 002e 0222     		movs	r2, #2
  71 0030 83F83D20 		strb	r2, [r3, #61]
 246:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 247:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Set the USART Communication parameters */
 248:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   USART_SetConfig(husart);
  72              		.loc 1 248 3
  73 0034 7868     		ldr	r0, [r7, #4]
  74 0036 FFF7FEFF 		bl	USART_SetConfig
 249:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 250:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* In USART mode, the following bits must be kept cleared:
 251:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      - LINEN bit in the USART_CR2 register
 252:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      - HDSEL, SCEN and IREN bits in the USART_CR3 register */
 253:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR2, USART_CR2_LINEN);
  75              		.loc 1 253 3
  76 003a 7B68     		ldr	r3, [r7, #4]
  77 003c 1B68     		ldr	r3, [r3]
  78 003e 1A69     		ldr	r2, [r3, #16]
  79 0040 7B68     		ldr	r3, [r7, #4]
  80 0042 1B68     		ldr	r3, [r3]
  81 0044 22F48042 		bic	r2, r2, #16384
  82 0048 1A61     		str	r2, [r3, #16]
 254:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
  83              		.loc 1 254 3
  84 004a 7B68     		ldr	r3, [r7, #4]
  85 004c 1B68     		ldr	r3, [r3]
  86 004e 5A69     		ldr	r2, [r3, #20]
  87 0050 7B68     		ldr	r3, [r7, #4]
  88 0052 1B68     		ldr	r3, [r3]
  89 0054 22F02A02 		bic	r2, r2, #42
ARM GAS  /tmp/ccIGChKB.s 			page 7


  90 0058 5A61     		str	r2, [r3, #20]
 255:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 256:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Enable the Peripheral */
 257:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   __HAL_USART_ENABLE(husart);
  91              		.loc 1 257 3
  92 005a 7B68     		ldr	r3, [r7, #4]
  93 005c 1B68     		ldr	r3, [r3]
  94 005e DA68     		ldr	r2, [r3, #12]
  95 0060 7B68     		ldr	r3, [r7, #4]
  96 0062 1B68     		ldr	r3, [r3]
  97 0064 42F40052 		orr	r2, r2, #8192
  98 0068 DA60     		str	r2, [r3, #12]
 258:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 259:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Initialize the USART state */
 260:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->ErrorCode = HAL_USART_ERROR_NONE;
  99              		.loc 1 260 21
 100 006a 7B68     		ldr	r3, [r7, #4]
 101 006c 0022     		movs	r2, #0
 102 006e 1A64     		str	r2, [r3, #64]
 261:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->State= HAL_USART_STATE_READY;
 103              		.loc 1 261 16
 104 0070 7B68     		ldr	r3, [r7, #4]
 105 0072 0122     		movs	r2, #1
 106 0074 83F83D20 		strb	r2, [r3, #61]
 262:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 263:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   return HAL_OK;
 107              		.loc 1 263 10
 108 0078 0023     		movs	r3, #0
 109              	.L3:
 264:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 110              		.loc 1 264 1
 111 007a 1846     		mov	r0, r3
 112 007c 0837     		adds	r7, r7, #8
 113              	.LCFI3:
 114              		.cfi_def_cfa_offset 8
 115 007e BD46     		mov	sp, r7
 116              	.LCFI4:
 117              		.cfi_def_cfa_register 13
 118              		@ sp needed
 119 0080 80BD     		pop	{r7, pc}
 120              		.cfi_endproc
 121              	.LFE126:
 123              		.section	.text.HAL_USART_DeInit,"ax",%progbits
 124              		.align	1
 125              		.global	HAL_USART_DeInit
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu fpv4-sp-d16
 131              	HAL_USART_DeInit:
 132              	.LFB127:
 265:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 266:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
 267:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  DeInitializes the USART peripheral.
 268:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
 269:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
 270:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
ARM GAS  /tmp/ccIGChKB.s 			page 8


 271:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 272:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_DeInit(USART_HandleTypeDef *husart)
 273:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 133              		.loc 1 273 1
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 8
 136              		@ frame_needed = 1, uses_anonymous_args = 0
 137 0000 80B5     		push	{r7, lr}
 138              	.LCFI5:
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 14, -4
 142 0002 82B0     		sub	sp, sp, #8
 143              	.LCFI6:
 144              		.cfi_def_cfa_offset 16
 145 0004 00AF     		add	r7, sp, #0
 146              	.LCFI7:
 147              		.cfi_def_cfa_register 7
 148 0006 7860     		str	r0, [r7, #4]
 274:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Check the USART handle allocation */
 275:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart == NULL)
 149              		.loc 1 275 5
 150 0008 7B68     		ldr	r3, [r7, #4]
 151 000a 002B     		cmp	r3, #0
 152 000c 01D1     		bne	.L6
 276:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_ERROR;
 153              		.loc 1 277 12
 154 000e 0123     		movs	r3, #1
 155 0010 1AE0     		b	.L7
 156              	.L6:
 278:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 279:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 280:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Check the parameters */
 281:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   assert_param(IS_USART_INSTANCE(husart->Instance));
 282:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 283:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->State = HAL_USART_STATE_BUSY;
 157              		.loc 1 283 17
 158 0012 7B68     		ldr	r3, [r7, #4]
 159 0014 0222     		movs	r2, #2
 160 0016 83F83D20 		strb	r2, [r3, #61]
 284:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 285:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Disable the Peripheral */
 286:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   __HAL_USART_DISABLE(husart);
 161              		.loc 1 286 3
 162 001a 7B68     		ldr	r3, [r7, #4]
 163 001c 1B68     		ldr	r3, [r3]
 164 001e DA68     		ldr	r2, [r3, #12]
 165 0020 7B68     		ldr	r3, [r7, #4]
 166 0022 1B68     		ldr	r3, [r3]
 167 0024 22F40052 		bic	r2, r2, #8192
 168 0028 DA60     		str	r2, [r3, #12]
 287:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 288:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* DeInit the low level hardware */
 289:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   HAL_USART_MspDeInit(husart);
 169              		.loc 1 289 3
 170 002a 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccIGChKB.s 			page 9


 171 002c FFF7FEFF 		bl	HAL_USART_MspDeInit
 290:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 291:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->ErrorCode = HAL_USART_ERROR_NONE;
 172              		.loc 1 291 21
 173 0030 7B68     		ldr	r3, [r7, #4]
 174 0032 0022     		movs	r2, #0
 175 0034 1A64     		str	r2, [r3, #64]
 292:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->State = HAL_USART_STATE_RESET;
 176              		.loc 1 292 17
 177 0036 7B68     		ldr	r3, [r7, #4]
 178 0038 0022     		movs	r2, #0
 179 003a 83F83D20 		strb	r2, [r3, #61]
 293:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 294:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Release Lock */
 295:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   __HAL_UNLOCK(husart);
 180              		.loc 1 295 3
 181 003e 7B68     		ldr	r3, [r7, #4]
 182 0040 0022     		movs	r2, #0
 183 0042 83F83C20 		strb	r2, [r3, #60]
 296:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 297:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   return HAL_OK;
 184              		.loc 1 297 10
 185 0046 0023     		movs	r3, #0
 186              	.L7:
 298:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 187              		.loc 1 298 1
 188 0048 1846     		mov	r0, r3
 189 004a 0837     		adds	r7, r7, #8
 190              	.LCFI8:
 191              		.cfi_def_cfa_offset 8
 192 004c BD46     		mov	sp, r7
 193              	.LCFI9:
 194              		.cfi_def_cfa_register 13
 195              		@ sp needed
 196 004e 80BD     		pop	{r7, pc}
 197              		.cfi_endproc
 198              	.LFE127:
 200              		.section	.text.HAL_USART_MspInit,"ax",%progbits
 201              		.align	1
 202              		.weak	HAL_USART_MspInit
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 206              		.fpu fpv4-sp-d16
 208              	HAL_USART_MspInit:
 209              	.LFB128:
 299:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 300:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
 301:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  USART MSP Init.
 302:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
 303:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
 304:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
 305:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 306:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****  __weak void HAL_USART_MspInit(USART_HandleTypeDef *husart)
 307:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 210              		.loc 1 307 1
 211              		.cfi_startproc
ARM GAS  /tmp/ccIGChKB.s 			page 10


 212              		@ args = 0, pretend = 0, frame = 8
 213              		@ frame_needed = 1, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 215 0000 80B4     		push	{r7}
 216              	.LCFI10:
 217              		.cfi_def_cfa_offset 4
 218              		.cfi_offset 7, -4
 219 0002 83B0     		sub	sp, sp, #12
 220              	.LCFI11:
 221              		.cfi_def_cfa_offset 16
 222 0004 00AF     		add	r7, sp, #0
 223              	.LCFI12:
 224              		.cfi_def_cfa_register 7
 225 0006 7860     		str	r0, [r7, #4]
 308:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
 309:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   UNUSED(husart);
 310:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 311:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****            the HAL_USART_MspInit could be implemented in the user file
 312:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****    */
 313:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 226              		.loc 1 313 1
 227 0008 00BF     		nop
 228 000a 0C37     		adds	r7, r7, #12
 229              	.LCFI13:
 230              		.cfi_def_cfa_offset 4
 231 000c BD46     		mov	sp, r7
 232              	.LCFI14:
 233              		.cfi_def_cfa_register 13
 234              		@ sp needed
 235 000e 5DF8047B 		ldr	r7, [sp], #4
 236              	.LCFI15:
 237              		.cfi_restore 7
 238              		.cfi_def_cfa_offset 0
 239 0012 7047     		bx	lr
 240              		.cfi_endproc
 241              	.LFE128:
 243              		.section	.text.HAL_USART_MspDeInit,"ax",%progbits
 244              		.align	1
 245              		.weak	HAL_USART_MspDeInit
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu fpv4-sp-d16
 251              	HAL_USART_MspDeInit:
 252              	.LFB129:
 314:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 315:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
 316:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  USART MSP DeInit.
 317:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
 318:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
 319:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
 320:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 321:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****  __weak void HAL_USART_MspDeInit(USART_HandleTypeDef *husart)
 322:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 253              		.loc 1 322 1
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccIGChKB.s 			page 11


 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258 0000 80B4     		push	{r7}
 259              	.LCFI16:
 260              		.cfi_def_cfa_offset 4
 261              		.cfi_offset 7, -4
 262 0002 83B0     		sub	sp, sp, #12
 263              	.LCFI17:
 264              		.cfi_def_cfa_offset 16
 265 0004 00AF     		add	r7, sp, #0
 266              	.LCFI18:
 267              		.cfi_def_cfa_register 7
 268 0006 7860     		str	r0, [r7, #4]
 323:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
 324:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   UNUSED(husart);
 325:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 326:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****            the HAL_USART_MspDeInit could be implemented in the user file
 327:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****    */
 328:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 269              		.loc 1 328 1
 270 0008 00BF     		nop
 271 000a 0C37     		adds	r7, r7, #12
 272              	.LCFI19:
 273              		.cfi_def_cfa_offset 4
 274 000c BD46     		mov	sp, r7
 275              	.LCFI20:
 276              		.cfi_def_cfa_register 13
 277              		@ sp needed
 278 000e 5DF8047B 		ldr	r7, [sp], #4
 279              	.LCFI21:
 280              		.cfi_restore 7
 281              		.cfi_def_cfa_offset 0
 282 0012 7047     		bx	lr
 283              		.cfi_endproc
 284              	.LFE129:
 286              		.section	.text.HAL_USART_Transmit,"ax",%progbits
 287              		.align	1
 288              		.global	HAL_USART_Transmit
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu fpv4-sp-d16
 294              	HAL_USART_Transmit:
 295              	.LFB130:
 329:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 330:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
 331:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @}
 332:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 333:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 334:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /** @defgroup USART_Exported_Functions_Group2 IO operation functions
 335:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *  @brief   USART Transmit and Receive functions
 336:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *
 337:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** @verbatim
 338:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   ==============================================================================
 339:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****                          ##### IO operation functions #####
 340:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   ==============================================================================
 341:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   [..]
ARM GAS  /tmp/ccIGChKB.s 			page 12


 342:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     This subsection provides a set of functions allowing to manage the USART synchronous
 343:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     data transfers.
 344:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 345:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   [..]
 346:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     The USART supports master mode only: it cannot receive or send data related to an input
 347:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     clock (SCLK is always an output).
 348:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 349:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     (#) There are two modes of transfer:
 350:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) Blocking mode: The communication is performed in polling mode.
 351:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              The HAL status of all data processing is returned by the same function
 352:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              after finishing transfer.
 353:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) No-Blocking mode: The communication is performed using Interrupts
 354:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              or DMA, These API's return the HAL status.
 355:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              The end of the data processing will be indicated through the
 356:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              dedicated USART IRQ when using Interrupt mode or the DMA IRQ when
 357:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              using DMA mode.
 358:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              The HAL_USART_TxCpltCallback(), HAL_USART_RxCpltCallback() and HAL_USART_TxRxCpltCallb
 359:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****               user callbacks
 360:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              will be executed respectively at the end of the transmit or Receive process
 361:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              The HAL_USART_ErrorCallback() user callback will be executed when a communication
 362:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****              error is detected
 363:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 364:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     (#) Blocking mode APIs are :
 365:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_Transmit() in simplex mode
 366:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_Receive() in full duplex receive only
 367:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_TransmitReceive() in full duplex mode
 368:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 369:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     (#) Non Blocking mode APIs with Interrupt are :
 370:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_Transmit_IT()in simplex mode
 371:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_Receive_IT() in full duplex receive only
 372:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_TransmitReceive_IT() in full duplex mode
 373:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_IRQHandler()
 374:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 375:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     (#) Non Blocking mode functions with DMA are :
 376:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_Transmit_DMA()in simplex mode
 377:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_Receive_DMA() in full duplex receive only
 378:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_TransmitReceie_DMA() in full duplex mode
 379:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_DMAPause()
 380:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_DMAResume()
 381:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_DMAStop()
 382:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 383:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     (#) A set of Transfer Complete Callbacks are provided in non Blocking mode:
 384:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_TxHalfCpltCallback()
 385:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_TxCpltCallback()
 386:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_RxHalfCpltCallback()
 387:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_RxCpltCallback()
 388:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_ErrorCallback()
 389:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         (++) HAL_USART_TxRxCpltCallback()
 390:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 391:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** @endverbatim
 392:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @{
 393:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 394:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 395:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
 396:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Simplex Send an amount of data in blocking mode.
 397:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
 398:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
ARM GAS  /tmp/ccIGChKB.s 			page 13


 399:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  pTxData Pointer to data buffer
 400:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  Size Amount of data to be sent
 401:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  Timeout Timeout duration
 402:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
 403:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 404:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Transmit(USART_HandleTypeDef *husart, uint8_t *pTxData, uint16_t Size, 
 405:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 296              		.loc 1 405 1
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 24
 299              		@ frame_needed = 1, uses_anonymous_args = 0
 300 0000 80B5     		push	{r7, lr}
 301              	.LCFI22:
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 7, -8
 304              		.cfi_offset 14, -4
 305 0002 88B0     		sub	sp, sp, #32
 306              	.LCFI23:
 307              		.cfi_def_cfa_offset 40
 308 0004 02AF     		add	r7, sp, #8
 309              	.LCFI24:
 310              		.cfi_def_cfa 7, 32
 311 0006 F860     		str	r0, [r7, #12]
 312 0008 B960     		str	r1, [r7, #8]
 313 000a 3B60     		str	r3, [r7]
 314 000c 1346     		mov	r3, r2	@ movhi
 315 000e FB80     		strh	r3, [r7, #6]	@ movhi
 406:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint16_t* tmp;
 407:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint32_t tickstart = 0U;
 316              		.loc 1 407 12
 317 0010 0023     		movs	r3, #0
 318 0012 7B61     		str	r3, [r7, #20]
 408:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 409:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_READY)
 319              		.loc 1 409 12
 320 0014 FB68     		ldr	r3, [r7, #12]
 321 0016 93F83D30 		ldrb	r3, [r3, #61]
 322 001a DBB2     		uxtb	r3, r3
 323              		.loc 1 409 5
 324 001c 012B     		cmp	r3, #1
 325 001e 40F08380 		bne	.L11
 410:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 411:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if((pTxData == NULL) || (Size == 0))
 326              		.loc 1 411 7
 327 0022 BB68     		ldr	r3, [r7, #8]
 328 0024 002B     		cmp	r3, #0
 329 0026 02D0     		beq	.L12
 330              		.loc 1 411 26 discriminator 1
 331 0028 FB88     		ldrh	r3, [r7, #6]
 332 002a 002B     		cmp	r3, #0
 333 002c 01D1     		bne	.L13
 334              	.L12:
 412:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 413:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       return  HAL_ERROR;
 335              		.loc 1 413 15
 336 002e 0123     		movs	r3, #1
 337 0030 7BE0     		b	.L14
ARM GAS  /tmp/ccIGChKB.s 			page 14


 338              	.L13:
 414:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 415:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 416:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Process Locked */
 417:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_LOCK(husart);
 339              		.loc 1 417 5
 340 0032 FB68     		ldr	r3, [r7, #12]
 341 0034 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 342 0038 012B     		cmp	r3, #1
 343 003a 01D1     		bne	.L15
 344              		.loc 1 417 5 is_stmt 0 discriminator 1
 345 003c 0223     		movs	r3, #2
 346 003e 74E0     		b	.L14
 347              	.L15:
 348              		.loc 1 417 5 discriminator 2
 349 0040 FB68     		ldr	r3, [r7, #12]
 350 0042 0122     		movs	r2, #1
 351 0044 83F83C20 		strb	r2, [r3, #60]
 418:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 419:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 352              		.loc 1 419 23 is_stmt 1 discriminator 2
 353 0048 FB68     		ldr	r3, [r7, #12]
 354 004a 0022     		movs	r2, #0
 355 004c 1A64     		str	r2, [r3, #64]
 420:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX;
 356              		.loc 1 420 19 discriminator 2
 357 004e FB68     		ldr	r3, [r7, #12]
 358 0050 1222     		movs	r2, #18
 359 0052 83F83D20 		strb	r2, [r3, #61]
 421:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 422:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Init tickstart for timeout managment */
 423:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     tickstart = HAL_GetTick();
 360              		.loc 1 423 17 discriminator 2
 361 0056 FFF7FEFF 		bl	HAL_GetTick
 362 005a 7861     		str	r0, [r7, #20]
 424:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 425:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->TxXferSize = Size;
 363              		.loc 1 425 24 discriminator 2
 364 005c FB68     		ldr	r3, [r7, #12]
 365 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 366 0060 1A85     		strh	r2, [r3, #40]	@ movhi
 426:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->TxXferCount = Size;
 367              		.loc 1 426 25 discriminator 2
 368 0062 FB68     		ldr	r3, [r7, #12]
 369 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 370 0066 5A85     		strh	r2, [r3, #42]	@ movhi
 427:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     while(husart->TxXferCount > 0U)
 371              		.loc 1 427 10 discriminator 2
 372 0068 42E0     		b	.L16
 373              	.L21:
 428:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 429:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       husart->TxXferCount--;
 374              		.loc 1 429 13
 375 006a FB68     		ldr	r3, [r7, #12]
 376 006c 5B8D     		ldrh	r3, [r3, #42]	@ movhi
 377 006e 9BB2     		uxth	r3, r3
 378              		.loc 1 429 26
ARM GAS  /tmp/ccIGChKB.s 			page 15


 379 0070 013B     		subs	r3, r3, #1
 380 0072 9AB2     		uxth	r2, r3
 381 0074 FB68     		ldr	r3, [r7, #12]
 382 0076 5A85     		strh	r2, [r3, #42]	@ movhi
 430:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       if(husart->Init.WordLength == USART_WORDLENGTH_9B)
 383              		.loc 1 430 22
 384 0078 FB68     		ldr	r3, [r7, #12]
 385 007a 9B68     		ldr	r3, [r3, #8]
 386              		.loc 1 430 9
 387 007c B3F5805F 		cmp	r3, #4096
 388 0080 22D1     		bne	.L17
 431:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
 432:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Wait for TC flag in order to write data in DR */
 433:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_O
 389              		.loc 1 433 12
 390 0082 3B68     		ldr	r3, [r7]
 391 0084 0093     		str	r3, [sp]
 392 0086 7B69     		ldr	r3, [r7, #20]
 393 0088 0022     		movs	r2, #0
 394 008a 8021     		movs	r1, #128
 395 008c F868     		ldr	r0, [r7, #12]
 396 008e FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 397 0092 0346     		mov	r3, r0
 398              		.loc 1 433 11
 399 0094 002B     		cmp	r3, #0
 400 0096 01D0     		beq	.L18
 434:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 435:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           return HAL_TIMEOUT;
 401              		.loc 1 435 18
 402 0098 0323     		movs	r3, #3
 403 009a 46E0     		b	.L14
 404              	.L18:
 436:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 437:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         tmp = (uint16_t*) pTxData;
 405              		.loc 1 437 13
 406 009c BB68     		ldr	r3, [r7, #8]
 407 009e 3B61     		str	r3, [r7, #16]
 438:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         husart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 408              		.loc 1 438 33
 409 00a0 3B69     		ldr	r3, [r7, #16]
 410 00a2 1B88     		ldrh	r3, [r3]
 411              		.loc 1 438 38
 412 00a4 1A46     		mov	r2, r3
 413              		.loc 1 438 15
 414 00a6 FB68     		ldr	r3, [r7, #12]
 415 00a8 1B68     		ldr	r3, [r3]
 416              		.loc 1 438 38
 417 00aa C2F30802 		ubfx	r2, r2, #0, #9
 418              		.loc 1 438 30
 419 00ae 5A60     		str	r2, [r3, #4]
 439:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(husart->Init.Parity == USART_PARITY_NONE)
 420              		.loc 1 439 24
 421 00b0 FB68     		ldr	r3, [r7, #12]
 422 00b2 1B69     		ldr	r3, [r3, #16]
 423              		.loc 1 439 11
 424 00b4 002B     		cmp	r3, #0
 425 00b6 03D1     		bne	.L19
ARM GAS  /tmp/ccIGChKB.s 			page 16


 440:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 441:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           pTxData += 2U;
 426              		.loc 1 441 19
 427 00b8 BB68     		ldr	r3, [r7, #8]
 428 00ba 0233     		adds	r3, r3, #2
 429 00bc BB60     		str	r3, [r7, #8]
 430 00be 17E0     		b	.L16
 431              	.L19:
 442:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 443:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         else
 444:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 445:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           pTxData += 1U;
 432              		.loc 1 445 19
 433 00c0 BB68     		ldr	r3, [r7, #8]
 434 00c2 0133     		adds	r3, r3, #1
 435 00c4 BB60     		str	r3, [r7, #8]
 436 00c6 13E0     		b	.L16
 437              	.L17:
 446:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 447:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
 448:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       else
 449:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
 450:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_O
 438              		.loc 1 450 12
 439 00c8 3B68     		ldr	r3, [r7]
 440 00ca 0093     		str	r3, [sp]
 441 00cc 7B69     		ldr	r3, [r7, #20]
 442 00ce 0022     		movs	r2, #0
 443 00d0 8021     		movs	r1, #128
 444 00d2 F868     		ldr	r0, [r7, #12]
 445 00d4 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 446 00d8 0346     		mov	r3, r0
 447              		.loc 1 450 11
 448 00da 002B     		cmp	r3, #0
 449 00dc 01D0     		beq	.L20
 451:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 452:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           return HAL_TIMEOUT;
 450              		.loc 1 452 18
 451 00de 0323     		movs	r3, #3
 452 00e0 23E0     		b	.L14
 453              	.L20:
 453:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 454:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         husart->Instance->DR = (*pTxData++ & (uint8_t)0xFF);
 454              		.loc 1 454 41
 455 00e2 BB68     		ldr	r3, [r7, #8]
 456 00e4 5A1C     		adds	r2, r3, #1
 457 00e6 BA60     		str	r2, [r7, #8]
 458              		.loc 1 454 33
 459 00e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 460              		.loc 1 454 15
 461 00ea FB68     		ldr	r3, [r7, #12]
 462 00ec 1B68     		ldr	r3, [r3]
 463              		.loc 1 454 30
 464 00ee 5A60     		str	r2, [r3, #4]
 465              	.L16:
 427:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 466              		.loc 1 427 17
ARM GAS  /tmp/ccIGChKB.s 			page 17


 467 00f0 FB68     		ldr	r3, [r7, #12]
 468 00f2 5B8D     		ldrh	r3, [r3, #42]	@ movhi
 469 00f4 9BB2     		uxth	r3, r3
 427:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 470              		.loc 1 427 10
 471 00f6 002B     		cmp	r3, #0
 472 00f8 B7D1     		bne	.L21
 455:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
 456:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 457:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 458:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 473              		.loc 1 458 8
 474 00fa 3B68     		ldr	r3, [r7]
 475 00fc 0093     		str	r3, [sp]
 476 00fe 7B69     		ldr	r3, [r7, #20]
 477 0100 0022     		movs	r2, #0
 478 0102 4021     		movs	r1, #64
 479 0104 F868     		ldr	r0, [r7, #12]
 480 0106 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 481 010a 0346     		mov	r3, r0
 482              		.loc 1 458 7
 483 010c 002B     		cmp	r3, #0
 484 010e 01D0     		beq	.L22
 459:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 460:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       return HAL_TIMEOUT;
 485              		.loc 1 460 14
 486 0110 0323     		movs	r3, #3
 487 0112 0AE0     		b	.L14
 488              	.L22:
 461:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 462:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 463:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
 489              		.loc 1 463 19
 490 0114 FB68     		ldr	r3, [r7, #12]
 491 0116 0122     		movs	r2, #1
 492 0118 83F83D20 		strb	r2, [r3, #61]
 464:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 465:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Process Unlocked */
 466:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 493              		.loc 1 466 5
 494 011c FB68     		ldr	r3, [r7, #12]
 495 011e 0022     		movs	r2, #0
 496 0120 83F83C20 		strb	r2, [r3, #60]
 467:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 468:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_OK;
 497              		.loc 1 468 12
 498 0124 0023     		movs	r3, #0
 499 0126 00E0     		b	.L14
 500              	.L11:
 469:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 470:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   else
 471:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 472:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_BUSY;
 501              		.loc 1 472 12
 502 0128 0223     		movs	r3, #2
 503              	.L14:
 473:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
ARM GAS  /tmp/ccIGChKB.s 			page 18


 474:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 504              		.loc 1 474 1
 505 012a 1846     		mov	r0, r3
 506 012c 1837     		adds	r7, r7, #24
 507              	.LCFI25:
 508              		.cfi_def_cfa_offset 8
 509 012e BD46     		mov	sp, r7
 510              	.LCFI26:
 511              		.cfi_def_cfa_register 13
 512              		@ sp needed
 513 0130 80BD     		pop	{r7, pc}
 514              		.cfi_endproc
 515              	.LFE130:
 517              		.section	.text.HAL_USART_Receive,"ax",%progbits
 518              		.align	1
 519              		.global	HAL_USART_Receive
 520              		.syntax unified
 521              		.thumb
 522              		.thumb_func
 523              		.fpu fpv4-sp-d16
 525              	HAL_USART_Receive:
 526              	.LFB131:
 475:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 476:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
 477:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Full-Duplex Receive an amount of data in blocking mode.
 478:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
 479:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
 480:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  pRxData Pointer to data buffer
 481:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  Size Amount of data to be received
 482:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  Timeout Timeout duration
 483:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
 484:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 485:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Receive(USART_HandleTypeDef *husart, uint8_t *pRxData, uint16_t Size, u
 486:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 527              		.loc 1 486 1
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 24
 530              		@ frame_needed = 1, uses_anonymous_args = 0
 531 0000 80B5     		push	{r7, lr}
 532              	.LCFI27:
 533              		.cfi_def_cfa_offset 8
 534              		.cfi_offset 7, -8
 535              		.cfi_offset 14, -4
 536 0002 88B0     		sub	sp, sp, #32
 537              	.LCFI28:
 538              		.cfi_def_cfa_offset 40
 539 0004 02AF     		add	r7, sp, #8
 540              	.LCFI29:
 541              		.cfi_def_cfa 7, 32
 542 0006 F860     		str	r0, [r7, #12]
 543 0008 B960     		str	r1, [r7, #8]
 544 000a 3B60     		str	r3, [r7]
 545 000c 1346     		mov	r3, r2	@ movhi
 546 000e FB80     		strh	r3, [r7, #6]	@ movhi
 487:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint16_t* tmp;
 488:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint32_t tickstart = 0U;
 547              		.loc 1 488 12
ARM GAS  /tmp/ccIGChKB.s 			page 19


 548 0010 0023     		movs	r3, #0
 549 0012 7B61     		str	r3, [r7, #20]
 489:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 490:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_READY)
 550              		.loc 1 490 12
 551 0014 FB68     		ldr	r3, [r7, #12]
 552 0016 93F83D30 		ldrb	r3, [r3, #61]
 553 001a DBB2     		uxtb	r3, r3
 554              		.loc 1 490 5
 555 001c 012B     		cmp	r3, #1
 556 001e 40F0B480 		bne	.L24
 491:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 492:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if((pRxData == NULL) || (Size == 0))
 557              		.loc 1 492 7
 558 0022 BB68     		ldr	r3, [r7, #8]
 559 0024 002B     		cmp	r3, #0
 560 0026 02D0     		beq	.L25
 561              		.loc 1 492 26 discriminator 1
 562 0028 FB88     		ldrh	r3, [r7, #6]
 563 002a 002B     		cmp	r3, #0
 564 002c 01D1     		bne	.L26
 565              	.L25:
 493:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 494:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       return  HAL_ERROR;
 566              		.loc 1 494 15
 567 002e 0123     		movs	r3, #1
 568 0030 ACE0     		b	.L27
 569              	.L26:
 495:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 496:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Process Locked */
 497:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_LOCK(husart);
 570              		.loc 1 497 5
 571 0032 FB68     		ldr	r3, [r7, #12]
 572 0034 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 573 0038 012B     		cmp	r3, #1
 574 003a 01D1     		bne	.L28
 575              		.loc 1 497 5 is_stmt 0 discriminator 1
 576 003c 0223     		movs	r3, #2
 577 003e A5E0     		b	.L27
 578              	.L28:
 579              		.loc 1 497 5 discriminator 2
 580 0040 FB68     		ldr	r3, [r7, #12]
 581 0042 0122     		movs	r2, #1
 582 0044 83F83C20 		strb	r2, [r3, #60]
 498:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 499:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 583              		.loc 1 499 23 is_stmt 1 discriminator 2
 584 0048 FB68     		ldr	r3, [r7, #12]
 585 004a 0022     		movs	r2, #0
 586 004c 1A64     		str	r2, [r3, #64]
 500:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
 587              		.loc 1 500 19 discriminator 2
 588 004e FB68     		ldr	r3, [r7, #12]
 589 0050 2222     		movs	r2, #34
 590 0052 83F83D20 		strb	r2, [r3, #61]
 501:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 502:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Init tickstart for timeout managment */
ARM GAS  /tmp/ccIGChKB.s 			page 20


 503:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     tickstart = HAL_GetTick();
 591              		.loc 1 503 17 discriminator 2
 592 0056 FFF7FEFF 		bl	HAL_GetTick
 593 005a 7861     		str	r0, [r7, #20]
 504:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 505:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->RxXferSize = Size;
 594              		.loc 1 505 24 discriminator 2
 595 005c FB68     		ldr	r3, [r7, #12]
 596 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 597 0060 1A86     		strh	r2, [r3, #48]	@ movhi
 506:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->RxXferCount = Size;
 598              		.loc 1 506 25 discriminator 2
 599 0062 FB68     		ldr	r3, [r7, #12]
 600 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 601 0066 5A86     		strh	r2, [r3, #50]	@ movhi
 507:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Check the remain data to be received */
 508:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     while(husart->RxXferCount > 0U)
 602              		.loc 1 508 10 discriminator 2
 603 0068 7FE0     		b	.L29
 604              	.L37:
 509:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 510:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       husart->RxXferCount--;
 605              		.loc 1 510 13
 606 006a FB68     		ldr	r3, [r7, #12]
 607 006c 5B8E     		ldrh	r3, [r3, #50]	@ movhi
 608 006e 9BB2     		uxth	r3, r3
 609              		.loc 1 510 26
 610 0070 013B     		subs	r3, r3, #1
 611 0072 9AB2     		uxth	r2, r3
 612 0074 FB68     		ldr	r3, [r7, #12]
 613 0076 5A86     		strh	r2, [r3, #50]	@ movhi
 511:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       if(husart->Init.WordLength == USART_WORDLENGTH_9B)
 614              		.loc 1 511 22
 615 0078 FB68     		ldr	r3, [r7, #12]
 616 007a 9B68     		ldr	r3, [r3, #8]
 617              		.loc 1 511 9
 618 007c B3F5805F 		cmp	r3, #4096
 619 0080 3DD1     		bne	.L30
 512:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
 513:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Wait until TXE flag is set to send dummy byte in order to generate the clock for the sla
 514:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_O
 620              		.loc 1 514 12
 621 0082 3B68     		ldr	r3, [r7]
 622 0084 0093     		str	r3, [sp]
 623 0086 7B69     		ldr	r3, [r7, #20]
 624 0088 0022     		movs	r2, #0
 625 008a 8021     		movs	r1, #128
 626 008c F868     		ldr	r0, [r7, #12]
 627 008e FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 628 0092 0346     		mov	r3, r0
 629              		.loc 1 514 11
 630 0094 002B     		cmp	r3, #0
 631 0096 01D0     		beq	.L31
 515:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 516:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           return HAL_TIMEOUT;
 632              		.loc 1 516 18
 633 0098 0323     		movs	r3, #3
ARM GAS  /tmp/ccIGChKB.s 			page 21


 634 009a 77E0     		b	.L27
 635              	.L31:
 517:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 518:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Send dummy byte in order to generate clock */
 519:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         husart->Instance->DR = (DUMMY_DATA & (uint16_t)0x01FF);
 636              		.loc 1 519 15
 637 009c FB68     		ldr	r3, [r7, #12]
 638 009e 1B68     		ldr	r3, [r3]
 639              		.loc 1 519 30
 640 00a0 40F2FF12 		movw	r2, #511
 641 00a4 5A60     		str	r2, [r3, #4]
 520:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 521:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Wait for RXNE Flag */
 522:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_
 642              		.loc 1 522 12
 643 00a6 3B68     		ldr	r3, [r7]
 644 00a8 0093     		str	r3, [sp]
 645 00aa 7B69     		ldr	r3, [r7, #20]
 646 00ac 0022     		movs	r2, #0
 647 00ae 2021     		movs	r1, #32
 648 00b0 F868     		ldr	r0, [r7, #12]
 649 00b2 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 650 00b6 0346     		mov	r3, r0
 651              		.loc 1 522 11
 652 00b8 002B     		cmp	r3, #0
 653 00ba 01D0     		beq	.L32
 523:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 524:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           return HAL_TIMEOUT;
 654              		.loc 1 524 18
 655 00bc 0323     		movs	r3, #3
 656 00be 65E0     		b	.L27
 657              	.L32:
 525:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 526:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         tmp = (uint16_t*) pRxData ;
 658              		.loc 1 526 13
 659 00c0 BB68     		ldr	r3, [r7, #8]
 660 00c2 3B61     		str	r3, [r7, #16]
 527:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(husart->Init.Parity == USART_PARITY_NONE)
 661              		.loc 1 527 24
 662 00c4 FB68     		ldr	r3, [r7, #12]
 663 00c6 1B69     		ldr	r3, [r3, #16]
 664              		.loc 1 527 11
 665 00c8 002B     		cmp	r3, #0
 666 00ca 0CD1     		bne	.L33
 528:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 529:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           *tmp = (uint16_t)(husart->Instance->DR & (uint16_t)0x01FF);
 667              		.loc 1 529 35
 668 00cc FB68     		ldr	r3, [r7, #12]
 669 00ce 1B68     		ldr	r3, [r3]
 670              		.loc 1 529 45
 671 00d0 5B68     		ldr	r3, [r3, #4]
 672              		.loc 1 529 18
 673 00d2 9BB2     		uxth	r3, r3
 674 00d4 C3F30803 		ubfx	r3, r3, #0, #9
 675 00d8 9AB2     		uxth	r2, r3
 676              		.loc 1 529 16
 677 00da 3B69     		ldr	r3, [r7, #16]
ARM GAS  /tmp/ccIGChKB.s 			page 22


 678 00dc 1A80     		strh	r2, [r3]	@ movhi
 530:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           pRxData +=2U;
 679              		.loc 1 530 19
 680 00de BB68     		ldr	r3, [r7, #8]
 681 00e0 0233     		adds	r3, r3, #2
 682 00e2 BB60     		str	r3, [r7, #8]
 683 00e4 41E0     		b	.L29
 684              	.L33:
 531:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 532:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         else
 533:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 534:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           *tmp = (uint16_t)(husart->Instance->DR & (uint16_t)0x00FF);
 685              		.loc 1 534 35
 686 00e6 FB68     		ldr	r3, [r7, #12]
 687 00e8 1B68     		ldr	r3, [r3]
 688              		.loc 1 534 45
 689 00ea 5B68     		ldr	r3, [r3, #4]
 690              		.loc 1 534 18
 691 00ec 9BB2     		uxth	r3, r3
 692 00ee DBB2     		uxtb	r3, r3
 693 00f0 9AB2     		uxth	r2, r3
 694              		.loc 1 534 16
 695 00f2 3B69     		ldr	r3, [r7, #16]
 696 00f4 1A80     		strh	r2, [r3]	@ movhi
 535:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           pRxData +=1U;
 697              		.loc 1 535 19
 698 00f6 BB68     		ldr	r3, [r7, #8]
 699 00f8 0133     		adds	r3, r3, #1
 700 00fa BB60     		str	r3, [r7, #8]
 701 00fc 35E0     		b	.L29
 702              	.L30:
 536:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 537:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
 538:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       else
 539:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
 540:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Wait until TXE flag is set to send dummy byte in order to generate the clock for the sla
 541:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_O
 703              		.loc 1 541 12
 704 00fe 3B68     		ldr	r3, [r7]
 705 0100 0093     		str	r3, [sp]
 706 0102 7B69     		ldr	r3, [r7, #20]
 707 0104 0022     		movs	r2, #0
 708 0106 8021     		movs	r1, #128
 709 0108 F868     		ldr	r0, [r7, #12]
 710 010a FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 711 010e 0346     		mov	r3, r0
 712              		.loc 1 541 11
 713 0110 002B     		cmp	r3, #0
 714 0112 01D0     		beq	.L34
 542:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 543:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           return HAL_TIMEOUT;
 715              		.loc 1 543 18
 716 0114 0323     		movs	r3, #3
 717 0116 39E0     		b	.L27
 718              	.L34:
 544:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 545:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
ARM GAS  /tmp/ccIGChKB.s 			page 23


 546:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Send Dummy Byte in order to generate clock */
 547:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         husart->Instance->DR = (DUMMY_DATA & (uint16_t)0x00FF);
 719              		.loc 1 547 15
 720 0118 FB68     		ldr	r3, [r7, #12]
 721 011a 1B68     		ldr	r3, [r3]
 722              		.loc 1 547 30
 723 011c FF22     		movs	r2, #255
 724 011e 5A60     		str	r2, [r3, #4]
 548:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 549:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Wait until RXNE flag is set to receive the byte */
 550:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_
 725              		.loc 1 550 12
 726 0120 3B68     		ldr	r3, [r7]
 727 0122 0093     		str	r3, [sp]
 728 0124 7B69     		ldr	r3, [r7, #20]
 729 0126 0022     		movs	r2, #0
 730 0128 2021     		movs	r1, #32
 731 012a F868     		ldr	r0, [r7, #12]
 732 012c FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 733 0130 0346     		mov	r3, r0
 734              		.loc 1 550 11
 735 0132 002B     		cmp	r3, #0
 736 0134 01D0     		beq	.L35
 551:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 552:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           return HAL_TIMEOUT;
 737              		.loc 1 552 18
 738 0136 0323     		movs	r3, #3
 739 0138 28E0     		b	.L27
 740              	.L35:
 553:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 554:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(husart->Init.Parity == USART_PARITY_NONE)
 741              		.loc 1 554 24
 742 013a FB68     		ldr	r3, [r7, #12]
 743 013c 1B69     		ldr	r3, [r3, #16]
 744              		.loc 1 554 11
 745 013e 002B     		cmp	r3, #0
 746 0140 08D1     		bne	.L36
 555:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 556:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           /* Receive data */
 557:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           *pRxData++ = (uint8_t)(husart->Instance->DR & (uint8_t)0x00FF);
 747              		.loc 1 557 40
 748 0142 FB68     		ldr	r3, [r7, #12]
 749 0144 1B68     		ldr	r3, [r3]
 750              		.loc 1 557 50
 751 0146 5968     		ldr	r1, [r3, #4]
 752              		.loc 1 557 19
 753 0148 BB68     		ldr	r3, [r7, #8]
 754 014a 5A1C     		adds	r2, r3, #1
 755 014c BA60     		str	r2, [r7, #8]
 756              		.loc 1 557 24
 757 014e CAB2     		uxtb	r2, r1
 758              		.loc 1 557 22
 759 0150 1A70     		strb	r2, [r3]
 760 0152 0AE0     		b	.L29
 761              	.L36:
 558:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 559:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         else
ARM GAS  /tmp/ccIGChKB.s 			page 24


 560:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 561:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           /* Receive data */
 562:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           *pRxData++ = (uint8_t)(husart->Instance->DR & (uint8_t)0x007F);
 762              		.loc 1 562 40
 763 0154 FB68     		ldr	r3, [r7, #12]
 764 0156 1B68     		ldr	r3, [r3]
 765              		.loc 1 562 50
 766 0158 5B68     		ldr	r3, [r3, #4]
 767              		.loc 1 562 24
 768 015a DAB2     		uxtb	r2, r3
 769              		.loc 1 562 19
 770 015c BB68     		ldr	r3, [r7, #8]
 771 015e 591C     		adds	r1, r3, #1
 772 0160 B960     		str	r1, [r7, #8]
 773              		.loc 1 562 24
 774 0162 02F07F02 		and	r2, r2, #127
 775 0166 D2B2     		uxtb	r2, r2
 776              		.loc 1 562 22
 777 0168 1A70     		strb	r2, [r3]
 778              	.L29:
 508:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 779              		.loc 1 508 17
 780 016a FB68     		ldr	r3, [r7, #12]
 781 016c 5B8E     		ldrh	r3, [r3, #50]	@ movhi
 782 016e 9BB2     		uxth	r3, r3
 508:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 783              		.loc 1 508 10
 784 0170 002B     		cmp	r3, #0
 785 0172 7FF47AAF 		bne	.L37
 563:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 564:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 565:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
 566:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 567:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 568:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
 786              		.loc 1 568 19
 787 0176 FB68     		ldr	r3, [r7, #12]
 788 0178 0122     		movs	r2, #1
 789 017a 83F83D20 		strb	r2, [r3, #61]
 569:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 570:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Process Unlocked */
 571:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 790              		.loc 1 571 5
 791 017e FB68     		ldr	r3, [r7, #12]
 792 0180 0022     		movs	r2, #0
 793 0182 83F83C20 		strb	r2, [r3, #60]
 572:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 573:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_OK;
 794              		.loc 1 573 12
 795 0186 0023     		movs	r3, #0
 796 0188 00E0     		b	.L27
 797              	.L24:
 574:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 575:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   else
 576:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 577:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_BUSY;
 798              		.loc 1 577 12
ARM GAS  /tmp/ccIGChKB.s 			page 25


 799 018a 0223     		movs	r3, #2
 800              	.L27:
 578:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 579:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 801              		.loc 1 579 1
 802 018c 1846     		mov	r0, r3
 803 018e 1837     		adds	r7, r7, #24
 804              	.LCFI30:
 805              		.cfi_def_cfa_offset 8
 806 0190 BD46     		mov	sp, r7
 807              	.LCFI31:
 808              		.cfi_def_cfa_register 13
 809              		@ sp needed
 810 0192 80BD     		pop	{r7, pc}
 811              		.cfi_endproc
 812              	.LFE131:
 814              		.section	.text.HAL_USART_TransmitReceive,"ax",%progbits
 815              		.align	1
 816              		.global	HAL_USART_TransmitReceive
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 820              		.fpu fpv4-sp-d16
 822              	HAL_USART_TransmitReceive:
 823              	.LFB132:
 580:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 581:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
 582:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Full-Duplex Send receive an amount of data in full-duplex mode (blocking mode).
 583:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
 584:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
 585:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  pTxData Pointer to data transmitted buffer
 586:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  pRxData Pointer to data received buffer
 587:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  Size Amount of data to be sent
 588:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****    * @param  Timeout Timeout duration
 589:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
 590:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 591:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_TransmitReceive(USART_HandleTypeDef *husart, uint8_t *pTxData, uint8_t 
 592:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 824              		.loc 1 592 1
 825              		.cfi_startproc
 826              		@ args = 4, pretend = 0, frame = 24
 827              		@ frame_needed = 1, uses_anonymous_args = 0
 828 0000 80B5     		push	{r7, lr}
 829              	.LCFI32:
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 7, -8
 832              		.cfi_offset 14, -4
 833 0002 88B0     		sub	sp, sp, #32
 834              	.LCFI33:
 835              		.cfi_def_cfa_offset 40
 836 0004 02AF     		add	r7, sp, #8
 837              	.LCFI34:
 838              		.cfi_def_cfa 7, 32
 839 0006 F860     		str	r0, [r7, #12]
 840 0008 B960     		str	r1, [r7, #8]
 841 000a 7A60     		str	r2, [r7, #4]
 842 000c 7B80     		strh	r3, [r7, #2]	@ movhi
ARM GAS  /tmp/ccIGChKB.s 			page 26


 593:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint16_t* tmp;
 594:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint32_t tickstart = 0U;
 843              		.loc 1 594 12
 844 000e 0023     		movs	r3, #0
 845 0010 7B61     		str	r3, [r7, #20]
 595:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 596:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_READY)
 846              		.loc 1 596 12
 847 0012 FB68     		ldr	r3, [r7, #12]
 848 0014 93F83D30 		ldrb	r3, [r3, #61]
 849 0018 DBB2     		uxtb	r3, r3
 850              		.loc 1 596 5
 851 001a 012B     		cmp	r3, #1
 852 001c 40F0D780 		bne	.L39
 597:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 598:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if((pTxData == NULL) || (pRxData == NULL) || (Size == 0))
 853              		.loc 1 598 7
 854 0020 BB68     		ldr	r3, [r7, #8]
 855 0022 002B     		cmp	r3, #0
 856 0024 05D0     		beq	.L40
 857              		.loc 1 598 26 discriminator 1
 858 0026 7B68     		ldr	r3, [r7, #4]
 859 0028 002B     		cmp	r3, #0
 860 002a 02D0     		beq	.L40
 861              		.loc 1 598 47 discriminator 2
 862 002c 7B88     		ldrh	r3, [r7, #2]
 863 002e 002B     		cmp	r3, #0
 864 0030 01D1     		bne	.L41
 865              	.L40:
 599:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 600:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       return  HAL_ERROR;
 866              		.loc 1 600 15
 867 0032 0123     		movs	r3, #1
 868 0034 CCE0     		b	.L42
 869              	.L41:
 601:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 602:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Process Locked */
 603:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_LOCK(husart);
 870              		.loc 1 603 5
 871 0036 FB68     		ldr	r3, [r7, #12]
 872 0038 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 873 003c 012B     		cmp	r3, #1
 874 003e 01D1     		bne	.L43
 875              		.loc 1 603 5 is_stmt 0 discriminator 1
 876 0040 0223     		movs	r3, #2
 877 0042 C5E0     		b	.L42
 878              	.L43:
 879              		.loc 1 603 5 discriminator 2
 880 0044 FB68     		ldr	r3, [r7, #12]
 881 0046 0122     		movs	r2, #1
 882 0048 83F83C20 		strb	r2, [r3, #60]
 604:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 605:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 883              		.loc 1 605 23 is_stmt 1 discriminator 2
 884 004c FB68     		ldr	r3, [r7, #12]
 885 004e 0022     		movs	r2, #0
 886 0050 1A64     		str	r2, [r3, #64]
ARM GAS  /tmp/ccIGChKB.s 			page 27


 606:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
 887              		.loc 1 606 19 discriminator 2
 888 0052 FB68     		ldr	r3, [r7, #12]
 889 0054 2222     		movs	r2, #34
 890 0056 83F83D20 		strb	r2, [r3, #61]
 607:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 608:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Init tickstart for timeout managment */
 609:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     tickstart = HAL_GetTick();
 891              		.loc 1 609 17 discriminator 2
 892 005a FFF7FEFF 		bl	HAL_GetTick
 893 005e 7861     		str	r0, [r7, #20]
 610:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 611:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->RxXferSize = Size;
 894              		.loc 1 611 24 discriminator 2
 895 0060 FB68     		ldr	r3, [r7, #12]
 896 0062 7A88     		ldrh	r2, [r7, #2]	@ movhi
 897 0064 1A86     		strh	r2, [r3, #48]	@ movhi
 612:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->TxXferSize = Size;
 898              		.loc 1 612 24 discriminator 2
 899 0066 FB68     		ldr	r3, [r7, #12]
 900 0068 7A88     		ldrh	r2, [r7, #2]	@ movhi
 901 006a 1A85     		strh	r2, [r3, #40]	@ movhi
 613:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->TxXferCount = Size;
 902              		.loc 1 613 25 discriminator 2
 903 006c FB68     		ldr	r3, [r7, #12]
 904 006e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 905 0070 5A85     		strh	r2, [r3, #42]	@ movhi
 614:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->RxXferCount = Size;
 906              		.loc 1 614 25 discriminator 2
 907 0072 FB68     		ldr	r3, [r7, #12]
 908 0074 7A88     		ldrh	r2, [r7, #2]	@ movhi
 909 0076 5A86     		strh	r2, [r3, #50]	@ movhi
 615:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 616:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Check the remain data to be received */
 617:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     while(husart->TxXferCount > 0U)
 910              		.loc 1 617 10 discriminator 2
 911 0078 99E0     		b	.L44
 912              	.L54:
 618:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 619:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       husart->TxXferCount--;
 913              		.loc 1 619 13
 914 007a FB68     		ldr	r3, [r7, #12]
 915 007c 5B8D     		ldrh	r3, [r3, #42]	@ movhi
 916 007e 9BB2     		uxth	r3, r3
 917              		.loc 1 619 26
 918 0080 013B     		subs	r3, r3, #1
 919 0082 9AB2     		uxth	r2, r3
 920 0084 FB68     		ldr	r3, [r7, #12]
 921 0086 5A85     		strh	r2, [r3, #42]	@ movhi
 620:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       husart->RxXferCount--;
 922              		.loc 1 620 13
 923 0088 FB68     		ldr	r3, [r7, #12]
 924 008a 5B8E     		ldrh	r3, [r3, #50]	@ movhi
 925 008c 9BB2     		uxth	r3, r3
 926              		.loc 1 620 26
 927 008e 013B     		subs	r3, r3, #1
 928 0090 9AB2     		uxth	r2, r3
ARM GAS  /tmp/ccIGChKB.s 			page 28


 929 0092 FB68     		ldr	r3, [r7, #12]
 930 0094 5A86     		strh	r2, [r3, #50]	@ movhi
 621:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       if(husart->Init.WordLength == USART_WORDLENGTH_9B)
 931              		.loc 1 621 22
 932 0096 FB68     		ldr	r3, [r7, #12]
 933 0098 9B68     		ldr	r3, [r3, #8]
 934              		.loc 1 621 9
 935 009a B3F5805F 		cmp	r3, #4096
 936 009e 4DD1     		bne	.L45
 622:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
 623:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Wait for TC flag in order to write data in DR */
 624:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_O
 937              		.loc 1 624 12
 938 00a0 3B6A     		ldr	r3, [r7, #32]
 939 00a2 0093     		str	r3, [sp]
 940 00a4 7B69     		ldr	r3, [r7, #20]
 941 00a6 0022     		movs	r2, #0
 942 00a8 8021     		movs	r1, #128
 943 00aa F868     		ldr	r0, [r7, #12]
 944 00ac FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 945 00b0 0346     		mov	r3, r0
 946              		.loc 1 624 11
 947 00b2 002B     		cmp	r3, #0
 948 00b4 01D0     		beq	.L46
 625:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 626:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           return HAL_TIMEOUT;
 949              		.loc 1 626 18
 950 00b6 0323     		movs	r3, #3
 951 00b8 8AE0     		b	.L42
 952              	.L46:
 627:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 628:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         tmp = (uint16_t*) pTxData;
 953              		.loc 1 628 13
 954 00ba BB68     		ldr	r3, [r7, #8]
 955 00bc 3B61     		str	r3, [r7, #16]
 629:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         husart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 956              		.loc 1 629 33
 957 00be 3B69     		ldr	r3, [r7, #16]
 958 00c0 1B88     		ldrh	r3, [r3]
 959              		.loc 1 629 38
 960 00c2 1A46     		mov	r2, r3
 961              		.loc 1 629 15
 962 00c4 FB68     		ldr	r3, [r7, #12]
 963 00c6 1B68     		ldr	r3, [r3]
 964              		.loc 1 629 38
 965 00c8 C2F30802 		ubfx	r2, r2, #0, #9
 966              		.loc 1 629 30
 967 00cc 5A60     		str	r2, [r3, #4]
 630:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(husart->Init.Parity == USART_PARITY_NONE)
 968              		.loc 1 630 24
 969 00ce FB68     		ldr	r3, [r7, #12]
 970 00d0 1B69     		ldr	r3, [r3, #16]
 971              		.loc 1 630 11
 972 00d2 002B     		cmp	r3, #0
 973 00d4 03D1     		bne	.L47
 631:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 632:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           pTxData += 2U;
ARM GAS  /tmp/ccIGChKB.s 			page 29


 974              		.loc 1 632 19
 975 00d6 BB68     		ldr	r3, [r7, #8]
 976 00d8 0233     		adds	r3, r3, #2
 977 00da BB60     		str	r3, [r7, #8]
 978 00dc 02E0     		b	.L48
 979              	.L47:
 633:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 634:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         else
 635:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 636:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           pTxData += 1U;
 980              		.loc 1 636 19
 981 00de BB68     		ldr	r3, [r7, #8]
 982 00e0 0133     		adds	r3, r3, #1
 983 00e2 BB60     		str	r3, [r7, #8]
 984              	.L48:
 637:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 638:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 639:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Wait for RXNE Flag */
 640:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_
 985              		.loc 1 640 12
 986 00e4 3B6A     		ldr	r3, [r7, #32]
 987 00e6 0093     		str	r3, [sp]
 988 00e8 7B69     		ldr	r3, [r7, #20]
 989 00ea 0022     		movs	r2, #0
 990 00ec 2021     		movs	r1, #32
 991 00ee F868     		ldr	r0, [r7, #12]
 992 00f0 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 993 00f4 0346     		mov	r3, r0
 994              		.loc 1 640 11
 995 00f6 002B     		cmp	r3, #0
 996 00f8 01D0     		beq	.L49
 641:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 642:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           return HAL_TIMEOUT;
 997              		.loc 1 642 18
 998 00fa 0323     		movs	r3, #3
 999 00fc 68E0     		b	.L42
 1000              	.L49:
 643:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 644:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         tmp = (uint16_t*) pRxData ;
 1001              		.loc 1 644 13
 1002 00fe 7B68     		ldr	r3, [r7, #4]
 1003 0100 3B61     		str	r3, [r7, #16]
 645:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(husart->Init.Parity == USART_PARITY_NONE)
 1004              		.loc 1 645 24
 1005 0102 FB68     		ldr	r3, [r7, #12]
 1006 0104 1B69     		ldr	r3, [r3, #16]
 1007              		.loc 1 645 11
 1008 0106 002B     		cmp	r3, #0
 1009 0108 0CD1     		bne	.L50
 646:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 647:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           *tmp = (uint16_t)(husart->Instance->DR & (uint16_t)0x01FF);
 1010              		.loc 1 647 35
 1011 010a FB68     		ldr	r3, [r7, #12]
 1012 010c 1B68     		ldr	r3, [r3]
 1013              		.loc 1 647 45
 1014 010e 5B68     		ldr	r3, [r3, #4]
 1015              		.loc 1 647 18
ARM GAS  /tmp/ccIGChKB.s 			page 30


 1016 0110 9BB2     		uxth	r3, r3
 1017 0112 C3F30803 		ubfx	r3, r3, #0, #9
 1018 0116 9AB2     		uxth	r2, r3
 1019              		.loc 1 647 16
 1020 0118 3B69     		ldr	r3, [r7, #16]
 1021 011a 1A80     		strh	r2, [r3]	@ movhi
 648:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           pRxData += 2U;
 1022              		.loc 1 648 19
 1023 011c 7B68     		ldr	r3, [r7, #4]
 1024 011e 0233     		adds	r3, r3, #2
 1025 0120 7B60     		str	r3, [r7, #4]
 1026 0122 44E0     		b	.L44
 1027              	.L50:
 649:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 650:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         else
 651:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 652:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           *tmp = (uint16_t)(husart->Instance->DR & (uint16_t)0x00FF);
 1028              		.loc 1 652 35
 1029 0124 FB68     		ldr	r3, [r7, #12]
 1030 0126 1B68     		ldr	r3, [r3]
 1031              		.loc 1 652 45
 1032 0128 5B68     		ldr	r3, [r3, #4]
 1033              		.loc 1 652 18
 1034 012a 9BB2     		uxth	r3, r3
 1035 012c DBB2     		uxtb	r3, r3
 1036 012e 9AB2     		uxth	r2, r3
 1037              		.loc 1 652 16
 1038 0130 3B69     		ldr	r3, [r7, #16]
 1039 0132 1A80     		strh	r2, [r3]	@ movhi
 653:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           pRxData += 1U;
 1040              		.loc 1 653 19
 1041 0134 7B68     		ldr	r3, [r7, #4]
 1042 0136 0133     		adds	r3, r3, #1
 1043 0138 7B60     		str	r3, [r7, #4]
 1044 013a 38E0     		b	.L44
 1045              	.L45:
 654:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 655:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
 656:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       else
 657:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
 658:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Wait for TC flag in order to write data in DR */
 659:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_O
 1046              		.loc 1 659 12
 1047 013c 3B6A     		ldr	r3, [r7, #32]
 1048 013e 0093     		str	r3, [sp]
 1049 0140 7B69     		ldr	r3, [r7, #20]
 1050 0142 0022     		movs	r2, #0
 1051 0144 8021     		movs	r1, #128
 1052 0146 F868     		ldr	r0, [r7, #12]
 1053 0148 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 1054 014c 0346     		mov	r3, r0
 1055              		.loc 1 659 11
 1056 014e 002B     		cmp	r3, #0
 1057 0150 01D0     		beq	.L51
 660:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 661:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           return HAL_TIMEOUT;
 1058              		.loc 1 661 18
ARM GAS  /tmp/ccIGChKB.s 			page 31


 1059 0152 0323     		movs	r3, #3
 1060 0154 3CE0     		b	.L42
 1061              	.L51:
 662:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 663:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         husart->Instance->DR = (*pTxData++ & (uint8_t)0x00FF);
 1062              		.loc 1 663 41
 1063 0156 BB68     		ldr	r3, [r7, #8]
 1064 0158 5A1C     		adds	r2, r3, #1
 1065 015a BA60     		str	r2, [r7, #8]
 1066              		.loc 1 663 33
 1067 015c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1068              		.loc 1 663 15
 1069 015e FB68     		ldr	r3, [r7, #12]
 1070 0160 1B68     		ldr	r3, [r3]
 1071              		.loc 1 663 30
 1072 0162 5A60     		str	r2, [r3, #4]
 664:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 665:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Wait for RXNE Flag */
 666:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_
 1073              		.loc 1 666 12
 1074 0164 3B6A     		ldr	r3, [r7, #32]
 1075 0166 0093     		str	r3, [sp]
 1076 0168 7B69     		ldr	r3, [r7, #20]
 1077 016a 0022     		movs	r2, #0
 1078 016c 2021     		movs	r1, #32
 1079 016e F868     		ldr	r0, [r7, #12]
 1080 0170 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 1081 0174 0346     		mov	r3, r0
 1082              		.loc 1 666 11
 1083 0176 002B     		cmp	r3, #0
 1084 0178 01D0     		beq	.L52
 667:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 668:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           return HAL_TIMEOUT;
 1085              		.loc 1 668 18
 1086 017a 0323     		movs	r3, #3
 1087 017c 28E0     		b	.L42
 1088              	.L52:
 669:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 670:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(husart->Init.Parity == USART_PARITY_NONE)
 1089              		.loc 1 670 24
 1090 017e FB68     		ldr	r3, [r7, #12]
 1091 0180 1B69     		ldr	r3, [r3, #16]
 1092              		.loc 1 670 11
 1093 0182 002B     		cmp	r3, #0
 1094 0184 08D1     		bne	.L53
 671:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 672:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           /* Receive data */
 673:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           *pRxData++ = (uint8_t)(husart->Instance->DR & (uint8_t)0x00FF);
 1095              		.loc 1 673 40
 1096 0186 FB68     		ldr	r3, [r7, #12]
 1097 0188 1B68     		ldr	r3, [r3]
 1098              		.loc 1 673 50
 1099 018a 5968     		ldr	r1, [r3, #4]
 1100              		.loc 1 673 19
 1101 018c 7B68     		ldr	r3, [r7, #4]
 1102 018e 5A1C     		adds	r2, r3, #1
 1103 0190 7A60     		str	r2, [r7, #4]
ARM GAS  /tmp/ccIGChKB.s 			page 32


 1104              		.loc 1 673 24
 1105 0192 CAB2     		uxtb	r2, r1
 1106              		.loc 1 673 22
 1107 0194 1A70     		strb	r2, [r3]
 1108 0196 0AE0     		b	.L44
 1109              	.L53:
 674:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 675:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         else
 676:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 677:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           /* Receive data */
 678:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           *pRxData++ = (uint8_t)(husart->Instance->DR & (uint8_t)0x007F);
 1110              		.loc 1 678 40
 1111 0198 FB68     		ldr	r3, [r7, #12]
 1112 019a 1B68     		ldr	r3, [r3]
 1113              		.loc 1 678 50
 1114 019c 5B68     		ldr	r3, [r3, #4]
 1115              		.loc 1 678 24
 1116 019e DAB2     		uxtb	r2, r3
 1117              		.loc 1 678 19
 1118 01a0 7B68     		ldr	r3, [r7, #4]
 1119 01a2 591C     		adds	r1, r3, #1
 1120 01a4 7960     		str	r1, [r7, #4]
 1121              		.loc 1 678 24
 1122 01a6 02F07F02 		and	r2, r2, #127
 1123 01aa D2B2     		uxtb	r2, r2
 1124              		.loc 1 678 22
 1125 01ac 1A70     		strb	r2, [r3]
 1126              	.L44:
 617:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 1127              		.loc 1 617 17
 1128 01ae FB68     		ldr	r3, [r7, #12]
 1129 01b0 5B8D     		ldrh	r3, [r3, #42]	@ movhi
 1130 01b2 9BB2     		uxth	r3, r3
 617:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 1131              		.loc 1 617 10
 1132 01b4 002B     		cmp	r3, #0
 1133 01b6 7FF460AF 		bne	.L54
 679:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
 680:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
 681:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 682:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 683:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
 1134              		.loc 1 683 19
 1135 01ba FB68     		ldr	r3, [r7, #12]
 1136 01bc 0122     		movs	r2, #1
 1137 01be 83F83D20 		strb	r2, [r3, #61]
 684:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 685:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Process Unlocked */
 686:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 1138              		.loc 1 686 5
 1139 01c2 FB68     		ldr	r3, [r7, #12]
 1140 01c4 0022     		movs	r2, #0
 1141 01c6 83F83C20 		strb	r2, [r3, #60]
 687:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 688:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_OK;
 1142              		.loc 1 688 12
 1143 01ca 0023     		movs	r3, #0
ARM GAS  /tmp/ccIGChKB.s 			page 33


 1144 01cc 00E0     		b	.L42
 1145              	.L39:
 689:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 690:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   else
 691:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 692:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_BUSY;
 1146              		.loc 1 692 12
 1147 01ce 0223     		movs	r3, #2
 1148              	.L42:
 693:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 694:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 1149              		.loc 1 694 1
 1150 01d0 1846     		mov	r0, r3
 1151 01d2 1837     		adds	r7, r7, #24
 1152              	.LCFI35:
 1153              		.cfi_def_cfa_offset 8
 1154 01d4 BD46     		mov	sp, r7
 1155              	.LCFI36:
 1156              		.cfi_def_cfa_register 13
 1157              		@ sp needed
 1158 01d6 80BD     		pop	{r7, pc}
 1159              		.cfi_endproc
 1160              	.LFE132:
 1162              		.section	.text.HAL_USART_Transmit_IT,"ax",%progbits
 1163              		.align	1
 1164              		.global	HAL_USART_Transmit_IT
 1165              		.syntax unified
 1166              		.thumb
 1167              		.thumb_func
 1168              		.fpu fpv4-sp-d16
 1170              	HAL_USART_Transmit_IT:
 1171              	.LFB133:
 695:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 696:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
 697:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Simplex Send an amount of data in non-blocking mode.
 698:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
 699:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
 700:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  pTxData Pointer to data buffer
 701:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  Size Amount of data to be sent
 702:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
 703:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @note   The USART errors are not managed to avoid the overrun error.
 704:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 705:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Transmit_IT(USART_HandleTypeDef *husart, uint8_t *pTxData, uint16_t Siz
 706:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 1172              		.loc 1 706 1
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 16
 1175              		@ frame_needed = 1, uses_anonymous_args = 0
 1176              		@ link register save eliminated.
 1177 0000 80B4     		push	{r7}
 1178              	.LCFI37:
 1179              		.cfi_def_cfa_offset 4
 1180              		.cfi_offset 7, -4
 1181 0002 85B0     		sub	sp, sp, #20
 1182              	.LCFI38:
 1183              		.cfi_def_cfa_offset 24
 1184 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccIGChKB.s 			page 34


 1185              	.LCFI39:
 1186              		.cfi_def_cfa_register 7
 1187 0006 F860     		str	r0, [r7, #12]
 1188 0008 B960     		str	r1, [r7, #8]
 1189 000a 1346     		mov	r3, r2
 1190 000c FB80     		strh	r3, [r7, #6]	@ movhi
 707:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_READY)
 1191              		.loc 1 707 12
 1192 000e FB68     		ldr	r3, [r7, #12]
 1193 0010 93F83D30 		ldrb	r3, [r3, #61]
 1194 0014 DBB2     		uxtb	r3, r3
 1195              		.loc 1 707 5
 1196 0016 012B     		cmp	r3, #1
 1197 0018 30D1     		bne	.L56
 708:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 709:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if((pTxData == NULL) || (Size == 0))
 1198              		.loc 1 709 7
 1199 001a BB68     		ldr	r3, [r7, #8]
 1200 001c 002B     		cmp	r3, #0
 1201 001e 02D0     		beq	.L57
 1202              		.loc 1 709 26 discriminator 1
 1203 0020 FB88     		ldrh	r3, [r7, #6]
 1204 0022 002B     		cmp	r3, #0
 1205 0024 01D1     		bne	.L58
 1206              	.L57:
 710:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 711:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       return HAL_ERROR;
 1207              		.loc 1 711 14
 1208 0026 0123     		movs	r3, #1
 1209 0028 29E0     		b	.L59
 1210              	.L58:
 712:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 713:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 714:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Process Locked */
 715:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_LOCK(husart);
 1211              		.loc 1 715 5
 1212 002a FB68     		ldr	r3, [r7, #12]
 1213 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1214 0030 012B     		cmp	r3, #1
 1215 0032 01D1     		bne	.L60
 1216              		.loc 1 715 5 is_stmt 0 discriminator 1
 1217 0034 0223     		movs	r3, #2
 1218 0036 22E0     		b	.L59
 1219              	.L60:
 1220              		.loc 1 715 5 discriminator 2
 1221 0038 FB68     		ldr	r3, [r7, #12]
 1222 003a 0122     		movs	r2, #1
 1223 003c 83F83C20 		strb	r2, [r3, #60]
 716:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 717:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->pTxBuffPtr = pTxData;
 1224              		.loc 1 717 24 is_stmt 1 discriminator 2
 1225 0040 FB68     		ldr	r3, [r7, #12]
 1226 0042 BA68     		ldr	r2, [r7, #8]
 1227 0044 5A62     		str	r2, [r3, #36]
 718:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->TxXferSize = Size;
 1228              		.loc 1 718 24 discriminator 2
 1229 0046 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccIGChKB.s 			page 35


 1230 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1231 004a 1A85     		strh	r2, [r3, #40]	@ movhi
 719:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->TxXferCount = Size;
 1232              		.loc 1 719 25 discriminator 2
 1233 004c FB68     		ldr	r3, [r7, #12]
 1234 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1235 0050 5A85     		strh	r2, [r3, #42]	@ movhi
 720:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 721:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 1236              		.loc 1 721 23 discriminator 2
 1237 0052 FB68     		ldr	r3, [r7, #12]
 1238 0054 0022     		movs	r2, #0
 1239 0056 1A64     		str	r2, [r3, #64]
 722:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX;
 1240              		.loc 1 722 19 discriminator 2
 1241 0058 FB68     		ldr	r3, [r7, #12]
 1242 005a 1222     		movs	r2, #18
 1243 005c 83F83D20 		strb	r2, [r3, #61]
 723:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 724:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* The USART Error Interrupts: (Frame error, Noise error, Overrun error)
 725:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        are not managed by the USART transmit process to avoid the overrun interrupt
 726:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        when the USART mode is configured for transmit and receive "USART_MODE_TX_RX"
 727:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        to benefit for the frame error and noise interrupts the USART mode should be
 728:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        configured only for transmit "USART_MODE_TX"
 729:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        The __HAL_USART_ENABLE_IT(husart, USART_IT_ERR) can be used to enable the Frame error,
 730:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        Noise error interrupt */
 731:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 732:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Process Unlocked */
 733:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 1244              		.loc 1 733 5 discriminator 2
 1245 0060 FB68     		ldr	r3, [r7, #12]
 1246 0062 0022     		movs	r2, #0
 1247 0064 83F83C20 		strb	r2, [r3, #60]
 734:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 735:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the USART Transmit Data Register Empty Interrupt */
 736:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     SET_BIT(husart->Instance->CR1, USART_CR1_TXEIE);
 1248              		.loc 1 736 5 discriminator 2
 1249 0068 FB68     		ldr	r3, [r7, #12]
 1250 006a 1B68     		ldr	r3, [r3]
 1251 006c DA68     		ldr	r2, [r3, #12]
 1252 006e FB68     		ldr	r3, [r7, #12]
 1253 0070 1B68     		ldr	r3, [r3]
 1254 0072 42F08002 		orr	r2, r2, #128
 1255 0076 DA60     		str	r2, [r3, #12]
 737:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 738:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_OK;
 1256              		.loc 1 738 12 discriminator 2
 1257 0078 0023     		movs	r3, #0
 1258 007a 00E0     		b	.L59
 1259              	.L56:
 739:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 740:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   else
 741:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 742:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_BUSY;
 1260              		.loc 1 742 12
 1261 007c 0223     		movs	r3, #2
 1262              	.L59:
ARM GAS  /tmp/ccIGChKB.s 			page 36


 743:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 744:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 1263              		.loc 1 744 1
 1264 007e 1846     		mov	r0, r3
 1265 0080 1437     		adds	r7, r7, #20
 1266              	.LCFI40:
 1267              		.cfi_def_cfa_offset 4
 1268 0082 BD46     		mov	sp, r7
 1269              	.LCFI41:
 1270              		.cfi_def_cfa_register 13
 1271              		@ sp needed
 1272 0084 5DF8047B 		ldr	r7, [sp], #4
 1273              	.LCFI42:
 1274              		.cfi_restore 7
 1275              		.cfi_def_cfa_offset 0
 1276 0088 7047     		bx	lr
 1277              		.cfi_endproc
 1278              	.LFE133:
 1280              		.section	.text.HAL_USART_Receive_IT,"ax",%progbits
 1281              		.align	1
 1282              		.global	HAL_USART_Receive_IT
 1283              		.syntax unified
 1284              		.thumb
 1285              		.thumb_func
 1286              		.fpu fpv4-sp-d16
 1288              	HAL_USART_Receive_IT:
 1289              	.LFB134:
 745:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 746:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
 747:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Simplex Receive an amount of data in non-blocking mode.
 748:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
 749:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
 750:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  pRxData Pointer to data buffer
 751:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  Size Amount of data to be received
 752:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
 753:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 754:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Receive_IT(USART_HandleTypeDef *husart, uint8_t *pRxData, uint16_t Size
 755:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 1290              		.loc 1 755 1
 1291              		.cfi_startproc
 1292              		@ args = 0, pretend = 0, frame = 16
 1293              		@ frame_needed = 1, uses_anonymous_args = 0
 1294              		@ link register save eliminated.
 1295 0000 80B4     		push	{r7}
 1296              	.LCFI43:
 1297              		.cfi_def_cfa_offset 4
 1298              		.cfi_offset 7, -4
 1299 0002 85B0     		sub	sp, sp, #20
 1300              	.LCFI44:
 1301              		.cfi_def_cfa_offset 24
 1302 0004 00AF     		add	r7, sp, #0
 1303              	.LCFI45:
 1304              		.cfi_def_cfa_register 7
 1305 0006 F860     		str	r0, [r7, #12]
 1306 0008 B960     		str	r1, [r7, #8]
 1307 000a 1346     		mov	r3, r2
 1308 000c FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  /tmp/ccIGChKB.s 			page 37


 756:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_READY)
 1309              		.loc 1 756 12
 1310 000e FB68     		ldr	r3, [r7, #12]
 1311 0010 93F83D30 		ldrb	r3, [r3, #61]
 1312 0014 DBB2     		uxtb	r3, r3
 1313              		.loc 1 756 5
 1314 0016 012B     		cmp	r3, #1
 1315 0018 3DD1     		bne	.L62
 757:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 758:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if((pRxData == NULL) || (Size == 0))
 1316              		.loc 1 758 7
 1317 001a BB68     		ldr	r3, [r7, #8]
 1318 001c 002B     		cmp	r3, #0
 1319 001e 02D0     		beq	.L63
 1320              		.loc 1 758 26 discriminator 1
 1321 0020 FB88     		ldrh	r3, [r7, #6]
 1322 0022 002B     		cmp	r3, #0
 1323 0024 01D1     		bne	.L64
 1324              	.L63:
 759:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 760:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       return HAL_ERROR;
 1325              		.loc 1 760 14
 1326 0026 0123     		movs	r3, #1
 1327 0028 36E0     		b	.L65
 1328              	.L64:
 761:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 762:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Process Locked */
 763:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_LOCK(husart);
 1329              		.loc 1 763 5
 1330 002a FB68     		ldr	r3, [r7, #12]
 1331 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1332 0030 012B     		cmp	r3, #1
 1333 0032 01D1     		bne	.L66
 1334              		.loc 1 763 5 is_stmt 0 discriminator 1
 1335 0034 0223     		movs	r3, #2
 1336 0036 2FE0     		b	.L65
 1337              	.L66:
 1338              		.loc 1 763 5 discriminator 2
 1339 0038 FB68     		ldr	r3, [r7, #12]
 1340 003a 0122     		movs	r2, #1
 1341 003c 83F83C20 		strb	r2, [r3, #60]
 764:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 765:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->pRxBuffPtr = pRxData;
 1342              		.loc 1 765 24 is_stmt 1 discriminator 2
 1343 0040 FB68     		ldr	r3, [r7, #12]
 1344 0042 BA68     		ldr	r2, [r7, #8]
 1345 0044 DA62     		str	r2, [r3, #44]
 766:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->RxXferSize = Size;
 1346              		.loc 1 766 24 discriminator 2
 1347 0046 FB68     		ldr	r3, [r7, #12]
 1348 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1349 004a 1A86     		strh	r2, [r3, #48]	@ movhi
 767:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->RxXferCount = Size;
 1350              		.loc 1 767 25 discriminator 2
 1351 004c FB68     		ldr	r3, [r7, #12]
 1352 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1353 0050 5A86     		strh	r2, [r3, #50]	@ movhi
ARM GAS  /tmp/ccIGChKB.s 			page 38


 768:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 769:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 1354              		.loc 1 769 23 discriminator 2
 1355 0052 FB68     		ldr	r3, [r7, #12]
 1356 0054 0022     		movs	r2, #0
 1357 0056 1A64     		str	r2, [r3, #64]
 770:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
 1358              		.loc 1 770 19 discriminator 2
 1359 0058 FB68     		ldr	r3, [r7, #12]
 1360 005a 2222     		movs	r2, #34
 1361 005c 83F83D20 		strb	r2, [r3, #61]
 771:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 772:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Process Unlocked */
 773:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 1362              		.loc 1 773 5 discriminator 2
 1363 0060 FB68     		ldr	r3, [r7, #12]
 1364 0062 0022     		movs	r2, #0
 1365 0064 83F83C20 		strb	r2, [r3, #60]
 774:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 775:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the USART Parity Error and Data Register not empty Interrupts */
 776:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     SET_BIT(husart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 1366              		.loc 1 776 5 discriminator 2
 1367 0068 FB68     		ldr	r3, [r7, #12]
 1368 006a 1B68     		ldr	r3, [r3]
 1369 006c DA68     		ldr	r2, [r3, #12]
 1370 006e FB68     		ldr	r3, [r7, #12]
 1371 0070 1B68     		ldr	r3, [r3]
 1372 0072 42F49072 		orr	r2, r2, #288
 1373 0076 DA60     		str	r2, [r3, #12]
 777:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 778:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the USART Error Interrupt: (Frame error, noise error, overrun error) */
 779:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_EIE);
 1374              		.loc 1 779 5 discriminator 2
 1375 0078 FB68     		ldr	r3, [r7, #12]
 1376 007a 1B68     		ldr	r3, [r3]
 1377 007c 5A69     		ldr	r2, [r3, #20]
 1378 007e FB68     		ldr	r3, [r7, #12]
 1379 0080 1B68     		ldr	r3, [r3]
 1380 0082 42F00102 		orr	r2, r2, #1
 1381 0086 5A61     		str	r2, [r3, #20]
 780:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 781:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Send dummy byte in order to generate the clock for the slave to send data */
 782:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->Instance->DR = (DUMMY_DATA & (uint16_t)0x01FF);
 1382              		.loc 1 782 11 discriminator 2
 1383 0088 FB68     		ldr	r3, [r7, #12]
 1384 008a 1B68     		ldr	r3, [r3]
 1385              		.loc 1 782 26 discriminator 2
 1386 008c 40F2FF12 		movw	r2, #511
 1387 0090 5A60     		str	r2, [r3, #4]
 783:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 784:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_OK;
 1388              		.loc 1 784 12 discriminator 2
 1389 0092 0023     		movs	r3, #0
 1390 0094 00E0     		b	.L65
 1391              	.L62:
 785:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 786:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   else
ARM GAS  /tmp/ccIGChKB.s 			page 39


 787:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 788:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_BUSY;
 1392              		.loc 1 788 12
 1393 0096 0223     		movs	r3, #2
 1394              	.L65:
 789:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 790:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 1395              		.loc 1 790 1
 1396 0098 1846     		mov	r0, r3
 1397 009a 1437     		adds	r7, r7, #20
 1398              	.LCFI46:
 1399              		.cfi_def_cfa_offset 4
 1400 009c BD46     		mov	sp, r7
 1401              	.LCFI47:
 1402              		.cfi_def_cfa_register 13
 1403              		@ sp needed
 1404 009e 5DF8047B 		ldr	r7, [sp], #4
 1405              	.LCFI48:
 1406              		.cfi_restore 7
 1407              		.cfi_def_cfa_offset 0
 1408 00a2 7047     		bx	lr
 1409              		.cfi_endproc
 1410              	.LFE134:
 1412              		.section	.text.HAL_USART_TransmitReceive_IT,"ax",%progbits
 1413              		.align	1
 1414              		.global	HAL_USART_TransmitReceive_IT
 1415              		.syntax unified
 1416              		.thumb
 1417              		.thumb_func
 1418              		.fpu fpv4-sp-d16
 1420              	HAL_USART_TransmitReceive_IT:
 1421              	.LFB135:
 791:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 792:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
 793:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Full-Duplex Send receive an amount of data in full-duplex mode (non-blocking).
 794:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
 795:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
 796:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  pTxData Pointer to data transmitted buffer
 797:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  pRxData Pointer to data received buffer
 798:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  Size Amount of data to be received
 799:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
 800:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 801:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_TransmitReceive_IT(USART_HandleTypeDef *husart, uint8_t *pTxData, uint8
 802:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 1422              		.loc 1 802 1
 1423              		.cfi_startproc
 1424              		@ args = 0, pretend = 0, frame = 16
 1425              		@ frame_needed = 1, uses_anonymous_args = 0
 1426              		@ link register save eliminated.
 1427 0000 80B4     		push	{r7}
 1428              	.LCFI49:
 1429              		.cfi_def_cfa_offset 4
 1430              		.cfi_offset 7, -4
 1431 0002 85B0     		sub	sp, sp, #20
 1432              	.LCFI50:
 1433              		.cfi_def_cfa_offset 24
 1434 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccIGChKB.s 			page 40


 1435              	.LCFI51:
 1436              		.cfi_def_cfa_register 7
 1437 0006 F860     		str	r0, [r7, #12]
 1438 0008 B960     		str	r1, [r7, #8]
 1439 000a 7A60     		str	r2, [r7, #4]
 1440 000c 7B80     		strh	r3, [r7, #2]	@ movhi
 803:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_READY)
 1441              		.loc 1 803 12
 1442 000e FB68     		ldr	r3, [r7, #12]
 1443 0010 93F83D30 		ldrb	r3, [r3, #61]
 1444 0014 DBB2     		uxtb	r3, r3
 1445              		.loc 1 803 5
 1446 0016 012B     		cmp	r3, #1
 1447 0018 54D1     		bne	.L68
 804:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 805:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if((pTxData == NULL) || (pRxData == NULL) || (Size == 0))
 1448              		.loc 1 805 7
 1449 001a BB68     		ldr	r3, [r7, #8]
 1450 001c 002B     		cmp	r3, #0
 1451 001e 05D0     		beq	.L69
 1452              		.loc 1 805 26 discriminator 1
 1453 0020 7B68     		ldr	r3, [r7, #4]
 1454 0022 002B     		cmp	r3, #0
 1455 0024 02D0     		beq	.L69
 1456              		.loc 1 805 47 discriminator 2
 1457 0026 7B88     		ldrh	r3, [r7, #2]
 1458 0028 002B     		cmp	r3, #0
 1459 002a 01D1     		bne	.L70
 1460              	.L69:
 806:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 807:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       return HAL_ERROR;
 1461              		.loc 1 807 14
 1462 002c 0123     		movs	r3, #1
 1463 002e 4AE0     		b	.L71
 1464              	.L70:
 808:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 809:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Process Locked */
 810:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_LOCK(husart);
 1465              		.loc 1 810 5
 1466 0030 FB68     		ldr	r3, [r7, #12]
 1467 0032 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1468 0036 012B     		cmp	r3, #1
 1469 0038 01D1     		bne	.L72
 1470              		.loc 1 810 5 is_stmt 0 discriminator 1
 1471 003a 0223     		movs	r3, #2
 1472 003c 43E0     		b	.L71
 1473              	.L72:
 1474              		.loc 1 810 5 discriminator 2
 1475 003e FB68     		ldr	r3, [r7, #12]
 1476 0040 0122     		movs	r2, #1
 1477 0042 83F83C20 		strb	r2, [r3, #60]
 811:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 812:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->pRxBuffPtr = pRxData;
 1478              		.loc 1 812 24 is_stmt 1 discriminator 2
 1479 0046 FB68     		ldr	r3, [r7, #12]
 1480 0048 7A68     		ldr	r2, [r7, #4]
 1481 004a DA62     		str	r2, [r3, #44]
ARM GAS  /tmp/ccIGChKB.s 			page 41


 813:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->RxXferSize = Size;
 1482              		.loc 1 813 24 discriminator 2
 1483 004c FB68     		ldr	r3, [r7, #12]
 1484 004e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1485 0050 1A86     		strh	r2, [r3, #48]	@ movhi
 814:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->RxXferCount = Size;
 1486              		.loc 1 814 25 discriminator 2
 1487 0052 FB68     		ldr	r3, [r7, #12]
 1488 0054 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1489 0056 5A86     		strh	r2, [r3, #50]	@ movhi
 815:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->pTxBuffPtr = pTxData;
 1490              		.loc 1 815 24 discriminator 2
 1491 0058 FB68     		ldr	r3, [r7, #12]
 1492 005a BA68     		ldr	r2, [r7, #8]
 1493 005c 5A62     		str	r2, [r3, #36]
 816:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->TxXferSize = Size;
 1494              		.loc 1 816 24 discriminator 2
 1495 005e FB68     		ldr	r3, [r7, #12]
 1496 0060 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1497 0062 1A85     		strh	r2, [r3, #40]	@ movhi
 817:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->TxXferCount = Size;
 1498              		.loc 1 817 25 discriminator 2
 1499 0064 FB68     		ldr	r3, [r7, #12]
 1500 0066 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1501 0068 5A85     		strh	r2, [r3, #42]	@ movhi
 818:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 819:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 1502              		.loc 1 819 23 discriminator 2
 1503 006a FB68     		ldr	r3, [r7, #12]
 1504 006c 0022     		movs	r2, #0
 1505 006e 1A64     		str	r2, [r3, #64]
 820:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX_RX;
 1506              		.loc 1 820 19 discriminator 2
 1507 0070 FB68     		ldr	r3, [r7, #12]
 1508 0072 3222     		movs	r2, #50
 1509 0074 83F83D20 		strb	r2, [r3, #61]
 821:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 822:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Process Unlocked */
 823:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 1510              		.loc 1 823 5 discriminator 2
 1511 0078 FB68     		ldr	r3, [r7, #12]
 1512 007a 0022     		movs	r2, #0
 1513 007c 83F83C20 		strb	r2, [r3, #60]
 824:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 825:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the USART Data Register not empty Interrupt */
 826:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     SET_BIT(husart->Instance->CR1, USART_CR1_RXNEIE);
 1514              		.loc 1 826 5 discriminator 2
 1515 0080 FB68     		ldr	r3, [r7, #12]
 1516 0082 1B68     		ldr	r3, [r3]
 1517 0084 DA68     		ldr	r2, [r3, #12]
 1518 0086 FB68     		ldr	r3, [r7, #12]
 1519 0088 1B68     		ldr	r3, [r3]
 1520 008a 42F02002 		orr	r2, r2, #32
 1521 008e DA60     		str	r2, [r3, #12]
 827:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 828:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the USART Parity Error Interrupt */
 829:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     SET_BIT(husart->Instance->CR1, USART_CR1_PEIE);
ARM GAS  /tmp/ccIGChKB.s 			page 42


 1522              		.loc 1 829 5 discriminator 2
 1523 0090 FB68     		ldr	r3, [r7, #12]
 1524 0092 1B68     		ldr	r3, [r3]
 1525 0094 DA68     		ldr	r2, [r3, #12]
 1526 0096 FB68     		ldr	r3, [r7, #12]
 1527 0098 1B68     		ldr	r3, [r3]
 1528 009a 42F48072 		orr	r2, r2, #256
 1529 009e DA60     		str	r2, [r3, #12]
 830:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 831:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the USART Error Interrupt: (Frame error, noise error, overrun error) */
 832:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_EIE);
 1530              		.loc 1 832 5 discriminator 2
 1531 00a0 FB68     		ldr	r3, [r7, #12]
 1532 00a2 1B68     		ldr	r3, [r3]
 1533 00a4 5A69     		ldr	r2, [r3, #20]
 1534 00a6 FB68     		ldr	r3, [r7, #12]
 1535 00a8 1B68     		ldr	r3, [r3]
 1536 00aa 42F00102 		orr	r2, r2, #1
 1537 00ae 5A61     		str	r2, [r3, #20]
 833:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 834:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the USART Transmit Data Register Empty Interrupt */
 835:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     SET_BIT(husart->Instance->CR1, USART_CR1_TXEIE);
 1538              		.loc 1 835 5 discriminator 2
 1539 00b0 FB68     		ldr	r3, [r7, #12]
 1540 00b2 1B68     		ldr	r3, [r3]
 1541 00b4 DA68     		ldr	r2, [r3, #12]
 1542 00b6 FB68     		ldr	r3, [r7, #12]
 1543 00b8 1B68     		ldr	r3, [r3]
 1544 00ba 42F08002 		orr	r2, r2, #128
 1545 00be DA60     		str	r2, [r3, #12]
 836:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 837:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_OK;
 1546              		.loc 1 837 12 discriminator 2
 1547 00c0 0023     		movs	r3, #0
 1548 00c2 00E0     		b	.L71
 1549              	.L68:
 838:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 839:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   else
 840:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 841:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_BUSY;
 1550              		.loc 1 841 12
 1551 00c4 0223     		movs	r3, #2
 1552              	.L71:
 842:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 843:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 1553              		.loc 1 843 1
 1554 00c6 1846     		mov	r0, r3
 1555 00c8 1437     		adds	r7, r7, #20
 1556              	.LCFI52:
 1557              		.cfi_def_cfa_offset 4
 1558 00ca BD46     		mov	sp, r7
 1559              	.LCFI53:
 1560              		.cfi_def_cfa_register 13
 1561              		@ sp needed
 1562 00cc 5DF8047B 		ldr	r7, [sp], #4
 1563              	.LCFI54:
 1564              		.cfi_restore 7
ARM GAS  /tmp/ccIGChKB.s 			page 43


 1565              		.cfi_def_cfa_offset 0
 1566 00d0 7047     		bx	lr
 1567              		.cfi_endproc
 1568              	.LFE135:
 1570              		.section	.text.HAL_USART_Transmit_DMA,"ax",%progbits
 1571              		.align	1
 1572              		.global	HAL_USART_Transmit_DMA
 1573              		.syntax unified
 1574              		.thumb
 1575              		.thumb_func
 1576              		.fpu fpv4-sp-d16
 1578              	HAL_USART_Transmit_DMA:
 1579              	.LFB136:
 844:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 845:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
 846:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Simplex Send an amount of data in non-blocking mode.
 847:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
 848:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
 849:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  pTxData Pointer to data buffer
 850:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  Size Amount of data to be sent
 851:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
 852:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 853:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Transmit_DMA(USART_HandleTypeDef *husart, uint8_t *pTxData, uint16_t Si
 854:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 1580              		.loc 1 854 1
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 24
 1583              		@ frame_needed = 1, uses_anonymous_args = 0
 1584 0000 80B5     		push	{r7, lr}
 1585              	.LCFI55:
 1586              		.cfi_def_cfa_offset 8
 1587              		.cfi_offset 7, -8
 1588              		.cfi_offset 14, -4
 1589 0002 86B0     		sub	sp, sp, #24
 1590              	.LCFI56:
 1591              		.cfi_def_cfa_offset 32
 1592 0004 00AF     		add	r7, sp, #0
 1593              	.LCFI57:
 1594              		.cfi_def_cfa_register 7
 1595 0006 F860     		str	r0, [r7, #12]
 1596 0008 B960     		str	r1, [r7, #8]
 1597 000a 1346     		mov	r3, r2
 1598 000c FB80     		strh	r3, [r7, #6]	@ movhi
 855:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint32_t *tmp;
 856:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 857:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_READY)
 1599              		.loc 1 857 12
 1600 000e FB68     		ldr	r3, [r7, #12]
 1601 0010 93F83D30 		ldrb	r3, [r3, #61]
 1602 0014 DBB2     		uxtb	r3, r3
 1603              		.loc 1 857 5
 1604 0016 012B     		cmp	r3, #1
 1605 0018 53D1     		bne	.L74
 858:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 859:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if((pTxData == NULL) || (Size == 0))
 1606              		.loc 1 859 17
 1607 001a BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccIGChKB.s 			page 44


 1608              		.loc 1 859 7
 1609 001c 002B     		cmp	r3, #0
 1610 001e 02D0     		beq	.L75
 1611              		.loc 1 859 26 discriminator 1
 1612 0020 FB88     		ldrh	r3, [r7, #6]
 1613 0022 002B     		cmp	r3, #0
 1614 0024 01D1     		bne	.L76
 1615              	.L75:
 860:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 861:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       return HAL_ERROR;
 1616              		.loc 1 861 14
 1617 0026 0123     		movs	r3, #1
 1618 0028 4CE0     		b	.L77
 1619              	.L76:
 862:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 863:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Process Locked */
 864:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_LOCK(husart);
 1620              		.loc 1 864 5
 1621 002a FB68     		ldr	r3, [r7, #12]
 1622 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1623 0030 012B     		cmp	r3, #1
 1624 0032 01D1     		bne	.L78
 1625              		.loc 1 864 5 is_stmt 0 discriminator 1
 1626 0034 0223     		movs	r3, #2
 1627 0036 45E0     		b	.L77
 1628              	.L78:
 1629              		.loc 1 864 5 discriminator 2
 1630 0038 FB68     		ldr	r3, [r7, #12]
 1631 003a 0122     		movs	r2, #1
 1632 003c 83F83C20 		strb	r2, [r3, #60]
 865:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 866:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->pTxBuffPtr = pTxData;
 1633              		.loc 1 866 24 is_stmt 1 discriminator 2
 1634 0040 BA68     		ldr	r2, [r7, #8]
 1635 0042 FB68     		ldr	r3, [r7, #12]
 1636 0044 5A62     		str	r2, [r3, #36]
 867:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->TxXferSize = Size;
 1637              		.loc 1 867 24 discriminator 2
 1638 0046 FB68     		ldr	r3, [r7, #12]
 1639 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1640 004a 1A85     		strh	r2, [r3, #40]	@ movhi
 868:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->TxXferCount = Size;
 1641              		.loc 1 868 25 discriminator 2
 1642 004c FB68     		ldr	r3, [r7, #12]
 1643 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1644 0050 5A85     		strh	r2, [r3, #42]	@ movhi
 869:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 870:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 1645              		.loc 1 870 23 discriminator 2
 1646 0052 FB68     		ldr	r3, [r7, #12]
 1647 0054 0022     		movs	r2, #0
 1648 0056 1A64     		str	r2, [r3, #64]
 871:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX;
 1649              		.loc 1 871 19 discriminator 2
 1650 0058 FB68     		ldr	r3, [r7, #12]
 1651 005a 1222     		movs	r2, #18
 1652 005c 83F83D20 		strb	r2, [r3, #61]
ARM GAS  /tmp/ccIGChKB.s 			page 45


 872:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 873:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set the USART DMA transfer complete callback */
 874:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmatx->XferCpltCallback = USART_DMATransmitCplt;
 1653              		.loc 1 874 11 discriminator 2
 1654 0060 FB68     		ldr	r3, [r7, #12]
 1655 0062 5B6B     		ldr	r3, [r3, #52]
 1656              		.loc 1 874 38 discriminator 2
 1657 0064 194A     		ldr	r2, .L79
 1658 0066 DA63     		str	r2, [r3, #60]
 875:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 876:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set the USART DMA Half transfer complete callback */
 877:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmatx->XferHalfCpltCallback = USART_DMATxHalfCplt;
 1659              		.loc 1 877 11 discriminator 2
 1660 0068 FB68     		ldr	r3, [r7, #12]
 1661 006a 5B6B     		ldr	r3, [r3, #52]
 1662              		.loc 1 877 42 discriminator 2
 1663 006c 184A     		ldr	r2, .L79+4
 1664 006e 1A64     		str	r2, [r3, #64]
 878:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 879:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set the DMA error callback */
 880:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmatx->XferErrorCallback = USART_DMAError;
 1665              		.loc 1 880 11 discriminator 2
 1666 0070 FB68     		ldr	r3, [r7, #12]
 1667 0072 5B6B     		ldr	r3, [r3, #52]
 1668              		.loc 1 880 39 discriminator 2
 1669 0074 174A     		ldr	r2, .L79+8
 1670 0076 DA64     		str	r2, [r3, #76]
 881:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 882:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set the DMA abort callback */
 883:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmatx->XferAbortCallback = NULL;
 1671              		.loc 1 883 11 discriminator 2
 1672 0078 FB68     		ldr	r3, [r7, #12]
 1673 007a 5B6B     		ldr	r3, [r3, #52]
 1674              		.loc 1 883 39 discriminator 2
 1675 007c 0022     		movs	r2, #0
 1676 007e 1A65     		str	r2, [r3, #80]
 884:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 885:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the USART transmit DMA Stream */
 886:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     tmp = (uint32_t*)&pTxData;
 1677              		.loc 1 886 9 discriminator 2
 1678 0080 07F10803 		add	r3, r7, #8
 1679 0084 7B61     		str	r3, [r7, #20]
 887:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     HAL_DMA_Start_IT(husart->hdmatx, *(uint32_t*)tmp, (uint32_t)&husart->Instance->DR, Size);
 1680              		.loc 1 887 5 discriminator 2
 1681 0086 FB68     		ldr	r3, [r7, #12]
 1682 0088 586B     		ldr	r0, [r3, #52]
 1683 008a 7B69     		ldr	r3, [r7, #20]
 1684 008c 1968     		ldr	r1, [r3]
 1685              		.loc 1 887 72 discriminator 2
 1686 008e FB68     		ldr	r3, [r7, #12]
 1687 0090 1B68     		ldr	r3, [r3]
 1688              		.loc 1 887 65 discriminator 2
 1689 0092 0433     		adds	r3, r3, #4
 1690              		.loc 1 887 5 discriminator 2
 1691 0094 1A46     		mov	r2, r3
 1692 0096 FB88     		ldrh	r3, [r7, #6]
 1693 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
ARM GAS  /tmp/ccIGChKB.s 			page 46


 888:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 889:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 890:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_USART_CLEAR_FLAG(husart, USART_FLAG_TC);
 1694              		.loc 1 890 5 discriminator 2
 1695 009c FB68     		ldr	r3, [r7, #12]
 1696 009e 1B68     		ldr	r3, [r3]
 1697 00a0 6FF04002 		mvn	r2, #64
 1698 00a4 1A60     		str	r2, [r3]
 891:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 892:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Process Unlocked */
 893:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 1699              		.loc 1 893 5 discriminator 2
 1700 00a6 FB68     		ldr	r3, [r7, #12]
 1701 00a8 0022     		movs	r2, #0
 1702 00aa 83F83C20 		strb	r2, [r3, #60]
 894:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 895:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 896:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     in the USART CR3 register */
 897:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 1703              		.loc 1 897 5 discriminator 2
 1704 00ae FB68     		ldr	r3, [r7, #12]
 1705 00b0 1B68     		ldr	r3, [r3]
 1706 00b2 5A69     		ldr	r2, [r3, #20]
 1707 00b4 FB68     		ldr	r3, [r7, #12]
 1708 00b6 1B68     		ldr	r3, [r3]
 1709 00b8 42F08002 		orr	r2, r2, #128
 1710 00bc 5A61     		str	r2, [r3, #20]
 898:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 899:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_OK;
 1711              		.loc 1 899 12 discriminator 2
 1712 00be 0023     		movs	r3, #0
 1713 00c0 00E0     		b	.L77
 1714              	.L74:
 900:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 901:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   else
 902:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 903:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_BUSY;
 1715              		.loc 1 903 12
 1716 00c2 0223     		movs	r3, #2
 1717              	.L77:
 904:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 905:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 1718              		.loc 1 905 1
 1719 00c4 1846     		mov	r0, r3
 1720 00c6 1837     		adds	r7, r7, #24
 1721              	.LCFI58:
 1722              		.cfi_def_cfa_offset 8
 1723 00c8 BD46     		mov	sp, r7
 1724              	.LCFI59:
 1725              		.cfi_def_cfa_register 13
 1726              		@ sp needed
 1727 00ca 80BD     		pop	{r7, pc}
 1728              	.L80:
 1729              		.align	2
 1730              	.L79:
 1731 00cc 00000000 		.word	USART_DMATransmitCplt
 1732 00d0 00000000 		.word	USART_DMATxHalfCplt
ARM GAS  /tmp/ccIGChKB.s 			page 47


 1733 00d4 00000000 		.word	USART_DMAError
 1734              		.cfi_endproc
 1735              	.LFE136:
 1737              		.section	.text.HAL_USART_Receive_DMA,"ax",%progbits
 1738              		.align	1
 1739              		.global	HAL_USART_Receive_DMA
 1740              		.syntax unified
 1741              		.thumb
 1742              		.thumb_func
 1743              		.fpu fpv4-sp-d16
 1745              	HAL_USART_Receive_DMA:
 1746              	.LFB137:
 906:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 907:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
 908:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Full-Duplex Receive an amount of data in non-blocking mode.
 909:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
 910:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
 911:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  pRxData Pointer to data buffer
 912:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  Size Amount of data to be received
 913:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
 914:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @note   The USART DMA transmit stream must be configured in order to generate the clock for the
 915:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @note   When the USART parity is enabled (PCE = 1) the data received contain the parity bit.
 916:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
 917:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Receive_DMA(USART_HandleTypeDef *husart, uint8_t *pRxData, uint16_t Siz
 918:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 1747              		.loc 1 918 1
 1748              		.cfi_startproc
 1749              		@ args = 0, pretend = 0, frame = 24
 1750              		@ frame_needed = 1, uses_anonymous_args = 0
 1751 0000 80B5     		push	{r7, lr}
 1752              	.LCFI60:
 1753              		.cfi_def_cfa_offset 8
 1754              		.cfi_offset 7, -8
 1755              		.cfi_offset 14, -4
 1756 0002 86B0     		sub	sp, sp, #24
 1757              	.LCFI61:
 1758              		.cfi_def_cfa_offset 32
 1759 0004 00AF     		add	r7, sp, #0
 1760              	.LCFI62:
 1761              		.cfi_def_cfa_register 7
 1762 0006 F860     		str	r0, [r7, #12]
 1763 0008 B960     		str	r1, [r7, #8]
 1764 000a 1346     		mov	r3, r2
 1765 000c FB80     		strh	r3, [r7, #6]	@ movhi
 919:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint32_t *tmp;
 920:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 921:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_READY)
 1766              		.loc 1 921 12
 1767 000e FB68     		ldr	r3, [r7, #12]
 1768 0010 93F83D30 		ldrb	r3, [r3, #61]
 1769 0014 DBB2     		uxtb	r3, r3
 1770              		.loc 1 921 5
 1771 0016 012B     		cmp	r3, #1
 1772 0018 40F09080 		bne	.L82
 922:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 923:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if((pRxData == NULL) || (Size == 0))
 1773              		.loc 1 923 17
ARM GAS  /tmp/ccIGChKB.s 			page 48


 1774 001c BB68     		ldr	r3, [r7, #8]
 1775              		.loc 1 923 7
 1776 001e 002B     		cmp	r3, #0
 1777 0020 02D0     		beq	.L83
 1778              		.loc 1 923 26 discriminator 1
 1779 0022 FB88     		ldrh	r3, [r7, #6]
 1780 0024 002B     		cmp	r3, #0
 1781 0026 01D1     		bne	.L84
 1782              	.L83:
 924:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 925:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       return HAL_ERROR;
 1783              		.loc 1 925 14
 1784 0028 0123     		movs	r3, #1
 1785 002a 88E0     		b	.L85
 1786              	.L84:
 926:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 927:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 928:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Process Locked */
 929:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_LOCK(husart);
 1787              		.loc 1 929 5
 1788 002c FB68     		ldr	r3, [r7, #12]
 1789 002e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1790 0032 012B     		cmp	r3, #1
 1791 0034 01D1     		bne	.L86
 1792              		.loc 1 929 5 is_stmt 0 discriminator 1
 1793 0036 0223     		movs	r3, #2
 1794 0038 81E0     		b	.L85
 1795              	.L86:
 1796              		.loc 1 929 5 discriminator 2
 1797 003a FB68     		ldr	r3, [r7, #12]
 1798 003c 0122     		movs	r2, #1
 1799 003e 83F83C20 		strb	r2, [r3, #60]
 930:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 931:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->pRxBuffPtr = pRxData;
 1800              		.loc 1 931 24 is_stmt 1 discriminator 2
 1801 0042 BA68     		ldr	r2, [r7, #8]
 1802 0044 FB68     		ldr	r3, [r7, #12]
 1803 0046 DA62     		str	r2, [r3, #44]
 932:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->RxXferSize = Size;
 1804              		.loc 1 932 24 discriminator 2
 1805 0048 FB68     		ldr	r3, [r7, #12]
 1806 004a FA88     		ldrh	r2, [r7, #6]	@ movhi
 1807 004c 1A86     		strh	r2, [r3, #48]	@ movhi
 933:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->pTxBuffPtr = pRxData;
 1808              		.loc 1 933 24 discriminator 2
 1809 004e BA68     		ldr	r2, [r7, #8]
 1810 0050 FB68     		ldr	r3, [r7, #12]
 1811 0052 5A62     		str	r2, [r3, #36]
 934:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->TxXferSize = Size;
 1812              		.loc 1 934 24 discriminator 2
 1813 0054 FB68     		ldr	r3, [r7, #12]
 1814 0056 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1815 0058 1A85     		strh	r2, [r3, #40]	@ movhi
 935:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 936:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 1816              		.loc 1 936 23 discriminator 2
 1817 005a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccIGChKB.s 			page 49


 1818 005c 0022     		movs	r2, #0
 1819 005e 1A64     		str	r2, [r3, #64]
 937:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
 1820              		.loc 1 937 19 discriminator 2
 1821 0060 FB68     		ldr	r3, [r7, #12]
 1822 0062 2222     		movs	r2, #34
 1823 0064 83F83D20 		strb	r2, [r3, #61]
 938:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 939:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set the USART DMA Rx transfer complete callback */
 940:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmarx->XferCpltCallback = USART_DMAReceiveCplt;
 1824              		.loc 1 940 11 discriminator 2
 1825 0068 FB68     		ldr	r3, [r7, #12]
 1826 006a 9B6B     		ldr	r3, [r3, #56]
 1827              		.loc 1 940 38 discriminator 2
 1828 006c 364A     		ldr	r2, .L87
 1829 006e DA63     		str	r2, [r3, #60]
 941:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 942:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set the USART DMA Half transfer complete callback */
 943:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmarx->XferHalfCpltCallback = USART_DMARxHalfCplt;
 1830              		.loc 1 943 11 discriminator 2
 1831 0070 FB68     		ldr	r3, [r7, #12]
 1832 0072 9B6B     		ldr	r3, [r3, #56]
 1833              		.loc 1 943 42 discriminator 2
 1834 0074 354A     		ldr	r2, .L87+4
 1835 0076 1A64     		str	r2, [r3, #64]
 944:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 945:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set the USART DMA Rx transfer error callback */
 946:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmarx->XferErrorCallback = USART_DMAError;
 1836              		.loc 1 946 11 discriminator 2
 1837 0078 FB68     		ldr	r3, [r7, #12]
 1838 007a 9B6B     		ldr	r3, [r3, #56]
 1839              		.loc 1 946 39 discriminator 2
 1840 007c 344A     		ldr	r2, .L87+8
 1841 007e DA64     		str	r2, [r3, #76]
 947:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 948:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set the DMA abort callback */
 949:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmarx->XferAbortCallback = NULL;
 1842              		.loc 1 949 11 discriminator 2
 1843 0080 FB68     		ldr	r3, [r7, #12]
 1844 0082 9B6B     		ldr	r3, [r3, #56]
 1845              		.loc 1 949 39 discriminator 2
 1846 0084 0022     		movs	r2, #0
 1847 0086 1A65     		str	r2, [r3, #80]
 950:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 951:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set the USART Tx DMA transfer complete callback as NULL because the communication closing
 952:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     is performed in DMA reception complete callback  */
 953:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmatx->XferHalfCpltCallback = NULL;
 1848              		.loc 1 953 11 discriminator 2
 1849 0088 FB68     		ldr	r3, [r7, #12]
 1850 008a 5B6B     		ldr	r3, [r3, #52]
 1851              		.loc 1 953 42 discriminator 2
 1852 008c 0022     		movs	r2, #0
 1853 008e 1A64     		str	r2, [r3, #64]
 954:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmatx->XferCpltCallback = NULL;
 1854              		.loc 1 954 11 discriminator 2
 1855 0090 FB68     		ldr	r3, [r7, #12]
 1856 0092 5B6B     		ldr	r3, [r3, #52]
ARM GAS  /tmp/ccIGChKB.s 			page 50


 1857              		.loc 1 954 38 discriminator 2
 1858 0094 0022     		movs	r2, #0
 1859 0096 DA63     		str	r2, [r3, #60]
 955:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 956:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set the DMA error callback */
 957:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmatx->XferErrorCallback = USART_DMAError;
 1860              		.loc 1 957 11 discriminator 2
 1861 0098 FB68     		ldr	r3, [r7, #12]
 1862 009a 5B6B     		ldr	r3, [r3, #52]
 1863              		.loc 1 957 39 discriminator 2
 1864 009c 2C4A     		ldr	r2, .L87+8
 1865 009e DA64     		str	r2, [r3, #76]
 958:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 959:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set the DMA AbortCpltCallback */
 960:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmatx->XferAbortCallback = NULL;
 1866              		.loc 1 960 11 discriminator 2
 1867 00a0 FB68     		ldr	r3, [r7, #12]
 1868 00a2 5B6B     		ldr	r3, [r3, #52]
 1869              		.loc 1 960 39 discriminator 2
 1870 00a4 0022     		movs	r2, #0
 1871 00a6 1A65     		str	r2, [r3, #80]
 961:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 962:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the USART receive DMA Stream */
 963:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     tmp = (uint32_t*)&pRxData;
 1872              		.loc 1 963 9 discriminator 2
 1873 00a8 07F10803 		add	r3, r7, #8
 1874 00ac 7B61     		str	r3, [r7, #20]
 964:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     HAL_DMA_Start_IT(husart->hdmarx, (uint32_t)&husart->Instance->DR, *(uint32_t*)tmp, Size);
 1875              		.loc 1 964 5 discriminator 2
 1876 00ae FB68     		ldr	r3, [r7, #12]
 1877 00b0 986B     		ldr	r0, [r3, #56]
 1878              		.loc 1 964 55 discriminator 2
 1879 00b2 FB68     		ldr	r3, [r7, #12]
 1880 00b4 1B68     		ldr	r3, [r3]
 1881              		.loc 1 964 48 discriminator 2
 1882 00b6 0433     		adds	r3, r3, #4
 1883              		.loc 1 964 5 discriminator 2
 1884 00b8 1946     		mov	r1, r3
 1885 00ba 7B69     		ldr	r3, [r7, #20]
 1886 00bc 1A68     		ldr	r2, [r3]
 1887 00be FB88     		ldrh	r3, [r7, #6]
 1888 00c0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 965:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 966:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the USART transmit DMA Stream: the transmit stream is used in order
 967:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        to generate in the non-blocking mode the clock to the slave device,
 968:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        this mode isn't a simplex receive mode but a full-duplex receive one */
 969:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     HAL_DMA_Start_IT(husart->hdmatx, *(uint32_t*)tmp, (uint32_t)&husart->Instance->DR, Size);
 1889              		.loc 1 969 5 discriminator 2
 1890 00c4 FB68     		ldr	r3, [r7, #12]
 1891 00c6 586B     		ldr	r0, [r3, #52]
 1892 00c8 7B69     		ldr	r3, [r7, #20]
 1893 00ca 1968     		ldr	r1, [r3]
 1894              		.loc 1 969 72 discriminator 2
 1895 00cc FB68     		ldr	r3, [r7, #12]
 1896 00ce 1B68     		ldr	r3, [r3]
 1897              		.loc 1 969 65 discriminator 2
 1898 00d0 0433     		adds	r3, r3, #4
ARM GAS  /tmp/ccIGChKB.s 			page 51


 1899              		.loc 1 969 5 discriminator 2
 1900 00d2 1A46     		mov	r2, r3
 1901 00d4 FB88     		ldrh	r3, [r7, #6]
 1902 00d6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1903              	.LBB2:
 970:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 971:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: mandatory for the second tra
 972:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_USART_CLEAR_OREFLAG(husart);
 1904              		.loc 1 972 5 discriminator 2
 1905 00da 0023     		movs	r3, #0
 1906 00dc 3B61     		str	r3, [r7, #16]
 1907 00de FB68     		ldr	r3, [r7, #12]
 1908 00e0 1B68     		ldr	r3, [r3]
 1909 00e2 1B68     		ldr	r3, [r3]
 1910 00e4 3B61     		str	r3, [r7, #16]
 1911 00e6 FB68     		ldr	r3, [r7, #12]
 1912 00e8 1B68     		ldr	r3, [r3]
 1913 00ea 5B68     		ldr	r3, [r3, #4]
 1914 00ec 3B61     		str	r3, [r7, #16]
 1915 00ee 3B69     		ldr	r3, [r7, #16]
 1916              	.LBE2:
 973:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 974:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Process Unlocked */
 975:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 1917              		.loc 1 975 5 discriminator 2
 1918 00f0 FB68     		ldr	r3, [r7, #12]
 1919 00f2 0022     		movs	r2, #0
 1920 00f4 83F83C20 		strb	r2, [r3, #60]
 976:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 977:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the USART Parity Error Interrupt */
 978:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     SET_BIT(husart->Instance->CR1, USART_CR1_PEIE);
 1921              		.loc 1 978 5 discriminator 2
 1922 00f8 FB68     		ldr	r3, [r7, #12]
 1923 00fa 1B68     		ldr	r3, [r3]
 1924 00fc DA68     		ldr	r2, [r3, #12]
 1925 00fe FB68     		ldr	r3, [r7, #12]
 1926 0100 1B68     		ldr	r3, [r3]
 1927 0102 42F48072 		orr	r2, r2, #256
 1928 0106 DA60     		str	r2, [r3, #12]
 979:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 980:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the USART Error Interrupt: (Frame error, noise error, overrun error) */
 981:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_EIE);
 1929              		.loc 1 981 5 discriminator 2
 1930 0108 FB68     		ldr	r3, [r7, #12]
 1931 010a 1B68     		ldr	r3, [r3]
 1932 010c 5A69     		ldr	r2, [r3, #20]
 1933 010e FB68     		ldr	r3, [r7, #12]
 1934 0110 1B68     		ldr	r3, [r3]
 1935 0112 42F00102 		orr	r2, r2, #1
 1936 0116 5A61     		str	r2, [r3, #20]
 982:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 983:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
 984:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        in the USART CR3 register */
 985:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_DMAR);
 1937              		.loc 1 985 5 discriminator 2
 1938 0118 FB68     		ldr	r3, [r7, #12]
 1939 011a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccIGChKB.s 			page 52


 1940 011c 5A69     		ldr	r2, [r3, #20]
 1941 011e FB68     		ldr	r3, [r7, #12]
 1942 0120 1B68     		ldr	r3, [r3]
 1943 0122 42F04002 		orr	r2, r2, #64
 1944 0126 5A61     		str	r2, [r3, #20]
 986:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 987:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 988:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        in the USART CR3 register */
 989:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 1945              		.loc 1 989 5 discriminator 2
 1946 0128 FB68     		ldr	r3, [r7, #12]
 1947 012a 1B68     		ldr	r3, [r3]
 1948 012c 5A69     		ldr	r2, [r3, #20]
 1949 012e FB68     		ldr	r3, [r7, #12]
 1950 0130 1B68     		ldr	r3, [r3]
 1951 0132 42F08002 		orr	r2, r2, #128
 1952 0136 5A61     		str	r2, [r3, #20]
 990:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 991:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_OK;
 1953              		.loc 1 991 12 discriminator 2
 1954 0138 0023     		movs	r3, #0
 1955 013a 00E0     		b	.L85
 1956              	.L82:
 992:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 993:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   else
 994:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 995:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_BUSY;
 1957              		.loc 1 995 12
 1958 013c 0223     		movs	r3, #2
 1959              	.L85:
 996:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 997:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 1960              		.loc 1 997 1
 1961 013e 1846     		mov	r0, r3
 1962 0140 1837     		adds	r7, r7, #24
 1963              	.LCFI63:
 1964              		.cfi_def_cfa_offset 8
 1965 0142 BD46     		mov	sp, r7
 1966              	.LCFI64:
 1967              		.cfi_def_cfa_register 13
 1968              		@ sp needed
 1969 0144 80BD     		pop	{r7, pc}
 1970              	.L88:
 1971 0146 00BF     		.align	2
 1972              	.L87:
 1973 0148 00000000 		.word	USART_DMAReceiveCplt
 1974 014c 00000000 		.word	USART_DMARxHalfCplt
 1975 0150 00000000 		.word	USART_DMAError
 1976              		.cfi_endproc
 1977              	.LFE137:
 1979              		.section	.text.HAL_USART_TransmitReceive_DMA,"ax",%progbits
 1980              		.align	1
 1981              		.global	HAL_USART_TransmitReceive_DMA
 1982              		.syntax unified
 1983              		.thumb
 1984              		.thumb_func
 1985              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccIGChKB.s 			page 53


 1987              	HAL_USART_TransmitReceive_DMA:
 1988              	.LFB138:
 998:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
 999:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1000:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Full-Duplex Transmit Receive an amount of data in non-blocking mode.
1001:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
1002:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1003:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  pTxData Pointer to data transmitted buffer
1004:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  pRxData Pointer to data received buffer
1005:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  Size Amount of data to be received
1006:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @note   When the USART parity is enabled (PCE = 1) the data received contain the parity bit.
1007:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
1008:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1009:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_TransmitReceive_DMA(USART_HandleTypeDef *husart, uint8_t *pTxData, uint
1010:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 1989              		.loc 1 1010 1
 1990              		.cfi_startproc
 1991              		@ args = 0, pretend = 0, frame = 24
 1992              		@ frame_needed = 1, uses_anonymous_args = 0
 1993 0000 80B5     		push	{r7, lr}
 1994              	.LCFI65:
 1995              		.cfi_def_cfa_offset 8
 1996              		.cfi_offset 7, -8
 1997              		.cfi_offset 14, -4
 1998 0002 86B0     		sub	sp, sp, #24
 1999              	.LCFI66:
 2000              		.cfi_def_cfa_offset 32
 2001 0004 00AF     		add	r7, sp, #0
 2002              	.LCFI67:
 2003              		.cfi_def_cfa_register 7
 2004 0006 F860     		str	r0, [r7, #12]
 2005 0008 B960     		str	r1, [r7, #8]
 2006 000a 7A60     		str	r2, [r7, #4]
 2007 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1011:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint32_t *tmp;
1012:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1013:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_READY)
 2008              		.loc 1 1013 12
 2009 000e FB68     		ldr	r3, [r7, #12]
 2010 0010 93F83D30 		ldrb	r3, [r3, #61]
 2011 0014 DBB2     		uxtb	r3, r3
 2012              		.loc 1 1013 5
 2013 0016 012B     		cmp	r3, #1
 2014 0018 40F09680 		bne	.L90
1014:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1015:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if((pTxData == NULL) || (pRxData == NULL) || (Size == 0))
 2015              		.loc 1 1015 17
 2016 001c BB68     		ldr	r3, [r7, #8]
 2017              		.loc 1 1015 7
 2018 001e 002B     		cmp	r3, #0
 2019 0020 05D0     		beq	.L91
 2020              		.loc 1 1015 38 discriminator 1
 2021 0022 7B68     		ldr	r3, [r7, #4]
 2022              		.loc 1 1015 26 discriminator 1
 2023 0024 002B     		cmp	r3, #0
 2024 0026 02D0     		beq	.L91
 2025              		.loc 1 1015 47 discriminator 2
ARM GAS  /tmp/ccIGChKB.s 			page 54


 2026 0028 7B88     		ldrh	r3, [r7, #2]
 2027 002a 002B     		cmp	r3, #0
 2028 002c 01D1     		bne	.L92
 2029              	.L91:
1016:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1017:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       return HAL_ERROR;
 2030              		.loc 1 1017 14
 2031 002e 0123     		movs	r3, #1
 2032 0030 8BE0     		b	.L93
 2033              	.L92:
1018:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1019:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Process Locked */
1020:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_LOCK(husart);
 2034              		.loc 1 1020 5
 2035 0032 FB68     		ldr	r3, [r7, #12]
 2036 0034 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2037 0038 012B     		cmp	r3, #1
 2038 003a 01D1     		bne	.L94
 2039              		.loc 1 1020 5 is_stmt 0 discriminator 1
 2040 003c 0223     		movs	r3, #2
 2041 003e 84E0     		b	.L93
 2042              	.L94:
 2043              		.loc 1 1020 5 discriminator 2
 2044 0040 FB68     		ldr	r3, [r7, #12]
 2045 0042 0122     		movs	r2, #1
 2046 0044 83F83C20 		strb	r2, [r3, #60]
1021:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1022:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->pRxBuffPtr = pRxData;
 2047              		.loc 1 1022 24 is_stmt 1 discriminator 2
 2048 0048 7A68     		ldr	r2, [r7, #4]
 2049 004a FB68     		ldr	r3, [r7, #12]
 2050 004c DA62     		str	r2, [r3, #44]
1023:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->RxXferSize = Size;
 2051              		.loc 1 1023 24 discriminator 2
 2052 004e FB68     		ldr	r3, [r7, #12]
 2053 0050 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2054 0052 1A86     		strh	r2, [r3, #48]	@ movhi
1024:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->pTxBuffPtr = pTxData;
 2055              		.loc 1 1024 24 discriminator 2
 2056 0054 BA68     		ldr	r2, [r7, #8]
 2057 0056 FB68     		ldr	r3, [r7, #12]
 2058 0058 5A62     		str	r2, [r3, #36]
1025:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->TxXferSize = Size;
 2059              		.loc 1 1025 24 discriminator 2
 2060 005a FB68     		ldr	r3, [r7, #12]
 2061 005c 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2062 005e 1A85     		strh	r2, [r3, #40]	@ movhi
1026:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1027:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 2063              		.loc 1 1027 23 discriminator 2
 2064 0060 FB68     		ldr	r3, [r7, #12]
 2065 0062 0022     		movs	r2, #0
 2066 0064 1A64     		str	r2, [r3, #64]
1028:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX_RX;
 2067              		.loc 1 1028 19 discriminator 2
 2068 0066 FB68     		ldr	r3, [r7, #12]
 2069 0068 3222     		movs	r2, #50
ARM GAS  /tmp/ccIGChKB.s 			page 55


 2070 006a 83F83D20 		strb	r2, [r3, #61]
1029:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1030:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set the USART DMA Rx transfer complete callback */
1031:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmarx->XferCpltCallback = USART_DMAReceiveCplt;
 2071              		.loc 1 1031 11 discriminator 2
 2072 006e FB68     		ldr	r3, [r7, #12]
 2073 0070 9B6B     		ldr	r3, [r3, #56]
 2074              		.loc 1 1031 38 discriminator 2
 2075 0072 384A     		ldr	r2, .L95
 2076 0074 DA63     		str	r2, [r3, #60]
1032:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1033:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set the USART DMA Half transfer complete callback */
1034:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmarx->XferHalfCpltCallback = USART_DMARxHalfCplt;
 2077              		.loc 1 1034 11 discriminator 2
 2078 0076 FB68     		ldr	r3, [r7, #12]
 2079 0078 9B6B     		ldr	r3, [r3, #56]
 2080              		.loc 1 1034 42 discriminator 2
 2081 007a 374A     		ldr	r2, .L95+4
 2082 007c 1A64     		str	r2, [r3, #64]
1035:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1036:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set the USART DMA Tx transfer complete callback */
1037:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmatx->XferCpltCallback = USART_DMATransmitCplt;
 2083              		.loc 1 1037 11 discriminator 2
 2084 007e FB68     		ldr	r3, [r7, #12]
 2085 0080 5B6B     		ldr	r3, [r3, #52]
 2086              		.loc 1 1037 38 discriminator 2
 2087 0082 364A     		ldr	r2, .L95+8
 2088 0084 DA63     		str	r2, [r3, #60]
1038:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1039:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set the USART DMA Half transfer complete callback */
1040:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmatx->XferHalfCpltCallback = USART_DMATxHalfCplt;
 2089              		.loc 1 1040 11 discriminator 2
 2090 0086 FB68     		ldr	r3, [r7, #12]
 2091 0088 5B6B     		ldr	r3, [r3, #52]
 2092              		.loc 1 1040 42 discriminator 2
 2093 008a 354A     		ldr	r2, .L95+12
 2094 008c 1A64     		str	r2, [r3, #64]
1041:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1042:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set the USART DMA Tx transfer error callback */
1043:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmatx->XferErrorCallback = USART_DMAError;
 2095              		.loc 1 1043 11 discriminator 2
 2096 008e FB68     		ldr	r3, [r7, #12]
 2097 0090 5B6B     		ldr	r3, [r3, #52]
 2098              		.loc 1 1043 39 discriminator 2
 2099 0092 344A     		ldr	r2, .L95+16
 2100 0094 DA64     		str	r2, [r3, #76]
1044:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1045:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set the USART DMA Rx transfer error callback */
1046:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmarx->XferErrorCallback = USART_DMAError;
 2101              		.loc 1 1046 11 discriminator 2
 2102 0096 FB68     		ldr	r3, [r7, #12]
 2103 0098 9B6B     		ldr	r3, [r3, #56]
 2104              		.loc 1 1046 39 discriminator 2
 2105 009a 324A     		ldr	r2, .L95+16
 2106 009c DA64     		str	r2, [r3, #76]
1047:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1048:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set the DMA abort callback */
ARM GAS  /tmp/ccIGChKB.s 			page 56


1049:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->hdmarx->XferAbortCallback = NULL;
 2107              		.loc 1 1049 11 discriminator 2
 2108 009e FB68     		ldr	r3, [r7, #12]
 2109 00a0 9B6B     		ldr	r3, [r3, #56]
 2110              		.loc 1 1049 39 discriminator 2
 2111 00a2 0022     		movs	r2, #0
 2112 00a4 1A65     		str	r2, [r3, #80]
1050:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1051:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the USART receive DMA Stream */
1052:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     tmp = (uint32_t*)&pRxData;
 2113              		.loc 1 1052 9 discriminator 2
 2114 00a6 3B1D     		adds	r3, r7, #4
 2115 00a8 7B61     		str	r3, [r7, #20]
1053:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     HAL_DMA_Start_IT(husart->hdmarx, (uint32_t)&husart->Instance->DR, *(uint32_t*)tmp, Size);
 2116              		.loc 1 1053 5 discriminator 2
 2117 00aa FB68     		ldr	r3, [r7, #12]
 2118 00ac 986B     		ldr	r0, [r3, #56]
 2119              		.loc 1 1053 55 discriminator 2
 2120 00ae FB68     		ldr	r3, [r7, #12]
 2121 00b0 1B68     		ldr	r3, [r3]
 2122              		.loc 1 1053 48 discriminator 2
 2123 00b2 0433     		adds	r3, r3, #4
 2124              		.loc 1 1053 5 discriminator 2
 2125 00b4 1946     		mov	r1, r3
 2126 00b6 7B69     		ldr	r3, [r7, #20]
 2127 00b8 1A68     		ldr	r2, [r3]
 2128 00ba 7B88     		ldrh	r3, [r7, #2]
 2129 00bc FFF7FEFF 		bl	HAL_DMA_Start_IT
1054:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1055:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the USART transmit DMA Stream */
1056:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     tmp = (uint32_t*)&pTxData;
 2130              		.loc 1 1056 9 discriminator 2
 2131 00c0 07F10803 		add	r3, r7, #8
 2132 00c4 7B61     		str	r3, [r7, #20]
1057:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     HAL_DMA_Start_IT(husart->hdmatx, *(uint32_t*)tmp, (uint32_t)&husart->Instance->DR, Size);
 2133              		.loc 1 1057 5 discriminator 2
 2134 00c6 FB68     		ldr	r3, [r7, #12]
 2135 00c8 586B     		ldr	r0, [r3, #52]
 2136 00ca 7B69     		ldr	r3, [r7, #20]
 2137 00cc 1968     		ldr	r1, [r3]
 2138              		.loc 1 1057 72 discriminator 2
 2139 00ce FB68     		ldr	r3, [r7, #12]
 2140 00d0 1B68     		ldr	r3, [r3]
 2141              		.loc 1 1057 65 discriminator 2
 2142 00d2 0433     		adds	r3, r3, #4
 2143              		.loc 1 1057 5 discriminator 2
 2144 00d4 1A46     		mov	r2, r3
 2145 00d6 7B88     		ldrh	r3, [r7, #2]
 2146 00d8 FFF7FEFF 		bl	HAL_DMA_Start_IT
1058:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1059:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1060:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_USART_CLEAR_FLAG(husart, USART_FLAG_TC);
 2147              		.loc 1 1060 5 discriminator 2
 2148 00dc FB68     		ldr	r3, [r7, #12]
 2149 00de 1B68     		ldr	r3, [r3]
 2150 00e0 6FF04002 		mvn	r2, #64
 2151 00e4 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccIGChKB.s 			page 57


 2152              	.LBB3:
1061:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1062:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Clear the Overrun flag: mandatory for the second transfer in circular mode */
1063:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_USART_CLEAR_OREFLAG(husart);
 2153              		.loc 1 1063 5 discriminator 2
 2154 00e6 0023     		movs	r3, #0
 2155 00e8 3B61     		str	r3, [r7, #16]
 2156 00ea FB68     		ldr	r3, [r7, #12]
 2157 00ec 1B68     		ldr	r3, [r3]
 2158 00ee 1B68     		ldr	r3, [r3]
 2159 00f0 3B61     		str	r3, [r7, #16]
 2160 00f2 FB68     		ldr	r3, [r7, #12]
 2161 00f4 1B68     		ldr	r3, [r3]
 2162 00f6 5B68     		ldr	r3, [r3, #4]
 2163 00f8 3B61     		str	r3, [r7, #16]
 2164 00fa 3B69     		ldr	r3, [r7, #16]
 2165              	.LBE3:
1064:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1065:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Process Unlocked */
1066:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 2166              		.loc 1 1066 5 discriminator 2
 2167 00fc FB68     		ldr	r3, [r7, #12]
 2168 00fe 0022     		movs	r2, #0
 2169 0100 83F83C20 		strb	r2, [r3, #60]
1067:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1068:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the USART Parity Error Interrupt */
1069:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     SET_BIT(husart->Instance->CR1, USART_CR1_PEIE);
 2170              		.loc 1 1069 5 discriminator 2
 2171 0104 FB68     		ldr	r3, [r7, #12]
 2172 0106 1B68     		ldr	r3, [r3]
 2173 0108 DA68     		ldr	r2, [r3, #12]
 2174 010a FB68     		ldr	r3, [r7, #12]
 2175 010c 1B68     		ldr	r3, [r3]
 2176 010e 42F48072 		orr	r2, r2, #256
 2177 0112 DA60     		str	r2, [r3, #12]
1070:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1071:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the USART Error Interrupt: (Frame error, noise error, overrun error) */
1072:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_EIE);
 2178              		.loc 1 1072 5 discriminator 2
 2179 0114 FB68     		ldr	r3, [r7, #12]
 2180 0116 1B68     		ldr	r3, [r3]
 2181 0118 5A69     		ldr	r2, [r3, #20]
 2182 011a FB68     		ldr	r3, [r7, #12]
 2183 011c 1B68     		ldr	r3, [r3]
 2184 011e 42F00102 		orr	r2, r2, #1
 2185 0122 5A61     		str	r2, [r3, #20]
1073:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1074:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1075:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        in the USART CR3 register */
1076:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_DMAR);
 2186              		.loc 1 1076 5 discriminator 2
 2187 0124 FB68     		ldr	r3, [r7, #12]
 2188 0126 1B68     		ldr	r3, [r3]
 2189 0128 5A69     		ldr	r2, [r3, #20]
 2190 012a FB68     		ldr	r3, [r7, #12]
 2191 012c 1B68     		ldr	r3, [r3]
 2192 012e 42F04002 		orr	r2, r2, #64
ARM GAS  /tmp/ccIGChKB.s 			page 58


 2193 0132 5A61     		str	r2, [r3, #20]
1077:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1078:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1079:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        in the USART CR3 register */
1080:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 2194              		.loc 1 1080 5 discriminator 2
 2195 0134 FB68     		ldr	r3, [r7, #12]
 2196 0136 1B68     		ldr	r3, [r3]
 2197 0138 5A69     		ldr	r2, [r3, #20]
 2198 013a FB68     		ldr	r3, [r7, #12]
 2199 013c 1B68     		ldr	r3, [r3]
 2200 013e 42F08002 		orr	r2, r2, #128
 2201 0142 5A61     		str	r2, [r3, #20]
1081:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1082:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_OK;
 2202              		.loc 1 1082 12 discriminator 2
 2203 0144 0023     		movs	r3, #0
 2204 0146 00E0     		b	.L93
 2205              	.L90:
1083:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1084:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   else
1085:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1086:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_BUSY;
 2206              		.loc 1 1086 12
 2207 0148 0223     		movs	r3, #2
 2208              	.L93:
1087:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1088:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 2209              		.loc 1 1088 1
 2210 014a 1846     		mov	r0, r3
 2211 014c 1837     		adds	r7, r7, #24
 2212              	.LCFI68:
 2213              		.cfi_def_cfa_offset 8
 2214 014e BD46     		mov	sp, r7
 2215              	.LCFI69:
 2216              		.cfi_def_cfa_register 13
 2217              		@ sp needed
 2218 0150 80BD     		pop	{r7, pc}
 2219              	.L96:
 2220 0152 00BF     		.align	2
 2221              	.L95:
 2222 0154 00000000 		.word	USART_DMAReceiveCplt
 2223 0158 00000000 		.word	USART_DMARxHalfCplt
 2224 015c 00000000 		.word	USART_DMATransmitCplt
 2225 0160 00000000 		.word	USART_DMATxHalfCplt
 2226 0164 00000000 		.word	USART_DMAError
 2227              		.cfi_endproc
 2228              	.LFE138:
 2230              		.section	.text.HAL_USART_DMAPause,"ax",%progbits
 2231              		.align	1
 2232              		.global	HAL_USART_DMAPause
 2233              		.syntax unified
 2234              		.thumb
 2235              		.thumb_func
 2236              		.fpu fpv4-sp-d16
 2238              	HAL_USART_DMAPause:
 2239              	.LFB139:
ARM GAS  /tmp/ccIGChKB.s 			page 59


1089:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1090:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1091:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief Pauses the DMA Transfer.
1092:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
1093:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1094:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
1095:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1096:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_DMAPause(USART_HandleTypeDef *husart)
1097:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 2240              		.loc 1 1097 1
 2241              		.cfi_startproc
 2242              		@ args = 0, pretend = 0, frame = 8
 2243              		@ frame_needed = 1, uses_anonymous_args = 0
 2244              		@ link register save eliminated.
 2245 0000 80B4     		push	{r7}
 2246              	.LCFI70:
 2247              		.cfi_def_cfa_offset 4
 2248              		.cfi_offset 7, -4
 2249 0002 83B0     		sub	sp, sp, #12
 2250              	.LCFI71:
 2251              		.cfi_def_cfa_offset 16
 2252 0004 00AF     		add	r7, sp, #0
 2253              	.LCFI72:
 2254              		.cfi_def_cfa_register 7
 2255 0006 7860     		str	r0, [r7, #4]
1098:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Process Locked */
1099:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   __HAL_LOCK(husart);
 2256              		.loc 1 1099 3
 2257 0008 7B68     		ldr	r3, [r7, #4]
 2258 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2259 000e 012B     		cmp	r3, #1
 2260 0010 01D1     		bne	.L98
 2261              		.loc 1 1099 3 is_stmt 0 discriminator 1
 2262 0012 0223     		movs	r3, #2
 2263 0014 10E0     		b	.L99
 2264              	.L98:
 2265              		.loc 1 1099 3 discriminator 2
 2266 0016 7B68     		ldr	r3, [r7, #4]
 2267 0018 0122     		movs	r2, #1
 2268 001a 83F83C20 		strb	r2, [r3, #60]
1100:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1101:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Disable the USART DMA Tx request */
1102:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 2269              		.loc 1 1102 3 is_stmt 1 discriminator 2
 2270 001e 7B68     		ldr	r3, [r7, #4]
 2271 0020 1B68     		ldr	r3, [r3]
 2272 0022 5A69     		ldr	r2, [r3, #20]
 2273 0024 7B68     		ldr	r3, [r7, #4]
 2274 0026 1B68     		ldr	r3, [r3]
 2275 0028 22F08002 		bic	r2, r2, #128
 2276 002c 5A61     		str	r2, [r3, #20]
1103:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1104:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Process Unlocked */
1105:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   __HAL_UNLOCK(husart);
 2277              		.loc 1 1105 3 discriminator 2
 2278 002e 7B68     		ldr	r3, [r7, #4]
 2279 0030 0022     		movs	r2, #0
ARM GAS  /tmp/ccIGChKB.s 			page 60


 2280 0032 83F83C20 		strb	r2, [r3, #60]
1106:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1107:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   return HAL_OK;
 2281              		.loc 1 1107 10 discriminator 2
 2282 0036 0023     		movs	r3, #0
 2283              	.L99:
1108:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 2284              		.loc 1 1108 1
 2285 0038 1846     		mov	r0, r3
 2286 003a 0C37     		adds	r7, r7, #12
 2287              	.LCFI73:
 2288              		.cfi_def_cfa_offset 4
 2289 003c BD46     		mov	sp, r7
 2290              	.LCFI74:
 2291              		.cfi_def_cfa_register 13
 2292              		@ sp needed
 2293 003e 5DF8047B 		ldr	r7, [sp], #4
 2294              	.LCFI75:
 2295              		.cfi_restore 7
 2296              		.cfi_def_cfa_offset 0
 2297 0042 7047     		bx	lr
 2298              		.cfi_endproc
 2299              	.LFE139:
 2301              		.section	.text.HAL_USART_DMAResume,"ax",%progbits
 2302              		.align	1
 2303              		.global	HAL_USART_DMAResume
 2304              		.syntax unified
 2305              		.thumb
 2306              		.thumb_func
 2307              		.fpu fpv4-sp-d16
 2309              	HAL_USART_DMAResume:
 2310              	.LFB140:
1109:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1110:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1111:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief Resumes the DMA Transfer.
1112:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
1113:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1114:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
1115:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1116:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_DMAResume(USART_HandleTypeDef *husart)
1117:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 2311              		.loc 1 1117 1
 2312              		.cfi_startproc
 2313              		@ args = 0, pretend = 0, frame = 8
 2314              		@ frame_needed = 1, uses_anonymous_args = 0
 2315              		@ link register save eliminated.
 2316 0000 80B4     		push	{r7}
 2317              	.LCFI76:
 2318              		.cfi_def_cfa_offset 4
 2319              		.cfi_offset 7, -4
 2320 0002 83B0     		sub	sp, sp, #12
 2321              	.LCFI77:
 2322              		.cfi_def_cfa_offset 16
 2323 0004 00AF     		add	r7, sp, #0
 2324              	.LCFI78:
 2325              		.cfi_def_cfa_register 7
 2326 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccIGChKB.s 			page 61


1118:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Process Locked */
1119:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   __HAL_LOCK(husart);
 2327              		.loc 1 1119 3
 2328 0008 7B68     		ldr	r3, [r7, #4]
 2329 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2330 000e 012B     		cmp	r3, #1
 2331 0010 01D1     		bne	.L101
 2332              		.loc 1 1119 3 is_stmt 0 discriminator 1
 2333 0012 0223     		movs	r3, #2
 2334 0014 10E0     		b	.L102
 2335              	.L101:
 2336              		.loc 1 1119 3 discriminator 2
 2337 0016 7B68     		ldr	r3, [r7, #4]
 2338 0018 0122     		movs	r2, #1
 2339 001a 83F83C20 		strb	r2, [r3, #60]
1120:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1121:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Enable the USART DMA Tx request */
1122:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   SET_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 2340              		.loc 1 1122 3 is_stmt 1 discriminator 2
 2341 001e 7B68     		ldr	r3, [r7, #4]
 2342 0020 1B68     		ldr	r3, [r3]
 2343 0022 5A69     		ldr	r2, [r3, #20]
 2344 0024 7B68     		ldr	r3, [r7, #4]
 2345 0026 1B68     		ldr	r3, [r3]
 2346 0028 42F08002 		orr	r2, r2, #128
 2347 002c 5A61     		str	r2, [r3, #20]
1123:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1124:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Process Unlocked */
1125:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   __HAL_UNLOCK(husart);
 2348              		.loc 1 1125 3 discriminator 2
 2349 002e 7B68     		ldr	r3, [r7, #4]
 2350 0030 0022     		movs	r2, #0
 2351 0032 83F83C20 		strb	r2, [r3, #60]
1126:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1127:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   return HAL_OK;
 2352              		.loc 1 1127 10 discriminator 2
 2353 0036 0023     		movs	r3, #0
 2354              	.L102:
1128:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 2355              		.loc 1 1128 1
 2356 0038 1846     		mov	r0, r3
 2357 003a 0C37     		adds	r7, r7, #12
 2358              	.LCFI79:
 2359              		.cfi_def_cfa_offset 4
 2360 003c BD46     		mov	sp, r7
 2361              	.LCFI80:
 2362              		.cfi_def_cfa_register 13
 2363              		@ sp needed
 2364 003e 5DF8047B 		ldr	r7, [sp], #4
 2365              	.LCFI81:
 2366              		.cfi_restore 7
 2367              		.cfi_def_cfa_offset 0
 2368 0042 7047     		bx	lr
 2369              		.cfi_endproc
 2370              	.LFE140:
 2372              		.section	.text.HAL_USART_DMAStop,"ax",%progbits
 2373              		.align	1
ARM GAS  /tmp/ccIGChKB.s 			page 62


 2374              		.global	HAL_USART_DMAStop
 2375              		.syntax unified
 2376              		.thumb
 2377              		.thumb_func
 2378              		.fpu fpv4-sp-d16
 2380              	HAL_USART_DMAStop:
 2381              	.LFB141:
1129:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1130:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1131:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief Stops the DMA Transfer.
1132:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
1133:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1134:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
1135:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1136:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_DMAStop(USART_HandleTypeDef *husart)
1137:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 2382              		.loc 1 1137 1
 2383              		.cfi_startproc
 2384              		@ args = 0, pretend = 0, frame = 16
 2385              		@ frame_needed = 1, uses_anonymous_args = 0
 2386 0000 80B5     		push	{r7, lr}
 2387              	.LCFI82:
 2388              		.cfi_def_cfa_offset 8
 2389              		.cfi_offset 7, -8
 2390              		.cfi_offset 14, -4
 2391 0002 84B0     		sub	sp, sp, #16
 2392              	.LCFI83:
 2393              		.cfi_def_cfa_offset 24
 2394 0004 00AF     		add	r7, sp, #0
 2395              	.LCFI84:
 2396              		.cfi_def_cfa_register 7
 2397 0006 7860     		str	r0, [r7, #4]
1138:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint32_t dmarequest = 0x00U;
 2398              		.loc 1 1138 12
 2399 0008 0023     		movs	r3, #0
 2400 000a FB60     		str	r3, [r7, #12]
1139:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* The Lock is not implemented on this API to allow the user application
1140:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      to call the HAL USART API under callbacks HAL_USART_TxCpltCallback() / HAL_USART_RxCpltCallbac
1141:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1142:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      and the correspond call back is executed HAL_USART_TxCpltCallback() / HAL_USART_RxCpltCallback
1143:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      */
1144:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1145:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Stop USART DMA Tx request if ongoing */
1146:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   dmarequest = HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAT);
 2401              		.loc 1 1146 16
 2402 000c 7B68     		ldr	r3, [r7, #4]
 2403 000e 1B68     		ldr	r3, [r3]
 2404 0010 5B69     		ldr	r3, [r3, #20]
 2405 0012 03F08003 		and	r3, r3, #128
 2406 0016 002B     		cmp	r3, #0
 2407 0018 14BF     		ite	ne
 2408 001a 0123     		movne	r3, #1
 2409 001c 0023     		moveq	r3, #0
 2410 001e DBB2     		uxtb	r3, r3
 2411              		.loc 1 1146 14
 2412 0020 FB60     		str	r3, [r7, #12]
1147:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if((husart->State == HAL_USART_STATE_BUSY_TX) && dmarequest)
ARM GAS  /tmp/ccIGChKB.s 			page 63


 2413              		.loc 1 1147 13
 2414 0022 7B68     		ldr	r3, [r7, #4]
 2415 0024 93F83D30 		ldrb	r3, [r3, #61]
 2416 0028 DBB2     		uxtb	r3, r3
 2417              		.loc 1 1147 5
 2418 002a 122B     		cmp	r3, #18
 2419 002c 16D1     		bne	.L104
 2420              		.loc 1 1147 49 discriminator 1
 2421 002e FB68     		ldr	r3, [r7, #12]
 2422 0030 002B     		cmp	r3, #0
 2423 0032 13D0     		beq	.L104
1148:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1149:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     USART_EndTxTransfer(husart);
 2424              		.loc 1 1149 5
 2425 0034 7868     		ldr	r0, [r7, #4]
 2426 0036 FFF7FEFF 		bl	USART_EndTxTransfer
1150:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1151:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Abort the USART DMA Tx channel */
1152:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->hdmatx != NULL)
 2427              		.loc 1 1152 14
 2428 003a 7B68     		ldr	r3, [r7, #4]
 2429 003c 5B6B     		ldr	r3, [r3, #52]
 2430              		.loc 1 1152 7
 2431 003e 002B     		cmp	r3, #0
 2432 0040 04D0     		beq	.L105
1153:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1154:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       HAL_DMA_Abort(husart->hdmatx);
 2433              		.loc 1 1154 7
 2434 0042 7B68     		ldr	r3, [r7, #4]
 2435 0044 5B6B     		ldr	r3, [r3, #52]
 2436 0046 1846     		mov	r0, r3
 2437 0048 FFF7FEFF 		bl	HAL_DMA_Abort
 2438              	.L105:
1155:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1156:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1157:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Disable the USART Tx DMA request */
1158:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 2439              		.loc 1 1158 5
 2440 004c 7B68     		ldr	r3, [r7, #4]
 2441 004e 1B68     		ldr	r3, [r3]
 2442 0050 5A69     		ldr	r2, [r3, #20]
 2443 0052 7B68     		ldr	r3, [r7, #4]
 2444 0054 1B68     		ldr	r3, [r3]
 2445 0056 22F08002 		bic	r2, r2, #128
 2446 005a 5A61     		str	r2, [r3, #20]
 2447              	.L104:
1159:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1160:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1161:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Stop USART DMA Rx request if ongoing */
1162:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   dmarequest = HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR);
 2448              		.loc 1 1162 16
 2449 005c 7B68     		ldr	r3, [r7, #4]
 2450 005e 1B68     		ldr	r3, [r3]
 2451 0060 5B69     		ldr	r3, [r3, #20]
 2452 0062 03F04003 		and	r3, r3, #64
 2453 0066 002B     		cmp	r3, #0
 2454 0068 14BF     		ite	ne
ARM GAS  /tmp/ccIGChKB.s 			page 64


 2455 006a 0123     		movne	r3, #1
 2456 006c 0023     		moveq	r3, #0
 2457 006e DBB2     		uxtb	r3, r3
 2458              		.loc 1 1162 14
 2459 0070 FB60     		str	r3, [r7, #12]
1163:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if((husart->State == HAL_USART_STATE_BUSY_RX) && dmarequest)
 2460              		.loc 1 1163 13
 2461 0072 7B68     		ldr	r3, [r7, #4]
 2462 0074 93F83D30 		ldrb	r3, [r3, #61]
 2463 0078 DBB2     		uxtb	r3, r3
 2464              		.loc 1 1163 5
 2465 007a 222B     		cmp	r3, #34
 2466 007c 16D1     		bne	.L106
 2467              		.loc 1 1163 49 discriminator 1
 2468 007e FB68     		ldr	r3, [r7, #12]
 2469 0080 002B     		cmp	r3, #0
 2470 0082 13D0     		beq	.L106
1164:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1165:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     USART_EndRxTransfer(husart);
 2471              		.loc 1 1165 5
 2472 0084 7868     		ldr	r0, [r7, #4]
 2473 0086 FFF7FEFF 		bl	USART_EndRxTransfer
1166:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1167:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Abort the USART DMA Rx channel */
1168:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->hdmarx != NULL)
 2474              		.loc 1 1168 14
 2475 008a 7B68     		ldr	r3, [r7, #4]
 2476 008c 9B6B     		ldr	r3, [r3, #56]
 2477              		.loc 1 1168 7
 2478 008e 002B     		cmp	r3, #0
 2479 0090 04D0     		beq	.L107
1169:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1170:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       HAL_DMA_Abort(husart->hdmarx);
 2480              		.loc 1 1170 7
 2481 0092 7B68     		ldr	r3, [r7, #4]
 2482 0094 9B6B     		ldr	r3, [r3, #56]
 2483 0096 1846     		mov	r0, r3
 2484 0098 FFF7FEFF 		bl	HAL_DMA_Abort
 2485              	.L107:
1171:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1172:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1173:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Disable the USART Rx DMA request */
1174:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAR);
 2486              		.loc 1 1174 5
 2487 009c 7B68     		ldr	r3, [r7, #4]
 2488 009e 1B68     		ldr	r3, [r3]
 2489 00a0 5A69     		ldr	r2, [r3, #20]
 2490 00a2 7B68     		ldr	r3, [r7, #4]
 2491 00a4 1B68     		ldr	r3, [r3]
 2492 00a6 22F04002 		bic	r2, r2, #64
 2493 00aa 5A61     		str	r2, [r3, #20]
 2494              	.L106:
1175:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1176:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1177:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   return HAL_OK;
 2495              		.loc 1 1177 10
 2496 00ac 0023     		movs	r3, #0
ARM GAS  /tmp/ccIGChKB.s 			page 65


1178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 2497              		.loc 1 1178 1
 2498 00ae 1846     		mov	r0, r3
 2499 00b0 1037     		adds	r7, r7, #16
 2500              	.LCFI85:
 2501              		.cfi_def_cfa_offset 8
 2502 00b2 BD46     		mov	sp, r7
 2503              	.LCFI86:
 2504              		.cfi_def_cfa_register 13
 2505              		@ sp needed
 2506 00b4 80BD     		pop	{r7, pc}
 2507              		.cfi_endproc
 2508              	.LFE141:
 2510              		.section	.text.HAL_USART_Abort,"ax",%progbits
 2511              		.align	1
 2512              		.global	HAL_USART_Abort
 2513              		.syntax unified
 2514              		.thumb
 2515              		.thumb_func
 2516              		.fpu fpv4-sp-d16
 2518              	HAL_USART_Abort:
 2519              	.LFB142:
1179:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1180:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1181:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Abort ongoing transfer (blocking mode).
1182:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart USART handle.
1183:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @note   This procedure could be used for aborting any ongoing transfer (either Tx or Rx,
1184:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *         as described by TransferType parameter) started in Interrupt or DMA mode.
1185:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *         This procedure performs following operations :
1186:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *           - Disable PPP Interrupts (depending of transfer direction)
1187:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1188:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1189:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *           - Set handle State to READY
1190:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1191:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
1192:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** */
1193:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Abort(USART_HandleTypeDef *husart)
1194:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 2520              		.loc 1 1194 1
 2521              		.cfi_startproc
 2522              		@ args = 0, pretend = 0, frame = 8
 2523              		@ frame_needed = 1, uses_anonymous_args = 0
 2524 0000 80B5     		push	{r7, lr}
 2525              	.LCFI87:
 2526              		.cfi_def_cfa_offset 8
 2527              		.cfi_offset 7, -8
 2528              		.cfi_offset 14, -4
 2529 0002 82B0     		sub	sp, sp, #8
 2530              	.LCFI88:
 2531              		.cfi_def_cfa_offset 16
 2532 0004 00AF     		add	r7, sp, #0
 2533              	.LCFI89:
 2534              		.cfi_def_cfa_register 7
 2535 0006 7860     		str	r0, [r7, #4]
1195:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1196:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1
 2536              		.loc 1 1196 3
ARM GAS  /tmp/ccIGChKB.s 			page 66


 2537 0008 7B68     		ldr	r3, [r7, #4]
 2538 000a 1B68     		ldr	r3, [r3]
 2539 000c DA68     		ldr	r2, [r3, #12]
 2540 000e 7B68     		ldr	r3, [r7, #4]
 2541 0010 1B68     		ldr	r3, [r3]
 2542 0012 22F4F072 		bic	r2, r2, #480
 2543 0016 DA60     		str	r2, [r3, #12]
1197:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
 2544              		.loc 1 1197 3
 2545 0018 7B68     		ldr	r3, [r7, #4]
 2546 001a 1B68     		ldr	r3, [r3]
 2547 001c 5A69     		ldr	r2, [r3, #20]
 2548 001e 7B68     		ldr	r3, [r7, #4]
 2549 0020 1B68     		ldr	r3, [r3]
 2550 0022 22F00102 		bic	r2, r2, #1
 2551 0026 5A61     		str	r2, [r3, #20]
1198:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1199:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Disable the USART DMA Tx request if enabled */
1200:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAT))
 2552              		.loc 1 1200 6
 2553 0028 7B68     		ldr	r3, [r7, #4]
 2554 002a 1B68     		ldr	r3, [r3]
 2555 002c 5B69     		ldr	r3, [r3, #20]
 2556 002e 03F08003 		and	r3, r3, #128
 2557              		.loc 1 1200 5
 2558 0032 002B     		cmp	r3, #0
 2559 0034 14D0     		beq	.L110
1201:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 2560              		.loc 1 1202 5
 2561 0036 7B68     		ldr	r3, [r7, #4]
 2562 0038 1B68     		ldr	r3, [r3]
 2563 003a 5A69     		ldr	r2, [r3, #20]
 2564 003c 7B68     		ldr	r3, [r7, #4]
 2565 003e 1B68     		ldr	r3, [r3]
 2566 0040 22F08002 		bic	r2, r2, #128
 2567 0044 5A61     		str	r2, [r3, #20]
1203:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1204:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Abort the USART DMA Tx channel : use blocking DMA Abort API (no callback) */
1205:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->hdmatx != NULL)
 2568              		.loc 1 1205 14
 2569 0046 7B68     		ldr	r3, [r7, #4]
 2570 0048 5B6B     		ldr	r3, [r3, #52]
 2571              		.loc 1 1205 7
 2572 004a 002B     		cmp	r3, #0
 2573 004c 08D0     		beq	.L110
1206:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1207:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       /* Set the USART DMA Abort callback to Null. 
1208:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****          No call back execution at end of DMA abort procedure */
1209:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       husart->hdmatx->XferAbortCallback = NULL;
 2574              		.loc 1 1209 13
 2575 004e 7B68     		ldr	r3, [r7, #4]
 2576 0050 5B6B     		ldr	r3, [r3, #52]
 2577              		.loc 1 1209 41
 2578 0052 0022     		movs	r2, #0
 2579 0054 1A65     		str	r2, [r3, #80]
1210:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
ARM GAS  /tmp/ccIGChKB.s 			page 67


1211:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       HAL_DMA_Abort(husart->hdmatx);
 2580              		.loc 1 1211 7
 2581 0056 7B68     		ldr	r3, [r7, #4]
 2582 0058 5B6B     		ldr	r3, [r3, #52]
 2583 005a 1846     		mov	r0, r3
 2584 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2585              	.L110:
1212:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1213:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1214:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1215:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Disable the USART DMA Rx request if enabled */
1216:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR))
 2586              		.loc 1 1216 6
 2587 0060 7B68     		ldr	r3, [r7, #4]
 2588 0062 1B68     		ldr	r3, [r3]
 2589 0064 5B69     		ldr	r3, [r3, #20]
 2590 0066 03F04003 		and	r3, r3, #64
 2591              		.loc 1 1216 5
 2592 006a 002B     		cmp	r3, #0
 2593 006c 14D0     		beq	.L111
1217:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1218:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAR);
 2594              		.loc 1 1218 5
 2595 006e 7B68     		ldr	r3, [r7, #4]
 2596 0070 1B68     		ldr	r3, [r3]
 2597 0072 5A69     		ldr	r2, [r3, #20]
 2598 0074 7B68     		ldr	r3, [r7, #4]
 2599 0076 1B68     		ldr	r3, [r3]
 2600 0078 22F04002 		bic	r2, r2, #64
 2601 007c 5A61     		str	r2, [r3, #20]
1219:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1220:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Abort the USART DMA Rx channel : use blocking DMA Abort API (no callback) */
1221:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->hdmarx != NULL)
 2602              		.loc 1 1221 14
 2603 007e 7B68     		ldr	r3, [r7, #4]
 2604 0080 9B6B     		ldr	r3, [r3, #56]
 2605              		.loc 1 1221 7
 2606 0082 002B     		cmp	r3, #0
 2607 0084 08D0     		beq	.L111
1222:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1223:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       /* Set the USART DMA Abort callback to Null. 
1224:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****          No call back execution at end of DMA abort procedure */
1225:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       husart->hdmarx->XferAbortCallback = NULL;
 2608              		.loc 1 1225 13
 2609 0086 7B68     		ldr	r3, [r7, #4]
 2610 0088 9B6B     		ldr	r3, [r3, #56]
 2611              		.loc 1 1225 41
 2612 008a 0022     		movs	r2, #0
 2613 008c 1A65     		str	r2, [r3, #80]
1226:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1227:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       HAL_DMA_Abort(husart->hdmarx);
 2614              		.loc 1 1227 7
 2615 008e 7B68     		ldr	r3, [r7, #4]
 2616 0090 9B6B     		ldr	r3, [r3, #56]
 2617 0092 1846     		mov	r0, r3
 2618 0094 FFF7FEFF 		bl	HAL_DMA_Abort
 2619              	.L111:
ARM GAS  /tmp/ccIGChKB.s 			page 68


1228:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1229:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1230:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1231:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Reset Tx and Rx transfer counters */
1232:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->TxXferCount = 0x00U; 
 2620              		.loc 1 1232 23
 2621 0098 7B68     		ldr	r3, [r7, #4]
 2622 009a 0022     		movs	r2, #0
 2623 009c 5A85     		strh	r2, [r3, #42]	@ movhi
1233:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->RxXferCount = 0x00U; 
 2624              		.loc 1 1233 23
 2625 009e 7B68     		ldr	r3, [r7, #4]
 2626 00a0 0022     		movs	r2, #0
 2627 00a2 5A86     		strh	r2, [r3, #50]	@ movhi
1234:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1235:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Restore husart->State to Ready */
1236:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->State  = HAL_USART_STATE_READY;
 2628              		.loc 1 1236 18
 2629 00a4 7B68     		ldr	r3, [r7, #4]
 2630 00a6 0122     		movs	r2, #1
 2631 00a8 83F83D20 		strb	r2, [r3, #61]
1237:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1238:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Reset Handle ErrorCode to No Error */
1239:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->ErrorCode = HAL_USART_ERROR_NONE;
 2632              		.loc 1 1239 21
 2633 00ac 7B68     		ldr	r3, [r7, #4]
 2634 00ae 0022     		movs	r2, #0
 2635 00b0 1A64     		str	r2, [r3, #64]
1240:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   return HAL_OK;
 2636              		.loc 1 1241 10
 2637 00b2 0023     		movs	r3, #0
1242:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 2638              		.loc 1 1242 1
 2639 00b4 1846     		mov	r0, r3
 2640 00b6 0837     		adds	r7, r7, #8
 2641              	.LCFI90:
 2642              		.cfi_def_cfa_offset 8
 2643 00b8 BD46     		mov	sp, r7
 2644              	.LCFI91:
 2645              		.cfi_def_cfa_register 13
 2646              		@ sp needed
 2647 00ba 80BD     		pop	{r7, pc}
 2648              		.cfi_endproc
 2649              	.LFE142:
 2651              		.section	.text.HAL_USART_Abort_IT,"ax",%progbits
 2652              		.align	1
 2653              		.global	HAL_USART_Abort_IT
 2654              		.syntax unified
 2655              		.thumb
 2656              		.thumb_func
 2657              		.fpu fpv4-sp-d16
 2659              	HAL_USART_Abort_IT:
 2660              	.LFB143:
1243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1244:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1245:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
ARM GAS  /tmp/ccIGChKB.s 			page 69


1246:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart USART handle.
1247:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @note   This procedure could be used for aborting any ongoing transfer (either Tx or Rx,
1248:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *         as described by TransferType parameter) started in Interrupt or DMA mode.
1249:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *         This procedure performs following operations :
1250:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *           - Disable PPP Interrupts (depending of transfer direction)
1251:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1252:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1253:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *           - Set handle State to READY
1254:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *           - At abort completion, call user abort complete callback
1255:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1256:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1257:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
1258:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** */
1259:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Abort_IT(USART_HandleTypeDef *husart)
1260:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 2661              		.loc 1 1260 1
 2662              		.cfi_startproc
 2663              		@ args = 0, pretend = 0, frame = 16
 2664              		@ frame_needed = 1, uses_anonymous_args = 0
 2665 0000 80B5     		push	{r7, lr}
 2666              	.LCFI92:
 2667              		.cfi_def_cfa_offset 8
 2668              		.cfi_offset 7, -8
 2669              		.cfi_offset 14, -4
 2670 0002 84B0     		sub	sp, sp, #16
 2671              	.LCFI93:
 2672              		.cfi_def_cfa_offset 24
 2673 0004 00AF     		add	r7, sp, #0
 2674              	.LCFI94:
 2675              		.cfi_def_cfa_register 7
 2676 0006 7860     		str	r0, [r7, #4]
1261:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint32_t AbortCplt = 0x01U;
 2677              		.loc 1 1261 12
 2678 0008 0123     		movs	r3, #1
 2679 000a FB60     		str	r3, [r7, #12]
1262:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   
1263:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1264:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1
 2680              		.loc 1 1264 3
 2681 000c 7B68     		ldr	r3, [r7, #4]
 2682 000e 1B68     		ldr	r3, [r3]
 2683 0010 DA68     		ldr	r2, [r3, #12]
 2684 0012 7B68     		ldr	r3, [r7, #4]
 2685 0014 1B68     		ldr	r3, [r3]
 2686 0016 22F4F072 		bic	r2, r2, #480
 2687 001a DA60     		str	r2, [r3, #12]
1265:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
 2688              		.loc 1 1265 3
 2689 001c 7B68     		ldr	r3, [r7, #4]
 2690 001e 1B68     		ldr	r3, [r3]
 2691 0020 5A69     		ldr	r2, [r3, #20]
 2692 0022 7B68     		ldr	r3, [r7, #4]
 2693 0024 1B68     		ldr	r3, [r3]
 2694 0026 22F00102 		bic	r2, r2, #1
 2695 002a 5A61     		str	r2, [r3, #20]
1266:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1267:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to USART Handle, DMA Abort complete callbacks s
ARM GAS  /tmp/ccIGChKB.s 			page 70


1268:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      before any call to DMA Abort functions */
1269:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* DMA Tx Handle is valid */
1270:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart->hdmatx != NULL)
 2696              		.loc 1 1270 12
 2697 002c 7B68     		ldr	r3, [r7, #4]
 2698 002e 5B6B     		ldr	r3, [r3, #52]
 2699              		.loc 1 1270 5
 2700 0030 002B     		cmp	r3, #0
 2701 0032 0FD0     		beq	.L114
1271:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1272:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set DMA Abort Complete callback if USART DMA Tx request if enabled.
1273:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        Otherwise, set it to NULL */
1274:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAT))
 2702              		.loc 1 1274 8
 2703 0034 7B68     		ldr	r3, [r7, #4]
 2704 0036 1B68     		ldr	r3, [r3]
 2705 0038 5B69     		ldr	r3, [r3, #20]
 2706 003a 03F08003 		and	r3, r3, #128
 2707              		.loc 1 1274 7
 2708 003e 002B     		cmp	r3, #0
 2709 0040 04D0     		beq	.L115
1275:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1276:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       husart->hdmatx->XferAbortCallback = USART_DMATxAbortCallback;
 2710              		.loc 1 1276 13
 2711 0042 7B68     		ldr	r3, [r7, #4]
 2712 0044 5B6B     		ldr	r3, [r3, #52]
 2713              		.loc 1 1276 41
 2714 0046 3C4A     		ldr	r2, .L124
 2715 0048 1A65     		str	r2, [r3, #80]
 2716 004a 03E0     		b	.L114
 2717              	.L115:
1277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1278:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     else
1279:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1280:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       husart->hdmatx->XferAbortCallback = NULL;
 2718              		.loc 1 1280 13
 2719 004c 7B68     		ldr	r3, [r7, #4]
 2720 004e 5B6B     		ldr	r3, [r3, #52]
 2721              		.loc 1 1280 41
 2722 0050 0022     		movs	r2, #0
 2723 0052 1A65     		str	r2, [r3, #80]
 2724              	.L114:
1281:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1282:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1283:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* DMA Rx Handle is valid */
1284:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart->hdmarx != NULL)
 2725              		.loc 1 1284 12
 2726 0054 7B68     		ldr	r3, [r7, #4]
 2727 0056 9B6B     		ldr	r3, [r3, #56]
 2728              		.loc 1 1284 5
 2729 0058 002B     		cmp	r3, #0
 2730 005a 0FD0     		beq	.L116
1285:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1286:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Set DMA Abort Complete callback if USART DMA Rx request if enabled.
1287:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        Otherwise, set it to NULL */
1288:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR))
 2731              		.loc 1 1288 8
ARM GAS  /tmp/ccIGChKB.s 			page 71


 2732 005c 7B68     		ldr	r3, [r7, #4]
 2733 005e 1B68     		ldr	r3, [r3]
 2734 0060 5B69     		ldr	r3, [r3, #20]
 2735 0062 03F04003 		and	r3, r3, #64
 2736              		.loc 1 1288 7
 2737 0066 002B     		cmp	r3, #0
 2738 0068 04D0     		beq	.L117
1289:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1290:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       husart->hdmarx->XferAbortCallback = USART_DMARxAbortCallback;
 2739              		.loc 1 1290 13
 2740 006a 7B68     		ldr	r3, [r7, #4]
 2741 006c 9B6B     		ldr	r3, [r3, #56]
 2742              		.loc 1 1290 41
 2743 006e 334A     		ldr	r2, .L124+4
 2744 0070 1A65     		str	r2, [r3, #80]
 2745 0072 03E0     		b	.L116
 2746              	.L117:
1291:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1292:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     else
1293:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1294:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       husart->hdmarx->XferAbortCallback = NULL;
 2747              		.loc 1 1294 13
 2748 0074 7B68     		ldr	r3, [r7, #4]
 2749 0076 9B6B     		ldr	r3, [r3, #56]
 2750              		.loc 1 1294 41
 2751 0078 0022     		movs	r2, #0
 2752 007a 1A65     		str	r2, [r3, #80]
 2753              	.L116:
1295:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1296:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1297:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   
1298:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Disable the USART DMA Tx request if enabled */
1299:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAT))
 2754              		.loc 1 1299 6
 2755 007c 7B68     		ldr	r3, [r7, #4]
 2756 007e 1B68     		ldr	r3, [r3]
 2757 0080 5B69     		ldr	r3, [r3, #20]
 2758 0082 03F08003 		and	r3, r3, #128
 2759              		.loc 1 1299 5
 2760 0086 002B     		cmp	r3, #0
 2761 0088 1AD0     		beq	.L118
1300:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1301:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Disable DMA Tx at USART level */
1302:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 2762              		.loc 1 1302 5
 2763 008a 7B68     		ldr	r3, [r7, #4]
 2764 008c 1B68     		ldr	r3, [r3]
 2765 008e 5A69     		ldr	r2, [r3, #20]
 2766 0090 7B68     		ldr	r3, [r7, #4]
 2767 0092 1B68     		ldr	r3, [r3]
 2768 0094 22F08002 		bic	r2, r2, #128
 2769 0098 5A61     		str	r2, [r3, #20]
1303:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1304:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Abort the USART DMA Tx channel : use non blocking DMA Abort API (callback) */
1305:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->hdmatx != NULL)
 2770              		.loc 1 1305 14
 2771 009a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccIGChKB.s 			page 72


 2772 009c 5B6B     		ldr	r3, [r3, #52]
 2773              		.loc 1 1305 7
 2774 009e 002B     		cmp	r3, #0
 2775 00a0 0ED0     		beq	.L118
1306:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1307:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       /* USART Tx DMA Abort callback has already been initialised : 
1308:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****          will lead to call HAL_USART_AbortCpltCallback() at end of DMA abort procedure */
1309:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1310:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       /* Abort DMA TX */
1311:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       if(HAL_DMA_Abort_IT(husart->hdmatx) != HAL_OK)
 2776              		.loc 1 1311 10
 2777 00a2 7B68     		ldr	r3, [r7, #4]
 2778 00a4 5B6B     		ldr	r3, [r3, #52]
 2779 00a6 1846     		mov	r0, r3
 2780 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2781 00ac 0346     		mov	r3, r0
 2782              		.loc 1 1311 9
 2783 00ae 002B     		cmp	r3, #0
 2784 00b0 04D0     		beq	.L119
1312:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
1313:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         husart->hdmatx->XferAbortCallback = NULL;
 2785              		.loc 1 1313 15
 2786 00b2 7B68     		ldr	r3, [r7, #4]
 2787 00b4 5B6B     		ldr	r3, [r3, #52]
 2788              		.loc 1 1313 43
 2789 00b6 0022     		movs	r2, #0
 2790 00b8 1A65     		str	r2, [r3, #80]
 2791 00ba 01E0     		b	.L118
 2792              	.L119:
1314:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
1315:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       else
1316:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
1317:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         AbortCplt = 0x00U;
 2793              		.loc 1 1317 19
 2794 00bc 0023     		movs	r3, #0
 2795 00be FB60     		str	r3, [r7, #12]
 2796              	.L118:
1318:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
1319:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1320:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1321:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1322:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Disable the USART DMA Rx request if enabled */
1323:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR))
 2797              		.loc 1 1323 6
 2798 00c0 7B68     		ldr	r3, [r7, #4]
 2799 00c2 1B68     		ldr	r3, [r3]
 2800 00c4 5B69     		ldr	r3, [r3, #20]
 2801 00c6 03F04003 		and	r3, r3, #64
 2802              		.loc 1 1323 5
 2803 00ca 002B     		cmp	r3, #0
 2804 00cc 1CD0     		beq	.L120
1324:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1325:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAR);
 2805              		.loc 1 1325 5
 2806 00ce 7B68     		ldr	r3, [r7, #4]
 2807 00d0 1B68     		ldr	r3, [r3]
 2808 00d2 5A69     		ldr	r2, [r3, #20]
ARM GAS  /tmp/ccIGChKB.s 			page 73


 2809 00d4 7B68     		ldr	r3, [r7, #4]
 2810 00d6 1B68     		ldr	r3, [r3]
 2811 00d8 22F04002 		bic	r2, r2, #64
 2812 00dc 5A61     		str	r2, [r3, #20]
1326:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1327:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Abort the USART DMA Rx channel : use non blocking DMA Abort API (callback) */
1328:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->hdmarx != NULL)
 2813              		.loc 1 1328 14
 2814 00de 7B68     		ldr	r3, [r7, #4]
 2815 00e0 9B6B     		ldr	r3, [r3, #56]
 2816              		.loc 1 1328 7
 2817 00e2 002B     		cmp	r3, #0
 2818 00e4 10D0     		beq	.L120
1329:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1330:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       /* USART Rx DMA Abort callback has already been initialised : 
1331:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****          will lead to call HAL_USART_AbortCpltCallback() at end of DMA abort procedure */
1332:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1333:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       /* Abort DMA RX */
1334:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       if(HAL_DMA_Abort_IT(husart->hdmarx) != HAL_OK)
 2819              		.loc 1 1334 10
 2820 00e6 7B68     		ldr	r3, [r7, #4]
 2821 00e8 9B6B     		ldr	r3, [r3, #56]
 2822 00ea 1846     		mov	r0, r3
 2823 00ec FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2824 00f0 0346     		mov	r3, r0
 2825              		.loc 1 1334 9
 2826 00f2 002B     		cmp	r3, #0
 2827 00f4 06D0     		beq	.L121
1335:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
1336:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         husart->hdmarx->XferAbortCallback = NULL;
 2828              		.loc 1 1336 15
 2829 00f6 7B68     		ldr	r3, [r7, #4]
 2830 00f8 9B6B     		ldr	r3, [r3, #56]
 2831              		.loc 1 1336 43
 2832 00fa 0022     		movs	r2, #0
 2833 00fc 1A65     		str	r2, [r3, #80]
1337:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         AbortCplt = 0x01U;
 2834              		.loc 1 1337 19
 2835 00fe 0123     		movs	r3, #1
 2836 0100 FB60     		str	r3, [r7, #12]
 2837 0102 01E0     		b	.L120
 2838              	.L121:
1338:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
1339:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       else
1340:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
1341:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         AbortCplt = 0x00U;
 2839              		.loc 1 1341 19
 2840 0104 0023     		movs	r3, #0
 2841 0106 FB60     		str	r3, [r7, #12]
 2842              	.L120:
1342:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
1343:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1344:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1345:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1346:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1347:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(AbortCplt  == 0x01U)
 2843              		.loc 1 1347 5
ARM GAS  /tmp/ccIGChKB.s 			page 74


 2844 0108 FB68     		ldr	r3, [r7, #12]
 2845 010a 012B     		cmp	r3, #1
 2846 010c 0FD1     		bne	.L122
1348:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1349:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Reset Tx and Rx transfer counters */
1350:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->TxXferCount = 0x00U; 
 2847              		.loc 1 1350 25
 2848 010e 7B68     		ldr	r3, [r7, #4]
 2849 0110 0022     		movs	r2, #0
 2850 0112 5A85     		strh	r2, [r3, #42]	@ movhi
1351:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->RxXferCount = 0x00U;
 2851              		.loc 1 1351 25
 2852 0114 7B68     		ldr	r3, [r7, #4]
 2853 0116 0022     		movs	r2, #0
 2854 0118 5A86     		strh	r2, [r3, #50]	@ movhi
1352:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1353:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Reset errorCode */
1354:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 2855              		.loc 1 1354 23
 2856 011a 7B68     		ldr	r3, [r7, #4]
 2857 011c 0022     		movs	r2, #0
 2858 011e 1A64     		str	r2, [r3, #64]
1355:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1356:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Restore husart->State to Ready */
1357:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->State  = HAL_USART_STATE_READY;
 2859              		.loc 1 1357 20
 2860 0120 7B68     		ldr	r3, [r7, #4]
 2861 0122 0122     		movs	r2, #1
 2862 0124 83F83D20 		strb	r2, [r3, #61]
1358:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1359:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1360:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     HAL_USART_AbortCpltCallback(husart);
 2863              		.loc 1 1360 5
 2864 0128 7868     		ldr	r0, [r7, #4]
 2865 012a FFF7FEFF 		bl	HAL_USART_AbortCpltCallback
 2866              	.L122:
1361:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1362:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1363:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   return HAL_OK;
 2867              		.loc 1 1363 10
 2868 012e 0023     		movs	r3, #0
1364:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 2869              		.loc 1 1364 1
 2870 0130 1846     		mov	r0, r3
 2871 0132 1037     		adds	r7, r7, #16
 2872              	.LCFI95:
 2873              		.cfi_def_cfa_offset 8
 2874 0134 BD46     		mov	sp, r7
 2875              	.LCFI96:
 2876              		.cfi_def_cfa_register 13
 2877              		@ sp needed
 2878 0136 80BD     		pop	{r7, pc}
 2879              	.L125:
 2880              		.align	2
 2881              	.L124:
 2882 0138 00000000 		.word	USART_DMATxAbortCallback
 2883 013c 00000000 		.word	USART_DMARxAbortCallback
ARM GAS  /tmp/ccIGChKB.s 			page 75


 2884              		.cfi_endproc
 2885              	.LFE143:
 2887              		.section	.text.HAL_USART_IRQHandler,"ax",%progbits
 2888              		.align	1
 2889              		.global	HAL_USART_IRQHandler
 2890              		.syntax unified
 2891              		.thumb
 2892              		.thumb_func
 2893              		.fpu fpv4-sp-d16
 2895              	HAL_USART_IRQHandler:
 2896              	.LFB144:
1365:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1366:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1367:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  This function handles USART interrupt request.
1368:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
1369:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1370:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
1371:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1372:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** void HAL_USART_IRQHandler(USART_HandleTypeDef *husart)
1373:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 2897              		.loc 1 1373 1
 2898              		.cfi_startproc
 2899              		@ args = 0, pretend = 0, frame = 32
 2900              		@ frame_needed = 1, uses_anonymous_args = 0
 2901 0000 80B5     		push	{r7, lr}
 2902              	.LCFI97:
 2903              		.cfi_def_cfa_offset 8
 2904              		.cfi_offset 7, -8
 2905              		.cfi_offset 14, -4
 2906 0002 88B0     		sub	sp, sp, #32
 2907              	.LCFI98:
 2908              		.cfi_def_cfa_offset 40
 2909 0004 00AF     		add	r7, sp, #0
 2910              	.LCFI99:
 2911              		.cfi_def_cfa_register 7
 2912 0006 7860     		str	r0, [r7, #4]
1374:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint32_t isrflags = READ_REG(husart->Instance->SR);
 2913              		.loc 1 1374 23
 2914 0008 7B68     		ldr	r3, [r7, #4]
 2915 000a 1B68     		ldr	r3, [r3]
 2916              		.loc 1 1374 12
 2917 000c 1B68     		ldr	r3, [r3]
 2918 000e FB61     		str	r3, [r7, #28]
1375:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint32_t cr1its   = READ_REG(husart->Instance->CR1);
 2919              		.loc 1 1375 23
 2920 0010 7B68     		ldr	r3, [r7, #4]
 2921 0012 1B68     		ldr	r3, [r3]
 2922              		.loc 1 1375 12
 2923 0014 DB68     		ldr	r3, [r3, #12]
 2924 0016 BB61     		str	r3, [r7, #24]
1376:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint32_t cr3its   = READ_REG(husart->Instance->CR3);
 2925              		.loc 1 1376 23
 2926 0018 7B68     		ldr	r3, [r7, #4]
 2927 001a 1B68     		ldr	r3, [r3]
 2928              		.loc 1 1376 12
 2929 001c 5B69     		ldr	r3, [r3, #20]
 2930 001e 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccIGChKB.s 			page 76


1377:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint32_t errorflags = 0x00U;
 2931              		.loc 1 1377 12
 2932 0020 0023     		movs	r3, #0
 2933 0022 3B61     		str	r3, [r7, #16]
1378:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint32_t dmarequest = 0x00U;
 2934              		.loc 1 1378 12
 2935 0024 0023     		movs	r3, #0
 2936 0026 FB60     		str	r3, [r7, #12]
1379:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1380:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* If no error occurs */
1381:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 2937              		.loc 1 1381 14
 2938 0028 FB69     		ldr	r3, [r7, #28]
 2939 002a 03F00F03 		and	r3, r3, #15
 2940 002e 3B61     		str	r3, [r7, #16]
1382:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(errorflags == RESET)
 2941              		.loc 1 1382 5
 2942 0030 3B69     		ldr	r3, [r7, #16]
 2943 0032 002B     		cmp	r3, #0
 2944 0034 17D1     		bne	.L127
1383:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1384:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* USART in mode Receiver -------------------------------------------------*/
1385:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 2945              		.loc 1 1385 19
 2946 0036 FB69     		ldr	r3, [r7, #28]
 2947 0038 03F02003 		and	r3, r3, #32
 2948              		.loc 1 1385 7
 2949 003c 002B     		cmp	r3, #0
 2950 003e 12D0     		beq	.L127
 2951              		.loc 1 1385 58 discriminator 1
 2952 0040 BB69     		ldr	r3, [r7, #24]
 2953 0042 03F02003 		and	r3, r3, #32
 2954              		.loc 1 1385 46 discriminator 1
 2955 0046 002B     		cmp	r3, #0
 2956 0048 0DD0     		beq	.L127
1386:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1387:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       if(husart->State == HAL_USART_STATE_BUSY_RX)
 2957              		.loc 1 1387 16
 2958 004a 7B68     		ldr	r3, [r7, #4]
 2959 004c 93F83D30 		ldrb	r3, [r3, #61]
 2960 0050 DBB2     		uxtb	r3, r3
 2961              		.loc 1 1387 9
 2962 0052 222B     		cmp	r3, #34
 2963 0054 03D1     		bne	.L128
1388:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
1389:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         USART_Receive_IT(husart);
 2964              		.loc 1 1389 9
 2965 0056 7868     		ldr	r0, [r7, #4]
 2966 0058 FFF7FEFF 		bl	USART_Receive_IT
1390:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
1391:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       else
1392:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
1393:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         USART_TransmitReceive_IT(husart);
1394:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
1395:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       return;
 2967              		.loc 1 1395 7
 2968 005c E4E0     		b	.L126
ARM GAS  /tmp/ccIGChKB.s 			page 77


 2969              	.L128:
1393:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
 2970              		.loc 1 1393 9
 2971 005e 7868     		ldr	r0, [r7, #4]
 2972 0060 FFF7FEFF 		bl	USART_TransmitReceive_IT
 2973              		.loc 1 1395 7
 2974 0064 E0E0     		b	.L126
 2975              	.L127:
1396:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1397:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1398:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* If some errors occur */
1399:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE 
 2976              		.loc 1 1399 5
 2977 0066 3B69     		ldr	r3, [r7, #16]
 2978 0068 002B     		cmp	r3, #0
 2979 006a 00F0B680 		beq	.L131
 2980              		.loc 1 1399 41 discriminator 1
 2981 006e 7B69     		ldr	r3, [r7, #20]
 2982 0070 03F00103 		and	r3, r3, #1
 2983              		.loc 1 1399 28 discriminator 1
 2984 0074 002B     		cmp	r3, #0
 2985 0076 05D1     		bne	.L132
 2986              		.loc 1 1399 80 discriminator 2
 2987 0078 BB69     		ldr	r3, [r7, #24]
 2988 007a 03F49073 		and	r3, r3, #288
 2989              		.loc 1 1399 68 discriminator 2
 2990 007e 002B     		cmp	r3, #0
 2991 0080 00F0AB80 		beq	.L131
 2992              	.L132:
1400:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1401:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* USART parity error interrupt occurred ----------------------------------*/
1402:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 2993              		.loc 1 1402 19
 2994 0084 FB69     		ldr	r3, [r7, #28]
 2995 0086 03F00103 		and	r3, r3, #1
 2996              		.loc 1 1402 7
 2997 008a 002B     		cmp	r3, #0
 2998 008c 0AD0     		beq	.L133
 2999              		.loc 1 1402 56 discriminator 1
 3000 008e BB69     		ldr	r3, [r7, #24]
 3001 0090 03F48073 		and	r3, r3, #256
 3002              		.loc 1 1402 44 discriminator 1
 3003 0094 002B     		cmp	r3, #0
 3004 0096 05D0     		beq	.L133
1403:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1404:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       husart->ErrorCode |= HAL_USART_ERROR_PE;
 3005              		.loc 1 1404 25
 3006 0098 7B68     		ldr	r3, [r7, #4]
 3007 009a 1B6C     		ldr	r3, [r3, #64]
 3008 009c 43F00102 		orr	r2, r3, #1
 3009 00a0 7B68     		ldr	r3, [r7, #4]
 3010 00a2 1A64     		str	r2, [r3, #64]
 3011              	.L133:
1405:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1406:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1407:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* USART noise error interrupt occurred --------------------------------*/
1408:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
ARM GAS  /tmp/ccIGChKB.s 			page 78


 3012              		.loc 1 1408 19
 3013 00a4 FB69     		ldr	r3, [r7, #28]
 3014 00a6 03F00403 		and	r3, r3, #4
 3015              		.loc 1 1408 7
 3016 00aa 002B     		cmp	r3, #0
 3017 00ac 0AD0     		beq	.L134
 3018              		.loc 1 1408 56 discriminator 1
 3019 00ae 7B69     		ldr	r3, [r7, #20]
 3020 00b0 03F00103 		and	r3, r3, #1
 3021              		.loc 1 1408 44 discriminator 1
 3022 00b4 002B     		cmp	r3, #0
 3023 00b6 05D0     		beq	.L134
1409:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1410:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       husart->ErrorCode |= HAL_USART_ERROR_NE;
 3024              		.loc 1 1410 25
 3025 00b8 7B68     		ldr	r3, [r7, #4]
 3026 00ba 1B6C     		ldr	r3, [r3, #64]
 3027 00bc 43F00202 		orr	r2, r3, #2
 3028 00c0 7B68     		ldr	r3, [r7, #4]
 3029 00c2 1A64     		str	r2, [r3, #64]
 3030              	.L134:
1411:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1412:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1413:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* USART frame error interrupt occurred --------------------------------*/
1414:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3031              		.loc 1 1414 19
 3032 00c4 FB69     		ldr	r3, [r7, #28]
 3033 00c6 03F00203 		and	r3, r3, #2
 3034              		.loc 1 1414 7
 3035 00ca 002B     		cmp	r3, #0
 3036 00cc 0AD0     		beq	.L135
 3037              		.loc 1 1414 56 discriminator 1
 3038 00ce 7B69     		ldr	r3, [r7, #20]
 3039 00d0 03F00103 		and	r3, r3, #1
 3040              		.loc 1 1414 44 discriminator 1
 3041 00d4 002B     		cmp	r3, #0
 3042 00d6 05D0     		beq	.L135
1415:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1416:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       husart->ErrorCode |= HAL_USART_ERROR_FE;
 3043              		.loc 1 1416 25
 3044 00d8 7B68     		ldr	r3, [r7, #4]
 3045 00da 1B6C     		ldr	r3, [r3, #64]
 3046 00dc 43F00402 		orr	r2, r3, #4
 3047 00e0 7B68     		ldr	r3, [r7, #4]
 3048 00e2 1A64     		str	r2, [r3, #64]
 3049              	.L135:
1417:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1418:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1419:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* USART Over-Run interrupt occurred -----------------------------------*/
1420:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3050              		.loc 1 1420 19
 3051 00e4 FB69     		ldr	r3, [r7, #28]
 3052 00e6 03F00803 		and	r3, r3, #8
 3053              		.loc 1 1420 7
 3054 00ea 002B     		cmp	r3, #0
 3055 00ec 0AD0     		beq	.L136
 3056              		.loc 1 1420 57 discriminator 1
ARM GAS  /tmp/ccIGChKB.s 			page 79


 3057 00ee 7B69     		ldr	r3, [r7, #20]
 3058 00f0 03F00103 		and	r3, r3, #1
 3059              		.loc 1 1420 45 discriminator 1
 3060 00f4 002B     		cmp	r3, #0
 3061 00f6 05D0     		beq	.L136
1421:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1422:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       husart->ErrorCode |= HAL_USART_ERROR_ORE;
 3062              		.loc 1 1422 25
 3063 00f8 7B68     		ldr	r3, [r7, #4]
 3064 00fa 1B6C     		ldr	r3, [r3, #64]
 3065 00fc 43F00802 		orr	r2, r3, #8
 3066 0100 7B68     		ldr	r3, [r7, #4]
 3067 0102 1A64     		str	r2, [r3, #64]
 3068              	.L136:
1423:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1424:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1425:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->ErrorCode != HAL_USART_ERROR_NONE)
 3069              		.loc 1 1425 14
 3070 0104 7B68     		ldr	r3, [r7, #4]
 3071 0106 1B6C     		ldr	r3, [r3, #64]
 3072              		.loc 1 1425 7
 3073 0108 002B     		cmp	r3, #0
 3074 010a 00F08C80 		beq	.L148
1426:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1427:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       /* USART in mode Receiver -----------------------------------------------*/
1428:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3075              		.loc 1 1428 21
 3076 010e FB69     		ldr	r3, [r7, #28]
 3077 0110 03F02003 		and	r3, r3, #32
 3078              		.loc 1 1428 9
 3079 0114 002B     		cmp	r3, #0
 3080 0116 11D0     		beq	.L138
 3081              		.loc 1 1428 60 discriminator 1
 3082 0118 BB69     		ldr	r3, [r7, #24]
 3083 011a 03F02003 		and	r3, r3, #32
 3084              		.loc 1 1428 48 discriminator 1
 3085 011e 002B     		cmp	r3, #0
 3086 0120 0CD0     		beq	.L138
1429:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
1430:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(husart->State == HAL_USART_STATE_BUSY_RX)
 3087              		.loc 1 1430 18
 3088 0122 7B68     		ldr	r3, [r7, #4]
 3089 0124 93F83D30 		ldrb	r3, [r3, #61]
 3090 0128 DBB2     		uxtb	r3, r3
 3091              		.loc 1 1430 11
 3092 012a 222B     		cmp	r3, #34
 3093 012c 03D1     		bne	.L139
1431:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
1432:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           USART_Receive_IT(husart);
 3094              		.loc 1 1432 11
 3095 012e 7868     		ldr	r0, [r7, #4]
 3096 0130 FFF7FEFF 		bl	USART_Receive_IT
 3097 0134 02E0     		b	.L138
 3098              	.L139:
1433:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
1434:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         else
1435:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
ARM GAS  /tmp/ccIGChKB.s 			page 80


1436:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           USART_TransmitReceive_IT(husart);
 3099              		.loc 1 1436 11
 3100 0136 7868     		ldr	r0, [r7, #4]
 3101 0138 FFF7FEFF 		bl	USART_TransmitReceive_IT
 3102              	.L138:
1437:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
1438:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
1439:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1440:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       consider error as blocking */
1441:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       dmarequest = HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR);
 3103              		.loc 1 1441 20
 3104 013c 7B68     		ldr	r3, [r7, #4]
 3105 013e 1B68     		ldr	r3, [r3]
 3106 0140 5B69     		ldr	r3, [r3, #20]
 3107 0142 03F04003 		and	r3, r3, #64
 3108 0146 002B     		cmp	r3, #0
 3109 0148 14BF     		ite	ne
 3110 014a 0123     		movne	r3, #1
 3111 014c 0023     		moveq	r3, #0
 3112 014e DBB2     		uxtb	r3, r3
 3113              		.loc 1 1441 18
 3114 0150 FB60     		str	r3, [r7, #12]
1442:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       if(((husart->ErrorCode & HAL_USART_ERROR_ORE) != RESET) || dmarequest)
 3115              		.loc 1 1442 18
 3116 0152 7B68     		ldr	r3, [r7, #4]
 3117 0154 1B6C     		ldr	r3, [r3, #64]
 3118              		.loc 1 1442 30
 3119 0156 03F00803 		and	r3, r3, #8
 3120              		.loc 1 1442 9
 3121 015a 002B     		cmp	r3, #0
 3122 015c 02D1     		bne	.L140
 3123              		.loc 1 1442 63 discriminator 1
 3124 015e FB68     		ldr	r3, [r7, #12]
 3125 0160 002B     		cmp	r3, #0
 3126 0162 31D0     		beq	.L141
 3127              	.L140:
1443:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
1444:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Set the USART state ready to be able to start again the process,
1445:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1446:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         USART_EndRxTransfer(husart);
 3128              		.loc 1 1446 9
 3129 0164 7868     		ldr	r0, [r7, #4]
 3130 0166 FFF7FEFF 		bl	USART_EndRxTransfer
1447:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1448:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Disable the USART DMA Rx request if enabled */
1449:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if (HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR))
 3131              		.loc 1 1449 13
 3132 016a 7B68     		ldr	r3, [r7, #4]
 3133 016c 1B68     		ldr	r3, [r3]
 3134 016e 5B69     		ldr	r3, [r3, #20]
 3135 0170 03F04003 		and	r3, r3, #64
 3136              		.loc 1 1449 12
 3137 0174 002B     		cmp	r3, #0
 3138 0176 23D0     		beq	.L142
1450:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
1451:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAR);
 3139              		.loc 1 1451 11
ARM GAS  /tmp/ccIGChKB.s 			page 81


 3140 0178 7B68     		ldr	r3, [r7, #4]
 3141 017a 1B68     		ldr	r3, [r3]
 3142 017c 5A69     		ldr	r2, [r3, #20]
 3143 017e 7B68     		ldr	r3, [r7, #4]
 3144 0180 1B68     		ldr	r3, [r3]
 3145 0182 22F04002 		bic	r2, r2, #64
 3146 0186 5A61     		str	r2, [r3, #20]
1452:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1453:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           /* Abort the USART DMA Rx channel */
1454:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           if(husart->hdmarx != NULL)
 3147              		.loc 1 1454 20
 3148 0188 7B68     		ldr	r3, [r7, #4]
 3149 018a 9B6B     		ldr	r3, [r3, #56]
 3150              		.loc 1 1454 13
 3151 018c 002B     		cmp	r3, #0
 3152 018e 13D0     		beq	.L143
1455:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           {
1456:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             /* Set the USART DMA Abort callback :
1457:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             will lead to call HAL_USART_ErrorCallback() at end of DMA abort procedure */
1458:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             husart->hdmarx->XferAbortCallback = USART_DMAAbortOnError;
 3153              		.loc 1 1458 19
 3154 0190 7B68     		ldr	r3, [r7, #4]
 3155 0192 9B6B     		ldr	r3, [r3, #56]
 3156              		.loc 1 1458 47
 3157 0194 264A     		ldr	r2, .L150
 3158 0196 1A65     		str	r2, [r3, #80]
1459:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1460:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             if(HAL_DMA_Abort_IT(husart->hdmarx) != HAL_OK)
 3159              		.loc 1 1460 16
 3160 0198 7B68     		ldr	r3, [r7, #4]
 3161 019a 9B6B     		ldr	r3, [r3, #56]
 3162 019c 1846     		mov	r0, r3
 3163 019e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3164 01a2 0346     		mov	r3, r0
 3165              		.loc 1 1460 15
 3166 01a4 002B     		cmp	r3, #0
 3167 01a6 16D0     		beq	.L149
1461:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             {
1462:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****               /* Call Directly XferAbortCallback function in case of error */
1463:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****               husart->hdmarx->XferAbortCallback(husart->hdmarx);
 3168              		.loc 1 1463 21
 3169 01a8 7B68     		ldr	r3, [r7, #4]
 3170 01aa 9B6B     		ldr	r3, [r3, #56]
 3171              		.loc 1 1463 29
 3172 01ac 1B6D     		ldr	r3, [r3, #80]
 3173              		.loc 1 1463 55
 3174 01ae 7A68     		ldr	r2, [r7, #4]
 3175 01b0 926B     		ldr	r2, [r2, #56]
 3176              		.loc 1 1463 15
 3177 01b2 1046     		mov	r0, r2
 3178 01b4 9847     		blx	r3
 3179              	.LVL0:
1449:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 3180              		.loc 1 1449 12
 3181 01b6 0EE0     		b	.L149
 3182              	.L143:
1464:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             }
ARM GAS  /tmp/ccIGChKB.s 			page 82


1465:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           }
1466:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           else
1467:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           {
1468:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             /* Call user error callback */
1469:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             HAL_USART_ErrorCallback(husart);
 3183              		.loc 1 1469 13
 3184 01b8 7868     		ldr	r0, [r7, #4]
 3185 01ba FFF7FEFF 		bl	HAL_USART_ErrorCallback
1449:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 3186              		.loc 1 1449 12
 3187 01be 0AE0     		b	.L149
 3188              	.L142:
1470:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           }
1471:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
1472:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         else
1473:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
1474:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           /* Call user error callback */
1475:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           HAL_USART_ErrorCallback(husart);
 3189              		.loc 1 1475 11
 3190 01c0 7868     		ldr	r0, [r7, #4]
 3191 01c2 FFF7FEFF 		bl	HAL_USART_ErrorCallback
1449:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 3192              		.loc 1 1449 12
 3193 01c6 06E0     		b	.L149
 3194              	.L141:
1476:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
1477:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
1478:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       else
1479:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
1480:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Call user error callback */
1481:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         HAL_USART_ErrorCallback(husart);
 3195              		.loc 1 1481 9
 3196 01c8 7868     		ldr	r0, [r7, #4]
 3197 01ca FFF7FEFF 		bl	HAL_USART_ErrorCallback
1482:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         husart->ErrorCode = HAL_USART_ERROR_NONE;
 3198              		.loc 1 1482 27
 3199 01ce 7B68     		ldr	r3, [r7, #4]
 3200 01d0 0022     		movs	r2, #0
 3201 01d2 1A64     		str	r2, [r3, #64]
1483:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
1484:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1485:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return;
 3202              		.loc 1 1485 5
 3203 01d4 27E0     		b	.L148
 3204              	.L149:
1449:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
 3205              		.loc 1 1449 12
 3206 01d6 00BF     		nop
 3207              		.loc 1 1485 5
 3208 01d8 25E0     		b	.L148
 3209              	.L131:
1486:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1487:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1488:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* USART in mode Transmitter -----------------------------------------------*/
1489:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 3210              		.loc 1 1489 17
 3211 01da FB69     		ldr	r3, [r7, #28]
ARM GAS  /tmp/ccIGChKB.s 			page 83


 3212 01dc 03F08003 		and	r3, r3, #128
 3213              		.loc 1 1489 5
 3214 01e0 002B     		cmp	r3, #0
 3215 01e2 12D0     		beq	.L145
 3216              		.loc 1 1489 55 discriminator 1
 3217 01e4 BB69     		ldr	r3, [r7, #24]
 3218 01e6 03F08003 		and	r3, r3, #128
 3219              		.loc 1 1489 43 discriminator 1
 3220 01ea 002B     		cmp	r3, #0
 3221 01ec 0DD0     		beq	.L145
1490:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1491:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->State == HAL_USART_STATE_BUSY_TX)
 3222              		.loc 1 1491 14
 3223 01ee 7B68     		ldr	r3, [r7, #4]
 3224 01f0 93F83D30 		ldrb	r3, [r3, #61]
 3225 01f4 DBB2     		uxtb	r3, r3
 3226              		.loc 1 1491 7
 3227 01f6 122B     		cmp	r3, #18
 3228 01f8 03D1     		bne	.L146
1492:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1493:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       USART_Transmit_IT(husart);
 3229              		.loc 1 1493 7
 3230 01fa 7868     		ldr	r0, [r7, #4]
 3231 01fc FFF7FEFF 		bl	USART_Transmit_IT
1494:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1495:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     else
1496:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1497:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       USART_TransmitReceive_IT(husart);
1498:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1499:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return;
 3232              		.loc 1 1499 5
 3233 0200 12E0     		b	.L126
 3234              	.L146:
1497:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 3235              		.loc 1 1497 7
 3236 0202 7868     		ldr	r0, [r7, #4]
 3237 0204 FFF7FEFF 		bl	USART_TransmitReceive_IT
 3238              		.loc 1 1499 5
 3239 0208 0EE0     		b	.L126
 3240              	.L145:
1500:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1501:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1502:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* USART in mode Transmitter (transmission end) ----------------------------*/
1503:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 3241              		.loc 1 1503 17
 3242 020a FB69     		ldr	r3, [r7, #28]
 3243 020c 03F04003 		and	r3, r3, #64
 3244              		.loc 1 1503 5
 3245 0210 002B     		cmp	r3, #0
 3246 0212 09D0     		beq	.L126
 3247              		.loc 1 1503 54 discriminator 1
 3248 0214 BB69     		ldr	r3, [r7, #24]
 3249 0216 03F04003 		and	r3, r3, #64
 3250              		.loc 1 1503 42 discriminator 1
 3251 021a 002B     		cmp	r3, #0
 3252 021c 04D0     		beq	.L126
1504:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
ARM GAS  /tmp/ccIGChKB.s 			page 84


1505:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     USART_EndTransmit_IT(husart);
 3253              		.loc 1 1505 5
 3254 021e 7868     		ldr	r0, [r7, #4]
 3255 0220 FFF7FEFF 		bl	USART_EndTransmit_IT
1506:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return;
 3256              		.loc 1 1506 5
 3257 0224 00E0     		b	.L126
 3258              	.L148:
1485:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
 3259              		.loc 1 1485 5
 3260 0226 00BF     		nop
 3261              	.L126:
1507:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1508:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 3262              		.loc 1 1508 1
 3263 0228 2037     		adds	r7, r7, #32
 3264              	.LCFI100:
 3265              		.cfi_def_cfa_offset 8
 3266 022a BD46     		mov	sp, r7
 3267              	.LCFI101:
 3268              		.cfi_def_cfa_register 13
 3269              		@ sp needed
 3270 022c 80BD     		pop	{r7, pc}
 3271              	.L151:
 3272 022e 00BF     		.align	2
 3273              	.L150:
 3274 0230 00000000 		.word	USART_DMAAbortOnError
 3275              		.cfi_endproc
 3276              	.LFE144:
 3278              		.section	.text.HAL_USART_TxCpltCallback,"ax",%progbits
 3279              		.align	1
 3280              		.weak	HAL_USART_TxCpltCallback
 3281              		.syntax unified
 3282              		.thumb
 3283              		.thumb_func
 3284              		.fpu fpv4-sp-d16
 3286              	HAL_USART_TxCpltCallback:
 3287              	.LFB145:
1509:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1510:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1511:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Tx Transfer completed callbacks.
1512:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
1513:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1514:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
1515:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1516:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****  __weak void HAL_USART_TxCpltCallback(USART_HandleTypeDef *husart)
1517:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 3288              		.loc 1 1517 1
 3289              		.cfi_startproc
 3290              		@ args = 0, pretend = 0, frame = 8
 3291              		@ frame_needed = 1, uses_anonymous_args = 0
 3292              		@ link register save eliminated.
 3293 0000 80B4     		push	{r7}
 3294              	.LCFI102:
 3295              		.cfi_def_cfa_offset 4
 3296              		.cfi_offset 7, -4
 3297 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccIGChKB.s 			page 85


 3298              	.LCFI103:
 3299              		.cfi_def_cfa_offset 16
 3300 0004 00AF     		add	r7, sp, #0
 3301              	.LCFI104:
 3302              		.cfi_def_cfa_register 7
 3303 0006 7860     		str	r0, [r7, #4]
1518:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1519:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   UNUSED(husart);
1520:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1521:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****            the HAL_USART_TxCpltCallback could be implemented in the user file
1522:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****    */
1523:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 3304              		.loc 1 1523 1
 3305 0008 00BF     		nop
 3306 000a 0C37     		adds	r7, r7, #12
 3307              	.LCFI105:
 3308              		.cfi_def_cfa_offset 4
 3309 000c BD46     		mov	sp, r7
 3310              	.LCFI106:
 3311              		.cfi_def_cfa_register 13
 3312              		@ sp needed
 3313 000e 5DF8047B 		ldr	r7, [sp], #4
 3314              	.LCFI107:
 3315              		.cfi_restore 7
 3316              		.cfi_def_cfa_offset 0
 3317 0012 7047     		bx	lr
 3318              		.cfi_endproc
 3319              	.LFE145:
 3321              		.section	.text.HAL_USART_TxHalfCpltCallback,"ax",%progbits
 3322              		.align	1
 3323              		.weak	HAL_USART_TxHalfCpltCallback
 3324              		.syntax unified
 3325              		.thumb
 3326              		.thumb_func
 3327              		.fpu fpv4-sp-d16
 3329              	HAL_USART_TxHalfCpltCallback:
 3330              	.LFB146:
1524:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1525:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1526:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Tx Half Transfer completed callbacks.
1527:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
1528:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1529:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
1530:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1531:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****  __weak void HAL_USART_TxHalfCpltCallback(USART_HandleTypeDef *husart)
1532:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 3331              		.loc 1 1532 1
 3332              		.cfi_startproc
 3333              		@ args = 0, pretend = 0, frame = 8
 3334              		@ frame_needed = 1, uses_anonymous_args = 0
 3335              		@ link register save eliminated.
 3336 0000 80B4     		push	{r7}
 3337              	.LCFI108:
 3338              		.cfi_def_cfa_offset 4
 3339              		.cfi_offset 7, -4
 3340 0002 83B0     		sub	sp, sp, #12
 3341              	.LCFI109:
ARM GAS  /tmp/ccIGChKB.s 			page 86


 3342              		.cfi_def_cfa_offset 16
 3343 0004 00AF     		add	r7, sp, #0
 3344              	.LCFI110:
 3345              		.cfi_def_cfa_register 7
 3346 0006 7860     		str	r0, [r7, #4]
1533:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1534:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   UNUSED(husart);
1535:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1536:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****            the HAL_USART_TxCpltCallback could be implemented in the user file
1537:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****    */
1538:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 3347              		.loc 1 1538 1
 3348 0008 00BF     		nop
 3349 000a 0C37     		adds	r7, r7, #12
 3350              	.LCFI111:
 3351              		.cfi_def_cfa_offset 4
 3352 000c BD46     		mov	sp, r7
 3353              	.LCFI112:
 3354              		.cfi_def_cfa_register 13
 3355              		@ sp needed
 3356 000e 5DF8047B 		ldr	r7, [sp], #4
 3357              	.LCFI113:
 3358              		.cfi_restore 7
 3359              		.cfi_def_cfa_offset 0
 3360 0012 7047     		bx	lr
 3361              		.cfi_endproc
 3362              	.LFE146:
 3364              		.section	.text.HAL_USART_RxCpltCallback,"ax",%progbits
 3365              		.align	1
 3366              		.weak	HAL_USART_RxCpltCallback
 3367              		.syntax unified
 3368              		.thumb
 3369              		.thumb_func
 3370              		.fpu fpv4-sp-d16
 3372              	HAL_USART_RxCpltCallback:
 3373              	.LFB147:
1539:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1540:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1541:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Rx Transfer completed callbacks.
1542:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
1543:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1544:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
1545:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1546:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** __weak void HAL_USART_RxCpltCallback(USART_HandleTypeDef *husart)
1547:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 3374              		.loc 1 1547 1
 3375              		.cfi_startproc
 3376              		@ args = 0, pretend = 0, frame = 8
 3377              		@ frame_needed = 1, uses_anonymous_args = 0
 3378              		@ link register save eliminated.
 3379 0000 80B4     		push	{r7}
 3380              	.LCFI114:
 3381              		.cfi_def_cfa_offset 4
 3382              		.cfi_offset 7, -4
 3383 0002 83B0     		sub	sp, sp, #12
 3384              	.LCFI115:
 3385              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccIGChKB.s 			page 87


 3386 0004 00AF     		add	r7, sp, #0
 3387              	.LCFI116:
 3388              		.cfi_def_cfa_register 7
 3389 0006 7860     		str	r0, [r7, #4]
1548:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1549:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   UNUSED(husart);
1550:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1551:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****            the HAL_USART_TxCpltCallback could be implemented in the user file
1552:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****    */
1553:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 3390              		.loc 1 1553 1
 3391 0008 00BF     		nop
 3392 000a 0C37     		adds	r7, r7, #12
 3393              	.LCFI117:
 3394              		.cfi_def_cfa_offset 4
 3395 000c BD46     		mov	sp, r7
 3396              	.LCFI118:
 3397              		.cfi_def_cfa_register 13
 3398              		@ sp needed
 3399 000e 5DF8047B 		ldr	r7, [sp], #4
 3400              	.LCFI119:
 3401              		.cfi_restore 7
 3402              		.cfi_def_cfa_offset 0
 3403 0012 7047     		bx	lr
 3404              		.cfi_endproc
 3405              	.LFE147:
 3407              		.section	.text.HAL_USART_RxHalfCpltCallback,"ax",%progbits
 3408              		.align	1
 3409              		.weak	HAL_USART_RxHalfCpltCallback
 3410              		.syntax unified
 3411              		.thumb
 3412              		.thumb_func
 3413              		.fpu fpv4-sp-d16
 3415              	HAL_USART_RxHalfCpltCallback:
 3416              	.LFB148:
1554:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1555:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1556:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Rx Half Transfer completed callbacks.
1557:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
1558:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1559:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
1560:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1561:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** __weak void HAL_USART_RxHalfCpltCallback(USART_HandleTypeDef *husart)
1562:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 3417              		.loc 1 1562 1
 3418              		.cfi_startproc
 3419              		@ args = 0, pretend = 0, frame = 8
 3420              		@ frame_needed = 1, uses_anonymous_args = 0
 3421              		@ link register save eliminated.
 3422 0000 80B4     		push	{r7}
 3423              	.LCFI120:
 3424              		.cfi_def_cfa_offset 4
 3425              		.cfi_offset 7, -4
 3426 0002 83B0     		sub	sp, sp, #12
 3427              	.LCFI121:
 3428              		.cfi_def_cfa_offset 16
 3429 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccIGChKB.s 			page 88


 3430              	.LCFI122:
 3431              		.cfi_def_cfa_register 7
 3432 0006 7860     		str	r0, [r7, #4]
1563:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1564:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   UNUSED(husart);
1565:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1566:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****            the HAL_USART_TxCpltCallback could be implemented in the user file
1567:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****    */
1568:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 3433              		.loc 1 1568 1
 3434 0008 00BF     		nop
 3435 000a 0C37     		adds	r7, r7, #12
 3436              	.LCFI123:
 3437              		.cfi_def_cfa_offset 4
 3438 000c BD46     		mov	sp, r7
 3439              	.LCFI124:
 3440              		.cfi_def_cfa_register 13
 3441              		@ sp needed
 3442 000e 5DF8047B 		ldr	r7, [sp], #4
 3443              	.LCFI125:
 3444              		.cfi_restore 7
 3445              		.cfi_def_cfa_offset 0
 3446 0012 7047     		bx	lr
 3447              		.cfi_endproc
 3448              	.LFE148:
 3450              		.section	.text.HAL_USART_TxRxCpltCallback,"ax",%progbits
 3451              		.align	1
 3452              		.weak	HAL_USART_TxRxCpltCallback
 3453              		.syntax unified
 3454              		.thumb
 3455              		.thumb_func
 3456              		.fpu fpv4-sp-d16
 3458              	HAL_USART_TxRxCpltCallback:
 3459              	.LFB149:
1569:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1570:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1571:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Tx/Rx Transfers completed callback for the non-blocking process.
1572:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
1573:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1574:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
1575:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1576:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** __weak void HAL_USART_TxRxCpltCallback(USART_HandleTypeDef *husart)
1577:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 3460              		.loc 1 1577 1
 3461              		.cfi_startproc
 3462              		@ args = 0, pretend = 0, frame = 8
 3463              		@ frame_needed = 1, uses_anonymous_args = 0
 3464              		@ link register save eliminated.
 3465 0000 80B4     		push	{r7}
 3466              	.LCFI126:
 3467              		.cfi_def_cfa_offset 4
 3468              		.cfi_offset 7, -4
 3469 0002 83B0     		sub	sp, sp, #12
 3470              	.LCFI127:
 3471              		.cfi_def_cfa_offset 16
 3472 0004 00AF     		add	r7, sp, #0
 3473              	.LCFI128:
ARM GAS  /tmp/ccIGChKB.s 			page 89


 3474              		.cfi_def_cfa_register 7
 3475 0006 7860     		str	r0, [r7, #4]
1578:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1579:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   UNUSED(husart);
1580:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1581:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****            the HAL_USART_TxCpltCallback could be implemented in the user file
1582:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****    */
1583:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 3476              		.loc 1 1583 1
 3477 0008 00BF     		nop
 3478 000a 0C37     		adds	r7, r7, #12
 3479              	.LCFI129:
 3480              		.cfi_def_cfa_offset 4
 3481 000c BD46     		mov	sp, r7
 3482              	.LCFI130:
 3483              		.cfi_def_cfa_register 13
 3484              		@ sp needed
 3485 000e 5DF8047B 		ldr	r7, [sp], #4
 3486              	.LCFI131:
 3487              		.cfi_restore 7
 3488              		.cfi_def_cfa_offset 0
 3489 0012 7047     		bx	lr
 3490              		.cfi_endproc
 3491              	.LFE149:
 3493              		.section	.text.HAL_USART_ErrorCallback,"ax",%progbits
 3494              		.align	1
 3495              		.weak	HAL_USART_ErrorCallback
 3496              		.syntax unified
 3497              		.thumb
 3498              		.thumb_func
 3499              		.fpu fpv4-sp-d16
 3501              	HAL_USART_ErrorCallback:
 3502              	.LFB150:
1584:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1585:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1586:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  USART error callbacks.
1587:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
1588:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1589:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
1590:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1591:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****  __weak void HAL_USART_ErrorCallback(USART_HandleTypeDef *husart)
1592:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 3503              		.loc 1 1592 1
 3504              		.cfi_startproc
 3505              		@ args = 0, pretend = 0, frame = 8
 3506              		@ frame_needed = 1, uses_anonymous_args = 0
 3507              		@ link register save eliminated.
 3508 0000 80B4     		push	{r7}
 3509              	.LCFI132:
 3510              		.cfi_def_cfa_offset 4
 3511              		.cfi_offset 7, -4
 3512 0002 83B0     		sub	sp, sp, #12
 3513              	.LCFI133:
 3514              		.cfi_def_cfa_offset 16
 3515 0004 00AF     		add	r7, sp, #0
 3516              	.LCFI134:
 3517              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccIGChKB.s 			page 90


 3518 0006 7860     		str	r0, [r7, #4]
1593:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1594:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   UNUSED(husart);
1595:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1596:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****            the HAL_USART_ErrorCallback could be implemented in the user file
1597:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****    */
1598:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 3519              		.loc 1 1598 1
 3520 0008 00BF     		nop
 3521 000a 0C37     		adds	r7, r7, #12
 3522              	.LCFI135:
 3523              		.cfi_def_cfa_offset 4
 3524 000c BD46     		mov	sp, r7
 3525              	.LCFI136:
 3526              		.cfi_def_cfa_register 13
 3527              		@ sp needed
 3528 000e 5DF8047B 		ldr	r7, [sp], #4
 3529              	.LCFI137:
 3530              		.cfi_restore 7
 3531              		.cfi_def_cfa_offset 0
 3532 0012 7047     		bx	lr
 3533              		.cfi_endproc
 3534              	.LFE150:
 3536              		.section	.text.HAL_USART_AbortCpltCallback,"ax",%progbits
 3537              		.align	1
 3538              		.weak	HAL_USART_AbortCpltCallback
 3539              		.syntax unified
 3540              		.thumb
 3541              		.thumb_func
 3542              		.fpu fpv4-sp-d16
 3544              	HAL_USART_AbortCpltCallback:
 3545              	.LFB151:
1599:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1600:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1601:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  USART Abort Complete callback.
1602:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart USART handle.
1603:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
1604:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1605:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** __weak void HAL_USART_AbortCpltCallback (USART_HandleTypeDef *husart)
1606:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 3546              		.loc 1 1606 1
 3547              		.cfi_startproc
 3548              		@ args = 0, pretend = 0, frame = 8
 3549              		@ frame_needed = 1, uses_anonymous_args = 0
 3550              		@ link register save eliminated.
 3551 0000 80B4     		push	{r7}
 3552              	.LCFI138:
 3553              		.cfi_def_cfa_offset 4
 3554              		.cfi_offset 7, -4
 3555 0002 83B0     		sub	sp, sp, #12
 3556              	.LCFI139:
 3557              		.cfi_def_cfa_offset 16
 3558 0004 00AF     		add	r7, sp, #0
 3559              	.LCFI140:
 3560              		.cfi_def_cfa_register 7
 3561 0006 7860     		str	r0, [r7, #4]
1607:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccIGChKB.s 			page 91


1608:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   UNUSED(husart);
1609:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1610:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1611:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             the HAL_USART_AbortCpltCallback can be implemented in the user file.
1612:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****    */
1613:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 3562              		.loc 1 1613 1
 3563 0008 00BF     		nop
 3564 000a 0C37     		adds	r7, r7, #12
 3565              	.LCFI141:
 3566              		.cfi_def_cfa_offset 4
 3567 000c BD46     		mov	sp, r7
 3568              	.LCFI142:
 3569              		.cfi_def_cfa_register 13
 3570              		@ sp needed
 3571 000e 5DF8047B 		ldr	r7, [sp], #4
 3572              	.LCFI143:
 3573              		.cfi_restore 7
 3574              		.cfi_def_cfa_offset 0
 3575 0012 7047     		bx	lr
 3576              		.cfi_endproc
 3577              	.LFE151:
 3579              		.section	.text.HAL_USART_GetState,"ax",%progbits
 3580              		.align	1
 3581              		.global	HAL_USART_GetState
 3582              		.syntax unified
 3583              		.thumb
 3584              		.thumb_func
 3585              		.fpu fpv4-sp-d16
 3587              	HAL_USART_GetState:
 3588              	.LFB152:
1614:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1615:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1616:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @}
1617:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1618:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1619:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /** @defgroup USART_Exported_Functions_Group3 Peripheral State and Errors functions
1620:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *  @brief   USART State and Errors functions
1621:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *
1622:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** @verbatim
1623:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   ==============================================================================
1624:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****                   ##### Peripheral State and Errors functions #####
1625:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   ==============================================================================
1626:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   [..]
1627:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     This subsection provides a set of functions allowing to return the State of
1628:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     USART communication
1629:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     process, return Peripheral Errors occurred during communication process
1630:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      (+) HAL_USART_GetState() API can be helpful to check in run-time the state
1631:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****          of the USART peripheral.
1632:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      (+) HAL_USART_GetError() check in run-time errors that could be occurred during
1633:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****          communication.
1634:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** @endverbatim
1635:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @{
1636:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1637:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1638:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1639:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Returns the USART state.
ARM GAS  /tmp/ccIGChKB.s 			page 92


1640:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
1641:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1642:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL state
1643:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1644:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** HAL_USART_StateTypeDef HAL_USART_GetState(USART_HandleTypeDef *husart)
1645:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 3589              		.loc 1 1645 1
 3590              		.cfi_startproc
 3591              		@ args = 0, pretend = 0, frame = 8
 3592              		@ frame_needed = 1, uses_anonymous_args = 0
 3593              		@ link register save eliminated.
 3594 0000 80B4     		push	{r7}
 3595              	.LCFI144:
 3596              		.cfi_def_cfa_offset 4
 3597              		.cfi_offset 7, -4
 3598 0002 83B0     		sub	sp, sp, #12
 3599              	.LCFI145:
 3600              		.cfi_def_cfa_offset 16
 3601 0004 00AF     		add	r7, sp, #0
 3602              	.LCFI146:
 3603              		.cfi_def_cfa_register 7
 3604 0006 7860     		str	r0, [r7, #4]
1646:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   return husart->State;
 3605              		.loc 1 1646 16
 3606 0008 7B68     		ldr	r3, [r7, #4]
 3607 000a 93F83D30 		ldrb	r3, [r3, #61]
 3608 000e DBB2     		uxtb	r3, r3
1647:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 3609              		.loc 1 1647 1
 3610 0010 1846     		mov	r0, r3
 3611 0012 0C37     		adds	r7, r7, #12
 3612              	.LCFI147:
 3613              		.cfi_def_cfa_offset 4
 3614 0014 BD46     		mov	sp, r7
 3615              	.LCFI148:
 3616              		.cfi_def_cfa_register 13
 3617              		@ sp needed
 3618 0016 5DF8047B 		ldr	r7, [sp], #4
 3619              	.LCFI149:
 3620              		.cfi_restore 7
 3621              		.cfi_def_cfa_offset 0
 3622 001a 7047     		bx	lr
 3623              		.cfi_endproc
 3624              	.LFE152:
 3626              		.section	.text.HAL_USART_GetError,"ax",%progbits
 3627              		.align	1
 3628              		.global	HAL_USART_GetError
 3629              		.syntax unified
 3630              		.thumb
 3631              		.thumb_func
 3632              		.fpu fpv4-sp-d16
 3634              	HAL_USART_GetError:
 3635              	.LFB153:
1648:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1649:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1650:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Return the USART error code
1651:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart  pointer to a USART_HandleTypeDef structure that contains
ARM GAS  /tmp/ccIGChKB.s 			page 93


1652:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *              the configuration information for the specified USART.
1653:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval USART Error Code
1654:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1655:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** uint32_t HAL_USART_GetError(USART_HandleTypeDef *husart)
1656:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 3636              		.loc 1 1656 1
 3637              		.cfi_startproc
 3638              		@ args = 0, pretend = 0, frame = 8
 3639              		@ frame_needed = 1, uses_anonymous_args = 0
 3640              		@ link register save eliminated.
 3641 0000 80B4     		push	{r7}
 3642              	.LCFI150:
 3643              		.cfi_def_cfa_offset 4
 3644              		.cfi_offset 7, -4
 3645 0002 83B0     		sub	sp, sp, #12
 3646              	.LCFI151:
 3647              		.cfi_def_cfa_offset 16
 3648 0004 00AF     		add	r7, sp, #0
 3649              	.LCFI152:
 3650              		.cfi_def_cfa_register 7
 3651 0006 7860     		str	r0, [r7, #4]
1657:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   return husart->ErrorCode;
 3652              		.loc 1 1657 16
 3653 0008 7B68     		ldr	r3, [r7, #4]
 3654 000a 1B6C     		ldr	r3, [r3, #64]
1658:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 3655              		.loc 1 1658 1
 3656 000c 1846     		mov	r0, r3
 3657 000e 0C37     		adds	r7, r7, #12
 3658              	.LCFI153:
 3659              		.cfi_def_cfa_offset 4
 3660 0010 BD46     		mov	sp, r7
 3661              	.LCFI154:
 3662              		.cfi_def_cfa_register 13
 3663              		@ sp needed
 3664 0012 5DF8047B 		ldr	r7, [sp], #4
 3665              	.LCFI155:
 3666              		.cfi_restore 7
 3667              		.cfi_def_cfa_offset 0
 3668 0016 7047     		bx	lr
 3669              		.cfi_endproc
 3670              	.LFE153:
 3672              		.section	.text.USART_DMATransmitCplt,"ax",%progbits
 3673              		.align	1
 3674              		.syntax unified
 3675              		.thumb
 3676              		.thumb_func
 3677              		.fpu fpv4-sp-d16
 3679              	USART_DMATransmitCplt:
 3680              	.LFB154:
1659:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1660:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1661:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @}
1662:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1663:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1664:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1665:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  DMA USART transmit process complete callback.
ARM GAS  /tmp/ccIGChKB.s 			page 94


1666:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  hdma DMA handle
1667:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
1668:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1669:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1670:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 3681              		.loc 1 1670 1
 3682              		.cfi_startproc
 3683              		@ args = 0, pretend = 0, frame = 16
 3684              		@ frame_needed = 1, uses_anonymous_args = 0
 3685 0000 80B5     		push	{r7, lr}
 3686              	.LCFI156:
 3687              		.cfi_def_cfa_offset 8
 3688              		.cfi_offset 7, -8
 3689              		.cfi_offset 14, -4
 3690 0002 84B0     		sub	sp, sp, #16
 3691              	.LCFI157:
 3692              		.cfi_def_cfa_offset 24
 3693 0004 00AF     		add	r7, sp, #0
 3694              	.LCFI158:
 3695              		.cfi_def_cfa_register 7
 3696 0006 7860     		str	r0, [r7, #4]
1671:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   USART_HandleTypeDef* husart = ( USART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3697              		.loc 1 1671 24
 3698 0008 7B68     		ldr	r3, [r7, #4]
 3699 000a 9B6B     		ldr	r3, [r3, #56]
 3700 000c FB60     		str	r3, [r7, #12]
1672:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* DMA Normal mode */
1673:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 3701              		.loc 1 1673 11
 3702 000e 7B68     		ldr	r3, [r7, #4]
 3703 0010 1B68     		ldr	r3, [r3]
 3704              		.loc 1 1673 21
 3705 0012 1B68     		ldr	r3, [r3]
 3706              		.loc 1 1673 26
 3707 0014 03F48073 		and	r3, r3, #256
 3708              		.loc 1 1673 5
 3709 0018 002B     		cmp	r3, #0
 3710 001a 19D1     		bne	.L164
1674:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1675:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->TxXferCount = 0U;
 3711              		.loc 1 1675 25
 3712 001c FB68     		ldr	r3, [r7, #12]
 3713 001e 0022     		movs	r2, #0
 3714 0020 5A85     		strh	r2, [r3, #42]	@ movhi
1676:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->State == HAL_USART_STATE_BUSY_TX)
 3715              		.loc 1 1676 14
 3716 0022 FB68     		ldr	r3, [r7, #12]
 3717 0024 93F83D30 		ldrb	r3, [r3, #61]
 3718 0028 DBB2     		uxtb	r3, r3
 3719              		.loc 1 1676 7
 3720 002a 122B     		cmp	r3, #18
 3721 002c 19D1     		bne	.L166
1677:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1678:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       /* Disable the DMA transfer for transmit request by resetting the DMAT bit
1679:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****          in the USART CR3 register */
1680:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 3722              		.loc 1 1680 7
ARM GAS  /tmp/ccIGChKB.s 			page 95


 3723 002e FB68     		ldr	r3, [r7, #12]
 3724 0030 1B68     		ldr	r3, [r3]
 3725 0032 5A69     		ldr	r2, [r3, #20]
 3726 0034 FB68     		ldr	r3, [r7, #12]
 3727 0036 1B68     		ldr	r3, [r3]
 3728 0038 22F08002 		bic	r2, r2, #128
 3729 003c 5A61     		str	r2, [r3, #20]
1681:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1682:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       /* Enable the USART Transmit Complete Interrupt */
1683:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       SET_BIT(husart->Instance->CR1, USART_CR1_TCIE);
 3730              		.loc 1 1683 7
 3731 003e FB68     		ldr	r3, [r7, #12]
 3732 0040 1B68     		ldr	r3, [r3]
 3733 0042 DA68     		ldr	r2, [r3, #12]
 3734 0044 FB68     		ldr	r3, [r7, #12]
 3735 0046 1B68     		ldr	r3, [r3]
 3736 0048 42F04002 		orr	r2, r2, #64
 3737 004c DA60     		str	r2, [r3, #12]
1684:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1685:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1686:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* DMA Circular mode */
1687:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   else
1688:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1689:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->State == HAL_USART_STATE_BUSY_TX)
1690:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1691:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       HAL_USART_TxCpltCallback(husart);
1692:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1693:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1694:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 3738              		.loc 1 1694 1
 3739 004e 08E0     		b	.L166
 3740              	.L164:
1689:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 3741              		.loc 1 1689 14
 3742 0050 FB68     		ldr	r3, [r7, #12]
 3743 0052 93F83D30 		ldrb	r3, [r3, #61]
 3744 0056 DBB2     		uxtb	r3, r3
1689:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 3745              		.loc 1 1689 7
 3746 0058 122B     		cmp	r3, #18
 3747 005a 02D1     		bne	.L166
1691:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 3748              		.loc 1 1691 7
 3749 005c F868     		ldr	r0, [r7, #12]
 3750 005e FFF7FEFF 		bl	HAL_USART_TxCpltCallback
 3751              	.L166:
 3752              		.loc 1 1694 1
 3753 0062 00BF     		nop
 3754 0064 1037     		adds	r7, r7, #16
 3755              	.LCFI159:
 3756              		.cfi_def_cfa_offset 8
 3757 0066 BD46     		mov	sp, r7
 3758              	.LCFI160:
 3759              		.cfi_def_cfa_register 13
 3760              		@ sp needed
 3761 0068 80BD     		pop	{r7, pc}
 3762              		.cfi_endproc
ARM GAS  /tmp/ccIGChKB.s 			page 96


 3763              	.LFE154:
 3765              		.section	.text.USART_DMATxHalfCplt,"ax",%progbits
 3766              		.align	1
 3767              		.syntax unified
 3768              		.thumb
 3769              		.thumb_func
 3770              		.fpu fpv4-sp-d16
 3772              	USART_DMATxHalfCplt:
 3773              	.LFB155:
1695:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1696:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1697:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief DMA USART transmit process half complete callback
1698:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1699:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified DMA module.
1700:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
1701:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1702:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
1703:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 3774              		.loc 1 1703 1
 3775              		.cfi_startproc
 3776              		@ args = 0, pretend = 0, frame = 16
 3777              		@ frame_needed = 1, uses_anonymous_args = 0
 3778 0000 80B5     		push	{r7, lr}
 3779              	.LCFI161:
 3780              		.cfi_def_cfa_offset 8
 3781              		.cfi_offset 7, -8
 3782              		.cfi_offset 14, -4
 3783 0002 84B0     		sub	sp, sp, #16
 3784              	.LCFI162:
 3785              		.cfi_def_cfa_offset 24
 3786 0004 00AF     		add	r7, sp, #0
 3787              	.LCFI163:
 3788              		.cfi_def_cfa_register 7
 3789 0006 7860     		str	r0, [r7, #4]
1704:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   USART_HandleTypeDef* husart = (USART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 3790              		.loc 1 1704 24
 3791 0008 7B68     		ldr	r3, [r7, #4]
 3792 000a 9B6B     		ldr	r3, [r3, #56]
 3793 000c FB60     		str	r3, [r7, #12]
1705:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1706:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   HAL_USART_TxHalfCpltCallback(husart);
 3794              		.loc 1 1706 3
 3795 000e F868     		ldr	r0, [r7, #12]
 3796 0010 FFF7FEFF 		bl	HAL_USART_TxHalfCpltCallback
1707:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 3797              		.loc 1 1707 1
 3798 0014 00BF     		nop
 3799 0016 1037     		adds	r7, r7, #16
 3800              	.LCFI164:
 3801              		.cfi_def_cfa_offset 8
 3802 0018 BD46     		mov	sp, r7
 3803              	.LCFI165:
 3804              		.cfi_def_cfa_register 13
 3805              		@ sp needed
 3806 001a 80BD     		pop	{r7, pc}
 3807              		.cfi_endproc
 3808              	.LFE155:
ARM GAS  /tmp/ccIGChKB.s 			page 97


 3810              		.section	.text.USART_DMAReceiveCplt,"ax",%progbits
 3811              		.align	1
 3812              		.syntax unified
 3813              		.thumb
 3814              		.thumb_func
 3815              		.fpu fpv4-sp-d16
 3817              	USART_DMAReceiveCplt:
 3818              	.LFB156:
1708:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1709:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1710:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  DMA USART receive process complete callback.
1711:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  hdma DMA handle
1712:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
1713:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1714:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
1715:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 3819              		.loc 1 1715 1
 3820              		.cfi_startproc
 3821              		@ args = 0, pretend = 0, frame = 16
 3822              		@ frame_needed = 1, uses_anonymous_args = 0
 3823 0000 80B5     		push	{r7, lr}
 3824              	.LCFI166:
 3825              		.cfi_def_cfa_offset 8
 3826              		.cfi_offset 7, -8
 3827              		.cfi_offset 14, -4
 3828 0002 84B0     		sub	sp, sp, #16
 3829              	.LCFI167:
 3830              		.cfi_def_cfa_offset 24
 3831 0004 00AF     		add	r7, sp, #0
 3832              	.LCFI168:
 3833              		.cfi_def_cfa_register 7
 3834 0006 7860     		str	r0, [r7, #4]
1716:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   USART_HandleTypeDef* husart = ( USART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3835              		.loc 1 1716 24
 3836 0008 7B68     		ldr	r3, [r7, #4]
 3837 000a 9B6B     		ldr	r3, [r3, #56]
 3838 000c FB60     		str	r3, [r7, #12]
1717:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* DMA Normal mode */
1718:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 3839              		.loc 1 1718 11
 3840 000e 7B68     		ldr	r3, [r7, #4]
 3841 0010 1B68     		ldr	r3, [r3]
 3842              		.loc 1 1718 21
 3843 0012 1B68     		ldr	r3, [r3]
 3844              		.loc 1 1718 26
 3845 0014 03F48073 		and	r3, r3, #256
 3846              		.loc 1 1718 5
 3847 0018 002B     		cmp	r3, #0
 3848 001a 34D1     		bne	.L169
1719:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1720:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->RxXferCount = 0x00U;
 3849              		.loc 1 1720 25
 3850 001c FB68     		ldr	r3, [r7, #12]
 3851 001e 0022     		movs	r2, #0
 3852 0020 5A86     		strh	r2, [r3, #50]	@ movhi
1721:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1722:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
ARM GAS  /tmp/ccIGChKB.s 			page 98


1723:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR1, USART_CR1_PEIE);
 3853              		.loc 1 1723 5
 3854 0022 FB68     		ldr	r3, [r7, #12]
 3855 0024 1B68     		ldr	r3, [r3]
 3856 0026 DA68     		ldr	r2, [r3, #12]
 3857 0028 FB68     		ldr	r3, [r7, #12]
 3858 002a 1B68     		ldr	r3, [r3]
 3859 002c 22F48072 		bic	r2, r2, #256
 3860 0030 DA60     		str	r2, [r3, #12]
1724:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
 3861              		.loc 1 1724 5
 3862 0032 FB68     		ldr	r3, [r7, #12]
 3863 0034 1B68     		ldr	r3, [r3]
 3864 0036 5A69     		ldr	r2, [r3, #20]
 3865 0038 FB68     		ldr	r3, [r7, #12]
 3866 003a 1B68     		ldr	r3, [r3]
 3867 003c 22F00102 		bic	r2, r2, #1
 3868 0040 5A61     		str	r2, [r3, #20]
1725:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1726:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Disable the DMA transfer for the Transmit/receiver request by clearing the DMAT/DMAR bit
1727:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****        in the USART CR3 register */
1728:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAR);
 3869              		.loc 1 1728 5
 3870 0042 FB68     		ldr	r3, [r7, #12]
 3871 0044 1B68     		ldr	r3, [r3]
 3872 0046 5A69     		ldr	r2, [r3, #20]
 3873 0048 FB68     		ldr	r3, [r7, #12]
 3874 004a 1B68     		ldr	r3, [r3]
 3875 004c 22F04002 		bic	r2, r2, #64
 3876 0050 5A61     		str	r2, [r3, #20]
1729:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 3877              		.loc 1 1729 5
 3878 0052 FB68     		ldr	r3, [r7, #12]
 3879 0054 1B68     		ldr	r3, [r3]
 3880 0056 5A69     		ldr	r2, [r3, #20]
 3881 0058 FB68     		ldr	r3, [r7, #12]
 3882 005a 1B68     		ldr	r3, [r3]
 3883 005c 22F08002 		bic	r2, r2, #128
 3884 0060 5A61     		str	r2, [r3, #20]
1730:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1731:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->State= HAL_USART_STATE_READY;
 3885              		.loc 1 1731 18
 3886 0062 FB68     		ldr	r3, [r7, #12]
 3887 0064 0122     		movs	r2, #1
 3888 0066 83F83D20 		strb	r2, [r3, #61]
1732:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1733:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* The USART state is HAL_USART_STATE_BUSY_RX */
1734:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->State == HAL_USART_STATE_BUSY_RX)
 3889              		.loc 1 1734 14
 3890 006a FB68     		ldr	r3, [r7, #12]
 3891 006c 93F83D30 		ldrb	r3, [r3, #61]
 3892 0070 DBB2     		uxtb	r3, r3
 3893              		.loc 1 1734 7
 3894 0072 222B     		cmp	r3, #34
 3895 0074 03D1     		bne	.L170
1735:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1736:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       HAL_USART_RxCpltCallback(husart);
ARM GAS  /tmp/ccIGChKB.s 			page 99


 3896              		.loc 1 1736 7
 3897 0076 F868     		ldr	r0, [r7, #12]
 3898 0078 FFF7FEFF 		bl	HAL_USART_RxCpltCallback
1737:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1738:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* The USART state is HAL_USART_STATE_BUSY_TX_RX */
1739:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     else
1740:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1741:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       HAL_USART_TxRxCpltCallback(husart);
1742:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1743:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1744:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* DMA circular mode */
1745:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   else
1746:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1747:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->State == HAL_USART_STATE_BUSY_RX)
1748:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1749:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       HAL_USART_RxCpltCallback(husart);
1750:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1751:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* The USART state is HAL_USART_STATE_BUSY_TX_RX */
1752:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     else
1753:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1754:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       HAL_USART_TxRxCpltCallback(husart);
1755:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1756:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1757:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 3899              		.loc 1 1757 1
 3900 007c 10E0     		b	.L173
 3901              	.L170:
1741:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 3902              		.loc 1 1741 7
 3903 007e F868     		ldr	r0, [r7, #12]
 3904 0080 FFF7FEFF 		bl	HAL_USART_TxRxCpltCallback
 3905              		.loc 1 1757 1
 3906 0084 0CE0     		b	.L173
 3907              	.L169:
1747:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 3908              		.loc 1 1747 14
 3909 0086 FB68     		ldr	r3, [r7, #12]
 3910 0088 93F83D30 		ldrb	r3, [r3, #61]
 3911 008c DBB2     		uxtb	r3, r3
1747:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
 3912              		.loc 1 1747 7
 3913 008e 222B     		cmp	r3, #34
 3914 0090 03D1     		bne	.L172
1749:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 3915              		.loc 1 1749 7
 3916 0092 F868     		ldr	r0, [r7, #12]
 3917 0094 FFF7FEFF 		bl	HAL_USART_RxCpltCallback
 3918              		.loc 1 1757 1
 3919 0098 02E0     		b	.L173
 3920              	.L172:
1754:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 3921              		.loc 1 1754 7
 3922 009a F868     		ldr	r0, [r7, #12]
 3923 009c FFF7FEFF 		bl	HAL_USART_TxRxCpltCallback
 3924              	.L173:
 3925              		.loc 1 1757 1
 3926 00a0 00BF     		nop
ARM GAS  /tmp/ccIGChKB.s 			page 100


 3927 00a2 1037     		adds	r7, r7, #16
 3928              	.LCFI169:
 3929              		.cfi_def_cfa_offset 8
 3930 00a4 BD46     		mov	sp, r7
 3931              	.LCFI170:
 3932              		.cfi_def_cfa_register 13
 3933              		@ sp needed
 3934 00a6 80BD     		pop	{r7, pc}
 3935              		.cfi_endproc
 3936              	.LFE156:
 3938              		.section	.text.USART_DMARxHalfCplt,"ax",%progbits
 3939              		.align	1
 3940              		.syntax unified
 3941              		.thumb
 3942              		.thumb_func
 3943              		.fpu fpv4-sp-d16
 3945              	USART_DMARxHalfCplt:
 3946              	.LFB157:
1758:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1759:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1760:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief DMA USART receive process half complete callback
1761:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1762:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified DMA module.
1763:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
1764:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1765:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
1766:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 3947              		.loc 1 1766 1
 3948              		.cfi_startproc
 3949              		@ args = 0, pretend = 0, frame = 16
 3950              		@ frame_needed = 1, uses_anonymous_args = 0
 3951 0000 80B5     		push	{r7, lr}
 3952              	.LCFI171:
 3953              		.cfi_def_cfa_offset 8
 3954              		.cfi_offset 7, -8
 3955              		.cfi_offset 14, -4
 3956 0002 84B0     		sub	sp, sp, #16
 3957              	.LCFI172:
 3958              		.cfi_def_cfa_offset 24
 3959 0004 00AF     		add	r7, sp, #0
 3960              	.LCFI173:
 3961              		.cfi_def_cfa_register 7
 3962 0006 7860     		str	r0, [r7, #4]
1767:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   USART_HandleTypeDef* husart = (USART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 3963              		.loc 1 1767 24
 3964 0008 7B68     		ldr	r3, [r7, #4]
 3965 000a 9B6B     		ldr	r3, [r3, #56]
 3966 000c FB60     		str	r3, [r7, #12]
1768:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1769:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   HAL_USART_RxHalfCpltCallback(husart);
 3967              		.loc 1 1769 3
 3968 000e F868     		ldr	r0, [r7, #12]
 3969 0010 FFF7FEFF 		bl	HAL_USART_RxHalfCpltCallback
1770:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 3970              		.loc 1 1770 1
 3971 0014 00BF     		nop
 3972 0016 1037     		adds	r7, r7, #16
ARM GAS  /tmp/ccIGChKB.s 			page 101


 3973              	.LCFI174:
 3974              		.cfi_def_cfa_offset 8
 3975 0018 BD46     		mov	sp, r7
 3976              	.LCFI175:
 3977              		.cfi_def_cfa_register 13
 3978              		@ sp needed
 3979 001a 80BD     		pop	{r7, pc}
 3980              		.cfi_endproc
 3981              	.LFE157:
 3983              		.section	.text.USART_DMAError,"ax",%progbits
 3984              		.align	1
 3985              		.syntax unified
 3986              		.thumb
 3987              		.thumb_func
 3988              		.fpu fpv4-sp-d16
 3990              	USART_DMAError:
 3991              	.LFB158:
1771:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1772:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1773:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  DMA USART communication error callback.
1774:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  hdma DMA handle
1775:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
1776:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1777:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_DMAError(DMA_HandleTypeDef *hdma)
1778:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 3992              		.loc 1 1778 1
 3993              		.cfi_startproc
 3994              		@ args = 0, pretend = 0, frame = 16
 3995              		@ frame_needed = 1, uses_anonymous_args = 0
 3996 0000 80B5     		push	{r7, lr}
 3997              	.LCFI176:
 3998              		.cfi_def_cfa_offset 8
 3999              		.cfi_offset 7, -8
 4000              		.cfi_offset 14, -4
 4001 0002 84B0     		sub	sp, sp, #16
 4002              	.LCFI177:
 4003              		.cfi_def_cfa_offset 24
 4004 0004 00AF     		add	r7, sp, #0
 4005              	.LCFI178:
 4006              		.cfi_def_cfa_register 7
 4007 0006 7860     		str	r0, [r7, #4]
1779:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint32_t dmarequest = 0x00U;
 4008              		.loc 1 1779 12
 4009 0008 0023     		movs	r3, #0
 4010 000a FB60     		str	r3, [r7, #12]
1780:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   USART_HandleTypeDef* husart = ( USART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4011              		.loc 1 1780 24
 4012 000c 7B68     		ldr	r3, [r7, #4]
 4013 000e 9B6B     		ldr	r3, [r3, #56]
 4014 0010 BB60     		str	r3, [r7, #8]
1781:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->RxXferCount = 0x00U;
 4015              		.loc 1 1781 23
 4016 0012 BB68     		ldr	r3, [r7, #8]
 4017 0014 0022     		movs	r2, #0
 4018 0016 5A86     		strh	r2, [r3, #50]	@ movhi
1782:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->TxXferCount = 0x00U;
 4019              		.loc 1 1782 23
ARM GAS  /tmp/ccIGChKB.s 			page 102


 4020 0018 BB68     		ldr	r3, [r7, #8]
 4021 001a 0022     		movs	r2, #0
 4022 001c 5A85     		strh	r2, [r3, #42]	@ movhi
1783:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1784:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Stop USART DMA Tx request if ongoing */
1785:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   dmarequest = HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAT);
 4023              		.loc 1 1785 16
 4024 001e BB68     		ldr	r3, [r7, #8]
 4025 0020 1B68     		ldr	r3, [r3]
 4026 0022 5B69     		ldr	r3, [r3, #20]
 4027 0024 03F08003 		and	r3, r3, #128
 4028 0028 002B     		cmp	r3, #0
 4029 002a 14BF     		ite	ne
 4030 002c 0123     		movne	r3, #1
 4031 002e 0023     		moveq	r3, #0
 4032 0030 DBB2     		uxtb	r3, r3
 4033              		.loc 1 1785 14
 4034 0032 FB60     		str	r3, [r7, #12]
1786:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if((husart->State == HAL_USART_STATE_BUSY_TX) && dmarequest)
 4035              		.loc 1 1786 13
 4036 0034 BB68     		ldr	r3, [r7, #8]
 4037 0036 93F83D30 		ldrb	r3, [r3, #61]
 4038 003a DBB2     		uxtb	r3, r3
 4039              		.loc 1 1786 5
 4040 003c 122B     		cmp	r3, #18
 4041 003e 05D1     		bne	.L176
 4042              		.loc 1 1786 49 discriminator 1
 4043 0040 FB68     		ldr	r3, [r7, #12]
 4044 0042 002B     		cmp	r3, #0
 4045 0044 02D0     		beq	.L176
1787:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1788:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     USART_EndTxTransfer(husart);
 4046              		.loc 1 1788 5
 4047 0046 B868     		ldr	r0, [r7, #8]
 4048 0048 FFF7FEFF 		bl	USART_EndTxTransfer
 4049              	.L176:
1789:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1790:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1791:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Stop USART DMA Rx request if ongoing */
1792:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   dmarequest = HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR);
 4050              		.loc 1 1792 16
 4051 004c BB68     		ldr	r3, [r7, #8]
 4052 004e 1B68     		ldr	r3, [r3]
 4053 0050 5B69     		ldr	r3, [r3, #20]
 4054 0052 03F04003 		and	r3, r3, #64
 4055 0056 002B     		cmp	r3, #0
 4056 0058 14BF     		ite	ne
 4057 005a 0123     		movne	r3, #1
 4058 005c 0023     		moveq	r3, #0
 4059 005e DBB2     		uxtb	r3, r3
 4060              		.loc 1 1792 14
 4061 0060 FB60     		str	r3, [r7, #12]
1793:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if((husart->State == HAL_USART_STATE_BUSY_RX) && dmarequest)
 4062              		.loc 1 1793 13
 4063 0062 BB68     		ldr	r3, [r7, #8]
 4064 0064 93F83D30 		ldrb	r3, [r3, #61]
 4065 0068 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccIGChKB.s 			page 103


 4066              		.loc 1 1793 5
 4067 006a 222B     		cmp	r3, #34
 4068 006c 05D1     		bne	.L177
 4069              		.loc 1 1793 49 discriminator 1
 4070 006e FB68     		ldr	r3, [r7, #12]
 4071 0070 002B     		cmp	r3, #0
 4072 0072 02D0     		beq	.L177
1794:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1795:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     USART_EndRxTransfer(husart);
 4073              		.loc 1 1795 5
 4074 0074 B868     		ldr	r0, [r7, #8]
 4075 0076 FFF7FEFF 		bl	USART_EndRxTransfer
 4076              	.L177:
1796:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1797:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1798:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->ErrorCode |= HAL_USART_ERROR_DMA;
 4077              		.loc 1 1798 21
 4078 007a BB68     		ldr	r3, [r7, #8]
 4079 007c 1B6C     		ldr	r3, [r3, #64]
 4080 007e 43F01002 		orr	r2, r3, #16
 4081 0082 BB68     		ldr	r3, [r7, #8]
 4082 0084 1A64     		str	r2, [r3, #64]
1799:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->State= HAL_USART_STATE_READY;
 4083              		.loc 1 1799 16
 4084 0086 BB68     		ldr	r3, [r7, #8]
 4085 0088 0122     		movs	r2, #1
 4086 008a 83F83D20 		strb	r2, [r3, #61]
1800:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1801:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   HAL_USART_ErrorCallback(husart);
 4087              		.loc 1 1801 3
 4088 008e B868     		ldr	r0, [r7, #8]
 4089 0090 FFF7FEFF 		bl	HAL_USART_ErrorCallback
1802:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 4090              		.loc 1 1802 1
 4091 0094 00BF     		nop
 4092 0096 1037     		adds	r7, r7, #16
 4093              	.LCFI179:
 4094              		.cfi_def_cfa_offset 8
 4095 0098 BD46     		mov	sp, r7
 4096              	.LCFI180:
 4097              		.cfi_def_cfa_register 13
 4098              		@ sp needed
 4099 009a 80BD     		pop	{r7, pc}
 4100              		.cfi_endproc
 4101              	.LFE158:
 4103              		.section	.text.USART_WaitOnFlagUntilTimeout,"ax",%progbits
 4104              		.align	1
 4105              		.syntax unified
 4106              		.thumb
 4107              		.thumb_func
 4108              		.fpu fpv4-sp-d16
 4110              	USART_WaitOnFlagUntilTimeout:
 4111              	.LFB159:
1803:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1804:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1805:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  This function handles USART Communication Timeout.
1806:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
ARM GAS  /tmp/ccIGChKB.s 			page 104


1807:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                 the configuration information for the specified USART module.
1808:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  Flag specifies the USART flag to check.
1809:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  Status The new Flag status (SET or RESET).
1810:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  Tickstart Tick start value.
1811:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  Timeout Timeout duration.
1812:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
1813:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1814:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static HAL_StatusTypeDef USART_WaitOnFlagUntilTimeout(USART_HandleTypeDef *husart, uint32_t Flag, F
1815:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 4112              		.loc 1 1815 1
 4113              		.cfi_startproc
 4114              		@ args = 4, pretend = 0, frame = 16
 4115              		@ frame_needed = 1, uses_anonymous_args = 0
 4116 0000 80B5     		push	{r7, lr}
 4117              	.LCFI181:
 4118              		.cfi_def_cfa_offset 8
 4119              		.cfi_offset 7, -8
 4120              		.cfi_offset 14, -4
 4121 0002 84B0     		sub	sp, sp, #16
 4122              	.LCFI182:
 4123              		.cfi_def_cfa_offset 24
 4124 0004 00AF     		add	r7, sp, #0
 4125              	.LCFI183:
 4126              		.cfi_def_cfa_register 7
 4127 0006 F860     		str	r0, [r7, #12]
 4128 0008 B960     		str	r1, [r7, #8]
 4129 000a 3B60     		str	r3, [r7]
 4130 000c 1346     		mov	r3, r2
 4131 000e FB71     		strb	r3, [r7, #7]
1816:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Wait until flag is set */
1817:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   while((__HAL_USART_GET_FLAG(husart, Flag) ? SET : RESET) == Status)
 4132              		.loc 1 1817 8
 4133 0010 38E0     		b	.L179
 4134              	.L182:
1818:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1819:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Check for the Timeout */
1820:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(Timeout != HAL_MAX_DELAY)
 4135              		.loc 1 1820 7
 4136 0012 BB69     		ldr	r3, [r7, #24]
 4137 0014 B3F1FF3F 		cmp	r3, #-1
 4138 0018 34D0     		beq	.L179
1821:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1822:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
 4139              		.loc 1 1822 9
 4140 001a BB69     		ldr	r3, [r7, #24]
 4141 001c 002B     		cmp	r3, #0
 4142 001e 07D0     		beq	.L180
 4143              		.loc 1 1822 29 discriminator 1
 4144 0020 FFF7FEFF 		bl	HAL_GetTick
 4145 0024 0246     		mov	r2, r0
 4146              		.loc 1 1822 43 discriminator 1
 4147 0026 3B68     		ldr	r3, [r7]
 4148 0028 D31A     		subs	r3, r2, r3
 4149              		.loc 1 1822 25 discriminator 1
 4150 002a BA69     		ldr	r2, [r7, #24]
 4151 002c 9A42     		cmp	r2, r3
 4152 002e 29D2     		bcs	.L179
ARM GAS  /tmp/ccIGChKB.s 			page 105


 4153              	.L180:
1823:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
1824:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Disable the USART Transmit Complete Interrupt */
1825:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         CLEAR_BIT(husart->Instance->CR1, USART_CR1_TXEIE);
 4154              		.loc 1 1825 9
 4155 0030 FB68     		ldr	r3, [r7, #12]
 4156 0032 1B68     		ldr	r3, [r3]
 4157 0034 DA68     		ldr	r2, [r3, #12]
 4158 0036 FB68     		ldr	r3, [r7, #12]
 4159 0038 1B68     		ldr	r3, [r3]
 4160 003a 22F08002 		bic	r2, r2, #128
 4161 003e DA60     		str	r2, [r3, #12]
1826:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1827:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Disable the USART RXNE Interrupt */
1828:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         CLEAR_BIT(husart->Instance->CR1, USART_CR1_RXNEIE);
 4162              		.loc 1 1828 9
 4163 0040 FB68     		ldr	r3, [r7, #12]
 4164 0042 1B68     		ldr	r3, [r3]
 4165 0044 DA68     		ldr	r2, [r3, #12]
 4166 0046 FB68     		ldr	r3, [r7, #12]
 4167 0048 1B68     		ldr	r3, [r3]
 4168 004a 22F02002 		bic	r2, r2, #32
 4169 004e DA60     		str	r2, [r3, #12]
1829:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1830:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Disable the USART Parity Error Interrupt */
1831:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         CLEAR_BIT(husart->Instance->CR1, USART_CR1_PEIE);
 4170              		.loc 1 1831 9
 4171 0050 FB68     		ldr	r3, [r7, #12]
 4172 0052 1B68     		ldr	r3, [r3]
 4173 0054 DA68     		ldr	r2, [r3, #12]
 4174 0056 FB68     		ldr	r3, [r7, #12]
 4175 0058 1B68     		ldr	r3, [r3]
 4176 005a 22F48072 		bic	r2, r2, #256
 4177 005e DA60     		str	r2, [r3, #12]
1832:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1833:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Disable the USART Error Interrupt: (Frame error, noise error, overrun error) */
1834:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
 4178              		.loc 1 1834 9
 4179 0060 FB68     		ldr	r3, [r7, #12]
 4180 0062 1B68     		ldr	r3, [r3]
 4181 0064 5A69     		ldr	r2, [r3, #20]
 4182 0066 FB68     		ldr	r3, [r7, #12]
 4183 0068 1B68     		ldr	r3, [r3]
 4184 006a 22F00102 		bic	r2, r2, #1
 4185 006e 5A61     		str	r2, [r3, #20]
1835:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1836:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         husart->State= HAL_USART_STATE_READY;
 4186              		.loc 1 1836 22
 4187 0070 FB68     		ldr	r3, [r7, #12]
 4188 0072 0122     		movs	r2, #1
 4189 0074 83F83D20 		strb	r2, [r3, #61]
1837:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1838:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Process Unlocked */
1839:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         __HAL_UNLOCK(husart);
 4190              		.loc 1 1839 9
 4191 0078 FB68     		ldr	r3, [r7, #12]
 4192 007a 0022     		movs	r2, #0
ARM GAS  /tmp/ccIGChKB.s 			page 106


 4193 007c 83F83C20 		strb	r2, [r3, #60]
1840:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1841:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         return HAL_TIMEOUT;
 4194              		.loc 1 1841 16
 4195 0080 0323     		movs	r3, #3
 4196 0082 0FE0     		b	.L181
 4197              	.L179:
1817:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 4198              		.loc 1 1817 10
 4199 0084 FB68     		ldr	r3, [r7, #12]
 4200 0086 1B68     		ldr	r3, [r3]
 4201 0088 1A68     		ldr	r2, [r3]
 4202 008a BB68     		ldr	r3, [r7, #8]
 4203 008c 1340     		ands	r3, r3, r2
1817:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 4204              		.loc 1 1817 51
 4205 008e BA68     		ldr	r2, [r7, #8]
 4206 0090 9A42     		cmp	r2, r3
 4207 0092 0CBF     		ite	eq
 4208 0094 0123     		moveq	r3, #1
 4209 0096 0023     		movne	r3, #0
 4210 0098 DBB2     		uxtb	r3, r3
 4211 009a 1A46     		mov	r2, r3
1817:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 4212              		.loc 1 1817 60
 4213 009c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1817:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
 4214              		.loc 1 1817 8
 4215 009e 9A42     		cmp	r2, r3
 4216 00a0 B7D0     		beq	.L182
1842:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
1843:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1844:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1845:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   return HAL_OK;
 4217              		.loc 1 1845 10
 4218 00a2 0023     		movs	r3, #0
 4219              	.L181:
1846:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 4220              		.loc 1 1846 1
 4221 00a4 1846     		mov	r0, r3
 4222 00a6 1037     		adds	r7, r7, #16
 4223              	.LCFI184:
 4224              		.cfi_def_cfa_offset 8
 4225 00a8 BD46     		mov	sp, r7
 4226              	.LCFI185:
 4227              		.cfi_def_cfa_register 13
 4228              		@ sp needed
 4229 00aa 80BD     		pop	{r7, pc}
 4230              		.cfi_endproc
 4231              	.LFE159:
 4233              		.section	.text.USART_EndTxTransfer,"ax",%progbits
 4234              		.align	1
 4235              		.syntax unified
 4236              		.thumb
 4237              		.thumb_func
 4238              		.fpu fpv4-sp-d16
 4240              	USART_EndTxTransfer:
ARM GAS  /tmp/ccIGChKB.s 			page 107


 4241              	.LFB160:
1847:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1848:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1849:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  End ongoing Tx transfer on USART peripheral (following error detection or Transmit comp
1850:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart USART handle.
1851:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
1852:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1853:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_EndTxTransfer(USART_HandleTypeDef *husart)
1854:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 4242              		.loc 1 1854 1
 4243              		.cfi_startproc
 4244              		@ args = 0, pretend = 0, frame = 8
 4245              		@ frame_needed = 1, uses_anonymous_args = 0
 4246              		@ link register save eliminated.
 4247 0000 80B4     		push	{r7}
 4248              	.LCFI186:
 4249              		.cfi_def_cfa_offset 4
 4250              		.cfi_offset 7, -4
 4251 0002 83B0     		sub	sp, sp, #12
 4252              	.LCFI187:
 4253              		.cfi_def_cfa_offset 16
 4254 0004 00AF     		add	r7, sp, #0
 4255              	.LCFI188:
 4256              		.cfi_def_cfa_register 7
 4257 0006 7860     		str	r0, [r7, #4]
1855:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Disable TXEIE and TCIE interrupts */
1856:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 4258              		.loc 1 1856 3
 4259 0008 7B68     		ldr	r3, [r7, #4]
 4260 000a 1B68     		ldr	r3, [r3]
 4261 000c DA68     		ldr	r2, [r3, #12]
 4262 000e 7B68     		ldr	r3, [r7, #4]
 4263 0010 1B68     		ldr	r3, [r3]
 4264 0012 22F0C002 		bic	r2, r2, #192
 4265 0016 DA60     		str	r2, [r3, #12]
1857:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1858:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* At end of Tx process, restore husart->State to Ready */
1859:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->State = HAL_USART_STATE_READY;
 4266              		.loc 1 1859 17
 4267 0018 7B68     		ldr	r3, [r7, #4]
 4268 001a 0122     		movs	r2, #1
 4269 001c 83F83D20 		strb	r2, [r3, #61]
1860:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 4270              		.loc 1 1860 1
 4271 0020 00BF     		nop
 4272 0022 0C37     		adds	r7, r7, #12
 4273              	.LCFI189:
 4274              		.cfi_def_cfa_offset 4
 4275 0024 BD46     		mov	sp, r7
 4276              	.LCFI190:
 4277              		.cfi_def_cfa_register 13
 4278              		@ sp needed
 4279 0026 5DF8047B 		ldr	r7, [sp], #4
 4280              	.LCFI191:
 4281              		.cfi_restore 7
 4282              		.cfi_def_cfa_offset 0
 4283 002a 7047     		bx	lr
ARM GAS  /tmp/ccIGChKB.s 			page 108


 4284              		.cfi_endproc
 4285              	.LFE160:
 4287              		.section	.text.USART_EndRxTransfer,"ax",%progbits
 4288              		.align	1
 4289              		.syntax unified
 4290              		.thumb
 4291              		.thumb_func
 4292              		.fpu fpv4-sp-d16
 4294              	USART_EndRxTransfer:
 4295              	.LFB161:
1861:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1862:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1863:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  End ongoing Rx transfer on USART peripheral (following error detection or Reception com
1864:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart USART handle.
1865:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
1866:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1867:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_EndRxTransfer(USART_HandleTypeDef *husart)
1868:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 4296              		.loc 1 1868 1
 4297              		.cfi_startproc
 4298              		@ args = 0, pretend = 0, frame = 8
 4299              		@ frame_needed = 1, uses_anonymous_args = 0
 4300              		@ link register save eliminated.
 4301 0000 80B4     		push	{r7}
 4302              	.LCFI192:
 4303              		.cfi_def_cfa_offset 4
 4304              		.cfi_offset 7, -4
 4305 0002 83B0     		sub	sp, sp, #12
 4306              	.LCFI193:
 4307              		.cfi_def_cfa_offset 16
 4308 0004 00AF     		add	r7, sp, #0
 4309              	.LCFI194:
 4310              		.cfi_def_cfa_register 7
 4311 0006 7860     		str	r0, [r7, #4]
1869:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Disable RXNE, PE and ERR interrupts */
1870:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4312              		.loc 1 1870 3
 4313 0008 7B68     		ldr	r3, [r7, #4]
 4314 000a 1B68     		ldr	r3, [r3]
 4315 000c DA68     		ldr	r2, [r3, #12]
 4316 000e 7B68     		ldr	r3, [r7, #4]
 4317 0010 1B68     		ldr	r3, [r3]
 4318 0012 22F49072 		bic	r2, r2, #288
 4319 0016 DA60     		str	r2, [r3, #12]
1871:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
 4320              		.loc 1 1871 3
 4321 0018 7B68     		ldr	r3, [r7, #4]
 4322 001a 1B68     		ldr	r3, [r3]
 4323 001c 5A69     		ldr	r2, [r3, #20]
 4324 001e 7B68     		ldr	r3, [r7, #4]
 4325 0020 1B68     		ldr	r3, [r3]
 4326 0022 22F00102 		bic	r2, r2, #1
 4327 0026 5A61     		str	r2, [r3, #20]
1872:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1873:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* At end of Rx process, restore husart->State to Ready */
1874:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->State = HAL_USART_STATE_READY;
 4328              		.loc 1 1874 17
ARM GAS  /tmp/ccIGChKB.s 			page 109


 4329 0028 7B68     		ldr	r3, [r7, #4]
 4330 002a 0122     		movs	r2, #1
 4331 002c 83F83D20 		strb	r2, [r3, #61]
1875:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 4332              		.loc 1 1875 1
 4333 0030 00BF     		nop
 4334 0032 0C37     		adds	r7, r7, #12
 4335              	.LCFI195:
 4336              		.cfi_def_cfa_offset 4
 4337 0034 BD46     		mov	sp, r7
 4338              	.LCFI196:
 4339              		.cfi_def_cfa_register 13
 4340              		@ sp needed
 4341 0036 5DF8047B 		ldr	r7, [sp], #4
 4342              	.LCFI197:
 4343              		.cfi_restore 7
 4344              		.cfi_def_cfa_offset 0
 4345 003a 7047     		bx	lr
 4346              		.cfi_endproc
 4347              	.LFE161:
 4349              		.section	.text.USART_DMAAbortOnError,"ax",%progbits
 4350              		.align	1
 4351              		.syntax unified
 4352              		.thumb
 4353              		.thumb_func
 4354              		.fpu fpv4-sp-d16
 4356              	USART_DMAAbortOnError:
 4357              	.LFB162:
1876:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1877:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1878:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  DMA USART communication abort callback, when initiated by HAL services on Error
1879:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
1880:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  hdma DMA handle.
1881:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
1882:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1883:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
1884:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 4358              		.loc 1 1884 1
 4359              		.cfi_startproc
 4360              		@ args = 0, pretend = 0, frame = 16
 4361              		@ frame_needed = 1, uses_anonymous_args = 0
 4362 0000 80B5     		push	{r7, lr}
 4363              	.LCFI198:
 4364              		.cfi_def_cfa_offset 8
 4365              		.cfi_offset 7, -8
 4366              		.cfi_offset 14, -4
 4367 0002 84B0     		sub	sp, sp, #16
 4368              	.LCFI199:
 4369              		.cfi_def_cfa_offset 24
 4370 0004 00AF     		add	r7, sp, #0
 4371              	.LCFI200:
 4372              		.cfi_def_cfa_register 7
 4373 0006 7860     		str	r0, [r7, #4]
1885:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   USART_HandleTypeDef* husart = ( USART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4374              		.loc 1 1885 24
 4375 0008 7B68     		ldr	r3, [r7, #4]
 4376 000a 9B6B     		ldr	r3, [r3, #56]
ARM GAS  /tmp/ccIGChKB.s 			page 110


 4377 000c FB60     		str	r3, [r7, #12]
1886:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->RxXferCount = 0x00U;
 4378              		.loc 1 1886 23
 4379 000e FB68     		ldr	r3, [r7, #12]
 4380 0010 0022     		movs	r2, #0
 4381 0012 5A86     		strh	r2, [r3, #50]	@ movhi
1887:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->TxXferCount = 0x00U;
 4382              		.loc 1 1887 23
 4383 0014 FB68     		ldr	r3, [r7, #12]
 4384 0016 0022     		movs	r2, #0
 4385 0018 5A85     		strh	r2, [r3, #42]	@ movhi
1888:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1889:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   HAL_USART_ErrorCallback(husart);
 4386              		.loc 1 1889 3
 4387 001a F868     		ldr	r0, [r7, #12]
 4388 001c FFF7FEFF 		bl	HAL_USART_ErrorCallback
1890:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 4389              		.loc 1 1890 1
 4390 0020 00BF     		nop
 4391 0022 1037     		adds	r7, r7, #16
 4392              	.LCFI201:
 4393              		.cfi_def_cfa_offset 8
 4394 0024 BD46     		mov	sp, r7
 4395              	.LCFI202:
 4396              		.cfi_def_cfa_register 13
 4397              		@ sp needed
 4398 0026 80BD     		pop	{r7, pc}
 4399              		.cfi_endproc
 4400              	.LFE162:
 4402              		.section	.text.USART_DMATxAbortCallback,"ax",%progbits
 4403              		.align	1
 4404              		.syntax unified
 4405              		.thumb
 4406              		.thumb_func
 4407              		.fpu fpv4-sp-d16
 4409              	USART_DMATxAbortCallback:
 4410              	.LFB163:
1891:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1892:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1893:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  DMA USART Tx communication abort callback, when initiated by user
1894:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
1895:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
1896:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *         Abort still ongoing for Rx DMA Handle.
1897:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  hdma DMA handle.
1898:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
1899:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1900:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
1901:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 4411              		.loc 1 1901 1
 4412              		.cfi_startproc
 4413              		@ args = 0, pretend = 0, frame = 16
 4414              		@ frame_needed = 1, uses_anonymous_args = 0
 4415 0000 80B5     		push	{r7, lr}
 4416              	.LCFI203:
 4417              		.cfi_def_cfa_offset 8
 4418              		.cfi_offset 7, -8
 4419              		.cfi_offset 14, -4
ARM GAS  /tmp/ccIGChKB.s 			page 111


 4420 0002 84B0     		sub	sp, sp, #16
 4421              	.LCFI204:
 4422              		.cfi_def_cfa_offset 24
 4423 0004 00AF     		add	r7, sp, #0
 4424              	.LCFI205:
 4425              		.cfi_def_cfa_register 7
 4426 0006 7860     		str	r0, [r7, #4]
1902:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   USART_HandleTypeDef* husart = ( USART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4427              		.loc 1 1902 24
 4428 0008 7B68     		ldr	r3, [r7, #4]
 4429 000a 9B6B     		ldr	r3, [r3, #56]
 4430 000c FB60     		str	r3, [r7, #12]
1903:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   
1904:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->hdmatx->XferAbortCallback = NULL;
 4431              		.loc 1 1904 9
 4432 000e FB68     		ldr	r3, [r7, #12]
 4433 0010 5B6B     		ldr	r3, [r3, #52]
 4434              		.loc 1 1904 37
 4435 0012 0022     		movs	r2, #0
 4436 0014 1A65     		str	r2, [r3, #80]
1905:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1906:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Check if an Abort process is still ongoing */
1907:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart->hdmarx != NULL)
 4437              		.loc 1 1907 12
 4438 0016 FB68     		ldr	r3, [r7, #12]
 4439 0018 9B6B     		ldr	r3, [r3, #56]
 4440              		.loc 1 1907 5
 4441 001a 002B     		cmp	r3, #0
 4442 001c 04D0     		beq	.L187
1908:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1909:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->hdmarx->XferAbortCallback != NULL)
 4443              		.loc 1 1909 14
 4444 001e FB68     		ldr	r3, [r7, #12]
 4445 0020 9B6B     		ldr	r3, [r3, #56]
 4446              		.loc 1 1909 22
 4447 0022 1B6D     		ldr	r3, [r3, #80]
 4448              		.loc 1 1909 7
 4449 0024 002B     		cmp	r3, #0
 4450 0026 10D1     		bne	.L189
 4451              	.L187:
1910:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1911:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       return;
1912:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1913:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1914:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   
1915:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
1916:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->TxXferCount = 0x00U;
 4452              		.loc 1 1916 23
 4453 0028 FB68     		ldr	r3, [r7, #12]
 4454 002a 0022     		movs	r2, #0
 4455 002c 5A85     		strh	r2, [r3, #42]	@ movhi
1917:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->RxXferCount = 0x00U;
 4456              		.loc 1 1917 23
 4457 002e FB68     		ldr	r3, [r7, #12]
 4458 0030 0022     		movs	r2, #0
 4459 0032 5A86     		strh	r2, [r3, #50]	@ movhi
1918:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
ARM GAS  /tmp/ccIGChKB.s 			page 112


1919:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Reset errorCode */
1920:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->ErrorCode = HAL_USART_ERROR_NONE;
 4460              		.loc 1 1920 21
 4461 0034 FB68     		ldr	r3, [r7, #12]
 4462 0036 0022     		movs	r2, #0
 4463 0038 1A64     		str	r2, [r3, #64]
1921:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1922:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Restore husart->State to Ready */
1923:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->State  = HAL_USART_STATE_READY;
 4464              		.loc 1 1923 18
 4465 003a FB68     		ldr	r3, [r7, #12]
 4466 003c 0122     		movs	r2, #1
 4467 003e 83F83D20 		strb	r2, [r3, #61]
1924:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1925:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Call user Abort complete callback */
1926:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   HAL_USART_AbortCpltCallback(husart);
 4468              		.loc 1 1926 3
 4469 0042 F868     		ldr	r0, [r7, #12]
 4470 0044 FFF7FEFF 		bl	HAL_USART_AbortCpltCallback
 4471 0048 00E0     		b	.L186
 4472              	.L189:
1911:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 4473              		.loc 1 1911 7
 4474 004a 00BF     		nop
 4475              	.L186:
1927:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 4476              		.loc 1 1927 1
 4477 004c 1037     		adds	r7, r7, #16
 4478              	.LCFI206:
 4479              		.cfi_def_cfa_offset 8
 4480 004e BD46     		mov	sp, r7
 4481              	.LCFI207:
 4482              		.cfi_def_cfa_register 13
 4483              		@ sp needed
 4484 0050 80BD     		pop	{r7, pc}
 4485              		.cfi_endproc
 4486              	.LFE163:
 4488              		.section	.text.USART_DMARxAbortCallback,"ax",%progbits
 4489              		.align	1
 4490              		.syntax unified
 4491              		.thumb
 4492              		.thumb_func
 4493              		.fpu fpv4-sp-d16
 4495              	USART_DMARxAbortCallback:
 4496              	.LFB164:
1928:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1929:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1930:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  DMA USART Rx communication abort callback, when initiated by user
1931:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
1932:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
1933:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *         Abort still ongoing for Tx DMA Handle.
1934:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  hdma DMA handle.
1935:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
1936:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1937:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
1938:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 4497              		.loc 1 1938 1
ARM GAS  /tmp/ccIGChKB.s 			page 113


 4498              		.cfi_startproc
 4499              		@ args = 0, pretend = 0, frame = 16
 4500              		@ frame_needed = 1, uses_anonymous_args = 0
 4501 0000 80B5     		push	{r7, lr}
 4502              	.LCFI208:
 4503              		.cfi_def_cfa_offset 8
 4504              		.cfi_offset 7, -8
 4505              		.cfi_offset 14, -4
 4506 0002 84B0     		sub	sp, sp, #16
 4507              	.LCFI209:
 4508              		.cfi_def_cfa_offset 24
 4509 0004 00AF     		add	r7, sp, #0
 4510              	.LCFI210:
 4511              		.cfi_def_cfa_register 7
 4512 0006 7860     		str	r0, [r7, #4]
1939:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   USART_HandleTypeDef* husart = ( USART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4513              		.loc 1 1939 24
 4514 0008 7B68     		ldr	r3, [r7, #4]
 4515 000a 9B6B     		ldr	r3, [r3, #56]
 4516 000c FB60     		str	r3, [r7, #12]
1940:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   
1941:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->hdmarx->XferAbortCallback = NULL;
 4517              		.loc 1 1941 9
 4518 000e FB68     		ldr	r3, [r7, #12]
 4519 0010 9B6B     		ldr	r3, [r3, #56]
 4520              		.loc 1 1941 37
 4521 0012 0022     		movs	r2, #0
 4522 0014 1A65     		str	r2, [r3, #80]
1942:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1943:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Check if an Abort process is still ongoing */
1944:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart->hdmatx != NULL)
 4523              		.loc 1 1944 12
 4524 0016 FB68     		ldr	r3, [r7, #12]
 4525 0018 5B6B     		ldr	r3, [r3, #52]
 4526              		.loc 1 1944 5
 4527 001a 002B     		cmp	r3, #0
 4528 001c 04D0     		beq	.L191
1945:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1946:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->hdmatx->XferAbortCallback != NULL)
 4529              		.loc 1 1946 14
 4530 001e FB68     		ldr	r3, [r7, #12]
 4531 0020 5B6B     		ldr	r3, [r3, #52]
 4532              		.loc 1 1946 22
 4533 0022 1B6D     		ldr	r3, [r3, #80]
 4534              		.loc 1 1946 7
 4535 0024 002B     		cmp	r3, #0
 4536 0026 10D1     		bne	.L193
 4537              	.L191:
1947:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1948:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       return;
1949:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1950:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
1951:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   
1952:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
1953:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->TxXferCount = 0x00U;
 4538              		.loc 1 1953 23
 4539 0028 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccIGChKB.s 			page 114


 4540 002a 0022     		movs	r2, #0
 4541 002c 5A85     		strh	r2, [r3, #42]	@ movhi
1954:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->RxXferCount = 0x00U;
 4542              		.loc 1 1954 23
 4543 002e FB68     		ldr	r3, [r7, #12]
 4544 0030 0022     		movs	r2, #0
 4545 0032 5A86     		strh	r2, [r3, #50]	@ movhi
1955:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1956:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Reset errorCode */
1957:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->ErrorCode = HAL_USART_ERROR_NONE;
 4546              		.loc 1 1957 21
 4547 0034 FB68     		ldr	r3, [r7, #12]
 4548 0036 0022     		movs	r2, #0
 4549 0038 1A64     		str	r2, [r3, #64]
1958:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1959:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Restore husart->State to Ready */
1960:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->State  = HAL_USART_STATE_READY;
 4550              		.loc 1 1960 18
 4551 003a FB68     		ldr	r3, [r7, #12]
 4552 003c 0122     		movs	r2, #1
 4553 003e 83F83D20 		strb	r2, [r3, #61]
1961:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1962:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Call user Abort complete callback */
1963:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   HAL_USART_AbortCpltCallback(husart);
 4554              		.loc 1 1963 3
 4555 0042 F868     		ldr	r0, [r7, #12]
 4556 0044 FFF7FEFF 		bl	HAL_USART_AbortCpltCallback
 4557 0048 00E0     		b	.L190
 4558              	.L193:
1948:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
 4559              		.loc 1 1948 7
 4560 004a 00BF     		nop
 4561              	.L190:
1964:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 4562              		.loc 1 1964 1
 4563 004c 1037     		adds	r7, r7, #16
 4564              	.LCFI211:
 4565              		.cfi_def_cfa_offset 8
 4566 004e BD46     		mov	sp, r7
 4567              	.LCFI212:
 4568              		.cfi_def_cfa_register 13
 4569              		@ sp needed
 4570 0050 80BD     		pop	{r7, pc}
 4571              		.cfi_endproc
 4572              	.LFE164:
 4574              		.section	.text.USART_Transmit_IT,"ax",%progbits
 4575              		.align	1
 4576              		.syntax unified
 4577              		.thumb
 4578              		.thumb_func
 4579              		.fpu fpv4-sp-d16
 4581              	USART_Transmit_IT:
 4582              	.LFB165:
1965:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1966:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
1967:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Simplex Send an amount of data in non-blocking mode.
1968:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
ARM GAS  /tmp/ccIGChKB.s 			page 115


1969:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1970:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
1971:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @note   The USART errors are not managed to avoid the overrun error.
1972:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
1973:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static HAL_StatusTypeDef USART_Transmit_IT(USART_HandleTypeDef *husart)
1974:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 4583              		.loc 1 1974 1
 4584              		.cfi_startproc
 4585              		@ args = 0, pretend = 0, frame = 16
 4586              		@ frame_needed = 1, uses_anonymous_args = 0
 4587              		@ link register save eliminated.
 4588 0000 80B4     		push	{r7}
 4589              	.LCFI213:
 4590              		.cfi_def_cfa_offset 4
 4591              		.cfi_offset 7, -4
 4592 0002 85B0     		sub	sp, sp, #20
 4593              	.LCFI214:
 4594              		.cfi_def_cfa_offset 24
 4595 0004 00AF     		add	r7, sp, #0
 4596              	.LCFI215:
 4597              		.cfi_def_cfa_register 7
 4598 0006 7860     		str	r0, [r7, #4]
1975:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint16_t* tmp;
1976:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1977:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_BUSY_TX)
 4599              		.loc 1 1977 12
 4600 0008 7B68     		ldr	r3, [r7, #4]
 4601 000a 93F83D30 		ldrb	r3, [r3, #61]
 4602 000e DBB2     		uxtb	r3, r3
 4603              		.loc 1 1977 5
 4604 0010 122B     		cmp	r3, #18
 4605 0012 44D1     		bne	.L195
1978:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
1979:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->Init.WordLength == USART_WORDLENGTH_9B)
 4606              		.loc 1 1979 20
 4607 0014 7B68     		ldr	r3, [r7, #4]
 4608 0016 9B68     		ldr	r3, [r3, #8]
 4609              		.loc 1 1979 7
 4610 0018 B3F5805F 		cmp	r3, #4096
 4611 001c 1AD1     		bne	.L196
1980:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1981:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       tmp = (uint16_t*) husart->pTxBuffPtr;
 4612              		.loc 1 1981 11
 4613 001e 7B68     		ldr	r3, [r7, #4]
 4614 0020 5B6A     		ldr	r3, [r3, #36]
 4615 0022 FB60     		str	r3, [r7, #12]
1982:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       husart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 4616              		.loc 1 1982 41
 4617 0024 FB68     		ldr	r3, [r7, #12]
 4618 0026 1B88     		ldrh	r3, [r3]
 4619              		.loc 1 1982 30
 4620 0028 1A46     		mov	r2, r3
 4621              		.loc 1 1982 13
 4622 002a 7B68     		ldr	r3, [r7, #4]
 4623 002c 1B68     		ldr	r3, [r3]
 4624              		.loc 1 1982 30
 4625 002e C2F30802 		ubfx	r2, r2, #0, #9
ARM GAS  /tmp/ccIGChKB.s 			page 116


 4626              		.loc 1 1982 28
 4627 0032 5A60     		str	r2, [r3, #4]
1983:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       if(husart->Init.Parity == USART_PARITY_NONE)
 4628              		.loc 1 1983 22
 4629 0034 7B68     		ldr	r3, [r7, #4]
 4630 0036 1B69     		ldr	r3, [r3, #16]
 4631              		.loc 1 1983 9
 4632 0038 002B     		cmp	r3, #0
 4633 003a 05D1     		bne	.L197
1984:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
1985:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         husart->pTxBuffPtr += 2U;
 4634              		.loc 1 1985 28
 4635 003c 7B68     		ldr	r3, [r7, #4]
 4636 003e 5B6A     		ldr	r3, [r3, #36]
 4637 0040 9A1C     		adds	r2, r3, #2
 4638 0042 7B68     		ldr	r3, [r7, #4]
 4639 0044 5A62     		str	r2, [r3, #36]
 4640 0046 0EE0     		b	.L198
 4641              	.L197:
1986:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
1987:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       else
1988:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
1989:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         husart->pTxBuffPtr += 1U;
 4642              		.loc 1 1989 28
 4643 0048 7B68     		ldr	r3, [r7, #4]
 4644 004a 5B6A     		ldr	r3, [r3, #36]
 4645 004c 5A1C     		adds	r2, r3, #1
 4646 004e 7B68     		ldr	r3, [r7, #4]
 4647 0050 5A62     		str	r2, [r3, #36]
 4648 0052 08E0     		b	.L198
 4649              	.L196:
1990:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
1991:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1992:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     else
1993:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1994:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       husart->Instance->DR = (uint8_t)(*husart->pTxBuffPtr++ & (uint8_t)0x00FF);
 4650              		.loc 1 1994 47
 4651 0054 7B68     		ldr	r3, [r7, #4]
 4652 0056 5B6A     		ldr	r3, [r3, #36]
 4653              		.loc 1 1994 59
 4654 0058 591C     		adds	r1, r3, #1
 4655 005a 7A68     		ldr	r2, [r7, #4]
 4656 005c 5162     		str	r1, [r2, #36]
 4657              		.loc 1 1994 40
 4658 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4659              		.loc 1 1994 13
 4660 0060 7B68     		ldr	r3, [r7, #4]
 4661 0062 1B68     		ldr	r3, [r3]
 4662              		.loc 1 1994 28
 4663 0064 5A60     		str	r2, [r3, #4]
 4664              	.L198:
1995:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
1996:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
1997:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(--husart->TxXferCount == 0U)
 4665              		.loc 1 1997 16
 4666 0066 7B68     		ldr	r3, [r7, #4]
 4667 0068 5B8D     		ldrh	r3, [r3, #42]	@ movhi
ARM GAS  /tmp/ccIGChKB.s 			page 117


 4668 006a 9BB2     		uxth	r3, r3
 4669              		.loc 1 1997 8
 4670 006c 013B     		subs	r3, r3, #1
 4671 006e 9BB2     		uxth	r3, r3
 4672              		.loc 1 1997 7
 4673 0070 7A68     		ldr	r2, [r7, #4]
 4674 0072 1946     		mov	r1, r3	@ movhi
 4675 0074 5185     		strh	r1, [r2, #42]	@ movhi
 4676 0076 002B     		cmp	r3, #0
 4677 0078 0FD1     		bne	.L199
1998:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
1999:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       /* Disable the USART Transmit data register empty Interrupt */
2000:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR1, USART_CR1_TXEIE);
 4678              		.loc 1 2000 7
 4679 007a 7B68     		ldr	r3, [r7, #4]
 4680 007c 1B68     		ldr	r3, [r3]
 4681 007e DA68     		ldr	r2, [r3, #12]
 4682 0080 7B68     		ldr	r3, [r7, #4]
 4683 0082 1B68     		ldr	r3, [r3]
 4684 0084 22F08002 		bic	r2, r2, #128
 4685 0088 DA60     		str	r2, [r3, #12]
2001:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2002:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       /* Enable the USART Transmit Complete Interrupt */
2003:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       SET_BIT(husart->Instance->CR1, USART_CR1_TCIE);
 4686              		.loc 1 2003 7
 4687 008a 7B68     		ldr	r3, [r7, #4]
 4688 008c 1B68     		ldr	r3, [r3]
 4689 008e DA68     		ldr	r2, [r3, #12]
 4690 0090 7B68     		ldr	r3, [r7, #4]
 4691 0092 1B68     		ldr	r3, [r3]
 4692 0094 42F04002 		orr	r2, r2, #64
 4693 0098 DA60     		str	r2, [r3, #12]
 4694              	.L199:
2004:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
2005:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_OK;
 4695              		.loc 1 2005 12
 4696 009a 0023     		movs	r3, #0
 4697 009c 00E0     		b	.L200
 4698              	.L195:
2006:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
2007:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   else
2008:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
2009:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_BUSY;
 4699              		.loc 1 2009 12
 4700 009e 0223     		movs	r3, #2
 4701              	.L200:
2010:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
2011:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 4702              		.loc 1 2011 1
 4703 00a0 1846     		mov	r0, r3
 4704 00a2 1437     		adds	r7, r7, #20
 4705              	.LCFI216:
 4706              		.cfi_def_cfa_offset 4
 4707 00a4 BD46     		mov	sp, r7
 4708              	.LCFI217:
 4709              		.cfi_def_cfa_register 13
 4710              		@ sp needed
ARM GAS  /tmp/ccIGChKB.s 			page 118


 4711 00a6 5DF8047B 		ldr	r7, [sp], #4
 4712              	.LCFI218:
 4713              		.cfi_restore 7
 4714              		.cfi_def_cfa_offset 0
 4715 00aa 7047     		bx	lr
 4716              		.cfi_endproc
 4717              	.LFE165:
 4719              		.section	.text.USART_EndTransmit_IT,"ax",%progbits
 4720              		.align	1
 4721              		.syntax unified
 4722              		.thumb
 4723              		.thumb_func
 4724              		.fpu fpv4-sp-d16
 4726              	USART_EndTransmit_IT:
 4727              	.LFB166:
2012:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2013:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
2014:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Wraps up transmission in non blocking mode.
2015:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
2016:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
2017:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
2018:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
2019:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static HAL_StatusTypeDef USART_EndTransmit_IT(USART_HandleTypeDef *husart)
2020:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 4728              		.loc 1 2020 1
 4729              		.cfi_startproc
 4730              		@ args = 0, pretend = 0, frame = 8
 4731              		@ frame_needed = 1, uses_anonymous_args = 0
 4732 0000 80B5     		push	{r7, lr}
 4733              	.LCFI219:
 4734              		.cfi_def_cfa_offset 8
 4735              		.cfi_offset 7, -8
 4736              		.cfi_offset 14, -4
 4737 0002 82B0     		sub	sp, sp, #8
 4738              	.LCFI220:
 4739              		.cfi_def_cfa_offset 16
 4740 0004 00AF     		add	r7, sp, #0
 4741              	.LCFI221:
 4742              		.cfi_def_cfa_register 7
 4743 0006 7860     		str	r0, [r7, #4]
2021:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Disable the USART Transmit Complete Interrupt */
2022:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR1, USART_CR1_TCIE);
 4744              		.loc 1 2022 3
 4745 0008 7B68     		ldr	r3, [r7, #4]
 4746 000a 1B68     		ldr	r3, [r3]
 4747 000c DA68     		ldr	r2, [r3, #12]
 4748 000e 7B68     		ldr	r3, [r7, #4]
 4749 0010 1B68     		ldr	r3, [r3]
 4750 0012 22F04002 		bic	r2, r2, #64
 4751 0016 DA60     		str	r2, [r3, #12]
2023:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2024:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Disable the USART Error Interrupt: (Frame error, noise error, overrun error) */
2025:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
 4752              		.loc 1 2025 3
 4753 0018 7B68     		ldr	r3, [r7, #4]
 4754 001a 1B68     		ldr	r3, [r3]
 4755 001c 5A69     		ldr	r2, [r3, #20]
ARM GAS  /tmp/ccIGChKB.s 			page 119


 4756 001e 7B68     		ldr	r3, [r7, #4]
 4757 0020 1B68     		ldr	r3, [r3]
 4758 0022 22F00102 		bic	r2, r2, #1
 4759 0026 5A61     		str	r2, [r3, #20]
2026:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2027:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   husart->State = HAL_USART_STATE_READY;
 4760              		.loc 1 2027 17
 4761 0028 7B68     		ldr	r3, [r7, #4]
 4762 002a 0122     		movs	r2, #1
 4763 002c 83F83D20 		strb	r2, [r3, #61]
2028:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2029:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   HAL_USART_TxCpltCallback(husart);
 4764              		.loc 1 2029 3
 4765 0030 7868     		ldr	r0, [r7, #4]
 4766 0032 FFF7FEFF 		bl	HAL_USART_TxCpltCallback
2030:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2031:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   return HAL_OK;
 4767              		.loc 1 2031 10
 4768 0036 0023     		movs	r3, #0
2032:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 4769              		.loc 1 2032 1
 4770 0038 1846     		mov	r0, r3
 4771 003a 0837     		adds	r7, r7, #8
 4772              	.LCFI222:
 4773              		.cfi_def_cfa_offset 8
 4774 003c BD46     		mov	sp, r7
 4775              	.LCFI223:
 4776              		.cfi_def_cfa_register 13
 4777              		@ sp needed
 4778 003e 80BD     		pop	{r7, pc}
 4779              		.cfi_endproc
 4780              	.LFE166:
 4782              		.section	.text.USART_Receive_IT,"ax",%progbits
 4783              		.align	1
 4784              		.syntax unified
 4785              		.thumb
 4786              		.thumb_func
 4787              		.fpu fpv4-sp-d16
 4789              	USART_Receive_IT:
 4790              	.LFB167:
2033:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2034:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
2035:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Simplex Receive an amount of data in non-blocking mode.
2036:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
2037:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
2038:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
2039:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
2040:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static HAL_StatusTypeDef USART_Receive_IT(USART_HandleTypeDef *husart)
2041:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 4791              		.loc 1 2041 1
 4792              		.cfi_startproc
 4793              		@ args = 0, pretend = 0, frame = 16
 4794              		@ frame_needed = 1, uses_anonymous_args = 0
 4795 0000 80B5     		push	{r7, lr}
 4796              	.LCFI224:
 4797              		.cfi_def_cfa_offset 8
 4798              		.cfi_offset 7, -8
ARM GAS  /tmp/ccIGChKB.s 			page 120


 4799              		.cfi_offset 14, -4
 4800 0002 84B0     		sub	sp, sp, #16
 4801              	.LCFI225:
 4802              		.cfi_def_cfa_offset 24
 4803 0004 00AF     		add	r7, sp, #0
 4804              	.LCFI226:
 4805              		.cfi_def_cfa_register 7
 4806 0006 7860     		str	r0, [r7, #4]
2042:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint16_t* tmp;
2043:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_BUSY_RX)
 4807              		.loc 1 2043 12
 4808 0008 7B68     		ldr	r3, [r7, #4]
 4809 000a 93F83D30 		ldrb	r3, [r3, #61]
 4810 000e DBB2     		uxtb	r3, r3
 4811              		.loc 1 2043 5
 4812 0010 222B     		cmp	r3, #34
 4813 0012 40F08A80 		bne	.L204
2044:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
2045:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->Init.WordLength == USART_WORDLENGTH_9B)
 4814              		.loc 1 2045 20
 4815 0016 7B68     		ldr	r3, [r7, #4]
 4816 0018 9B68     		ldr	r3, [r3, #8]
 4817              		.loc 1 2045 7
 4818 001a B3F5805F 		cmp	r3, #4096
 4819 001e 32D1     		bne	.L205
2046:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
2047:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       tmp = (uint16_t*) husart->pRxBuffPtr;
 4820              		.loc 1 2047 11
 4821 0020 7B68     		ldr	r3, [r7, #4]
 4822 0022 DB6A     		ldr	r3, [r3, #44]
 4823 0024 FB60     		str	r3, [r7, #12]
2048:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       if(husart->Init.Parity == USART_PARITY_NONE)
 4824              		.loc 1 2048 22
 4825 0026 7B68     		ldr	r3, [r7, #4]
 4826 0028 1B69     		ldr	r3, [r3, #16]
 4827              		.loc 1 2048 9
 4828 002a 002B     		cmp	r3, #0
 4829 002c 0ED1     		bne	.L206
2049:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
2050:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         *tmp = (uint16_t)(husart->Instance->DR & (uint16_t)0x01FF);
 4830              		.loc 1 2050 33
 4831 002e 7B68     		ldr	r3, [r7, #4]
 4832 0030 1B68     		ldr	r3, [r3]
 4833              		.loc 1 2050 43
 4834 0032 5B68     		ldr	r3, [r3, #4]
 4835              		.loc 1 2050 16
 4836 0034 9BB2     		uxth	r3, r3
 4837 0036 C3F30803 		ubfx	r3, r3, #0, #9
 4838 003a 9AB2     		uxth	r2, r3
 4839              		.loc 1 2050 14
 4840 003c FB68     		ldr	r3, [r7, #12]
 4841 003e 1A80     		strh	r2, [r3]	@ movhi
2051:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         husart->pRxBuffPtr += 2U;
 4842              		.loc 1 2051 28
 4843 0040 7B68     		ldr	r3, [r7, #4]
 4844 0042 DB6A     		ldr	r3, [r3, #44]
 4845 0044 9A1C     		adds	r2, r3, #2
ARM GAS  /tmp/ccIGChKB.s 			page 121


 4846 0046 7B68     		ldr	r3, [r7, #4]
 4847 0048 DA62     		str	r2, [r3, #44]
 4848 004a 0CE0     		b	.L207
 4849              	.L206:
2052:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
2053:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       else
2054:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
2055:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         *tmp = (uint16_t)(husart->Instance->DR & (uint16_t)0x00FF);
 4850              		.loc 1 2055 33
 4851 004c 7B68     		ldr	r3, [r7, #4]
 4852 004e 1B68     		ldr	r3, [r3]
 4853              		.loc 1 2055 43
 4854 0050 5B68     		ldr	r3, [r3, #4]
 4855              		.loc 1 2055 16
 4856 0052 9BB2     		uxth	r3, r3
 4857 0054 DBB2     		uxtb	r3, r3
 4858 0056 9AB2     		uxth	r2, r3
 4859              		.loc 1 2055 14
 4860 0058 FB68     		ldr	r3, [r7, #12]
 4861 005a 1A80     		strh	r2, [r3]	@ movhi
2056:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         husart->pRxBuffPtr += 1U;
 4862              		.loc 1 2056 28
 4863 005c 7B68     		ldr	r3, [r7, #4]
 4864 005e DB6A     		ldr	r3, [r3, #44]
 4865 0060 5A1C     		adds	r2, r3, #1
 4866 0062 7B68     		ldr	r3, [r7, #4]
 4867 0064 DA62     		str	r2, [r3, #44]
 4868              	.L207:
2057:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
2058:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       if(--husart->RxXferCount != 0x00U)
 4869              		.loc 1 2058 18
 4870 0066 7B68     		ldr	r3, [r7, #4]
 4871 0068 5B8E     		ldrh	r3, [r3, #50]	@ movhi
 4872 006a 9BB2     		uxth	r3, r3
 4873              		.loc 1 2058 10
 4874 006c 013B     		subs	r3, r3, #1
 4875 006e 9BB2     		uxth	r3, r3
 4876              		.loc 1 2058 9
 4877 0070 7A68     		ldr	r2, [r7, #4]
 4878 0072 1946     		mov	r1, r3	@ movhi
 4879 0074 5186     		strh	r1, [r2, #50]	@ movhi
 4880 0076 002B     		cmp	r3, #0
 4881 0078 2FD0     		beq	.L208
2059:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
2060:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Send dummy byte in order to generate the clock for the slave to send the next data */
2061:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         husart->Instance->DR = (DUMMY_DATA & (uint16_t)0x01FF);
 4882              		.loc 1 2061 15
 4883 007a 7B68     		ldr	r3, [r7, #4]
 4884 007c 1B68     		ldr	r3, [r3]
 4885              		.loc 1 2061 30
 4886 007e 40F2FF12 		movw	r2, #511
 4887 0082 5A60     		str	r2, [r3, #4]
 4888 0084 29E0     		b	.L208
 4889              	.L205:
2062:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
2063:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
2064:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     else
ARM GAS  /tmp/ccIGChKB.s 			page 122


2065:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
2066:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       if(husart->Init.Parity == USART_PARITY_NONE)
 4890              		.loc 1 2066 22
 4891 0086 7B68     		ldr	r3, [r7, #4]
 4892 0088 1B69     		ldr	r3, [r3, #16]
 4893              		.loc 1 2066 9
 4894 008a 002B     		cmp	r3, #0
 4895 008c 0AD1     		bne	.L209
2067:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
2068:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         *husart->pRxBuffPtr++ = (uint8_t)(husart->Instance->DR & (uint8_t)0x00FF);
 4896              		.loc 1 2068 49
 4897 008e 7B68     		ldr	r3, [r7, #4]
 4898 0090 1B68     		ldr	r3, [r3]
 4899              		.loc 1 2068 59
 4900 0092 5868     		ldr	r0, [r3, #4]
 4901              		.loc 1 2068 16
 4902 0094 7B68     		ldr	r3, [r7, #4]
 4903 0096 DB6A     		ldr	r3, [r3, #44]
 4904              		.loc 1 2068 28
 4905 0098 591C     		adds	r1, r3, #1
 4906 009a 7A68     		ldr	r2, [r7, #4]
 4907 009c D162     		str	r1, [r2, #44]
 4908              		.loc 1 2068 33
 4909 009e C2B2     		uxtb	r2, r0
 4910              		.loc 1 2068 31
 4911 00a0 1A70     		strb	r2, [r3]
 4912 00a2 0CE0     		b	.L210
 4913              	.L209:
2069:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
2070:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       else
2071:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
2072:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         *husart->pRxBuffPtr++ = (uint8_t)(husart->Instance->DR & (uint8_t)0x007F);
 4914              		.loc 1 2072 49
 4915 00a4 7B68     		ldr	r3, [r7, #4]
 4916 00a6 1B68     		ldr	r3, [r3]
 4917              		.loc 1 2072 59
 4918 00a8 5B68     		ldr	r3, [r3, #4]
 4919              		.loc 1 2072 33
 4920 00aa DAB2     		uxtb	r2, r3
 4921              		.loc 1 2072 16
 4922 00ac 7B68     		ldr	r3, [r7, #4]
 4923 00ae DB6A     		ldr	r3, [r3, #44]
 4924              		.loc 1 2072 28
 4925 00b0 581C     		adds	r0, r3, #1
 4926 00b2 7968     		ldr	r1, [r7, #4]
 4927 00b4 C862     		str	r0, [r1, #44]
 4928              		.loc 1 2072 33
 4929 00b6 02F07F02 		and	r2, r2, #127
 4930 00ba D2B2     		uxtb	r2, r2
 4931              		.loc 1 2072 31
 4932 00bc 1A70     		strb	r2, [r3]
 4933              	.L210:
2073:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
2074:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2075:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       if(--husart->RxXferCount != 0x00U)
 4934              		.loc 1 2075 18
 4935 00be 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccIGChKB.s 			page 123


 4936 00c0 5B8E     		ldrh	r3, [r3, #50]	@ movhi
 4937 00c2 9BB2     		uxth	r3, r3
 4938              		.loc 1 2075 10
 4939 00c4 013B     		subs	r3, r3, #1
 4940 00c6 9BB2     		uxth	r3, r3
 4941              		.loc 1 2075 9
 4942 00c8 7A68     		ldr	r2, [r7, #4]
 4943 00ca 1946     		mov	r1, r3	@ movhi
 4944 00cc 5186     		strh	r1, [r2, #50]	@ movhi
 4945 00ce 002B     		cmp	r3, #0
 4946 00d0 03D0     		beq	.L208
2076:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
2077:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Send dummy byte in order to generate the clock for the slave to send the next data */
2078:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         husart->Instance->DR = (DUMMY_DATA & (uint16_t)0x00FF);
 4947              		.loc 1 2078 15
 4948 00d2 7B68     		ldr	r3, [r7, #4]
 4949 00d4 1B68     		ldr	r3, [r3]
 4950              		.loc 1 2078 30
 4951 00d6 FF22     		movs	r2, #255
 4952 00d8 5A60     		str	r2, [r3, #4]
 4953              	.L208:
2079:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
2080:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
2081:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2082:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->RxXferCount == 0U)
 4954              		.loc 1 2082 14
 4955 00da 7B68     		ldr	r3, [r7, #4]
 4956 00dc 5B8E     		ldrh	r3, [r3, #50]	@ movhi
 4957 00de 9BB2     		uxth	r3, r3
 4958              		.loc 1 2082 7
 4959 00e0 002B     		cmp	r3, #0
 4960 00e2 20D1     		bne	.L211
2083:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
2084:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       /* Disable the USART RXNE Interrupt */
2085:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR1, USART_CR1_RXNEIE);
 4961              		.loc 1 2085 7
 4962 00e4 7B68     		ldr	r3, [r7, #4]
 4963 00e6 1B68     		ldr	r3, [r3]
 4964 00e8 DA68     		ldr	r2, [r3, #12]
 4965 00ea 7B68     		ldr	r3, [r7, #4]
 4966 00ec 1B68     		ldr	r3, [r3]
 4967 00ee 22F02002 		bic	r2, r2, #32
 4968 00f2 DA60     		str	r2, [r3, #12]
2086:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2087:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       /* Disable the USART Parity Error Interrupt */
2088:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR1, USART_CR1_PEIE);
 4969              		.loc 1 2088 7
 4970 00f4 7B68     		ldr	r3, [r7, #4]
 4971 00f6 1B68     		ldr	r3, [r3]
 4972 00f8 DA68     		ldr	r2, [r3, #12]
 4973 00fa 7B68     		ldr	r3, [r7, #4]
 4974 00fc 1B68     		ldr	r3, [r3]
 4975 00fe 22F48072 		bic	r2, r2, #256
 4976 0102 DA60     		str	r2, [r3, #12]
2089:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2090:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       /* Disable the USART Error Interrupt: (Frame error, noise error, overrun error) */
2091:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
ARM GAS  /tmp/ccIGChKB.s 			page 124


 4977              		.loc 1 2091 7
 4978 0104 7B68     		ldr	r3, [r7, #4]
 4979 0106 1B68     		ldr	r3, [r3]
 4980 0108 5A69     		ldr	r2, [r3, #20]
 4981 010a 7B68     		ldr	r3, [r7, #4]
 4982 010c 1B68     		ldr	r3, [r3]
 4983 010e 22F00102 		bic	r2, r2, #1
 4984 0112 5A61     		str	r2, [r3, #20]
2092:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2093:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       husart->State = HAL_USART_STATE_READY;
 4985              		.loc 1 2093 21
 4986 0114 7B68     		ldr	r3, [r7, #4]
 4987 0116 0122     		movs	r2, #1
 4988 0118 83F83D20 		strb	r2, [r3, #61]
2094:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       HAL_USART_RxCpltCallback(husart);
 4989              		.loc 1 2094 7
 4990 011c 7868     		ldr	r0, [r7, #4]
 4991 011e FFF7FEFF 		bl	HAL_USART_RxCpltCallback
2095:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2096:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       return HAL_OK;
 4992              		.loc 1 2096 14
 4993 0122 0023     		movs	r3, #0
 4994 0124 02E0     		b	.L212
 4995              	.L211:
2097:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
2098:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_OK;
 4996              		.loc 1 2098 12
 4997 0126 0023     		movs	r3, #0
 4998 0128 00E0     		b	.L212
 4999              	.L204:
2099:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
2100:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   else
2101:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
2102:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_BUSY;
 5000              		.loc 1 2102 12
 5001 012a 0223     		movs	r3, #2
 5002              	.L212:
2103:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
2104:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 5003              		.loc 1 2104 1
 5004 012c 1846     		mov	r0, r3
 5005 012e 1037     		adds	r7, r7, #16
 5006              	.LCFI227:
 5007              		.cfi_def_cfa_offset 8
 5008 0130 BD46     		mov	sp, r7
 5009              	.LCFI228:
 5010              		.cfi_def_cfa_register 13
 5011              		@ sp needed
 5012 0132 80BD     		pop	{r7, pc}
 5013              		.cfi_endproc
 5014              	.LFE167:
 5016              		.section	.text.USART_TransmitReceive_IT,"ax",%progbits
 5017              		.align	1
 5018              		.syntax unified
 5019              		.thumb
 5020              		.thumb_func
 5021              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccIGChKB.s 			page 125


 5023              	USART_TransmitReceive_IT:
 5024              	.LFB168:
2105:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2106:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
2107:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Full-Duplex Send receive an amount of data in full-duplex mode (non-blocking).
2108:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
2109:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
2110:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval HAL status
2111:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
2112:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static HAL_StatusTypeDef USART_TransmitReceive_IT(USART_HandleTypeDef *husart)
2113:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 5025              		.loc 1 2113 1
 5026              		.cfi_startproc
 5027              		@ args = 0, pretend = 0, frame = 16
 5028              		@ frame_needed = 1, uses_anonymous_args = 0
 5029 0000 80B5     		push	{r7, lr}
 5030              	.LCFI229:
 5031              		.cfi_def_cfa_offset 8
 5032              		.cfi_offset 7, -8
 5033              		.cfi_offset 14, -4
 5034 0002 84B0     		sub	sp, sp, #16
 5035              	.LCFI230:
 5036              		.cfi_def_cfa_offset 24
 5037 0004 00AF     		add	r7, sp, #0
 5038              	.LCFI231:
 5039              		.cfi_def_cfa_register 7
 5040 0006 7860     		str	r0, [r7, #4]
2114:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint16_t* tmp;
2115:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2116:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_BUSY_TX_RX)
 5041              		.loc 1 2116 12
 5042 0008 7B68     		ldr	r3, [r7, #4]
 5043 000a 93F83D30 		ldrb	r3, [r3, #61]
 5044 000e DBB2     		uxtb	r3, r3
 5045              		.loc 1 2116 5
 5046 0010 322B     		cmp	r3, #50
 5047 0012 40F0C980 		bne	.L214
2117:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
2118:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->TxXferCount != 0x00U)
 5048              		.loc 1 2118 14
 5049 0016 7B68     		ldr	r3, [r7, #4]
 5050 0018 5B8D     		ldrh	r3, [r3, #42]	@ movhi
 5051 001a 9BB2     		uxth	r3, r3
 5052              		.loc 1 2118 7
 5053 001c 002B     		cmp	r3, #0
 5054 001e 43D0     		beq	.L215
2119:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
2120:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       if(__HAL_USART_GET_FLAG(husart, USART_FLAG_TXE) != RESET)
 5055              		.loc 1 2120 10
 5056 0020 7B68     		ldr	r3, [r7, #4]
 5057 0022 1B68     		ldr	r3, [r3]
 5058 0024 1B68     		ldr	r3, [r3]
 5059 0026 03F08003 		and	r3, r3, #128
 5060              		.loc 1 2120 9
 5061 002a 802B     		cmp	r3, #128
 5062 002c 3CD1     		bne	.L215
2121:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
ARM GAS  /tmp/ccIGChKB.s 			page 126


2122:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(husart->Init.WordLength == USART_WORDLENGTH_9B)
 5063              		.loc 1 2122 24
 5064 002e 7B68     		ldr	r3, [r7, #4]
 5065 0030 9B68     		ldr	r3, [r3, #8]
 5066              		.loc 1 2122 11
 5067 0032 B3F5805F 		cmp	r3, #4096
 5068 0036 1AD1     		bne	.L216
2123:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
2124:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           tmp = (uint16_t*) husart->pTxBuffPtr;
 5069              		.loc 1 2124 15
 5070 0038 7B68     		ldr	r3, [r7, #4]
 5071 003a 5B6A     		ldr	r3, [r3, #36]
 5072 003c FB60     		str	r3, [r7, #12]
2125:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           husart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 5073              		.loc 1 2125 45
 5074 003e FB68     		ldr	r3, [r7, #12]
 5075 0040 1B88     		ldrh	r3, [r3]
 5076              		.loc 1 2125 34
 5077 0042 1A46     		mov	r2, r3
 5078              		.loc 1 2125 17
 5079 0044 7B68     		ldr	r3, [r7, #4]
 5080 0046 1B68     		ldr	r3, [r3]
 5081              		.loc 1 2125 34
 5082 0048 C2F30802 		ubfx	r2, r2, #0, #9
 5083              		.loc 1 2125 32
 5084 004c 5A60     		str	r2, [r3, #4]
2126:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           if(husart->Init.Parity == USART_PARITY_NONE)
 5085              		.loc 1 2126 26
 5086 004e 7B68     		ldr	r3, [r7, #4]
 5087 0050 1B69     		ldr	r3, [r3, #16]
 5088              		.loc 1 2126 13
 5089 0052 002B     		cmp	r3, #0
 5090 0054 05D1     		bne	.L217
2127:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           {
2128:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             husart->pTxBuffPtr += 2U;
 5091              		.loc 1 2128 32
 5092 0056 7B68     		ldr	r3, [r7, #4]
 5093 0058 5B6A     		ldr	r3, [r3, #36]
 5094 005a 9A1C     		adds	r2, r3, #2
 5095 005c 7B68     		ldr	r3, [r7, #4]
 5096 005e 5A62     		str	r2, [r3, #36]
 5097 0060 0EE0     		b	.L218
 5098              	.L217:
2129:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           }
2130:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           else
2131:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           {
2132:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             husart->pTxBuffPtr += 1U;
 5099              		.loc 1 2132 32
 5100 0062 7B68     		ldr	r3, [r7, #4]
 5101 0064 5B6A     		ldr	r3, [r3, #36]
 5102 0066 5A1C     		adds	r2, r3, #1
 5103 0068 7B68     		ldr	r3, [r7, #4]
 5104 006a 5A62     		str	r2, [r3, #36]
 5105 006c 08E0     		b	.L218
 5106              	.L216:
2133:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           }
2134:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
ARM GAS  /tmp/ccIGChKB.s 			page 127


2135:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         else
2136:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
2137:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           husart->Instance->DR = (uint8_t)(*husart->pTxBuffPtr++ & (uint8_t)0x00FF);
 5107              		.loc 1 2137 51
 5108 006e 7B68     		ldr	r3, [r7, #4]
 5109 0070 5B6A     		ldr	r3, [r3, #36]
 5110              		.loc 1 2137 63
 5111 0072 591C     		adds	r1, r3, #1
 5112 0074 7A68     		ldr	r2, [r7, #4]
 5113 0076 5162     		str	r1, [r2, #36]
 5114              		.loc 1 2137 44
 5115 0078 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5116              		.loc 1 2137 17
 5117 007a 7B68     		ldr	r3, [r7, #4]
 5118 007c 1B68     		ldr	r3, [r3]
 5119              		.loc 1 2137 32
 5120 007e 5A60     		str	r2, [r3, #4]
 5121              	.L218:
2138:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
2139:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         husart->TxXferCount--;
 5122              		.loc 1 2139 15
 5123 0080 7B68     		ldr	r3, [r7, #4]
 5124 0082 5B8D     		ldrh	r3, [r3, #42]	@ movhi
 5125 0084 9BB2     		uxth	r3, r3
 5126              		.loc 1 2139 28
 5127 0086 013B     		subs	r3, r3, #1
 5128 0088 9AB2     		uxth	r2, r3
 5129 008a 7B68     		ldr	r3, [r7, #4]
 5130 008c 5A85     		strh	r2, [r3, #42]	@ movhi
2140:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2141:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         /* Check the latest data transmitted */
2142:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(husart->TxXferCount == 0U)
 5131              		.loc 1 2142 18
 5132 008e 7B68     		ldr	r3, [r7, #4]
 5133 0090 5B8D     		ldrh	r3, [r3, #42]	@ movhi
 5134 0092 9BB2     		uxth	r3, r3
 5135              		.loc 1 2142 11
 5136 0094 002B     		cmp	r3, #0
 5137 0096 07D1     		bne	.L215
2143:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
2144:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           CLEAR_BIT(husart->Instance->CR1, USART_CR1_TXEIE);
 5138              		.loc 1 2144 11
 5139 0098 7B68     		ldr	r3, [r7, #4]
 5140 009a 1B68     		ldr	r3, [r3]
 5141 009c DA68     		ldr	r2, [r3, #12]
 5142 009e 7B68     		ldr	r3, [r7, #4]
 5143 00a0 1B68     		ldr	r3, [r3]
 5144 00a2 22F08002 		bic	r2, r2, #128
 5145 00a6 DA60     		str	r2, [r3, #12]
 5146              	.L215:
2145:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
2146:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
2147:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
2148:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2149:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->RxXferCount != 0x00U)
 5147              		.loc 1 2149 14
 5148 00a8 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccIGChKB.s 			page 128


 5149 00aa 5B8E     		ldrh	r3, [r3, #50]	@ movhi
 5150 00ac 9BB2     		uxth	r3, r3
 5151              		.loc 1 2149 7
 5152 00ae 002B     		cmp	r3, #0
 5153 00b0 52D0     		beq	.L219
2150:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
2151:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       if(__HAL_USART_GET_FLAG(husart, USART_FLAG_RXNE) != RESET)
 5154              		.loc 1 2151 10
 5155 00b2 7B68     		ldr	r3, [r7, #4]
 5156 00b4 1B68     		ldr	r3, [r3]
 5157 00b6 1B68     		ldr	r3, [r3]
 5158 00b8 03F02003 		and	r3, r3, #32
 5159              		.loc 1 2151 9
 5160 00bc 202B     		cmp	r3, #32
 5161 00be 4BD1     		bne	.L219
2152:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       {
2153:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         if(husart->Init.WordLength == USART_WORDLENGTH_9B)
 5162              		.loc 1 2153 24
 5163 00c0 7B68     		ldr	r3, [r7, #4]
 5164 00c2 9B68     		ldr	r3, [r3, #8]
 5165              		.loc 1 2153 11
 5166 00c4 B3F5805F 		cmp	r3, #4096
 5167 00c8 23D1     		bne	.L220
2154:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
2155:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           tmp = (uint16_t*) husart->pRxBuffPtr;
 5168              		.loc 1 2155 15
 5169 00ca 7B68     		ldr	r3, [r7, #4]
 5170 00cc DB6A     		ldr	r3, [r3, #44]
 5171 00ce FB60     		str	r3, [r7, #12]
2156:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           if(husart->Init.Parity == USART_PARITY_NONE)
 5172              		.loc 1 2156 26
 5173 00d0 7B68     		ldr	r3, [r7, #4]
 5174 00d2 1B69     		ldr	r3, [r3, #16]
 5175              		.loc 1 2156 13
 5176 00d4 002B     		cmp	r3, #0
 5177 00d6 0ED1     		bne	.L221
2157:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           {
2158:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             *tmp = (uint16_t)(husart->Instance->DR & (uint16_t)0x01FF);
 5178              		.loc 1 2158 37
 5179 00d8 7B68     		ldr	r3, [r7, #4]
 5180 00da 1B68     		ldr	r3, [r3]
 5181              		.loc 1 2158 47
 5182 00dc 5B68     		ldr	r3, [r3, #4]
 5183              		.loc 1 2158 20
 5184 00de 9BB2     		uxth	r3, r3
 5185 00e0 C3F30803 		ubfx	r3, r3, #0, #9
 5186 00e4 9AB2     		uxth	r2, r3
 5187              		.loc 1 2158 18
 5188 00e6 FB68     		ldr	r3, [r7, #12]
 5189 00e8 1A80     		strh	r2, [r3]	@ movhi
2159:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             husart->pRxBuffPtr += 2U;
 5190              		.loc 1 2159 32
 5191 00ea 7B68     		ldr	r3, [r7, #4]
 5192 00ec DB6A     		ldr	r3, [r3, #44]
 5193 00ee 9A1C     		adds	r2, r3, #2
 5194 00f0 7B68     		ldr	r3, [r7, #4]
 5195 00f2 DA62     		str	r2, [r3, #44]
ARM GAS  /tmp/ccIGChKB.s 			page 129


 5196 00f4 29E0     		b	.L222
 5197              	.L221:
2160:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           }
2161:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           else
2162:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           {
2163:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             *tmp = (uint16_t)(husart->Instance->DR & (uint16_t)0x00FF);
 5198              		.loc 1 2163 37
 5199 00f6 7B68     		ldr	r3, [r7, #4]
 5200 00f8 1B68     		ldr	r3, [r3]
 5201              		.loc 1 2163 47
 5202 00fa 5B68     		ldr	r3, [r3, #4]
 5203              		.loc 1 2163 20
 5204 00fc 9BB2     		uxth	r3, r3
 5205 00fe DBB2     		uxtb	r3, r3
 5206 0100 9AB2     		uxth	r2, r3
 5207              		.loc 1 2163 18
 5208 0102 FB68     		ldr	r3, [r7, #12]
 5209 0104 1A80     		strh	r2, [r3]	@ movhi
2164:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             husart->pRxBuffPtr += 1U;
 5210              		.loc 1 2164 32
 5211 0106 7B68     		ldr	r3, [r7, #4]
 5212 0108 DB6A     		ldr	r3, [r3, #44]
 5213 010a 5A1C     		adds	r2, r3, #1
 5214 010c 7B68     		ldr	r3, [r7, #4]
 5215 010e DA62     		str	r2, [r3, #44]
 5216 0110 1BE0     		b	.L222
 5217              	.L220:
2165:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           }
2166:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
2167:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         else
2168:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         {
2169:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           if(husart->Init.Parity == USART_PARITY_NONE)
 5218              		.loc 1 2169 26
 5219 0112 7B68     		ldr	r3, [r7, #4]
 5220 0114 1B69     		ldr	r3, [r3, #16]
 5221              		.loc 1 2169 13
 5222 0116 002B     		cmp	r3, #0
 5223 0118 0AD1     		bne	.L223
2170:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           {
2171:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             *husart->pRxBuffPtr++ = (uint8_t)(husart->Instance->DR & (uint8_t)0x00FF);
 5224              		.loc 1 2171 53
 5225 011a 7B68     		ldr	r3, [r7, #4]
 5226 011c 1B68     		ldr	r3, [r3]
 5227              		.loc 1 2171 63
 5228 011e 5868     		ldr	r0, [r3, #4]
 5229              		.loc 1 2171 20
 5230 0120 7B68     		ldr	r3, [r7, #4]
 5231 0122 DB6A     		ldr	r3, [r3, #44]
 5232              		.loc 1 2171 32
 5233 0124 591C     		adds	r1, r3, #1
 5234 0126 7A68     		ldr	r2, [r7, #4]
 5235 0128 D162     		str	r1, [r2, #44]
 5236              		.loc 1 2171 37
 5237 012a C2B2     		uxtb	r2, r0
 5238              		.loc 1 2171 35
 5239 012c 1A70     		strb	r2, [r3]
 5240 012e 0CE0     		b	.L222
ARM GAS  /tmp/ccIGChKB.s 			page 130


 5241              	.L223:
2172:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           }
2173:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           else
2174:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           {
2175:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****             *husart->pRxBuffPtr++ = (uint8_t)(husart->Instance->DR & (uint8_t)0x007F);
 5242              		.loc 1 2175 53
 5243 0130 7B68     		ldr	r3, [r7, #4]
 5244 0132 1B68     		ldr	r3, [r3]
 5245              		.loc 1 2175 63
 5246 0134 5B68     		ldr	r3, [r3, #4]
 5247              		.loc 1 2175 37
 5248 0136 DAB2     		uxtb	r2, r3
 5249              		.loc 1 2175 20
 5250 0138 7B68     		ldr	r3, [r7, #4]
 5251 013a DB6A     		ldr	r3, [r3, #44]
 5252              		.loc 1 2175 32
 5253 013c 581C     		adds	r0, r3, #1
 5254 013e 7968     		ldr	r1, [r7, #4]
 5255 0140 C862     		str	r0, [r1, #44]
 5256              		.loc 1 2175 37
 5257 0142 02F07F02 		and	r2, r2, #127
 5258 0146 D2B2     		uxtb	r2, r2
 5259              		.loc 1 2175 35
 5260 0148 1A70     		strb	r2, [r3]
 5261              	.L222:
2176:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****           }
2177:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         }
2178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****         husart->RxXferCount--;
 5262              		.loc 1 2178 15
 5263 014a 7B68     		ldr	r3, [r7, #4]
 5264 014c 5B8E     		ldrh	r3, [r3, #50]	@ movhi
 5265 014e 9BB2     		uxth	r3, r3
 5266              		.loc 1 2178 28
 5267 0150 013B     		subs	r3, r3, #1
 5268 0152 9AB2     		uxth	r2, r3
 5269 0154 7B68     		ldr	r3, [r7, #4]
 5270 0156 5A86     		strh	r2, [r3, #50]	@ movhi
 5271              	.L219:
2179:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       }
2180:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
2181:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2182:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     /* Check the latest data received */
2183:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     if(husart->RxXferCount == 0U)
 5272              		.loc 1 2183 14
 5273 0158 7B68     		ldr	r3, [r7, #4]
 5274 015a 5B8E     		ldrh	r3, [r3, #50]	@ movhi
 5275 015c 9BB2     		uxth	r3, r3
 5276              		.loc 1 2183 7
 5277 015e 002B     		cmp	r3, #0
 5278 0160 20D1     		bne	.L224
2184:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     {
2185:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       /* Disable the USART RXNE Interrupt */
2186:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR1, USART_CR1_RXNEIE);
 5279              		.loc 1 2186 7
 5280 0162 7B68     		ldr	r3, [r7, #4]
 5281 0164 1B68     		ldr	r3, [r3]
 5282 0166 DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp/ccIGChKB.s 			page 131


 5283 0168 7B68     		ldr	r3, [r7, #4]
 5284 016a 1B68     		ldr	r3, [r3]
 5285 016c 22F02002 		bic	r2, r2, #32
 5286 0170 DA60     		str	r2, [r3, #12]
2187:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2188:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       /* Disable the USART Parity Error Interrupt */
2189:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR1, USART_CR1_PEIE);
 5287              		.loc 1 2189 7
 5288 0172 7B68     		ldr	r3, [r7, #4]
 5289 0174 1B68     		ldr	r3, [r3]
 5290 0176 DA68     		ldr	r2, [r3, #12]
 5291 0178 7B68     		ldr	r3, [r7, #4]
 5292 017a 1B68     		ldr	r3, [r3]
 5293 017c 22F48072 		bic	r2, r2, #256
 5294 0180 DA60     		str	r2, [r3, #12]
2190:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2191:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       /* Disable the USART Error Interrupt: (Frame error, noise error, overrun error) */
2192:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
 5295              		.loc 1 2192 7
 5296 0182 7B68     		ldr	r3, [r7, #4]
 5297 0184 1B68     		ldr	r3, [r3]
 5298 0186 5A69     		ldr	r2, [r3, #20]
 5299 0188 7B68     		ldr	r3, [r7, #4]
 5300 018a 1B68     		ldr	r3, [r3]
 5301 018c 22F00102 		bic	r2, r2, #1
 5302 0190 5A61     		str	r2, [r3, #20]
2193:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2194:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       husart->State = HAL_USART_STATE_READY;
 5303              		.loc 1 2194 21
 5304 0192 7B68     		ldr	r3, [r7, #4]
 5305 0194 0122     		movs	r2, #1
 5306 0196 83F83D20 		strb	r2, [r3, #61]
2195:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2196:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       HAL_USART_TxRxCpltCallback(husart);
 5307              		.loc 1 2196 7
 5308 019a 7868     		ldr	r0, [r7, #4]
 5309 019c FFF7FEFF 		bl	HAL_USART_TxRxCpltCallback
2197:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2198:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****       return HAL_OK;
 5310              		.loc 1 2198 14
 5311 01a0 0023     		movs	r3, #0
 5312 01a2 02E0     		b	.L225
 5313              	.L224:
2199:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     }
2200:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2201:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_OK;
 5314              		.loc 1 2201 12
 5315 01a4 0023     		movs	r3, #0
 5316 01a6 00E0     		b	.L225
 5317              	.L214:
2202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
2203:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   else
2204:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
2205:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     return HAL_BUSY;
 5318              		.loc 1 2205 12
 5319 01a8 0223     		movs	r3, #2
 5320              	.L225:
ARM GAS  /tmp/ccIGChKB.s 			page 132


2206:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
2207:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 5321              		.loc 1 2207 1
 5322 01aa 1846     		mov	r0, r3
 5323 01ac 1037     		adds	r7, r7, #16
 5324              	.LCFI232:
 5325              		.cfi_def_cfa_offset 8
 5326 01ae BD46     		mov	sp, r7
 5327              	.LCFI233:
 5328              		.cfi_def_cfa_register 13
 5329              		@ sp needed
 5330 01b0 80BD     		pop	{r7, pc}
 5331              		.cfi_endproc
 5332              	.LFE168:
 5334              		.section	.text.USART_SetConfig,"ax",%progbits
 5335              		.align	1
 5336              		.syntax unified
 5337              		.thumb
 5338              		.thumb_func
 5339              		.fpu fpv4-sp-d16
 5341              	USART_SetConfig:
 5342              	.LFB169:
2208:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2209:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** /**
2210:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @brief  Configures the USART pferipheral.
2211:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @param  husart pointer to a USART_HandleTypeDef structure that contains
2212:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   *                the configuration information for the specified USART module.
2213:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   * @retval None
2214:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   */
2215:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** static void USART_SetConfig(USART_HandleTypeDef *husart)
2216:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** {
 5343              		.loc 1 2216 1
 5344              		.cfi_startproc
 5345              		@ args = 0, pretend = 0, frame = 16
 5346              		@ frame_needed = 1, uses_anonymous_args = 0
 5347 0000 B0B5     		push	{r4, r5, r7, lr}
 5348              	.LCFI234:
 5349              		.cfi_def_cfa_offset 16
 5350              		.cfi_offset 4, -16
 5351              		.cfi_offset 5, -12
 5352              		.cfi_offset 7, -8
 5353              		.cfi_offset 14, -4
 5354 0002 84B0     		sub	sp, sp, #16
 5355              	.LCFI235:
 5356              		.cfi_def_cfa_offset 32
 5357 0004 00AF     		add	r7, sp, #0
 5358              	.LCFI236:
 5359              		.cfi_def_cfa_register 7
 5360 0006 7860     		str	r0, [r7, #4]
2217:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   uint32_t tmpreg = 0x00U;
 5361              		.loc 1 2217 12
 5362 0008 0023     		movs	r3, #0
 5363 000a FB60     		str	r3, [r7, #12]
2218:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2219:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Check the parameters */
2220:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   assert_param(IS_USART_INSTANCE(husart->Instance));
2221:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   assert_param(IS_USART_POLARITY(husart->Init.CLKPolarity));
ARM GAS  /tmp/ccIGChKB.s 			page 133


2222:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   assert_param(IS_USART_PHASE(husart->Init.CLKPhase));
2223:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   assert_param(IS_USART_LASTBIT(husart->Init.CLKLastBit));
2224:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   assert_param(IS_USART_BAUDRATE(husart->Init.BaudRate));
2225:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   assert_param(IS_USART_WORD_LENGTH(husart->Init.WordLength));
2226:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   assert_param(IS_USART_STOPBITS(husart->Init.StopBits));
2227:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   assert_param(IS_USART_PARITY(husart->Init.Parity));
2228:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   assert_param(IS_USART_MODE(husart->Init.Mode));
2229:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2230:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* The LBCL, CPOL and CPHA bits have to be selected when both the transmitter and the
2231:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      receiver are disabled (TE=RE=0) to ensure that the clock pulses function correctly. */
2232:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 5364              		.loc 1 2232 3
 5365 000c 7B68     		ldr	r3, [r7, #4]
 5366 000e 1B68     		ldr	r3, [r3]
 5367 0010 DA68     		ldr	r2, [r3, #12]
 5368 0012 7B68     		ldr	r3, [r7, #4]
 5369 0014 1B68     		ldr	r3, [r3]
 5370 0016 22F00C02 		bic	r2, r2, #12
 5371 001a DA60     		str	r2, [r3, #12]
2233:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2234:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /*---------------------------- USART CR2 Configuration ---------------------*/
2235:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   tmpreg = husart->Instance->CR2;
 5372              		.loc 1 2235 18
 5373 001c 7B68     		ldr	r3, [r7, #4]
 5374 001e 1B68     		ldr	r3, [r3]
 5375              		.loc 1 2235 10
 5376 0020 1B69     		ldr	r3, [r3, #16]
 5377 0022 FB60     		str	r3, [r7, #12]
2236:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Clear CLKEN, CPOL, CPHA and LBCL bits */
2237:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_CLKEN | USART_CR2_LB
 5378              		.loc 1 2237 10
 5379 0024 FB68     		ldr	r3, [r7, #12]
 5380 0026 23F47C53 		bic	r3, r3, #16128
 5381 002a FB60     		str	r3, [r7, #12]
2238:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Configure the USART Clock, CPOL, CPHA and LastBit -----------------------*/
2239:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Set CPOL bit according to husart->Init.CLKPolarity value */
2240:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Set CPHA bit according to husart->Init.CLKPhase value */
2241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Set LBCL bit according to husart->Init.CLKLastBit value */
2242:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Set Stop Bits: Set STOP[13:12] bits according to husart->Init.StopBits value */
2243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   tmpreg |= (uint32_t)(USART_CLOCK_ENABLE| husart->Init.CLKPolarity |
 5382              		.loc 1 2243 56
 5383 002c 7B68     		ldr	r3, [r7, #4]
 5384 002e 9A69     		ldr	r2, [r3, #24]
2244:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****                        husart->Init.CLKPhase| husart->Init.CLKLastBit | husart->Init.StopBits);
 5385              		.loc 1 2244 36
 5386 0030 7B68     		ldr	r3, [r7, #4]
 5387 0032 DB69     		ldr	r3, [r3, #28]
2243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****                        husart->Init.CLKPhase| husart->Init.CLKLastBit | husart->Init.StopBits);
 5388              		.loc 1 2243 69
 5389 0034 1A43     		orrs	r2, r2, r3
 5390              		.loc 1 2244 59
 5391 0036 7B68     		ldr	r3, [r7, #4]
 5392 0038 1B6A     		ldr	r3, [r3, #32]
 5393              		.loc 1 2244 45
 5394 003a 1A43     		orrs	r2, r2, r3
 5395              		.loc 1 2244 85
 5396 003c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccIGChKB.s 			page 134


 5397 003e DB68     		ldr	r3, [r3, #12]
2243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****                        husart->Init.CLKPhase| husart->Init.CLKLastBit | husart->Init.StopBits);
 5398              		.loc 1 2243 13
 5399 0040 1A43     		orrs	r2, r2, r3
2243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****                        husart->Init.CLKPhase| husart->Init.CLKLastBit | husart->Init.StopBits);
 5400              		.loc 1 2243 10
 5401 0042 FB68     		ldr	r3, [r7, #12]
 5402 0044 1343     		orrs	r3, r3, r2
 5403 0046 43F40063 		orr	r3, r3, #2048
 5404 004a FB60     		str	r3, [r7, #12]
2245:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Write to USART CR2 */
2246:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   WRITE_REG(husart->Instance->CR2, (uint32_t)tmpreg);
 5405              		.loc 1 2246 3
 5406 004c 7B68     		ldr	r3, [r7, #4]
 5407 004e 1B68     		ldr	r3, [r3]
 5408 0050 FA68     		ldr	r2, [r7, #12]
 5409 0052 1A61     		str	r2, [r3, #16]
2247:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2248:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2249:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   tmpreg = husart->Instance->CR1;
 5410              		.loc 1 2249 18
 5411 0054 7B68     		ldr	r3, [r7, #4]
 5412 0056 1B68     		ldr	r3, [r3]
 5413              		.loc 1 2249 10
 5414 0058 DB68     		ldr	r3, [r3, #12]
 5415 005a FB60     		str	r3, [r7, #12]
2250:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2251:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits */
2252:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | \
 5416              		.loc 1 2252 10
 5417 005c FB68     		ldr	r3, [r7, #12]
 5418 005e 23F41643 		bic	r3, r3, #38400
 5419 0062 23F00C03 		bic	r3, r3, #12
 5420 0066 FB60     		str	r3, [r7, #12]
2253:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****                                    USART_CR1_RE | USART_CR1_OVER8));
2254:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2255:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Configure the USART Word Length, Parity and mode:
2256:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      Set the M bits according to husart->Init.WordLength value
2257:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      Set PCE and PS bits according to husart->Init.Parity value
2258:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      Set TE and RE bits according to husart->Init.Mode value
2259:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****      Force OVER8 bit to 1 in order to reach the max USART frequencies */
2260:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   tmpreg |= (uint32_t)husart->Init.WordLength | husart->Init.Parity | husart->Init.Mode | USART_CR1
 5421              		.loc 1 2260 35
 5422 0068 7B68     		ldr	r3, [r7, #4]
 5423 006a 9A68     		ldr	r2, [r3, #8]
 5424              		.loc 1 2260 61
 5425 006c 7B68     		ldr	r3, [r7, #4]
 5426 006e 1B69     		ldr	r3, [r3, #16]
 5427              		.loc 1 2260 47
 5428 0070 1A43     		orrs	r2, r2, r3
 5429              		.loc 1 2260 83
 5430 0072 7B68     		ldr	r3, [r7, #4]
 5431 0074 5B69     		ldr	r3, [r3, #20]
 5432              		.loc 1 2260 69
 5433 0076 1A43     		orrs	r2, r2, r3
 5434              		.loc 1 2260 10
 5435 0078 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccIGChKB.s 			page 135


 5436 007a 1343     		orrs	r3, r3, r2
 5437 007c 43F40043 		orr	r3, r3, #32768
 5438 0080 FB60     		str	r3, [r7, #12]
2261:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2262:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Write to USART CR1 */
2263:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   WRITE_REG(husart->Instance->CR1, (uint32_t)tmpreg);
 5439              		.loc 1 2263 3
 5440 0082 7B68     		ldr	r3, [r7, #4]
 5441 0084 1B68     		ldr	r3, [r3]
 5442 0086 FA68     		ldr	r2, [r7, #12]
 5443 0088 DA60     		str	r2, [r3, #12]
2264:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2265:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2266:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /* Clear CTSE and RTSE bits */
2267:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE));
 5444              		.loc 1 2267 3
 5445 008a 7B68     		ldr	r3, [r7, #4]
 5446 008c 1B68     		ldr	r3, [r3]
 5447 008e 5A69     		ldr	r2, [r3, #20]
 5448 0090 7B68     		ldr	r3, [r7, #4]
 5449 0092 1B68     		ldr	r3, [r3]
 5450 0094 22F44072 		bic	r2, r2, #768
 5451 0098 5A61     		str	r2, [r3, #20]
2268:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** 
2269:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2270:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** #if defined(USART6) 
2271:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if((husart->Instance == USART1) || (husart->Instance == USART6))
 5452              		.loc 1 2271 13
 5453 009a 7B68     		ldr	r3, [r7, #4]
 5454 009c 1B68     		ldr	r3, [r3]
 5455              		.loc 1 2271 5
 5456 009e 474A     		ldr	r2, .L230
 5457 00a0 9342     		cmp	r3, r2
 5458 00a2 04D0     		beq	.L227
 5459              		.loc 1 2271 45 discriminator 1
 5460 00a4 7B68     		ldr	r3, [r7, #4]
 5461 00a6 1B68     		ldr	r3, [r3]
 5462              		.loc 1 2271 35 discriminator 1
 5463 00a8 454A     		ldr	r2, .L230+4
 5464 00aa 9342     		cmp	r3, r2
 5465 00ac 40D1     		bne	.L228
 5466              	.L227:
2272:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
2273:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->Instance->BRR = USART_BRR(HAL_RCC_GetPCLK2Freq(), husart->Init.BaudRate);
 5467              		.loc 1 2273 29
 5468 00ae FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5469 00b2 0246     		mov	r2, r0
 5470 00b4 1346     		mov	r3, r2
 5471 00b6 9B00     		lsls	r3, r3, #2
 5472 00b8 1344     		add	r3, r3, r2
 5473 00ba 9A00     		lsls	r2, r3, #2
 5474 00bc 1A44     		add	r2, r2, r3
 5475 00be 7B68     		ldr	r3, [r7, #4]
 5476 00c0 5B68     		ldr	r3, [r3, #4]
 5477 00c2 5B00     		lsls	r3, r3, #1
 5478 00c4 B2FBF3F3 		udiv	r3, r2, r3
 5479 00c8 3E4A     		ldr	r2, .L230+8
ARM GAS  /tmp/ccIGChKB.s 			page 136


 5480 00ca A2FB0323 		umull	r2, r3, r2, r3
 5481 00ce 5B09     		lsrs	r3, r3, #5
 5482 00d0 1C01     		lsls	r4, r3, #4
 5483 00d2 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5484 00d6 0246     		mov	r2, r0
 5485 00d8 1346     		mov	r3, r2
 5486 00da 9B00     		lsls	r3, r3, #2
 5487 00dc 1344     		add	r3, r3, r2
 5488 00de 9A00     		lsls	r2, r3, #2
 5489 00e0 1A44     		add	r2, r2, r3
 5490 00e2 7B68     		ldr	r3, [r7, #4]
 5491 00e4 5B68     		ldr	r3, [r3, #4]
 5492 00e6 5B00     		lsls	r3, r3, #1
 5493 00e8 B2FBF3F5 		udiv	r5, r2, r3
 5494 00ec FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5495 00f0 0246     		mov	r2, r0
 5496 00f2 1346     		mov	r3, r2
 5497 00f4 9B00     		lsls	r3, r3, #2
 5498 00f6 1344     		add	r3, r3, r2
 5499 00f8 9A00     		lsls	r2, r3, #2
 5500 00fa 1A44     		add	r2, r2, r3
 5501 00fc 7B68     		ldr	r3, [r7, #4]
 5502 00fe 5B68     		ldr	r3, [r3, #4]
 5503 0100 5B00     		lsls	r3, r3, #1
 5504 0102 B2FBF3F3 		udiv	r3, r2, r3
 5505 0106 2F4A     		ldr	r2, .L230+8
 5506 0108 A2FB0323 		umull	r2, r3, r2, r3
 5507 010c 5B09     		lsrs	r3, r3, #5
 5508 010e 6422     		movs	r2, #100
 5509 0110 02FB03F3 		mul	r3, r2, r3
 5510 0114 EB1A     		subs	r3, r5, r3
 5511 0116 1B01     		lsls	r3, r3, #4
 5512 0118 3233     		adds	r3, r3, #50
 5513 011a 2A4A     		ldr	r2, .L230+8
 5514 011c A2FB0323 		umull	r2, r3, r2, r3
 5515 0120 5B09     		lsrs	r3, r3, #5
 5516 0122 03F00F02 		and	r2, r3, #15
 5517              		.loc 1 2273 11
 5518 0126 7B68     		ldr	r3, [r7, #4]
 5519 0128 1B68     		ldr	r3, [r3]
 5520              		.loc 1 2273 29
 5521 012a 2243     		orrs	r2, r2, r4
 5522              		.loc 1 2273 27
 5523 012c 9A60     		str	r2, [r3, #8]
 5524 012e 40E0     		b	.L229
 5525              	.L228:
2274:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
2275:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** #else
2276:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   if(husart->Instance == USART1)
2277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
2278:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->Instance->BRR = USART_BRR(HAL_RCC_GetPCLK2Freq(), husart->Init.BaudRate);
2279:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }	
2280:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** #endif /* USART6 */	
2281:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   else
2282:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   {
2283:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****     husart->Instance->BRR = USART_BRR(HAL_RCC_GetPCLK1Freq(), husart->Init.BaudRate);
 5526              		.loc 1 2283 29
ARM GAS  /tmp/ccIGChKB.s 			page 137


 5527 0130 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5528 0134 0246     		mov	r2, r0
 5529 0136 1346     		mov	r3, r2
 5530 0138 9B00     		lsls	r3, r3, #2
 5531 013a 1344     		add	r3, r3, r2
 5532 013c 9A00     		lsls	r2, r3, #2
 5533 013e 1A44     		add	r2, r2, r3
 5534 0140 7B68     		ldr	r3, [r7, #4]
 5535 0142 5B68     		ldr	r3, [r3, #4]
 5536 0144 5B00     		lsls	r3, r3, #1
 5537 0146 B2FBF3F3 		udiv	r3, r2, r3
 5538 014a 1E4A     		ldr	r2, .L230+8
 5539 014c A2FB0323 		umull	r2, r3, r2, r3
 5540 0150 5B09     		lsrs	r3, r3, #5
 5541 0152 1C01     		lsls	r4, r3, #4
 5542 0154 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5543 0158 0246     		mov	r2, r0
 5544 015a 1346     		mov	r3, r2
 5545 015c 9B00     		lsls	r3, r3, #2
 5546 015e 1344     		add	r3, r3, r2
 5547 0160 9A00     		lsls	r2, r3, #2
 5548 0162 1A44     		add	r2, r2, r3
 5549 0164 7B68     		ldr	r3, [r7, #4]
 5550 0166 5B68     		ldr	r3, [r3, #4]
 5551 0168 5B00     		lsls	r3, r3, #1
 5552 016a B2FBF3F5 		udiv	r5, r2, r3
 5553 016e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5554 0172 0246     		mov	r2, r0
 5555 0174 1346     		mov	r3, r2
 5556 0176 9B00     		lsls	r3, r3, #2
 5557 0178 1344     		add	r3, r3, r2
 5558 017a 9A00     		lsls	r2, r3, #2
 5559 017c 1A44     		add	r2, r2, r3
 5560 017e 7B68     		ldr	r3, [r7, #4]
 5561 0180 5B68     		ldr	r3, [r3, #4]
 5562 0182 5B00     		lsls	r3, r3, #1
 5563 0184 B2FBF3F3 		udiv	r3, r2, r3
 5564 0188 0E4A     		ldr	r2, .L230+8
 5565 018a A2FB0323 		umull	r2, r3, r2, r3
 5566 018e 5B09     		lsrs	r3, r3, #5
 5567 0190 6422     		movs	r2, #100
 5568 0192 02FB03F3 		mul	r3, r2, r3
 5569 0196 EB1A     		subs	r3, r5, r3
 5570 0198 1B01     		lsls	r3, r3, #4
 5571 019a 3233     		adds	r3, r3, #50
 5572 019c 094A     		ldr	r2, .L230+8
 5573 019e A2FB0323 		umull	r2, r3, r2, r3
 5574 01a2 5B09     		lsrs	r3, r3, #5
 5575 01a4 03F00F02 		and	r2, r3, #15
 5576              		.loc 1 2283 11
 5577 01a8 7B68     		ldr	r3, [r7, #4]
 5578 01aa 1B68     		ldr	r3, [r3]
 5579              		.loc 1 2283 29
 5580 01ac 2243     		orrs	r2, r2, r4
 5581              		.loc 1 2283 27
 5582 01ae 9A60     		str	r2, [r3, #8]
2284:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c ****   }
ARM GAS  /tmp/ccIGChKB.s 			page 138


2285:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_usart.c **** }
 5583              		.loc 1 2285 1
 5584 01b0 00BF     		nop
 5585              	.L229:
 5586 01b2 00BF     		nop
 5587 01b4 1037     		adds	r7, r7, #16
 5588              	.LCFI237:
 5589              		.cfi_def_cfa_offset 16
 5590 01b6 BD46     		mov	sp, r7
 5591              	.LCFI238:
 5592              		.cfi_def_cfa_register 13
 5593              		@ sp needed
 5594 01b8 B0BD     		pop	{r4, r5, r7, pc}
 5595              	.L231:
 5596 01ba 00BF     		.align	2
 5597              	.L230:
 5598 01bc 00100140 		.word	1073811456
 5599 01c0 00140140 		.word	1073812480
 5600 01c4 1F85EB51 		.word	1374389535
 5601              		.cfi_endproc
 5602              	.LFE169:
 5604              		.text
 5605              	.Letext0:
 5606              		.file 2 "/home/hao/Documents/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 5607              		.file 3 "/home/hao/Documents/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 5608              		.file 4 "./Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 5609              		.file 5 "./Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 5610              		.file 6 "./Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 5611              		.file 7 "./Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 5612              		.file 8 "./Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_usart.h"
ARM GAS  /tmp/ccIGChKB.s 			page 139


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_usart.c
     /tmp/ccIGChKB.s:18     .text.HAL_USART_Init:0000000000000000 $t
     /tmp/ccIGChKB.s:26     .text.HAL_USART_Init:0000000000000000 HAL_USART_Init
     /tmp/ccIGChKB.s:208    .text.HAL_USART_MspInit:0000000000000000 HAL_USART_MspInit
     /tmp/ccIGChKB.s:5341   .text.USART_SetConfig:0000000000000000 USART_SetConfig
     /tmp/ccIGChKB.s:124    .text.HAL_USART_DeInit:0000000000000000 $t
     /tmp/ccIGChKB.s:131    .text.HAL_USART_DeInit:0000000000000000 HAL_USART_DeInit
     /tmp/ccIGChKB.s:251    .text.HAL_USART_MspDeInit:0000000000000000 HAL_USART_MspDeInit
     /tmp/ccIGChKB.s:201    .text.HAL_USART_MspInit:0000000000000000 $t
     /tmp/ccIGChKB.s:244    .text.HAL_USART_MspDeInit:0000000000000000 $t
     /tmp/ccIGChKB.s:287    .text.HAL_USART_Transmit:0000000000000000 $t
     /tmp/ccIGChKB.s:294    .text.HAL_USART_Transmit:0000000000000000 HAL_USART_Transmit
     /tmp/ccIGChKB.s:4110   .text.USART_WaitOnFlagUntilTimeout:0000000000000000 USART_WaitOnFlagUntilTimeout
     /tmp/ccIGChKB.s:518    .text.HAL_USART_Receive:0000000000000000 $t
     /tmp/ccIGChKB.s:525    .text.HAL_USART_Receive:0000000000000000 HAL_USART_Receive
     /tmp/ccIGChKB.s:815    .text.HAL_USART_TransmitReceive:0000000000000000 $t
     /tmp/ccIGChKB.s:822    .text.HAL_USART_TransmitReceive:0000000000000000 HAL_USART_TransmitReceive
     /tmp/ccIGChKB.s:1163   .text.HAL_USART_Transmit_IT:0000000000000000 $t
     /tmp/ccIGChKB.s:1170   .text.HAL_USART_Transmit_IT:0000000000000000 HAL_USART_Transmit_IT
     /tmp/ccIGChKB.s:1281   .text.HAL_USART_Receive_IT:0000000000000000 $t
     /tmp/ccIGChKB.s:1288   .text.HAL_USART_Receive_IT:0000000000000000 HAL_USART_Receive_IT
     /tmp/ccIGChKB.s:1413   .text.HAL_USART_TransmitReceive_IT:0000000000000000 $t
     /tmp/ccIGChKB.s:1420   .text.HAL_USART_TransmitReceive_IT:0000000000000000 HAL_USART_TransmitReceive_IT
     /tmp/ccIGChKB.s:1571   .text.HAL_USART_Transmit_DMA:0000000000000000 $t
     /tmp/ccIGChKB.s:1578   .text.HAL_USART_Transmit_DMA:0000000000000000 HAL_USART_Transmit_DMA
     /tmp/ccIGChKB.s:1731   .text.HAL_USART_Transmit_DMA:00000000000000cc $d
     /tmp/ccIGChKB.s:3679   .text.USART_DMATransmitCplt:0000000000000000 USART_DMATransmitCplt
     /tmp/ccIGChKB.s:3772   .text.USART_DMATxHalfCplt:0000000000000000 USART_DMATxHalfCplt
     /tmp/ccIGChKB.s:3990   .text.USART_DMAError:0000000000000000 USART_DMAError
     /tmp/ccIGChKB.s:1738   .text.HAL_USART_Receive_DMA:0000000000000000 $t
     /tmp/ccIGChKB.s:1745   .text.HAL_USART_Receive_DMA:0000000000000000 HAL_USART_Receive_DMA
     /tmp/ccIGChKB.s:1973   .text.HAL_USART_Receive_DMA:0000000000000148 $d
     /tmp/ccIGChKB.s:3817   .text.USART_DMAReceiveCplt:0000000000000000 USART_DMAReceiveCplt
     /tmp/ccIGChKB.s:3945   .text.USART_DMARxHalfCplt:0000000000000000 USART_DMARxHalfCplt
     /tmp/ccIGChKB.s:1980   .text.HAL_USART_TransmitReceive_DMA:0000000000000000 $t
     /tmp/ccIGChKB.s:1987   .text.HAL_USART_TransmitReceive_DMA:0000000000000000 HAL_USART_TransmitReceive_DMA
     /tmp/ccIGChKB.s:2222   .text.HAL_USART_TransmitReceive_DMA:0000000000000154 $d
     /tmp/ccIGChKB.s:2231   .text.HAL_USART_DMAPause:0000000000000000 $t
     /tmp/ccIGChKB.s:2238   .text.HAL_USART_DMAPause:0000000000000000 HAL_USART_DMAPause
     /tmp/ccIGChKB.s:2302   .text.HAL_USART_DMAResume:0000000000000000 $t
     /tmp/ccIGChKB.s:2309   .text.HAL_USART_DMAResume:0000000000000000 HAL_USART_DMAResume
     /tmp/ccIGChKB.s:2373   .text.HAL_USART_DMAStop:0000000000000000 $t
     /tmp/ccIGChKB.s:2380   .text.HAL_USART_DMAStop:0000000000000000 HAL_USART_DMAStop
     /tmp/ccIGChKB.s:4240   .text.USART_EndTxTransfer:0000000000000000 USART_EndTxTransfer
     /tmp/ccIGChKB.s:4294   .text.USART_EndRxTransfer:0000000000000000 USART_EndRxTransfer
     /tmp/ccIGChKB.s:2511   .text.HAL_USART_Abort:0000000000000000 $t
     /tmp/ccIGChKB.s:2518   .text.HAL_USART_Abort:0000000000000000 HAL_USART_Abort
     /tmp/ccIGChKB.s:2652   .text.HAL_USART_Abort_IT:0000000000000000 $t
     /tmp/ccIGChKB.s:2659   .text.HAL_USART_Abort_IT:0000000000000000 HAL_USART_Abort_IT
     /tmp/ccIGChKB.s:3544   .text.HAL_USART_AbortCpltCallback:0000000000000000 HAL_USART_AbortCpltCallback
     /tmp/ccIGChKB.s:2882   .text.HAL_USART_Abort_IT:0000000000000138 $d
     /tmp/ccIGChKB.s:4409   .text.USART_DMATxAbortCallback:0000000000000000 USART_DMATxAbortCallback
     /tmp/ccIGChKB.s:4495   .text.USART_DMARxAbortCallback:0000000000000000 USART_DMARxAbortCallback
     /tmp/ccIGChKB.s:2888   .text.HAL_USART_IRQHandler:0000000000000000 $t
     /tmp/ccIGChKB.s:2895   .text.HAL_USART_IRQHandler:0000000000000000 HAL_USART_IRQHandler
     /tmp/ccIGChKB.s:4789   .text.USART_Receive_IT:0000000000000000 USART_Receive_IT
ARM GAS  /tmp/ccIGChKB.s 			page 140


     /tmp/ccIGChKB.s:5023   .text.USART_TransmitReceive_IT:0000000000000000 USART_TransmitReceive_IT
     /tmp/ccIGChKB.s:3501   .text.HAL_USART_ErrorCallback:0000000000000000 HAL_USART_ErrorCallback
     /tmp/ccIGChKB.s:4581   .text.USART_Transmit_IT:0000000000000000 USART_Transmit_IT
     /tmp/ccIGChKB.s:4726   .text.USART_EndTransmit_IT:0000000000000000 USART_EndTransmit_IT
     /tmp/ccIGChKB.s:3274   .text.HAL_USART_IRQHandler:0000000000000230 $d
     /tmp/ccIGChKB.s:4356   .text.USART_DMAAbortOnError:0000000000000000 USART_DMAAbortOnError
     /tmp/ccIGChKB.s:3279   .text.HAL_USART_TxCpltCallback:0000000000000000 $t
     /tmp/ccIGChKB.s:3286   .text.HAL_USART_TxCpltCallback:0000000000000000 HAL_USART_TxCpltCallback
     /tmp/ccIGChKB.s:3322   .text.HAL_USART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccIGChKB.s:3329   .text.HAL_USART_TxHalfCpltCallback:0000000000000000 HAL_USART_TxHalfCpltCallback
     /tmp/ccIGChKB.s:3365   .text.HAL_USART_RxCpltCallback:0000000000000000 $t
     /tmp/ccIGChKB.s:3372   .text.HAL_USART_RxCpltCallback:0000000000000000 HAL_USART_RxCpltCallback
     /tmp/ccIGChKB.s:3408   .text.HAL_USART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccIGChKB.s:3415   .text.HAL_USART_RxHalfCpltCallback:0000000000000000 HAL_USART_RxHalfCpltCallback
     /tmp/ccIGChKB.s:3451   .text.HAL_USART_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccIGChKB.s:3458   .text.HAL_USART_TxRxCpltCallback:0000000000000000 HAL_USART_TxRxCpltCallback
     /tmp/ccIGChKB.s:3494   .text.HAL_USART_ErrorCallback:0000000000000000 $t
     /tmp/ccIGChKB.s:3537   .text.HAL_USART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccIGChKB.s:3580   .text.HAL_USART_GetState:0000000000000000 $t
     /tmp/ccIGChKB.s:3587   .text.HAL_USART_GetState:0000000000000000 HAL_USART_GetState
     /tmp/ccIGChKB.s:3627   .text.HAL_USART_GetError:0000000000000000 $t
     /tmp/ccIGChKB.s:3634   .text.HAL_USART_GetError:0000000000000000 HAL_USART_GetError
     /tmp/ccIGChKB.s:3673   .text.USART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccIGChKB.s:3766   .text.USART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccIGChKB.s:3811   .text.USART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccIGChKB.s:3939   .text.USART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccIGChKB.s:3984   .text.USART_DMAError:0000000000000000 $t
     /tmp/ccIGChKB.s:4104   .text.USART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccIGChKB.s:4234   .text.USART_EndTxTransfer:0000000000000000 $t
     /tmp/ccIGChKB.s:4288   .text.USART_EndRxTransfer:0000000000000000 $t
     /tmp/ccIGChKB.s:4350   .text.USART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccIGChKB.s:4403   .text.USART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccIGChKB.s:4489   .text.USART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccIGChKB.s:4575   .text.USART_Transmit_IT:0000000000000000 $t
     /tmp/ccIGChKB.s:4720   .text.USART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccIGChKB.s:4783   .text.USART_Receive_IT:0000000000000000 $t
     /tmp/ccIGChKB.s:5017   .text.USART_TransmitReceive_IT:0000000000000000 $t
     /tmp/ccIGChKB.s:5335   .text.USART_SetConfig:0000000000000000 $t
     /tmp/ccIGChKB.s:5598   .text.USART_SetConfig:00000000000001bc $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
