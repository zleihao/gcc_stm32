ARM GAS  /tmp/ccHb00aP.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_RCC_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_RCC_DeInit:
  27              	.LFB126:
  28              		.file 1 "./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c"
   1:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
   2:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
   3:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @file    stm32f4xx_hal_rcc.c
   4:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  11:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @verbatim
  12:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  13:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  15:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  16:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache
  18:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  21:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  22:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  23:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  24:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  25:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  26:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  27:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  28:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  29:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  30:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
ARM GAS  /tmp/ccHb00aP.s 			page 2


  31:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  32:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  33:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  34:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  35:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  36:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  38:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  39:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  40:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  41:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       from/to registers.
  42:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle
  44:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  45:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle
  46:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  48:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  49:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Implemented Workaround:
  50:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) For AHB & APB peripherals, a dummy read to the peripheral register has been
  51:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  52:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  53:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @endverbatim
  54:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  55:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @attention
  56:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  57:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  58:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  59:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  60:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  61:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  62:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  63:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  64:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  65:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  66:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  67:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  68:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      without specific prior written permission.
  69:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  70:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  71:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  72:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  73:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  74:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  75:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  76:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  77:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  78:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  79:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  80:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  81:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  82:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  83:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  84:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  85:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #include "stm32f4xx_hal.h"
  86:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  87:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup STM32F4xx_HAL_Driver
ARM GAS  /tmp/ccHb00aP.s 			page 3


  88:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  89:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  90:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  91:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC RCC
  92:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  93:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  94:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  95:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  96:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  97:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  98:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  99:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
 100:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Constants
 101:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 102:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 103:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 104:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 105:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
 106:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 107:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 108:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 109:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO2_CLK_ENABLE()   __HAL_RCC_GPIOC_CLK_ENABLE()
 110:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
 111:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
 112:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 113:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 114:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 115:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 116:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 117:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 118:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 119:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 120:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 121:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 122:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 123:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 124:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private functions ---------------------------------------------------------*/
 125:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 126:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 127:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *  @{
 128:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 129:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 130:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 131:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief    Initialization and Configuration functions
 132:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 133:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 134:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 135:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 136:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 137:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 138:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 139:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1
 140:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        and APB2).
 141:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 142:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 143:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 144:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the PLL as System clock source.
ARM GAS  /tmp/ccHb00aP.s 			page 4


 145:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 146:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 147:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source.
 148:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 149:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 150:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 151:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 152:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 153:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 154:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 155:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 168 MHz)
 156:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 157:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 158:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 159:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 160:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              and if a HSE clock failure occurs(HSE used directly or through PLL as System
 161:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source), the System clocks automatically switched to HSI and an interrupt
 162:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              is generated if enabled. The interrupt is linked to the Cortex-M4 NMI
 163:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              (Non-Maskable Interrupt) exception vector.
 164:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 165:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 166:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PA8 pin.
 167:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 168:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 169:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PC9 pin.
 170:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 171:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 172:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 173:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              HSE and PLL.
 174:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 175:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 176:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 177:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use
 179:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 180:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 181:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F405xx/07xx and STM32F415xx/17xx devices, the maximum
 182:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              frequency of the SYSCLK and HCLK is 168 MHz, PCLK2 84 MHz and PCLK1 42 MHz.
 183:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 184:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 185:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 186:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F42xxx, STM32F43xxx, STM32F446xx, STM32F469xx and STM32F479xx devices,
 187:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the maximum frequency of the SYSCLK and HCLK is 180 MHz, PCLK2 90 MHz and PCLK1 45 MHz
 188:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 189:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 190:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 191:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F401xx, the maximum frequency of the SYSCLK and HCLK is 84 MHz,
 192:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 84 MHz and PCLK1 42 MHz.
 193:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 194:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 195:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 196:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F41xxx, the maximum frequency of the SYSCLK and HCLK is 100 MHz,
 197:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 100 MHz and PCLK1 50 MHz.
 198:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 199:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 200:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 201:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
ARM GAS  /tmp/ccHb00aP.s 			page 5


 202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 203:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 204:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 205:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 206:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 207:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 208:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 209:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSE and PLL OFF
 210:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 211:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 212:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - All interrupts disabled
 213:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 214:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - Peripheral clocks
 215:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 216:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 217:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 218:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_DeInit(void)
 219:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
  29              		.loc 1 219 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
 220:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
  41              		.loc 1 220 10
  42 0004 0023     		movs	r3, #0
 221:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
  43              		.loc 1 221 1
  44 0006 1846     		mov	r0, r3
  45 0008 BD46     		mov	sp, r7
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 13
  48              		@ sp needed
  49 000a 5DF8047B 		ldr	r7, [sp], #4
  50              	.LCFI3:
  51              		.cfi_restore 7
  52              		.cfi_def_cfa_offset 0
  53 000e 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE126:
  57              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  58              		.align	1
  59              		.weak	HAL_RCC_OscConfig
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv4-sp-d16
  65              	HAL_RCC_OscConfig:
  66              	.LFB127:
 222:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccHb00aP.s 			page 6


 223:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 224:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 225:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 226:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 227:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 228:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 229:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 230:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to LSE Off
 231:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 232:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 233:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to HSE Off
 234:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 235:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 236:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 237:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 238:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
  67              		.loc 1 238 1
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 24
  70              		@ frame_needed = 1, uses_anonymous_args = 0
  71 0000 80B5     		push	{r7, lr}
  72              	.LCFI4:
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 7, -8
  75              		.cfi_offset 14, -4
  76 0002 86B0     		sub	sp, sp, #24
  77              	.LCFI5:
  78              		.cfi_def_cfa_offset 32
  79 0004 00AF     		add	r7, sp, #0
  80              	.LCFI6:
  81              		.cfi_def_cfa_register 7
  82 0006 7860     		str	r0, [r7, #4]
 239:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart;
 240:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 242:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
  83              		.loc 1 242 5
  84 0008 7B68     		ldr	r3, [r7, #4]
  85 000a 002B     		cmp	r3, #0
  86 000c 01D1     		bne	.L4
 243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 244:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
  87              		.loc 1 244 12
  88 000e 0123     		movs	r3, #1
  89 0010 2AE2     		b	.L5
  90              	.L4:
 245:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 246:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 247:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 248:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 249:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 250:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
  91              		.loc 1 250 25
  92 0012 7B68     		ldr	r3, [r7, #4]
  93 0014 1B68     		ldr	r3, [r3]
  94              		.loc 1 250 43
  95 0016 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/ccHb00aP.s 			page 7


  96              		.loc 1 250 5
  97 001a 002B     		cmp	r3, #0
  98 001c 75D0     		beq	.L6
 251:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 252:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 253:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 254:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 255:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
  99              		.loc 1 255 9
 100 001e 884B     		ldr	r3, .L57
 101 0020 9B68     		ldr	r3, [r3, #8]
 102 0022 03F00C03 		and	r3, r3, #12
 103              		.loc 1 255 7
 104 0026 042B     		cmp	r3, #4
 105 0028 0CD0     		beq	.L7
 256:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 106              		.loc 1 256 9 discriminator 1
 107 002a 854B     		ldr	r3, .L57
 108 002c 9B68     		ldr	r3, [r3, #8]
 109 002e 03F00C03 		and	r3, r3, #12
 255:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 110              		.loc 1 255 60 discriminator 1
 111 0032 082B     		cmp	r3, #8
 112 0034 12D1     		bne	.L8
 113              		.loc 1 256 68
 114 0036 824B     		ldr	r3, .L57
 115 0038 5B68     		ldr	r3, [r3, #4]
 116              		.loc 1 256 78
 117 003a 03F48003 		and	r3, r3, #4194304
 118              		.loc 1 256 60
 119 003e B3F5800F 		cmp	r3, #4194304
 120 0042 0BD1     		bne	.L8
 121              	.L7:
 257:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 258:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 122              		.loc 1 258 11
 123 0044 7E4B     		ldr	r3, .L57
 124 0046 1B68     		ldr	r3, [r3]
 125 0048 03F40033 		and	r3, r3, #131072
 126              		.loc 1 258 9
 127 004c 002B     		cmp	r3, #0
 128 004e 5BD0     		beq	.L56
 129              		.loc 1 258 78 discriminator 1
 130 0050 7B68     		ldr	r3, [r7, #4]
 131 0052 5B68     		ldr	r3, [r3, #4]
 132              		.loc 1 258 57 discriminator 1
 133 0054 002B     		cmp	r3, #0
 134 0056 57D1     		bne	.L56
 259:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 260:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 135              		.loc 1 260 16
 136 0058 0123     		movs	r3, #1
 137 005a 05E2     		b	.L5
 138              	.L8:
 261:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 262:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 263:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
ARM GAS  /tmp/ccHb00aP.s 			page 8


 264:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 265:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 266:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 139              		.loc 1 266 7
 140 005c 7B68     		ldr	r3, [r7, #4]
 141 005e 5B68     		ldr	r3, [r3, #4]
 142 0060 B3F5803F 		cmp	r3, #65536
 143 0064 06D1     		bne	.L10
 144              		.loc 1 266 7 is_stmt 0 discriminator 1
 145 0066 764B     		ldr	r3, .L57
 146 0068 1B68     		ldr	r3, [r3]
 147 006a 754A     		ldr	r2, .L57
 148 006c 43F48033 		orr	r3, r3, #65536
 149 0070 1360     		str	r3, [r2]
 150 0072 1DE0     		b	.L11
 151              	.L10:
 152              		.loc 1 266 7 discriminator 2
 153 0074 7B68     		ldr	r3, [r7, #4]
 154 0076 5B68     		ldr	r3, [r3, #4]
 155 0078 B3F5A02F 		cmp	r3, #327680
 156 007c 0CD1     		bne	.L12
 157              		.loc 1 266 7 discriminator 3
 158 007e 704B     		ldr	r3, .L57
 159 0080 1B68     		ldr	r3, [r3]
 160 0082 6F4A     		ldr	r2, .L57
 161 0084 43F48023 		orr	r3, r3, #262144
 162 0088 1360     		str	r3, [r2]
 163 008a 6D4B     		ldr	r3, .L57
 164 008c 1B68     		ldr	r3, [r3]
 165 008e 6C4A     		ldr	r2, .L57
 166 0090 43F48033 		orr	r3, r3, #65536
 167 0094 1360     		str	r3, [r2]
 168 0096 0BE0     		b	.L11
 169              	.L12:
 170              		.loc 1 266 7 discriminator 4
 171 0098 694B     		ldr	r3, .L57
 172 009a 1B68     		ldr	r3, [r3]
 173 009c 684A     		ldr	r2, .L57
 174 009e 23F48033 		bic	r3, r3, #65536
 175 00a2 1360     		str	r3, [r2]
 176 00a4 664B     		ldr	r3, .L57
 177 00a6 1B68     		ldr	r3, [r3]
 178 00a8 654A     		ldr	r2, .L57
 179 00aa 23F48023 		bic	r3, r3, #262144
 180 00ae 1360     		str	r3, [r2]
 181              	.L11:
 267:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 268:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE State */
 269:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 182              		.loc 1 269 28 is_stmt 1
 183 00b0 7B68     		ldr	r3, [r7, #4]
 184 00b2 5B68     		ldr	r3, [r3, #4]
 185              		.loc 1 269 9
 186 00b4 002B     		cmp	r3, #0
 187 00b6 13D0     		beq	.L13
 270:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 271:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
ARM GAS  /tmp/ccHb00aP.s 			page 9


 272:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 188              		.loc 1 272 21
 189 00b8 FFF7FEFF 		bl	HAL_GetTick
 190 00bc 3861     		str	r0, [r7, #16]
 273:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 274:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is ready */
 275:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 191              		.loc 1 275 14
 192 00be 08E0     		b	.L14
 193              	.L15:
 276:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 194              		.loc 1 277 15
 195 00c0 FFF7FEFF 		bl	HAL_GetTick
 196 00c4 0246     		mov	r2, r0
 197              		.loc 1 277 29
 198 00c6 3B69     		ldr	r3, [r7, #16]
 199 00c8 D31A     		subs	r3, r2, r3
 200              		.loc 1 277 13
 201 00ca 642B     		cmp	r3, #100
 202 00cc 01D9     		bls	.L14
 278:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 279:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 203              		.loc 1 279 20
 204 00ce 0323     		movs	r3, #3
 205 00d0 CAE1     		b	.L5
 206              	.L14:
 275:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 207              		.loc 1 275 15
 208 00d2 5B4B     		ldr	r3, .L57
 209 00d4 1B68     		ldr	r3, [r3]
 210 00d6 03F40033 		and	r3, r3, #131072
 275:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 211              		.loc 1 275 14
 212 00da 002B     		cmp	r3, #0
 213 00dc F0D0     		beq	.L15
 214 00de 14E0     		b	.L6
 215              	.L13:
 280:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 281:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 282:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 283:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 284:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 285:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 286:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 216              		.loc 1 286 21
 217 00e0 FFF7FEFF 		bl	HAL_GetTick
 218 00e4 3861     		str	r0, [r7, #16]
 287:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 288:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is bypassed or disabled */
 289:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 219              		.loc 1 289 14
 220 00e6 08E0     		b	.L16
 221              	.L17:
 290:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 291:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 222              		.loc 1 291 15
ARM GAS  /tmp/ccHb00aP.s 			page 10


 223 00e8 FFF7FEFF 		bl	HAL_GetTick
 224 00ec 0246     		mov	r2, r0
 225              		.loc 1 291 29
 226 00ee 3B69     		ldr	r3, [r7, #16]
 227 00f0 D31A     		subs	r3, r2, r3
 228              		.loc 1 291 13
 229 00f2 642B     		cmp	r3, #100
 230 00f4 01D9     		bls	.L16
 292:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 293:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 231              		.loc 1 293 20
 232 00f6 0323     		movs	r3, #3
 233 00f8 B6E1     		b	.L5
 234              	.L16:
 289:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 235              		.loc 1 289 15
 236 00fa 514B     		ldr	r3, .L57
 237 00fc 1B68     		ldr	r3, [r3]
 238 00fe 03F40033 		and	r3, r3, #131072
 289:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 239              		.loc 1 289 14
 240 0102 002B     		cmp	r3, #0
 241 0104 F0D1     		bne	.L17
 242 0106 00E0     		b	.L6
 243              	.L56:
 258:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 244              		.loc 1 258 9
 245 0108 00BF     		nop
 246              	.L6:
 294:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 295:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 296:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 297:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 298:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 299:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 300:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 247              		.loc 1 300 25
 248 010a 7B68     		ldr	r3, [r7, #4]
 249 010c 1B68     		ldr	r3, [r3]
 250              		.loc 1 300 43
 251 010e 03F00203 		and	r3, r3, #2
 252              		.loc 1 300 5
 253 0112 002B     		cmp	r3, #0
 254 0114 63D0     		beq	.L18
 301:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 302:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 303:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 304:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 305:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 306:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 307:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 255              		.loc 1 307 9
 256 0116 4A4B     		ldr	r3, .L57
 257 0118 9B68     		ldr	r3, [r3, #8]
 258 011a 03F00C03 		and	r3, r3, #12
 259              		.loc 1 307 7
 260 011e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccHb00aP.s 			page 11


 261 0120 0BD0     		beq	.L19
 308:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 262              		.loc 1 308 9 discriminator 1
 263 0122 474B     		ldr	r3, .L57
 264 0124 9B68     		ldr	r3, [r3, #8]
 265 0126 03F00C03 		and	r3, r3, #12
 307:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 266              		.loc 1 307 60 discriminator 1
 267 012a 082B     		cmp	r3, #8
 268 012c 1CD1     		bne	.L20
 269              		.loc 1 308 68
 270 012e 444B     		ldr	r3, .L57
 271 0130 5B68     		ldr	r3, [r3, #4]
 272              		.loc 1 308 78
 273 0132 03F48003 		and	r3, r3, #4194304
 274              		.loc 1 308 60
 275 0136 002B     		cmp	r3, #0
 276 0138 16D1     		bne	.L20
 277              	.L19:
 309:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 310:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 311:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 278              		.loc 1 311 11
 279 013a 414B     		ldr	r3, .L57
 280 013c 1B68     		ldr	r3, [r3]
 281 013e 03F00203 		and	r3, r3, #2
 282              		.loc 1 311 9
 283 0142 002B     		cmp	r3, #0
 284 0144 05D0     		beq	.L21
 285              		.loc 1 311 78 discriminator 1
 286 0146 7B68     		ldr	r3, [r7, #4]
 287 0148 DB68     		ldr	r3, [r3, #12]
 288              		.loc 1 311 57 discriminator 1
 289 014a 012B     		cmp	r3, #1
 290 014c 01D0     		beq	.L21
 312:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 313:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 291              		.loc 1 313 16
 292 014e 0123     		movs	r3, #1
 293 0150 8AE1     		b	.L5
 294              	.L21:
 314:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 315:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 316:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 317:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 318:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 319:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 295              		.loc 1 319 9
 296 0152 3B4B     		ldr	r3, .L57
 297 0154 1B68     		ldr	r3, [r3]
 298 0156 23F0F802 		bic	r2, r3, #248
 299 015a 7B68     		ldr	r3, [r7, #4]
 300 015c 1B69     		ldr	r3, [r3, #16]
 301 015e DB00     		lsls	r3, r3, #3
 302 0160 3749     		ldr	r1, .L57
 303 0162 1343     		orrs	r3, r3, r2
 304 0164 0B60     		str	r3, [r1]
ARM GAS  /tmp/ccHb00aP.s 			page 12


 311:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 305              		.loc 1 311 9
 306 0166 3AE0     		b	.L18
 307              	.L20:
 320:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 321:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 322:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 323:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 324:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI State */
 325:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 308              		.loc 1 325 28
 309 0168 7B68     		ldr	r3, [r7, #4]
 310 016a DB68     		ldr	r3, [r3, #12]
 311              		.loc 1 325 9
 312 016c 002B     		cmp	r3, #0
 313 016e 20D0     		beq	.L22
 326:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 327:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 328:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 314              		.loc 1 328 9
 315 0170 344B     		ldr	r3, .L57+4
 316 0172 0122     		movs	r2, #1
 317 0174 1A60     		str	r2, [r3]
 329:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 330:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 331:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 318              		.loc 1 331 21
 319 0176 FFF7FEFF 		bl	HAL_GetTick
 320 017a 3861     		str	r0, [r7, #16]
 332:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 333:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 334:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 321              		.loc 1 334 14
 322 017c 08E0     		b	.L23
 323              	.L24:
 335:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 336:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 324              		.loc 1 336 15
 325 017e FFF7FEFF 		bl	HAL_GetTick
 326 0182 0246     		mov	r2, r0
 327              		.loc 1 336 29
 328 0184 3B69     		ldr	r3, [r7, #16]
 329 0186 D31A     		subs	r3, r2, r3
 330              		.loc 1 336 13
 331 0188 022B     		cmp	r3, #2
 332 018a 01D9     		bls	.L23
 337:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 338:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 333              		.loc 1 338 20
 334 018c 0323     		movs	r3, #3
 335 018e 6BE1     		b	.L5
 336              	.L23:
 334:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 337              		.loc 1 334 15
 338 0190 2B4B     		ldr	r3, .L57
 339 0192 1B68     		ldr	r3, [r3]
 340 0194 03F00203 		and	r3, r3, #2
ARM GAS  /tmp/ccHb00aP.s 			page 13


 334:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 341              		.loc 1 334 14
 342 0198 002B     		cmp	r3, #0
 343 019a F0D0     		beq	.L24
 339:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 340:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 341:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 342:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
 343:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 344              		.loc 1 343 9
 345 019c 284B     		ldr	r3, .L57
 346 019e 1B68     		ldr	r3, [r3]
 347 01a0 23F0F802 		bic	r2, r3, #248
 348 01a4 7B68     		ldr	r3, [r7, #4]
 349 01a6 1B69     		ldr	r3, [r3, #16]
 350 01a8 DB00     		lsls	r3, r3, #3
 351 01aa 2549     		ldr	r1, .L57
 352 01ac 1343     		orrs	r3, r3, r2
 353 01ae 0B60     		str	r3, [r1]
 354 01b0 15E0     		b	.L18
 355              	.L22:
 344:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 345:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 346:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 347:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 348:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 356              		.loc 1 348 9
 357 01b2 244B     		ldr	r3, .L57+4
 358 01b4 0022     		movs	r2, #0
 359 01b6 1A60     		str	r2, [r3]
 349:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 350:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 351:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 360              		.loc 1 351 21
 361 01b8 FFF7FEFF 		bl	HAL_GetTick
 362 01bc 3861     		str	r0, [r7, #16]
 352:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 353:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 354:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 363              		.loc 1 354 14
 364 01be 08E0     		b	.L25
 365              	.L26:
 355:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 356:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 366              		.loc 1 356 15
 367 01c0 FFF7FEFF 		bl	HAL_GetTick
 368 01c4 0246     		mov	r2, r0
 369              		.loc 1 356 29
 370 01c6 3B69     		ldr	r3, [r7, #16]
 371 01c8 D31A     		subs	r3, r2, r3
 372              		.loc 1 356 13
 373 01ca 022B     		cmp	r3, #2
 374 01cc 01D9     		bls	.L25
 357:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 358:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 375              		.loc 1 358 20
 376 01ce 0323     		movs	r3, #3
ARM GAS  /tmp/ccHb00aP.s 			page 14


 377 01d0 4AE1     		b	.L5
 378              	.L25:
 354:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 379              		.loc 1 354 15
 380 01d2 1B4B     		ldr	r3, .L57
 381 01d4 1B68     		ldr	r3, [r3]
 382 01d6 03F00203 		and	r3, r3, #2
 354:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 383              		.loc 1 354 14
 384 01da 002B     		cmp	r3, #0
 385 01dc F0D1     		bne	.L26
 386              	.L18:
 359:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 360:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 361:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 362:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 363:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 364:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 365:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 387              		.loc 1 365 25
 388 01de 7B68     		ldr	r3, [r7, #4]
 389 01e0 1B68     		ldr	r3, [r3]
 390              		.loc 1 365 43
 391 01e2 03F00803 		and	r3, r3, #8
 392              		.loc 1 365 5
 393 01e6 002B     		cmp	r3, #0
 394 01e8 36D0     		beq	.L27
 366:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 367:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 368:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 369:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 370:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSI State */
 371:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 395              		.loc 1 371 26
 396 01ea 7B68     		ldr	r3, [r7, #4]
 397 01ec 5B69     		ldr	r3, [r3, #20]
 398              		.loc 1 371 7
 399 01ee 002B     		cmp	r3, #0
 400 01f0 16D0     		beq	.L28
 372:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 373:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 374:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 401              		.loc 1 374 7
 402 01f2 154B     		ldr	r3, .L57+8
 403 01f4 0122     		movs	r2, #1
 404 01f6 1A60     		str	r2, [r3]
 375:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 376:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 377:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 405              		.loc 1 377 19
 406 01f8 FFF7FEFF 		bl	HAL_GetTick
 407 01fc 3861     		str	r0, [r7, #16]
 378:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 379:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 380:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 408              		.loc 1 380 12
 409 01fe 08E0     		b	.L29
ARM GAS  /tmp/ccHb00aP.s 			page 15


 410              	.L30:
 381:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 382:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 411              		.loc 1 382 13
 412 0200 FFF7FEFF 		bl	HAL_GetTick
 413 0204 0246     		mov	r2, r0
 414              		.loc 1 382 27
 415 0206 3B69     		ldr	r3, [r7, #16]
 416 0208 D31A     		subs	r3, r2, r3
 417              		.loc 1 382 11
 418 020a 022B     		cmp	r3, #2
 419 020c 01D9     		bls	.L29
 383:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 384:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 420              		.loc 1 384 18
 421 020e 0323     		movs	r3, #3
 422 0210 2AE1     		b	.L5
 423              	.L29:
 380:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 424              		.loc 1 380 13
 425 0212 0B4B     		ldr	r3, .L57
 426 0214 5B6F     		ldr	r3, [r3, #116]
 427 0216 03F00203 		and	r3, r3, #2
 380:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 428              		.loc 1 380 12
 429 021a 002B     		cmp	r3, #0
 430 021c F0D0     		beq	.L30
 431 021e 1BE0     		b	.L27
 432              	.L28:
 385:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 386:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 387:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 388:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 389:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 390:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 391:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 433              		.loc 1 391 7
 434 0220 094B     		ldr	r3, .L57+8
 435 0222 0022     		movs	r2, #0
 436 0224 1A60     		str	r2, [r3]
 392:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 393:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 394:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 437              		.loc 1 394 19
 438 0226 FFF7FEFF 		bl	HAL_GetTick
 439 022a 3861     		str	r0, [r7, #16]
 395:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 396:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 397:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 440              		.loc 1 397 12
 441 022c 0EE0     		b	.L31
 442              	.L32:
 398:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 399:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 443              		.loc 1 399 13
 444 022e FFF7FEFF 		bl	HAL_GetTick
 445 0232 0246     		mov	r2, r0
ARM GAS  /tmp/ccHb00aP.s 			page 16


 446              		.loc 1 399 27
 447 0234 3B69     		ldr	r3, [r7, #16]
 448 0236 D31A     		subs	r3, r2, r3
 449              		.loc 1 399 11
 450 0238 022B     		cmp	r3, #2
 451 023a 07D9     		bls	.L31
 400:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 401:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 452              		.loc 1 401 18
 453 023c 0323     		movs	r3, #3
 454 023e 13E1     		b	.L5
 455              	.L58:
 456              		.align	2
 457              	.L57:
 458 0240 00380240 		.word	1073887232
 459 0244 00004742 		.word	1111949312
 460 0248 800E4742 		.word	1111953024
 461              	.L31:
 397:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 462              		.loc 1 397 13
 463 024c 884B     		ldr	r3, .L59
 464 024e 5B6F     		ldr	r3, [r3, #116]
 465 0250 03F00203 		and	r3, r3, #2
 397:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 466              		.loc 1 397 12
 467 0254 002B     		cmp	r3, #0
 468 0256 EAD1     		bne	.L32
 469              	.L27:
 402:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 403:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 404:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 405:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 406:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 407:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 470              		.loc 1 407 25
 471 0258 7B68     		ldr	r3, [r7, #4]
 472 025a 1B68     		ldr	r3, [r3]
 473              		.loc 1 407 43
 474 025c 03F00403 		and	r3, r3, #4
 475              		.loc 1 407 5
 476 0260 002B     		cmp	r3, #0
 477 0262 00F09780 		beq	.L33
 478              	.LBB2:
 408:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 409:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 479              		.loc 1 409 22
 480 0266 0023     		movs	r3, #0
 481 0268 FB75     		strb	r3, [r7, #23]
 410:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 411:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 412:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 413:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 414:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 415:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 416:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 482              		.loc 1 416 8
 483 026a 814B     		ldr	r3, .L59
ARM GAS  /tmp/ccHb00aP.s 			page 17


 484 026c 1B6C     		ldr	r3, [r3, #64]
 485 026e 03F08053 		and	r3, r3, #268435456
 486              		.loc 1 416 7
 487 0272 002B     		cmp	r3, #0
 488 0274 0FD1     		bne	.L34
 489              	.LBB3:
 417:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 418:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 490              		.loc 1 418 7
 491 0276 0023     		movs	r3, #0
 492 0278 FB60     		str	r3, [r7, #12]
 493 027a 7D4B     		ldr	r3, .L59
 494 027c 1B6C     		ldr	r3, [r3, #64]
 495 027e 7C4A     		ldr	r2, .L59
 496 0280 43F08053 		orr	r3, r3, #268435456
 497 0284 1364     		str	r3, [r2, #64]
 498 0286 7A4B     		ldr	r3, .L59
 499 0288 1B6C     		ldr	r3, [r3, #64]
 500 028a 03F08053 		and	r3, r3, #268435456
 501 028e FB60     		str	r3, [r7, #12]
 502 0290 FB68     		ldr	r3, [r7, #12]
 503              	.LBE3:
 419:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pwrclkchanged = SET;
 504              		.loc 1 419 21
 505 0292 0123     		movs	r3, #1
 506 0294 FB75     		strb	r3, [r7, #23]
 507              	.L34:
 420:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 421:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 422:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 508              		.loc 1 422 8
 509 0296 774B     		ldr	r3, .L59+4
 510 0298 1B68     		ldr	r3, [r3]
 511 029a 03F48073 		and	r3, r3, #256
 512              		.loc 1 422 7
 513 029e 002B     		cmp	r3, #0
 514 02a0 18D1     		bne	.L35
 423:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 424:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 425:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 515              		.loc 1 425 7
 516 02a2 744B     		ldr	r3, .L59+4
 517 02a4 1B68     		ldr	r3, [r3]
 518 02a6 734A     		ldr	r2, .L59+4
 519 02a8 43F48073 		orr	r3, r3, #256
 520 02ac 1360     		str	r3, [r2]
 426:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 427:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 428:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 521              		.loc 1 428 19
 522 02ae FFF7FEFF 		bl	HAL_GetTick
 523 02b2 3861     		str	r0, [r7, #16]
 429:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 430:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 524              		.loc 1 430 12
 525 02b4 08E0     		b	.L36
 526              	.L37:
ARM GAS  /tmp/ccHb00aP.s 			page 18


 431:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 432:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 527              		.loc 1 432 13
 528 02b6 FFF7FEFF 		bl	HAL_GetTick
 529 02ba 0246     		mov	r2, r0
 530              		.loc 1 432 27
 531 02bc 3B69     		ldr	r3, [r7, #16]
 532 02be D31A     		subs	r3, r2, r3
 533              		.loc 1 432 11
 534 02c0 022B     		cmp	r3, #2
 535 02c2 01D9     		bls	.L36
 433:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 434:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 536              		.loc 1 434 18
 537 02c4 0323     		movs	r3, #3
 538 02c6 CFE0     		b	.L5
 539              	.L36:
 430:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 540              		.loc 1 430 13
 541 02c8 6A4B     		ldr	r3, .L59+4
 542 02ca 1B68     		ldr	r3, [r3]
 543 02cc 03F48073 		and	r3, r3, #256
 430:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 544              		.loc 1 430 12
 545 02d0 002B     		cmp	r3, #0
 546 02d2 F0D0     		beq	.L37
 547              	.L35:
 435:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 436:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 437:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 438:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 439:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 440:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 548              		.loc 1 440 5
 549 02d4 7B68     		ldr	r3, [r7, #4]
 550 02d6 9B68     		ldr	r3, [r3, #8]
 551 02d8 012B     		cmp	r3, #1
 552 02da 06D1     		bne	.L38
 553              		.loc 1 440 5 is_stmt 0 discriminator 1
 554 02dc 644B     		ldr	r3, .L59
 555 02de 1B6F     		ldr	r3, [r3, #112]
 556 02e0 634A     		ldr	r2, .L59
 557 02e2 43F00103 		orr	r3, r3, #1
 558 02e6 1367     		str	r3, [r2, #112]
 559 02e8 1CE0     		b	.L39
 560              	.L38:
 561              		.loc 1 440 5 discriminator 2
 562 02ea 7B68     		ldr	r3, [r7, #4]
 563 02ec 9B68     		ldr	r3, [r3, #8]
 564 02ee 052B     		cmp	r3, #5
 565 02f0 0CD1     		bne	.L40
 566              		.loc 1 440 5 discriminator 3
 567 02f2 5F4B     		ldr	r3, .L59
 568 02f4 1B6F     		ldr	r3, [r3, #112]
 569 02f6 5E4A     		ldr	r2, .L59
 570 02f8 43F00403 		orr	r3, r3, #4
 571 02fc 1367     		str	r3, [r2, #112]
ARM GAS  /tmp/ccHb00aP.s 			page 19


 572 02fe 5C4B     		ldr	r3, .L59
 573 0300 1B6F     		ldr	r3, [r3, #112]
 574 0302 5B4A     		ldr	r2, .L59
 575 0304 43F00103 		orr	r3, r3, #1
 576 0308 1367     		str	r3, [r2, #112]
 577 030a 0BE0     		b	.L39
 578              	.L40:
 579              		.loc 1 440 5 discriminator 4
 580 030c 584B     		ldr	r3, .L59
 581 030e 1B6F     		ldr	r3, [r3, #112]
 582 0310 574A     		ldr	r2, .L59
 583 0312 23F00103 		bic	r3, r3, #1
 584 0316 1367     		str	r3, [r2, #112]
 585 0318 554B     		ldr	r3, .L59
 586 031a 1B6F     		ldr	r3, [r3, #112]
 587 031c 544A     		ldr	r2, .L59
 588 031e 23F00403 		bic	r3, r3, #4
 589 0322 1367     		str	r3, [r2, #112]
 590              	.L39:
 441:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSE State */
 442:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 591              		.loc 1 442 26 is_stmt 1
 592 0324 7B68     		ldr	r3, [r7, #4]
 593 0326 9B68     		ldr	r3, [r3, #8]
 594              		.loc 1 442 7
 595 0328 002B     		cmp	r3, #0
 596 032a 15D0     		beq	.L41
 443:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 444:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 445:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 597              		.loc 1 445 19
 598 032c FFF7FEFF 		bl	HAL_GetTick
 599 0330 3861     		str	r0, [r7, #16]
 446:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 447:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 448:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 600              		.loc 1 448 12
 601 0332 0AE0     		b	.L42
 602              	.L43:
 449:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 450:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 603              		.loc 1 450 13
 604 0334 FFF7FEFF 		bl	HAL_GetTick
 605 0338 0246     		mov	r2, r0
 606              		.loc 1 450 27
 607 033a 3B69     		ldr	r3, [r7, #16]
 608 033c D31A     		subs	r3, r2, r3
 609              		.loc 1 450 11
 610 033e 41F28832 		movw	r2, #5000
 611 0342 9342     		cmp	r3, r2
 612 0344 01D9     		bls	.L42
 451:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 452:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 613              		.loc 1 452 18
 614 0346 0323     		movs	r3, #3
 615 0348 8EE0     		b	.L5
 616              	.L42:
ARM GAS  /tmp/ccHb00aP.s 			page 20


 448:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 617              		.loc 1 448 13
 618 034a 494B     		ldr	r3, .L59
 619 034c 1B6F     		ldr	r3, [r3, #112]
 620 034e 03F00203 		and	r3, r3, #2
 448:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 621              		.loc 1 448 12
 622 0352 002B     		cmp	r3, #0
 623 0354 EED0     		beq	.L43
 624 0356 14E0     		b	.L44
 625              	.L41:
 453:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 454:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 455:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 456:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 457:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 458:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 459:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 626              		.loc 1 459 19
 627 0358 FFF7FEFF 		bl	HAL_GetTick
 628 035c 3861     		str	r0, [r7, #16]
 460:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 461:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 462:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 629              		.loc 1 462 12
 630 035e 0AE0     		b	.L45
 631              	.L46:
 463:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 464:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 632              		.loc 1 464 13
 633 0360 FFF7FEFF 		bl	HAL_GetTick
 634 0364 0246     		mov	r2, r0
 635              		.loc 1 464 27
 636 0366 3B69     		ldr	r3, [r7, #16]
 637 0368 D31A     		subs	r3, r2, r3
 638              		.loc 1 464 11
 639 036a 41F28832 		movw	r2, #5000
 640 036e 9342     		cmp	r3, r2
 641 0370 01D9     		bls	.L45
 465:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 466:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 642              		.loc 1 466 18
 643 0372 0323     		movs	r3, #3
 644 0374 78E0     		b	.L5
 645              	.L45:
 462:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 646              		.loc 1 462 13
 647 0376 3E4B     		ldr	r3, .L59
 648 0378 1B6F     		ldr	r3, [r3, #112]
 649 037a 03F00203 		and	r3, r3, #2
 462:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 650              		.loc 1 462 12
 651 037e 002B     		cmp	r3, #0
 652 0380 EED1     		bne	.L46
 653              	.L44:
 467:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 468:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
ARM GAS  /tmp/ccHb00aP.s 			page 21


 469:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 470:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 471:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 472:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 654              		.loc 1 472 7
 655 0382 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 656 0384 012B     		cmp	r3, #1
 657 0386 05D1     		bne	.L33
 473:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 474:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 658              		.loc 1 474 7
 659 0388 394B     		ldr	r3, .L59
 660 038a 1B6C     		ldr	r3, [r3, #64]
 661 038c 384A     		ldr	r2, .L59
 662 038e 23F08053 		bic	r3, r3, #268435456
 663 0392 1364     		str	r3, [r2, #64]
 664              	.L33:
 665              	.LBE2:
 475:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 476:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 477:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 478:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 479:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 480:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 666              		.loc 1 480 30
 667 0394 7B68     		ldr	r3, [r7, #4]
 668 0396 9B69     		ldr	r3, [r3, #24]
 669              		.loc 1 480 6
 670 0398 002B     		cmp	r3, #0
 671 039a 64D0     		beq	.L47
 481:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 482:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 483:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 672              		.loc 1 483 8
 673 039c 344B     		ldr	r3, .L59
 674 039e 9B68     		ldr	r3, [r3, #8]
 675 03a0 03F00C03 		and	r3, r3, #12
 676              		.loc 1 483 7
 677 03a4 082B     		cmp	r3, #8
 678 03a6 5CD0     		beq	.L48
 484:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 485:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 679              		.loc 1 485 33
 680 03a8 7B68     		ldr	r3, [r7, #4]
 681 03aa 9B69     		ldr	r3, [r3, #24]
 682              		.loc 1 485 9
 683 03ac 022B     		cmp	r3, #2
 684 03ae 41D1     		bne	.L49
 486:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 487:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Check the parameters */
 488:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 489:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 490:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 491:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 492:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 493:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 494:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
ARM GAS  /tmp/ccHb00aP.s 			page 22


 495:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 685              		.loc 1 495 9
 686 03b0 314B     		ldr	r3, .L59+8
 687 03b2 0022     		movs	r2, #0
 688 03b4 1A60     		str	r2, [r3]
 496:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 497:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 498:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 689              		.loc 1 498 21
 690 03b6 FFF7FEFF 		bl	HAL_GetTick
 691 03ba 3861     		str	r0, [r7, #16]
 499:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 500:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 501:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 692              		.loc 1 501 14
 693 03bc 08E0     		b	.L50
 694              	.L51:
 502:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 503:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 695              		.loc 1 503 15
 696 03be FFF7FEFF 		bl	HAL_GetTick
 697 03c2 0246     		mov	r2, r0
 698              		.loc 1 503 29
 699 03c4 3B69     		ldr	r3, [r7, #16]
 700 03c6 D31A     		subs	r3, r2, r3
 701              		.loc 1 503 13
 702 03c8 022B     		cmp	r3, #2
 703 03ca 01D9     		bls	.L50
 504:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 505:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 704              		.loc 1 505 20
 705 03cc 0323     		movs	r3, #3
 706 03ce 4BE0     		b	.L5
 707              	.L50:
 501:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 708              		.loc 1 501 15
 709 03d0 274B     		ldr	r3, .L59
 710 03d2 1B68     		ldr	r3, [r3]
 711 03d4 03F00073 		and	r3, r3, #33554432
 501:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 712              		.loc 1 501 14
 713 03d8 002B     		cmp	r3, #0
 714 03da F0D1     		bne	.L51
 506:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 507:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 508:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 509:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 510:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                  
 715              		.loc 1 510 9
 716 03dc 7B68     		ldr	r3, [r7, #4]
 717 03de DA69     		ldr	r2, [r3, #28]
 718 03e0 7B68     		ldr	r3, [r7, #4]
 719 03e2 1B6A     		ldr	r3, [r3, #32]
 720 03e4 1A43     		orrs	r2, r2, r3
 721 03e6 7B68     		ldr	r3, [r7, #4]
 722 03e8 5B6A     		ldr	r3, [r3, #36]
 723 03ea 9B01     		lsls	r3, r3, #6
ARM GAS  /tmp/ccHb00aP.s 			page 23


 724 03ec 1A43     		orrs	r2, r2, r3
 725 03ee 7B68     		ldr	r3, [r7, #4]
 726 03f0 9B6A     		ldr	r3, [r3, #40]
 727 03f2 5B08     		lsrs	r3, r3, #1
 728 03f4 013B     		subs	r3, r3, #1
 729 03f6 1B04     		lsls	r3, r3, #16
 730 03f8 1A43     		orrs	r2, r2, r3
 731 03fa 7B68     		ldr	r3, [r7, #4]
 732 03fc DB6A     		ldr	r3, [r3, #44]
 733 03fe 1B06     		lsls	r3, r3, #24
 734 0400 1B49     		ldr	r1, .L59
 735 0402 1343     		orrs	r3, r3, r2
 736 0404 4B60     		str	r3, [r1, #4]
 511:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLM                                       
 512:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             
 513:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Po
 514:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
 515:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the main PLL. */
 516:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 737              		.loc 1 516 9
 738 0406 1C4B     		ldr	r3, .L59+8
 739 0408 0122     		movs	r2, #1
 740 040a 1A60     		str	r2, [r3]
 517:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 518:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 519:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 741              		.loc 1 519 21
 742 040c FFF7FEFF 		bl	HAL_GetTick
 743 0410 3861     		str	r0, [r7, #16]
 520:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 521:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 522:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 744              		.loc 1 522 14
 745 0412 08E0     		b	.L52
 746              	.L53:
 523:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 524:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 747              		.loc 1 524 15
 748 0414 FFF7FEFF 		bl	HAL_GetTick
 749 0418 0246     		mov	r2, r0
 750              		.loc 1 524 29
 751 041a 3B69     		ldr	r3, [r7, #16]
 752 041c D31A     		subs	r3, r2, r3
 753              		.loc 1 524 13
 754 041e 022B     		cmp	r3, #2
 755 0420 01D9     		bls	.L52
 525:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 526:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 756              		.loc 1 526 20
 757 0422 0323     		movs	r3, #3
 758 0424 20E0     		b	.L5
 759              	.L52:
 522:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 760              		.loc 1 522 15
 761 0426 124B     		ldr	r3, .L59
 762 0428 1B68     		ldr	r3, [r3]
 763 042a 03F00073 		and	r3, r3, #33554432
ARM GAS  /tmp/ccHb00aP.s 			page 24


 522:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 764              		.loc 1 522 14
 765 042e 002B     		cmp	r3, #0
 766 0430 F0D0     		beq	.L53
 767 0432 18E0     		b	.L47
 768              	.L49:
 527:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 528:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 529:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 530:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 531:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 532:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 533:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 769              		.loc 1 533 9
 770 0434 104B     		ldr	r3, .L59+8
 771 0436 0022     		movs	r2, #0
 772 0438 1A60     		str	r2, [r3]
 534:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 535:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 536:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 773              		.loc 1 536 21
 774 043a FFF7FEFF 		bl	HAL_GetTick
 775 043e 3861     		str	r0, [r7, #16]
 537:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 538:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 539:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 776              		.loc 1 539 14
 777 0440 08E0     		b	.L54
 778              	.L55:
 540:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 541:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 779              		.loc 1 541 15
 780 0442 FFF7FEFF 		bl	HAL_GetTick
 781 0446 0246     		mov	r2, r0
 782              		.loc 1 541 29
 783 0448 3B69     		ldr	r3, [r7, #16]
 784 044a D31A     		subs	r3, r2, r3
 785              		.loc 1 541 13
 786 044c 022B     		cmp	r3, #2
 787 044e 01D9     		bls	.L54
 542:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 543:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 788              		.loc 1 543 20
 789 0450 0323     		movs	r3, #3
 790 0452 09E0     		b	.L5
 791              	.L54:
 539:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 792              		.loc 1 539 15
 793 0454 064B     		ldr	r3, .L59
 794 0456 1B68     		ldr	r3, [r3]
 795 0458 03F00073 		and	r3, r3, #33554432
 539:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 796              		.loc 1 539 14
 797 045c 002B     		cmp	r3, #0
 798 045e F0D1     		bne	.L55
 799 0460 01E0     		b	.L47
 800              	.L48:
ARM GAS  /tmp/ccHb00aP.s 			page 25


 544:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 545:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 546:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 547:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 548:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 549:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 550:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 801              		.loc 1 550 14
 802 0462 0123     		movs	r3, #1
 803 0464 00E0     		b	.L5
 804              	.L47:
 551:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 552:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 553:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 805              		.loc 1 553 10
 806 0466 0023     		movs	r3, #0
 807              	.L5:
 554:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 808              		.loc 1 554 1
 809 0468 1846     		mov	r0, r3
 810 046a 1837     		adds	r7, r7, #24
 811              	.LCFI7:
 812              		.cfi_def_cfa_offset 8
 813 046c BD46     		mov	sp, r7
 814              	.LCFI8:
 815              		.cfi_def_cfa_register 13
 816              		@ sp needed
 817 046e 80BD     		pop	{r7, pc}
 818              	.L60:
 819              		.align	2
 820              	.L59:
 821 0470 00380240 		.word	1073887232
 822 0474 00700040 		.word	1073770496
 823 0478 60004742 		.word	1111949408
 824              		.cfi_endproc
 825              	.LFE127:
 827              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 828              		.align	1
 829              		.global	HAL_RCC_ClockConfig
 830              		.syntax unified
 831              		.thumb
 832              		.thumb_func
 833              		.fpu fpv4-sp-d16
 835              	HAL_RCC_ClockConfig:
 836              	.LFB128:
 555:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 556:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 557:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB busses clocks according to the specified
 558:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 559:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 560:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 561:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  FLatency FLASH Latency, this parameter depend on device selected
 562:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 563:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 564:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 565:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 566:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
ARM GAS  /tmp/ccHb00aP.s 			page 26


 567:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
 568:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 569:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 570:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 571:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 572:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 573:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 574:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 575:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 576:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 577:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 578:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 579:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 580:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 581:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 582:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 837              		.loc 1 582 1
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 16
 840              		@ frame_needed = 1, uses_anonymous_args = 0
 841 0000 80B5     		push	{r7, lr}
 842              	.LCFI9:
 843              		.cfi_def_cfa_offset 8
 844              		.cfi_offset 7, -8
 845              		.cfi_offset 14, -4
 846 0002 84B0     		sub	sp, sp, #16
 847              	.LCFI10:
 848              		.cfi_def_cfa_offset 24
 849 0004 00AF     		add	r7, sp, #0
 850              	.LCFI11:
 851              		.cfi_def_cfa_register 7
 852 0006 7860     		str	r0, [r7, #4]
 853 0008 3960     		str	r1, [r7]
 583:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart;
 584:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 585:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 586:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 854              		.loc 1 586 5
 855 000a 7B68     		ldr	r3, [r7, #4]
 856 000c 002B     		cmp	r3, #0
 857 000e 01D1     		bne	.L62
 587:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 588:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
 858              		.loc 1 588 12
 859 0010 0123     		movs	r3, #1
 860 0012 CAE0     		b	.L63
 861              	.L62:
 589:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 590:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 591:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 592:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 593:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 594:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 595:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 596:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
 597:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 598:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccHb00aP.s 			page 27


 599:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 600:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 862              		.loc 1 600 17
 863 0014 674B     		ldr	r3, .L79
 864 0016 1B68     		ldr	r3, [r3]
 865 0018 03F00F03 		and	r3, r3, #15
 866              		.loc 1 600 5
 867 001c 3A68     		ldr	r2, [r7]
 868 001e 9A42     		cmp	r2, r3
 869 0020 0CD9     		bls	.L64
 601:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 602:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 603:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 870              		.loc 1 603 5
 871 0022 644B     		ldr	r3, .L79
 872 0024 3A68     		ldr	r2, [r7]
 873 0026 D2B2     		uxtb	r2, r2
 874 0028 1A70     		strb	r2, [r3]
 604:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 605:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 606:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 607:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 875              		.loc 1 607 8
 876 002a 624B     		ldr	r3, .L79
 877 002c 1B68     		ldr	r3, [r3]
 878 002e 03F00F03 		and	r3, r3, #15
 879              		.loc 1 607 7
 880 0032 3A68     		ldr	r2, [r7]
 881 0034 9A42     		cmp	r2, r3
 882 0036 01D0     		beq	.L64
 608:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 609:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 883              		.loc 1 609 14
 884 0038 0123     		movs	r3, #1
 885 003a B6E0     		b	.L63
 886              	.L64:
 610:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 611:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 612:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 613:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 614:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 887              		.loc 1 614 25
 888 003c 7B68     		ldr	r3, [r7, #4]
 889 003e 1B68     		ldr	r3, [r3]
 890              		.loc 1 614 38
 891 0040 03F00203 		and	r3, r3, #2
 892              		.loc 1 614 5
 893 0044 002B     		cmp	r3, #0
 894 0046 20D0     		beq	.L65
 615:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 616:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the highest APBx dividers in order to ensure that we do not go through
 617:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 618:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 895              		.loc 1 618 27
 896 0048 7B68     		ldr	r3, [r7, #4]
 897 004a 1B68     		ldr	r3, [r3]
 898              		.loc 1 618 40
ARM GAS  /tmp/ccHb00aP.s 			page 28


 899 004c 03F00403 		and	r3, r3, #4
 900              		.loc 1 618 7
 901 0050 002B     		cmp	r3, #0
 902 0052 05D0     		beq	.L66
 619:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 620:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 903              		.loc 1 620 7
 904 0054 584B     		ldr	r3, .L79+4
 905 0056 9B68     		ldr	r3, [r3, #8]
 906 0058 574A     		ldr	r2, .L79+4
 907 005a 43F4E053 		orr	r3, r3, #7168
 908 005e 9360     		str	r3, [r2, #8]
 909              	.L66:
 621:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 622:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 623:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 910              		.loc 1 623 27
 911 0060 7B68     		ldr	r3, [r7, #4]
 912 0062 1B68     		ldr	r3, [r3]
 913              		.loc 1 623 40
 914 0064 03F00803 		and	r3, r3, #8
 915              		.loc 1 623 7
 916 0068 002B     		cmp	r3, #0
 917 006a 05D0     		beq	.L67
 624:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 625:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 918              		.loc 1 625 7
 919 006c 524B     		ldr	r3, .L79+4
 920 006e 9B68     		ldr	r3, [r3, #8]
 921 0070 514A     		ldr	r2, .L79+4
 922 0072 43F46043 		orr	r3, r3, #57344
 923 0076 9360     		str	r3, [r2, #8]
 924              	.L67:
 626:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 627:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 628:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 629:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 925              		.loc 1 629 5
 926 0078 4F4B     		ldr	r3, .L79+4
 927 007a 9B68     		ldr	r3, [r3, #8]
 928 007c 23F0F002 		bic	r2, r3, #240
 929 0080 7B68     		ldr	r3, [r7, #4]
 930 0082 9B68     		ldr	r3, [r3, #8]
 931 0084 4C49     		ldr	r1, .L79+4
 932 0086 1343     		orrs	r3, r3, r2
 933 0088 8B60     		str	r3, [r1, #8]
 934              	.L65:
 630:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 631:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 632:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 633:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 935              		.loc 1 633 25
 936 008a 7B68     		ldr	r3, [r7, #4]
 937 008c 1B68     		ldr	r3, [r3]
 938              		.loc 1 633 38
 939 008e 03F00103 		and	r3, r3, #1
 940              		.loc 1 633 5
ARM GAS  /tmp/ccHb00aP.s 			page 29


 941 0092 002B     		cmp	r3, #0
 942 0094 44D0     		beq	.L68
 634:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 635:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 636:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 637:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 638:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 943              		.loc 1 638 25
 944 0096 7B68     		ldr	r3, [r7, #4]
 945 0098 5B68     		ldr	r3, [r3, #4]
 946              		.loc 1 638 7
 947 009a 012B     		cmp	r3, #1
 948 009c 07D1     		bne	.L69
 639:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 640:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE ready flag */
 641:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 949              		.loc 1 641 10
 950 009e 464B     		ldr	r3, .L79+4
 951 00a0 1B68     		ldr	r3, [r3]
 952 00a2 03F40033 		and	r3, r3, #131072
 953              		.loc 1 641 9
 954 00a6 002B     		cmp	r3, #0
 955 00a8 19D1     		bne	.L70
 642:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 643:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 956              		.loc 1 643 16
 957 00aa 0123     		movs	r3, #1
 958 00ac 7DE0     		b	.L63
 959              	.L69:
 644:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 645:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 646:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 647:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 960              		.loc 1 647 31
 961 00ae 7B68     		ldr	r3, [r7, #4]
 962 00b0 5B68     		ldr	r3, [r3, #4]
 963              		.loc 1 647 12
 964 00b2 022B     		cmp	r3, #2
 965 00b4 03D0     		beq	.L71
 648:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 966              		.loc 1 648 31 discriminator 1
 967 00b6 7B68     		ldr	r3, [r7, #4]
 968 00b8 5B68     		ldr	r3, [r3, #4]
 647:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 969              		.loc 1 647 76 discriminator 1
 970 00ba 032B     		cmp	r3, #3
 971 00bc 07D1     		bne	.L72
 972              	.L71:
 649:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 650:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the PLL ready flag */
 651:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 973              		.loc 1 651 10
 974 00be 3E4B     		ldr	r3, .L79+4
 975 00c0 1B68     		ldr	r3, [r3]
 976 00c2 03F00073 		and	r3, r3, #33554432
 977              		.loc 1 651 9
 978 00c6 002B     		cmp	r3, #0
ARM GAS  /tmp/ccHb00aP.s 			page 30


 979 00c8 09D1     		bne	.L70
 652:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 653:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 980              		.loc 1 653 16
 981 00ca 0123     		movs	r3, #1
 982 00cc 6DE0     		b	.L63
 983              	.L72:
 654:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 655:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 656:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 657:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 658:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 659:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI ready flag */
 660:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 984              		.loc 1 660 10
 985 00ce 3A4B     		ldr	r3, .L79+4
 986 00d0 1B68     		ldr	r3, [r3]
 987 00d2 03F00203 		and	r3, r3, #2
 988              		.loc 1 660 9
 989 00d6 002B     		cmp	r3, #0
 990 00d8 01D1     		bne	.L70
 661:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 662:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 991              		.loc 1 662 16
 992 00da 0123     		movs	r3, #1
 993 00dc 65E0     		b	.L63
 994              	.L70:
 663:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 664:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 665:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 666:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 995              		.loc 1 666 5
 996 00de 364B     		ldr	r3, .L79+4
 997 00e0 9B68     		ldr	r3, [r3, #8]
 998 00e2 23F00302 		bic	r2, r3, #3
 999 00e6 7B68     		ldr	r3, [r7, #4]
 1000 00e8 5B68     		ldr	r3, [r3, #4]
 1001 00ea 3349     		ldr	r1, .L79+4
 1002 00ec 1343     		orrs	r3, r3, r2
 1003 00ee 8B60     		str	r3, [r1, #8]
 667:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 668:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Get Start Tick */
 669:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1004              		.loc 1 669 17
 1005 00f0 FFF7FEFF 		bl	HAL_GetTick
 1006 00f4 F860     		str	r0, [r7, #12]
 670:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 671:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 1007              		.loc 1 671 11
 1008 00f6 0AE0     		b	.L74
 1009              	.L75:
 672:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 673:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1010              		.loc 1 673 12
 1011 00f8 FFF7FEFF 		bl	HAL_GetTick
 1012 00fc 0246     		mov	r2, r0
 1013              		.loc 1 673 26
ARM GAS  /tmp/ccHb00aP.s 			page 31


 1014 00fe FB68     		ldr	r3, [r7, #12]
 1015 0100 D31A     		subs	r3, r2, r3
 1016              		.loc 1 673 10
 1017 0102 41F28832 		movw	r2, #5000
 1018 0106 9342     		cmp	r3, r2
 1019 0108 01D9     		bls	.L74
 674:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 675:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1020              		.loc 1 675 16
 1021 010a 0323     		movs	r3, #3
 1022 010c 4DE0     		b	.L63
 1023              	.L74:
 671:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1024              		.loc 1 671 12
 1025 010e 2A4B     		ldr	r3, .L79+4
 1026 0110 9B68     		ldr	r3, [r3, #8]
 1027 0112 03F00C02 		and	r2, r3, #12
 671:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1028              		.loc 1 671 63
 1029 0116 7B68     		ldr	r3, [r7, #4]
 1030 0118 5B68     		ldr	r3, [r3, #4]
 671:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1031              		.loc 1 671 78
 1032 011a 9B00     		lsls	r3, r3, #2
 671:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1033              		.loc 1 671 11
 1034 011c 9A42     		cmp	r2, r3
 1035 011e EBD1     		bne	.L75
 1036              	.L68:
 676:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 677:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 678:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 679:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 680:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 681:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 1037              		.loc 1 681 17
 1038 0120 244B     		ldr	r3, .L79
 1039 0122 1B68     		ldr	r3, [r3]
 1040 0124 03F00F03 		and	r3, r3, #15
 1041              		.loc 1 681 5
 1042 0128 3A68     		ldr	r2, [r7]
 1043 012a 9A42     		cmp	r2, r3
 1044 012c 0CD2     		bcs	.L76
 682:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 683:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****      /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 684:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1045              		.loc 1 684 5
 1046 012e 214B     		ldr	r3, .L79
 1047 0130 3A68     		ldr	r2, [r7]
 1048 0132 D2B2     		uxtb	r2, r2
 1049 0134 1A70     		strb	r2, [r3]
 685:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 686:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 687:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 688:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1050              		.loc 1 688 8
 1051 0136 1F4B     		ldr	r3, .L79
ARM GAS  /tmp/ccHb00aP.s 			page 32


 1052 0138 1B68     		ldr	r3, [r3]
 1053 013a 03F00F03 		and	r3, r3, #15
 1054              		.loc 1 688 7
 1055 013e 3A68     		ldr	r2, [r7]
 1056 0140 9A42     		cmp	r2, r3
 1057 0142 01D0     		beq	.L76
 689:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 690:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 1058              		.loc 1 690 14
 1059 0144 0123     		movs	r3, #1
 1060 0146 30E0     		b	.L63
 1061              	.L76:
 691:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 692:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 693:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 694:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 695:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1062              		.loc 1 695 25
 1063 0148 7B68     		ldr	r3, [r7, #4]
 1064 014a 1B68     		ldr	r3, [r3]
 1065              		.loc 1 695 38
 1066 014c 03F00403 		and	r3, r3, #4
 1067              		.loc 1 695 5
 1068 0150 002B     		cmp	r3, #0
 1069 0152 08D0     		beq	.L77
 696:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 697:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 698:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1070              		.loc 1 698 5
 1071 0154 184B     		ldr	r3, .L79+4
 1072 0156 9B68     		ldr	r3, [r3, #8]
 1073 0158 23F4E052 		bic	r2, r3, #7168
 1074 015c 7B68     		ldr	r3, [r7, #4]
 1075 015e DB68     		ldr	r3, [r3, #12]
 1076 0160 1549     		ldr	r1, .L79+4
 1077 0162 1343     		orrs	r3, r3, r2
 1078 0164 8B60     		str	r3, [r1, #8]
 1079              	.L77:
 699:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 700:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 701:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 702:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1080              		.loc 1 702 25
 1081 0166 7B68     		ldr	r3, [r7, #4]
 1082 0168 1B68     		ldr	r3, [r3]
 1083              		.loc 1 702 38
 1084 016a 03F00803 		and	r3, r3, #8
 1085              		.loc 1 702 5
 1086 016e 002B     		cmp	r3, #0
 1087 0170 09D0     		beq	.L78
 703:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 704:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 705:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1088              		.loc 1 705 5
 1089 0172 114B     		ldr	r3, .L79+4
 1090 0174 9B68     		ldr	r3, [r3, #8]
 1091 0176 23F46042 		bic	r2, r3, #57344
ARM GAS  /tmp/ccHb00aP.s 			page 33


 1092 017a 7B68     		ldr	r3, [r7, #4]
 1093 017c 1B69     		ldr	r3, [r3, #16]
 1094 017e DB00     		lsls	r3, r3, #3
 1095 0180 0D49     		ldr	r1, .L79+4
 1096 0182 1343     		orrs	r3, r3, r2
 1097 0184 8B60     		str	r3, [r1, #8]
 1098              	.L78:
 706:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 707:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 708:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 709:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 1099              		.loc 1 709 21
 1100 0186 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1101 018a 0246     		mov	r2, r0
 1102              		.loc 1 709 68
 1103 018c 0A4B     		ldr	r3, .L79+4
 1104 018e 9B68     		ldr	r3, [r3, #8]
 1105              		.loc 1 709 91
 1106 0190 1B09     		lsrs	r3, r3, #4
 1107 0192 03F00F03 		and	r3, r3, #15
 1108              		.loc 1 709 63
 1109 0196 0949     		ldr	r1, .L79+8
 1110 0198 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1111              		.loc 1 709 47
 1112 019a 22FA03F3 		lsr	r3, r2, r3
 1113              		.loc 1 709 19
 1114 019e 084A     		ldr	r2, .L79+12
 1115 01a0 1360     		str	r3, [r2]
 710:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 711:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings */
 712:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 1116              		.loc 1 712 3
 1117 01a2 0F20     		movs	r0, #15
 1118 01a4 FFF7FEFF 		bl	HAL_InitTick
 713:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 714:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 1119              		.loc 1 714 10
 1120 01a8 0023     		movs	r3, #0
 1121              	.L63:
 715:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1122              		.loc 1 715 1
 1123 01aa 1846     		mov	r0, r3
 1124 01ac 1037     		adds	r7, r7, #16
 1125              	.LCFI12:
 1126              		.cfi_def_cfa_offset 8
 1127 01ae BD46     		mov	sp, r7
 1128              	.LCFI13:
 1129              		.cfi_def_cfa_register 13
 1130              		@ sp needed
 1131 01b0 80BD     		pop	{r7, pc}
 1132              	.L80:
 1133 01b2 00BF     		.align	2
 1134              	.L79:
 1135 01b4 003C0240 		.word	1073888256
 1136 01b8 00380240 		.word	1073887232
 1137 01bc 00000000 		.word	AHBPrescTable
 1138 01c0 00000000 		.word	SystemCoreClock
ARM GAS  /tmp/ccHb00aP.s 			page 34


 1139              		.cfi_endproc
 1140              	.LFE128:
 1142              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1143              		.align	1
 1144              		.global	HAL_RCC_MCOConfig
 1145              		.syntax unified
 1146              		.thumb
 1147              		.thumb_func
 1148              		.fpu fpv4-sp-d16
 1150              	HAL_RCC_MCOConfig:
 1151              	.LFB129:
 716:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 717:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 718:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 719:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 720:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 721:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 722:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
 723:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 724:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 725:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 726:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
 727:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 728:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 729:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
 730:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     frequencies.
 731:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 732:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 733:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 734:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 735:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 736:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 737:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
 738:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
 739:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 740:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 741:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
 742:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
 743:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 744:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 745:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
 746:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
 747:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
 748:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLLCLK: main PLL clock selected as MCO1 source
 749:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 750:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source, available for a
 751:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_I2SCLK: I2SCLK clock selected as MCO2 source, available only for
 752:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
 753:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK: main PLL clock selected as MCO2 source
 754:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCOx prescaler.
 755:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 756:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1: no division applied to MCOx clock
 757:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_2: division by 2 applied to MCOx clock
 758:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_3: division by 3 applied to MCOx clock
 759:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_4: division by 4 applied to MCOx clock
 760:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_5: division by 5 applied to MCOx clock
 761:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note  For STM32F410Rx devices to output I2SCLK clock on MCO2 you should have
ARM GAS  /tmp/ccHb00aP.s 			page 35


 762:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *        at last one of the SPI clocks enabled (SPI1, SPI2 or SPI5).
 763:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 764:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 765:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 766:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1152              		.loc 1 766 1
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 48
 1155              		@ frame_needed = 1, uses_anonymous_args = 0
 1156 0000 80B5     		push	{r7, lr}
 1157              	.LCFI14:
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 7, -8
 1160              		.cfi_offset 14, -4
 1161 0002 8CB0     		sub	sp, sp, #48
 1162              	.LCFI15:
 1163              		.cfi_def_cfa_offset 56
 1164 0004 00AF     		add	r7, sp, #0
 1165              	.LCFI16:
 1166              		.cfi_def_cfa_register 7
 1167 0006 F860     		str	r0, [r7, #12]
 1168 0008 B960     		str	r1, [r7, #8]
 1169 000a 7A60     		str	r2, [r7, #4]
 767:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 768:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 769:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 770:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 771:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* RCC_MCO1 */
 772:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_MCOx == RCC_MCO1)
 1170              		.loc 1 772 5
 1171 000c FB68     		ldr	r3, [r7, #12]
 1172 000e 002B     		cmp	r3, #0
 1173 0010 29D1     		bne	.L82
 1174              	.LBB4:
 773:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 774:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 775:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 776:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO1 Clock Enable */
 777:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO1_CLK_ENABLE();
 1175              		.loc 1 777 5
 1176 0012 0023     		movs	r3, #0
 1177 0014 BB61     		str	r3, [r7, #24]
 1178 0016 2B4B     		ldr	r3, .L85
 1179 0018 1B6B     		ldr	r3, [r3, #48]
 1180 001a 2A4A     		ldr	r2, .L85
 1181 001c 43F00103 		orr	r3, r3, #1
 1182 0020 1363     		str	r3, [r2, #48]
 1183 0022 284B     		ldr	r3, .L85
 1184 0024 1B6B     		ldr	r3, [r3, #48]
 1185 0026 03F00103 		and	r3, r3, #1
 1186 002a BB61     		str	r3, [r7, #24]
 1187 002c BB69     		ldr	r3, [r7, #24]
 1188              	.LBE4:
 778:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 779:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */
 780:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
 1189              		.loc 1 780 25
ARM GAS  /tmp/ccHb00aP.s 			page 36


 1190 002e 4FF48073 		mov	r3, #256
 1191 0032 FB61     		str	r3, [r7, #28]
 781:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1192              		.loc 1 781 26
 1193 0034 0223     		movs	r3, #2
 1194 0036 3B62     		str	r3, [r7, #32]
 782:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1195              		.loc 1 782 27
 1196 0038 0323     		movs	r3, #3
 1197 003a BB62     		str	r3, [r7, #40]
 783:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1198              		.loc 1 783 26
 1199 003c 0023     		movs	r3, #0
 1200 003e 7B62     		str	r3, [r7, #36]
 784:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1201              		.loc 1 784 31
 1202 0040 0023     		movs	r3, #0
 1203 0042 FB62     		str	r3, [r7, #44]
 785:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1204              		.loc 1 785 5
 1205 0044 07F11C03 		add	r3, r7, #28
 1206 0048 1946     		mov	r1, r3
 1207 004a 1F48     		ldr	r0, .L85+4
 1208 004c FFF7FEFF 		bl	HAL_GPIO_Init
 786:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 787:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[2:0] bits then Select MCO1 clock source and prescaler */
 788:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 1209              		.loc 1 788 5
 1210 0050 1C4B     		ldr	r3, .L85
 1211 0052 9B68     		ldr	r3, [r3, #8]
 1212 0054 23F0EC62 		bic	r2, r3, #123731968
 1213 0058 B968     		ldr	r1, [r7, #8]
 1214 005a 7B68     		ldr	r3, [r7, #4]
 1215 005c 0B43     		orrs	r3, r3, r1
 1216 005e 1949     		ldr	r1, .L85
 1217 0060 1343     		orrs	r3, r3, r2
 1218 0062 8B60     		str	r3, [r1, #8]
 789:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 790:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO1 enable feature is available only on STM32F410xx devices */
 791:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO1EN)
 792:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO1_ENABLE();
 793:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO1EN */
 794:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 795:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2)
 796:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 797:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 798:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
 799:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 800:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO2 Clock Enable */
 801:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO2_CLK_ENABLE();
 802:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 803:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
 804:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
 805:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 806:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 807:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 808:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
ARM GAS  /tmp/ccHb00aP.s 			page 37


 809:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 810:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 811:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[2:0] bits then Select MCO2 clock source and prescaler */
 812:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 3U)))
 813:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 814:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO2 enable feature is available only on STM32F410Rx devices */
 815:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2EN)
 816:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO2_ENABLE();
 817:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2EN */
 818:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 819:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2 */
 820:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1219              		.loc 1 820 1
 1220 0064 29E0     		b	.L84
 1221              	.L82:
 1222              	.LBB5:
 801:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1223              		.loc 1 801 5
 1224 0066 0023     		movs	r3, #0
 1225 0068 7B61     		str	r3, [r7, #20]
 1226 006a 164B     		ldr	r3, .L85
 1227 006c 1B6B     		ldr	r3, [r3, #48]
 1228 006e 154A     		ldr	r2, .L85
 1229 0070 43F00403 		orr	r3, r3, #4
 1230 0074 1363     		str	r3, [r2, #48]
 1231 0076 134B     		ldr	r3, .L85
 1232 0078 1B6B     		ldr	r3, [r3, #48]
 1233 007a 03F00403 		and	r3, r3, #4
 1234 007e 7B61     		str	r3, [r7, #20]
 1235 0080 7B69     		ldr	r3, [r7, #20]
 1236              	.LBE5:
 804:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1237              		.loc 1 804 25
 1238 0082 4FF40073 		mov	r3, #512
 1239 0086 FB61     		str	r3, [r7, #28]
 805:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1240              		.loc 1 805 26
 1241 0088 0223     		movs	r3, #2
 1242 008a 3B62     		str	r3, [r7, #32]
 806:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1243              		.loc 1 806 27
 1244 008c 0323     		movs	r3, #3
 1245 008e BB62     		str	r3, [r7, #40]
 807:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1246              		.loc 1 807 26
 1247 0090 0023     		movs	r3, #0
 1248 0092 7B62     		str	r3, [r7, #36]
 808:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1249              		.loc 1 808 31
 1250 0094 0023     		movs	r3, #0
 1251 0096 FB62     		str	r3, [r7, #44]
 809:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1252              		.loc 1 809 5
 1253 0098 07F11C03 		add	r3, r7, #28
 1254 009c 1946     		mov	r1, r3
 1255 009e 0B48     		ldr	r0, .L85+8
 1256 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccHb00aP.s 			page 38


 812:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1257              		.loc 1 812 5
 1258 00a4 074B     		ldr	r3, .L85
 1259 00a6 9B68     		ldr	r3, [r3, #8]
 1260 00a8 23F07842 		bic	r2, r3, #-134217728
 1261 00ac 7B68     		ldr	r3, [r7, #4]
 1262 00ae D900     		lsls	r1, r3, #3
 1263 00b0 BB68     		ldr	r3, [r7, #8]
 1264 00b2 0B43     		orrs	r3, r3, r1
 1265 00b4 0349     		ldr	r1, .L85
 1266 00b6 1343     		orrs	r3, r3, r2
 1267 00b8 8B60     		str	r3, [r1, #8]
 1268              	.L84:
 1269              		.loc 1 820 1
 1270 00ba 00BF     		nop
 1271 00bc 3037     		adds	r7, r7, #48
 1272              	.LCFI17:
 1273              		.cfi_def_cfa_offset 8
 1274 00be BD46     		mov	sp, r7
 1275              	.LCFI18:
 1276              		.cfi_def_cfa_register 13
 1277              		@ sp needed
 1278 00c0 80BD     		pop	{r7, pc}
 1279              	.L86:
 1280 00c2 00BF     		.align	2
 1281              	.L85:
 1282 00c4 00380240 		.word	1073887232
 1283 00c8 00000240 		.word	1073872896
 1284 00cc 00080240 		.word	1073874944
 1285              		.cfi_endproc
 1286              	.LFE129:
 1288              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1289              		.align	1
 1290              		.global	HAL_RCC_EnableCSS
 1291              		.syntax unified
 1292              		.thumb
 1293              		.thumb_func
 1294              		.fpu fpv4-sp-d16
 1296              	HAL_RCC_EnableCSS:
 1297              	.LFB130:
 821:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 822:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 823:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 824:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 825:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 826:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 827:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
 828:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.
 829:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 830:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 831:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 832:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1298              		.loc 1 832 1
 1299              		.cfi_startproc
 1300              		@ args = 0, pretend = 0, frame = 0
 1301              		@ frame_needed = 1, uses_anonymous_args = 0
 1302              		@ link register save eliminated.
ARM GAS  /tmp/ccHb00aP.s 			page 39


 1303 0000 80B4     		push	{r7}
 1304              	.LCFI19:
 1305              		.cfi_def_cfa_offset 4
 1306              		.cfi_offset 7, -4
 1307 0002 00AF     		add	r7, sp, #0
 1308              	.LCFI20:
 1309              		.cfi_def_cfa_register 7
 833:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1310              		.loc 1 833 3
 1311 0004 034B     		ldr	r3, .L88
 1312              		.loc 1 833 38
 1313 0006 0122     		movs	r2, #1
 1314 0008 1A60     		str	r2, [r3]
 834:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1315              		.loc 1 834 1
 1316 000a 00BF     		nop
 1317 000c BD46     		mov	sp, r7
 1318              	.LCFI21:
 1319              		.cfi_def_cfa_register 13
 1320              		@ sp needed
 1321 000e 5DF8047B 		ldr	r7, [sp], #4
 1322              	.LCFI22:
 1323              		.cfi_restore 7
 1324              		.cfi_def_cfa_offset 0
 1325 0012 7047     		bx	lr
 1326              	.L89:
 1327              		.align	2
 1328              	.L88:
 1329 0014 4C004742 		.word	1111949388
 1330              		.cfi_endproc
 1331              	.LFE130:
 1333              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1334              		.align	1
 1335              		.global	HAL_RCC_DisableCSS
 1336              		.syntax unified
 1337              		.thumb
 1338              		.thumb_func
 1339              		.fpu fpv4-sp-d16
 1341              	HAL_RCC_DisableCSS:
 1342              	.LFB131:
 835:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 836:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 837:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 838:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 839:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 840:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 841:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1343              		.loc 1 841 1
 1344              		.cfi_startproc
 1345              		@ args = 0, pretend = 0, frame = 0
 1346              		@ frame_needed = 1, uses_anonymous_args = 0
 1347              		@ link register save eliminated.
 1348 0000 80B4     		push	{r7}
 1349              	.LCFI23:
 1350              		.cfi_def_cfa_offset 4
 1351              		.cfi_offset 7, -4
 1352 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccHb00aP.s 			page 40


 1353              	.LCFI24:
 1354              		.cfi_def_cfa_register 7
 842:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1355              		.loc 1 842 3
 1356 0004 034B     		ldr	r3, .L91
 1357              		.loc 1 842 38
 1358 0006 0022     		movs	r2, #0
 1359 0008 1A60     		str	r2, [r3]
 843:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1360              		.loc 1 843 1
 1361 000a 00BF     		nop
 1362 000c BD46     		mov	sp, r7
 1363              	.LCFI25:
 1364              		.cfi_def_cfa_register 13
 1365              		@ sp needed
 1366 000e 5DF8047B 		ldr	r7, [sp], #4
 1367              	.LCFI26:
 1368              		.cfi_restore 7
 1369              		.cfi_def_cfa_offset 0
 1370 0012 7047     		bx	lr
 1371              	.L92:
 1372              		.align	2
 1373              	.L91:
 1374 0014 4C004742 		.word	1111949388
 1375              		.cfi_endproc
 1376              	.LFE131:
 1378              		.global	__aeabi_uldivmod
 1379              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1380              		.align	1
 1381              		.weak	HAL_RCC_GetSysClockFreq
 1382              		.syntax unified
 1383              		.thumb
 1384              		.thumb_func
 1385              		.fpu fpv4-sp-d16
 1387              	HAL_RCC_GetSysClockFreq:
 1388              	.LFB132:
 844:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 845:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 846:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
 847:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 848:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
 849:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
 850:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         constant and the selected clock source:
 851:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 852:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
 853:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**)
 854:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.
 855:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 856:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
 857:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               in voltage and temperature.
 858:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 859:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
 860:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 861:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                have wrong result.
 862:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 863:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 864:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         value for HSE crystal.
ARM GAS  /tmp/ccHb00aP.s 			page 41


 865:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 866:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
 867:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
 868:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 869:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 870:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 871:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 872:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 873:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval SYSCLK frequency
 874:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 875:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak uint32_t HAL_RCC_GetSysClockFreq(void)
 876:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1389              		.loc 1 876 1
 1390              		.cfi_startproc
 1391              		@ args = 0, pretend = 0, frame = 64
 1392              		@ frame_needed = 1, uses_anonymous_args = 0
 1393 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 1394              	.LCFI27:
 1395              		.cfi_def_cfa_offset 32
 1396              		.cfi_offset 4, -32
 1397              		.cfi_offset 5, -28
 1398              		.cfi_offset 7, -24
 1399              		.cfi_offset 8, -20
 1400              		.cfi_offset 9, -16
 1401              		.cfi_offset 10, -12
 1402              		.cfi_offset 11, -8
 1403              		.cfi_offset 14, -4
 1404 0004 90B0     		sub	sp, sp, #64
 1405              	.LCFI28:
 1406              		.cfi_def_cfa_offset 96
 1407 0006 00AF     		add	r7, sp, #0
 1408              	.LCFI29:
 1409              		.cfi_def_cfa_register 7
 877:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 1410              		.loc 1 877 12
 1411 0008 0023     		movs	r3, #0
 1412 000a 7B63     		str	r3, [r7, #52]
 1413              		.loc 1 877 23
 1414 000c 0023     		movs	r3, #0
 1415 000e FB63     		str	r3, [r7, #60]
 1416              		.loc 1 877 36
 1417 0010 0023     		movs	r3, #0
 1418 0012 3B63     		str	r3, [r7, #48]
 878:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 1419              		.loc 1 878 12
 1420 0014 0023     		movs	r3, #0
 1421 0016 BB63     		str	r3, [r7, #56]
 879:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 880:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 881:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 1422              		.loc 1 881 14
 1423 0018 594B     		ldr	r3, .L102
 1424 001a 9B68     		ldr	r3, [r3, #8]
 1425              		.loc 1 881 21
 1426 001c 03F00C03 		and	r3, r3, #12
 1427              		.loc 1 881 3
 1428 0020 082B     		cmp	r3, #8
ARM GAS  /tmp/ccHb00aP.s 			page 42


 1429 0022 0DD0     		beq	.L94
 1430 0024 082B     		cmp	r3, #8
 1431 0026 00F2A180 		bhi	.L95
 1432 002a 002B     		cmp	r3, #0
 1433 002c 02D0     		beq	.L96
 1434 002e 042B     		cmp	r3, #4
 1435 0030 03D0     		beq	.L97
 1436 0032 9BE0     		b	.L95
 1437              	.L96:
 882:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 883:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 884:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 885:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1438              		.loc 1 885 20
 1439 0034 534B     		ldr	r3, .L102+4
 1440 0036 BB63     		str	r3, [r7, #56]
 886:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        break;
 1441              		.loc 1 886 8
 1442 0038 9BE0     		b	.L98
 1443              	.L97:
 887:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 888:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 889:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 890:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1444              		.loc 1 890 20
 1445 003a 534B     		ldr	r3, .L102+8
 1446 003c BB63     		str	r3, [r7, #56]
 891:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1447              		.loc 1 891 7
 1448 003e 98E0     		b	.L98
 1449              	.L94:
 892:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 893:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
 894:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 895:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
 896:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SYSCLK = PLL_VCO / PLLP */
 897:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 1450              		.loc 1 897 17
 1451 0040 4F4B     		ldr	r3, .L102
 1452 0042 5B68     		ldr	r3, [r3, #4]
 1453              		.loc 1 897 12
 1454 0044 03F03F03 		and	r3, r3, #63
 1455 0048 7B63     		str	r3, [r7, #52]
 898:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 1456              		.loc 1 898 10
 1457 004a 4D4B     		ldr	r3, .L102
 1458 004c 5B68     		ldr	r3, [r3, #4]
 1459 004e 03F48003 		and	r3, r3, #4194304
 1460              		.loc 1 898 9
 1461 0052 002B     		cmp	r3, #0
 1462 0054 28D0     		beq	.L99
 899:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 900:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSE used as PLL clock source */
 901:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 1463              		.loc 1 901 72
 1464 0056 4A4B     		ldr	r3, .L102
 1465 0058 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccHb00aP.s 			page 43


 1466              		.loc 1 901 102
 1467 005a 9B09     		lsrs	r3, r3, #6
 1468              		.loc 1 901 56
 1469 005c 0022     		movs	r2, #0
 1470 005e 3B62     		str	r3, [r7, #32]
 1471 0060 7A62     		str	r2, [r7, #36]
 1472 0062 3B6A     		ldr	r3, [r7, #32]
 1473 0064 C3F30800 		ubfx	r0, r3, #0, #9
 1474 0068 0021     		movs	r1, #0
 1475              		.loc 1 901 53
 1476 006a 474B     		ldr	r3, .L102+8
 1477 006c 03FB01F2 		mul	r2, r3, r1
 1478 0070 0023     		movs	r3, #0
 1479 0072 00FB03F3 		mul	r3, r0, r3
 1480 0076 1344     		add	r3, r3, r2
 1481 0078 434A     		ldr	r2, .L102+8
 1482 007a A0FB0212 		umull	r1, r2, r0, r2
 1483 007e FA62     		str	r2, [r7, #44]
 1484 0080 0A46     		mov	r2, r1
 1485 0082 BA62     		str	r2, [r7, #40]
 1486 0084 FA6A     		ldr	r2, [r7, #44]
 1487 0086 1344     		add	r3, r3, r2
 1488 0088 FB62     		str	r3, [r7, #44]
 1489              		.loc 1 901 132
 1490 008a 7B6B     		ldr	r3, [r7, #52]
 1491 008c 0022     		movs	r2, #0
 1492 008e BB61     		str	r3, [r7, #24]
 1493 0090 FA61     		str	r2, [r7, #28]
 1494              		.loc 1 901 130
 1495 0092 D7E90623 		ldrd	r2, [r7, #24]
 1496 0096 D7E90A01 		ldrd	r0, [r7, #40]
 1497 009a FFF7FEFF 		bl	__aeabi_uldivmod
 1498 009e 0246     		mov	r2, r0
 1499 00a0 0B46     		mov	r3, r1
 1500              		.loc 1 901 16
 1501 00a2 1346     		mov	r3, r2
 1502 00a4 FB63     		str	r3, [r7, #60]
 1503 00a6 53E0     		b	.L100
 1504              	.L99:
 902:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 903:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 904:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 905:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSI used as PLL clock source */
 906:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 1505              		.loc 1 906 72
 1506 00a8 354B     		ldr	r3, .L102
 1507 00aa 5B68     		ldr	r3, [r3, #4]
 1508              		.loc 1 906 102
 1509 00ac 9B09     		lsrs	r3, r3, #6
 1510              		.loc 1 906 56
 1511 00ae 0022     		movs	r2, #0
 1512 00b0 3B61     		str	r3, [r7, #16]
 1513 00b2 7A61     		str	r2, [r7, #20]
 1514 00b4 3B69     		ldr	r3, [r7, #16]
 1515 00b6 C3F3080A 		ubfx	r10, r3, #0, #9
 1516 00ba 4FF0000B 		mov	fp, #0
 1517              		.loc 1 906 53
ARM GAS  /tmp/ccHb00aP.s 			page 44


 1518 00be 5246     		mov	r2, r10
 1519 00c0 5B46     		mov	r3, fp
 1520 00c2 4FF00000 		mov	r0, #0
 1521 00c6 4FF00001 		mov	r1, #0
 1522 00ca 5901     		lsls	r1, r3, #5
 1523 00cc 41EAD261 		orr	r1, r1, r2, lsr #27
 1524 00d0 5001     		lsls	r0, r2, #5
 1525 00d2 0246     		mov	r2, r0
 1526 00d4 0B46     		mov	r3, r1
 1527 00d6 B2EB0A08 		subs	r8, r2, r10
 1528 00da 63EB0B09 		sbc	r9, r3, fp
 1529 00de 4FF00002 		mov	r2, #0
 1530 00e2 4FF00003 		mov	r3, #0
 1531 00e6 4FEA8913 		lsl	r3, r9, #6
 1532 00ea 43EA9863 		orr	r3, r3, r8, lsr #26
 1533 00ee 4FEA8812 		lsl	r2, r8, #6
 1534 00f2 B2EB0804 		subs	r4, r2, r8
 1535 00f6 63EB0905 		sbc	r5, r3, r9
 1536 00fa 4FF00002 		mov	r2, #0
 1537 00fe 4FF00003 		mov	r3, #0
 1538 0102 EB00     		lsls	r3, r5, #3
 1539 0104 43EA5473 		orr	r3, r3, r4, lsr #29
 1540 0108 E200     		lsls	r2, r4, #3
 1541 010a 1446     		mov	r4, r2
 1542 010c 1D46     		mov	r5, r3
 1543 010e 14EB0A03 		adds	r3, r4, r10
 1544 0112 3B60     		str	r3, [r7]
 1545 0114 45EB0B03 		adc	r3, r5, fp
 1546 0118 7B60     		str	r3, [r7, #4]
 1547 011a 4FF00002 		mov	r2, #0
 1548 011e 4FF00003 		mov	r3, #0
 1549 0122 D7E90045 		ldrd	r4, [r7]
 1550 0126 2946     		mov	r1, r5
 1551 0128 8B02     		lsls	r3, r1, #10
 1552 012a 2146     		mov	r1, r4
 1553 012c 43EA9153 		orr	r3, r3, r1, lsr #22
 1554 0130 2146     		mov	r1, r4
 1555 0132 8A02     		lsls	r2, r1, #10
 1556 0134 1046     		mov	r0, r2
 1557 0136 1946     		mov	r1, r3
 1558              		.loc 1 906 132
 1559 0138 7B6B     		ldr	r3, [r7, #52]
 1560 013a 0022     		movs	r2, #0
 1561 013c BB60     		str	r3, [r7, #8]
 1562 013e FA60     		str	r2, [r7, #12]
 1563              		.loc 1 906 130
 1564 0140 D7E90223 		ldrd	r2, [r7, #8]
 1565 0144 FFF7FEFF 		bl	__aeabi_uldivmod
 1566 0148 0246     		mov	r2, r0
 1567 014a 0B46     		mov	r3, r1
 1568              		.loc 1 906 16
 1569 014c 1346     		mov	r3, r2
 1570 014e FB63     		str	r3, [r7, #60]
 1571              	.L100:
 907:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 908:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 1572              		.loc 1 908 21
ARM GAS  /tmp/ccHb00aP.s 			page 45


 1573 0150 0B4B     		ldr	r3, .L102
 1574 0152 5B68     		ldr	r3, [r3, #4]
 1575              		.loc 1 908 51
 1576 0154 1B0C     		lsrs	r3, r3, #16
 1577 0156 03F00303 		and	r3, r3, #3
 1578              		.loc 1 908 76
 1579 015a 0133     		adds	r3, r3, #1
 1580              		.loc 1 908 12
 1581 015c 5B00     		lsls	r3, r3, #1
 1582 015e 3B63     		str	r3, [r7, #48]
 909:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 910:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = pllvco/pllp;
 1583              		.loc 1 910 20
 1584 0160 FA6B     		ldr	r2, [r7, #60]
 1585 0162 3B6B     		ldr	r3, [r7, #48]
 1586 0164 B2FBF3F3 		udiv	r3, r2, r3
 1587 0168 BB63     		str	r3, [r7, #56]
 911:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1588              		.loc 1 911 7
 1589 016a 02E0     		b	.L98
 1590              	.L95:
 912:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 913:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     default:
 914:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 915:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1591              		.loc 1 915 20
 1592 016c 054B     		ldr	r3, .L102+4
 1593 016e BB63     		str	r3, [r7, #56]
 916:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1594              		.loc 1 916 7
 1595 0170 00BF     		nop
 1596              	.L98:
 917:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 918:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 919:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return sysclockfreq;
 1597              		.loc 1 919 10
 1598 0172 BB6B     		ldr	r3, [r7, #56]
 920:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1599              		.loc 1 920 1
 1600 0174 1846     		mov	r0, r3
 1601 0176 4037     		adds	r7, r7, #64
 1602              	.LCFI30:
 1603              		.cfi_def_cfa_offset 32
 1604 0178 BD46     		mov	sp, r7
 1605              	.LCFI31:
 1606              		.cfi_def_cfa_register 13
 1607              		@ sp needed
 1608 017a BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 1609              	.L103:
 1610 017e 00BF     		.align	2
 1611              	.L102:
 1612 0180 00380240 		.word	1073887232
 1613 0184 0024F400 		.word	16000000
 1614 0188 40787D01 		.word	25000000
 1615              		.cfi_endproc
 1616              	.LFE132:
 1618              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
ARM GAS  /tmp/ccHb00aP.s 			page 46


 1619              		.align	1
 1620              		.global	HAL_RCC_GetHCLKFreq
 1621              		.syntax unified
 1622              		.thumb
 1623              		.thumb_func
 1624              		.fpu fpv4-sp-d16
 1626              	HAL_RCC_GetHCLKFreq:
 1627              	.LFB133:
 921:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 922:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 923:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
 924:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
 925:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
 926:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 927:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 928:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated within this function
 929:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HCLK frequency
 930:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 931:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
 932:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1628              		.loc 1 932 1
 1629              		.cfi_startproc
 1630              		@ args = 0, pretend = 0, frame = 0
 1631              		@ frame_needed = 1, uses_anonymous_args = 0
 1632              		@ link register save eliminated.
 1633 0000 80B4     		push	{r7}
 1634              	.LCFI32:
 1635              		.cfi_def_cfa_offset 4
 1636              		.cfi_offset 7, -4
 1637 0002 00AF     		add	r7, sp, #0
 1638              	.LCFI33:
 1639              		.cfi_def_cfa_register 7
 933:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return SystemCoreClock;
 1640              		.loc 1 933 10
 1641 0004 034B     		ldr	r3, .L106
 1642 0006 1B68     		ldr	r3, [r3]
 934:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1643              		.loc 1 934 1
 1644 0008 1846     		mov	r0, r3
 1645 000a BD46     		mov	sp, r7
 1646              	.LCFI34:
 1647              		.cfi_def_cfa_register 13
 1648              		@ sp needed
 1649 000c 5DF8047B 		ldr	r7, [sp], #4
 1650              	.LCFI35:
 1651              		.cfi_restore 7
 1652              		.cfi_def_cfa_offset 0
 1653 0010 7047     		bx	lr
 1654              	.L107:
 1655 0012 00BF     		.align	2
 1656              	.L106:
 1657 0014 00000000 		.word	SystemCoreClock
 1658              		.cfi_endproc
 1659              	.LFE133:
 1661              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1662              		.align	1
 1663              		.global	HAL_RCC_GetPCLK1Freq
ARM GAS  /tmp/ccHb00aP.s 			page 47


 1664              		.syntax unified
 1665              		.thumb
 1666              		.thumb_func
 1667              		.fpu fpv4-sp-d16
 1669              	HAL_RCC_GetPCLK1Freq:
 1670              	.LFB134:
 935:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 936:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 937:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
 938:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
 939:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
 940:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK1 frequency
 941:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 942:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 943:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1671              		.loc 1 943 1
 1672              		.cfi_startproc
 1673              		@ args = 0, pretend = 0, frame = 0
 1674              		@ frame_needed = 1, uses_anonymous_args = 0
 1675 0000 80B5     		push	{r7, lr}
 1676              	.LCFI36:
 1677              		.cfi_def_cfa_offset 8
 1678              		.cfi_offset 7, -8
 1679              		.cfi_offset 14, -4
 1680 0002 00AF     		add	r7, sp, #0
 1681              	.LCFI37:
 1682              		.cfi_def_cfa_register 7
 944:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 945:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]
 1683              		.loc 1 945 11
 1684 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1685 0008 0246     		mov	r2, r0
 1686              		.loc 1 945 54
 1687 000a 054B     		ldr	r3, .L110
 1688 000c 9B68     		ldr	r3, [r3, #8]
 1689              		.loc 1 945 78
 1690 000e 9B0A     		lsrs	r3, r3, #10
 1691 0010 03F00703 		and	r3, r3, #7
 1692              		.loc 1 945 49
 1693 0014 0349     		ldr	r1, .L110+4
 1694 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1695              		.loc 1 945 33
 1696 0018 22FA03F3 		lsr	r3, r2, r3
 946:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1697              		.loc 1 946 1
 1698 001c 1846     		mov	r0, r3
 1699 001e 80BD     		pop	{r7, pc}
 1700              	.L111:
 1701              		.align	2
 1702              	.L110:
 1703 0020 00380240 		.word	1073887232
 1704 0024 00000000 		.word	APBPrescTable
 1705              		.cfi_endproc
 1706              	.LFE134:
 1708              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1709              		.align	1
 1710              		.global	HAL_RCC_GetPCLK2Freq
ARM GAS  /tmp/ccHb00aP.s 			page 48


 1711              		.syntax unified
 1712              		.thumb
 1713              		.thumb_func
 1714              		.fpu fpv4-sp-d16
 1716              	HAL_RCC_GetPCLK2Freq:
 1717              	.LFB135:
 947:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 948:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 949:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
 950:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
 951:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
 952:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK2 frequency
 953:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 954:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
 955:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1718              		.loc 1 955 1
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 0
 1721              		@ frame_needed = 1, uses_anonymous_args = 0
 1722 0000 80B5     		push	{r7, lr}
 1723              	.LCFI38:
 1724              		.cfi_def_cfa_offset 8
 1725              		.cfi_offset 7, -8
 1726              		.cfi_offset 14, -4
 1727 0002 00AF     		add	r7, sp, #0
 1728              	.LCFI39:
 1729              		.cfi_def_cfa_register 7
 956:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 957:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos])
 1730              		.loc 1 957 11
 1731 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1732 0008 0246     		mov	r2, r0
 1733              		.loc 1 957 53
 1734 000a 054B     		ldr	r3, .L114
 1735 000c 9B68     		ldr	r3, [r3, #8]
 1736              		.loc 1 957 77
 1737 000e 5B0B     		lsrs	r3, r3, #13
 1738 0010 03F00703 		and	r3, r3, #7
 1739              		.loc 1 957 48
 1740 0014 0349     		ldr	r1, .L114+4
 1741 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1742              		.loc 1 957 32
 1743 0018 22FA03F3 		lsr	r3, r2, r3
 958:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1744              		.loc 1 958 1
 1745 001c 1846     		mov	r0, r3
 1746 001e 80BD     		pop	{r7, pc}
 1747              	.L115:
 1748              		.align	2
 1749              	.L114:
 1750 0020 00380240 		.word	1073887232
 1751 0024 00000000 		.word	APBPrescTable
 1752              		.cfi_endproc
 1753              	.LFE135:
 1755              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1756              		.align	1
 1757              		.weak	HAL_RCC_GetOscConfig
ARM GAS  /tmp/ccHb00aP.s 			page 49


 1758              		.syntax unified
 1759              		.thumb
 1760              		.thumb_func
 1761              		.fpu fpv4-sp-d16
 1763              	HAL_RCC_GetOscConfig:
 1764              	.LFB136:
 959:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 960:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 961:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
 962:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
 963:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 964:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
 965:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 966:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 967:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 968:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1765              		.loc 1 968 1
 1766              		.cfi_startproc
 1767              		@ args = 0, pretend = 0, frame = 8
 1768              		@ frame_needed = 1, uses_anonymous_args = 0
 1769              		@ link register save eliminated.
 1770 0000 80B4     		push	{r7}
 1771              	.LCFI40:
 1772              		.cfi_def_cfa_offset 4
 1773              		.cfi_offset 7, -4
 1774 0002 83B0     		sub	sp, sp, #12
 1775              	.LCFI41:
 1776              		.cfi_def_cfa_offset 16
 1777 0004 00AF     		add	r7, sp, #0
 1778              	.LCFI42:
 1779              		.cfi_def_cfa_register 7
 1780 0006 7860     		str	r0, [r7, #4]
 969:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
 970:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 1781              		.loc 1 970 37
 1782 0008 7B68     		ldr	r3, [r7, #4]
 1783 000a 0F22     		movs	r2, #15
 1784 000c 1A60     		str	r2, [r3]
 971:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 972:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
 973:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 1785              		.loc 1 973 10
 1786 000e 454B     		ldr	r3, .L129
 1787 0010 1B68     		ldr	r3, [r3]
 1788              		.loc 1 973 15
 1789 0012 03F48023 		and	r3, r3, #262144
 1790              		.loc 1 973 5
 1791 0016 B3F5802F 		cmp	r3, #262144
 1792 001a 04D1     		bne	.L117
 974:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 975:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 1793              		.loc 1 975 33
 1794 001c 7B68     		ldr	r3, [r7, #4]
 1795 001e 4FF4A022 		mov	r2, #327680
 1796 0022 5A60     		str	r2, [r3, #4]
 1797 0024 0EE0     		b	.L118
 1798              	.L117:
ARM GAS  /tmp/ccHb00aP.s 			page 50


 976:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 977:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 1799              		.loc 1 977 15
 1800 0026 3F4B     		ldr	r3, .L129
 1801 0028 1B68     		ldr	r3, [r3]
 1802              		.loc 1 977 20
 1803 002a 03F48033 		and	r3, r3, #65536
 1804              		.loc 1 977 10
 1805 002e B3F5803F 		cmp	r3, #65536
 1806 0032 04D1     		bne	.L119
 978:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 979:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 1807              		.loc 1 979 33
 1808 0034 7B68     		ldr	r3, [r7, #4]
 1809 0036 4FF48032 		mov	r2, #65536
 1810 003a 5A60     		str	r2, [r3, #4]
 1811 003c 02E0     		b	.L118
 1812              	.L119:
 980:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 981:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 982:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 983:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 1813              		.loc 1 983 33
 1814 003e 7B68     		ldr	r3, [r7, #4]
 1815 0040 0022     		movs	r2, #0
 1816 0042 5A60     		str	r2, [r3, #4]
 1817              	.L118:
 984:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 985:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 986:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
 987:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 1818              		.loc 1 987 10
 1819 0044 374B     		ldr	r3, .L129
 1820 0046 1B68     		ldr	r3, [r3]
 1821              		.loc 1 987 15
 1822 0048 03F00103 		and	r3, r3, #1
 1823              		.loc 1 987 5
 1824 004c 012B     		cmp	r3, #1
 1825 004e 03D1     		bne	.L120
 988:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 989:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 1826              		.loc 1 989 33
 1827 0050 7B68     		ldr	r3, [r7, #4]
 1828 0052 0122     		movs	r2, #1
 1829 0054 DA60     		str	r2, [r3, #12]
 1830 0056 02E0     		b	.L121
 1831              	.L120:
 990:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 991:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 992:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 993:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 1832              		.loc 1 993 33
 1833 0058 7B68     		ldr	r3, [r7, #4]
 1834 005a 0022     		movs	r2, #0
 1835 005c DA60     		str	r2, [r3, #12]
 1836              	.L121:
 994:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
ARM GAS  /tmp/ccHb00aP.s 			page 51


 995:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 996:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_P
 1837              		.loc 1 996 59
 1838 005e 314B     		ldr	r3, .L129
 1839 0060 1B68     		ldr	r3, [r3]
 1840              		.loc 1 996 44
 1841 0062 DB08     		lsrs	r3, r3, #3
 1842 0064 03F01F02 		and	r2, r3, #31
 1843              		.loc 1 996 42
 1844 0068 7B68     		ldr	r3, [r7, #4]
 1845 006a 1A61     		str	r2, [r3, #16]
 997:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 998:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
 999:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 1846              		.loc 1 999 10
 1847 006c 2D4B     		ldr	r3, .L129
 1848 006e 1B6F     		ldr	r3, [r3, #112]
 1849              		.loc 1 999 17
 1850 0070 03F00403 		and	r3, r3, #4
 1851              		.loc 1 999 5
 1852 0074 042B     		cmp	r3, #4
 1853 0076 03D1     		bne	.L122
1000:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1001:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 1854              		.loc 1 1001 33
 1855 0078 7B68     		ldr	r3, [r7, #4]
 1856 007a 0522     		movs	r2, #5
 1857 007c 9A60     		str	r2, [r3, #8]
 1858 007e 0CE0     		b	.L123
 1859              	.L122:
1002:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1003:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 1860              		.loc 1 1003 15
 1861 0080 284B     		ldr	r3, .L129
 1862 0082 1B6F     		ldr	r3, [r3, #112]
 1863              		.loc 1 1003 22
 1864 0084 03F00103 		and	r3, r3, #1
 1865              		.loc 1 1003 10
 1866 0088 012B     		cmp	r3, #1
 1867 008a 03D1     		bne	.L124
1004:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1005:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 1868              		.loc 1 1005 33
 1869 008c 7B68     		ldr	r3, [r7, #4]
 1870 008e 0122     		movs	r2, #1
 1871 0090 9A60     		str	r2, [r3, #8]
 1872 0092 02E0     		b	.L123
 1873              	.L124:
1006:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1007:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1008:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1009:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 1874              		.loc 1 1009 33
 1875 0094 7B68     		ldr	r3, [r7, #4]
 1876 0096 0022     		movs	r2, #0
 1877 0098 9A60     		str	r2, [r3, #8]
 1878              	.L123:
ARM GAS  /tmp/ccHb00aP.s 			page 52


1010:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1011:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1012:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1013:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 1879              		.loc 1 1013 10
 1880 009a 224B     		ldr	r3, .L129
 1881 009c 5B6F     		ldr	r3, [r3, #116]
 1882              		.loc 1 1013 16
 1883 009e 03F00103 		and	r3, r3, #1
 1884              		.loc 1 1013 5
 1885 00a2 012B     		cmp	r3, #1
 1886 00a4 03D1     		bne	.L125
1014:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1015:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 1887              		.loc 1 1015 33
 1888 00a6 7B68     		ldr	r3, [r7, #4]
 1889 00a8 0122     		movs	r2, #1
 1890 00aa 5A61     		str	r2, [r3, #20]
 1891 00ac 02E0     		b	.L126
 1892              	.L125:
1016:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1017:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1018:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1019:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 1893              		.loc 1 1019 33
 1894 00ae 7B68     		ldr	r3, [r7, #4]
 1895 00b0 0022     		movs	r2, #0
 1896 00b2 5A61     		str	r2, [r3, #20]
 1897              	.L126:
1020:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1021:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1022:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1023:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 1898              		.loc 1 1023 10
 1899 00b4 1B4B     		ldr	r3, .L129
 1900 00b6 1B68     		ldr	r3, [r3]
 1901              		.loc 1 1023 15
 1902 00b8 03F08073 		and	r3, r3, #16777216
 1903              		.loc 1 1023 5
 1904 00bc B3F1807F 		cmp	r3, #16777216
 1905 00c0 03D1     		bne	.L127
1024:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1025:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 1906              		.loc 1 1025 37
 1907 00c2 7B68     		ldr	r3, [r7, #4]
 1908 00c4 0222     		movs	r2, #2
 1909 00c6 9A61     		str	r2, [r3, #24]
 1910 00c8 02E0     		b	.L128
 1911              	.L127:
1026:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1027:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1028:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1029:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 1912              		.loc 1 1029 37
 1913 00ca 7B68     		ldr	r3, [r7, #4]
 1914 00cc 0122     		movs	r2, #1
 1915 00ce 9A61     		str	r2, [r3, #24]
ARM GAS  /tmp/ccHb00aP.s 			page 53


 1916              	.L128:
1030:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1031:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 1917              		.loc 1 1031 52
 1918 00d0 144B     		ldr	r3, .L129
 1919 00d2 5B68     		ldr	r3, [r3, #4]
 1920              		.loc 1 1031 38
 1921 00d4 03F48002 		and	r2, r3, #4194304
 1922              		.loc 1 1031 36
 1923 00d8 7B68     		ldr	r3, [r7, #4]
 1924 00da DA61     		str	r2, [r3, #28]
1032:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
 1925              		.loc 1 1032 47
 1926 00dc 114B     		ldr	r3, .L129
 1927 00de 5B68     		ldr	r3, [r3, #4]
 1928              		.loc 1 1032 33
 1929 00e0 03F03F02 		and	r2, r3, #63
 1930              		.loc 1 1032 31
 1931 00e4 7B68     		ldr	r3, [r7, #4]
 1932 00e6 1A62     		str	r2, [r3, #32]
1033:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Po
 1933              		.loc 1 1033 48
 1934 00e8 0E4B     		ldr	r3, .L129
 1935 00ea 5B68     		ldr	r3, [r3, #4]
 1936              		.loc 1 1033 33
 1937 00ec 9B09     		lsrs	r3, r3, #6
 1938 00ee C3F30802 		ubfx	r2, r3, #0, #9
 1939              		.loc 1 1033 31
 1940 00f2 7B68     		ldr	r3, [r7, #4]
 1941 00f4 5A62     		str	r2, [r3, #36]
1034:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) + RCC_PLLCFGR_PLLP_0
 1942              		.loc 1 1034 50
 1943 00f6 0B4B     		ldr	r3, .L129
 1944 00f8 5B68     		ldr	r3, [r3, #4]
 1945              		.loc 1 1034 60
 1946 00fa 03F44033 		and	r3, r3, #196608
 1947              		.loc 1 1034 80
 1948 00fe 03F58033 		add	r3, r3, #65536
 1949              		.loc 1 1034 102
 1950 0102 5B00     		lsls	r3, r3, #1
 1951              		.loc 1 1034 33
 1952 0104 1A0C     		lsrs	r2, r3, #16
 1953              		.loc 1 1034 31
 1954 0106 7B68     		ldr	r3, [r7, #4]
 1955 0108 9A62     		str	r2, [r3, #40]
1035:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Po
 1956              		.loc 1 1035 48
 1957 010a 064B     		ldr	r3, .L129
 1958 010c 5B68     		ldr	r3, [r3, #4]
 1959              		.loc 1 1035 33
 1960 010e 1B0E     		lsrs	r3, r3, #24
 1961 0110 03F00F02 		and	r2, r3, #15
 1962              		.loc 1 1035 31
 1963 0114 7B68     		ldr	r3, [r7, #4]
 1964 0116 DA62     		str	r2, [r3, #44]
1036:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1965              		.loc 1 1036 1
ARM GAS  /tmp/ccHb00aP.s 			page 54


 1966 0118 00BF     		nop
 1967 011a 0C37     		adds	r7, r7, #12
 1968              	.LCFI43:
 1969              		.cfi_def_cfa_offset 4
 1970 011c BD46     		mov	sp, r7
 1971              	.LCFI44:
 1972              		.cfi_def_cfa_register 13
 1973              		@ sp needed
 1974 011e 5DF8047B 		ldr	r7, [sp], #4
 1975              	.LCFI45:
 1976              		.cfi_restore 7
 1977              		.cfi_def_cfa_offset 0
 1978 0122 7047     		bx	lr
 1979              	.L130:
 1980              		.align	2
 1981              	.L129:
 1982 0124 00380240 		.word	1073887232
 1983              		.cfi_endproc
 1984              	.LFE136:
 1986              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 1987              		.align	1
 1988              		.global	HAL_RCC_GetClockConfig
 1989              		.syntax unified
 1990              		.thumb
 1991              		.thumb_func
 1992              		.fpu fpv4-sp-d16
 1994              	HAL_RCC_GetClockConfig:
 1995              	.LFB137:
1037:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1038:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1039:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal
1040:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
1041:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that
1042:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
1043:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1044:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1045:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1046:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1047:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1996              		.loc 1 1047 1
 1997              		.cfi_startproc
 1998              		@ args = 0, pretend = 0, frame = 8
 1999              		@ frame_needed = 1, uses_anonymous_args = 0
 2000              		@ link register save eliminated.
 2001 0000 80B4     		push	{r7}
 2002              	.LCFI46:
 2003              		.cfi_def_cfa_offset 4
 2004              		.cfi_offset 7, -4
 2005 0002 83B0     		sub	sp, sp, #12
 2006              	.LCFI47:
 2007              		.cfi_def_cfa_offset 16
 2008 0004 00AF     		add	r7, sp, #0
 2009              	.LCFI48:
 2010              		.cfi_def_cfa_register 7
 2011 0006 7860     		str	r0, [r7, #4]
 2012 0008 3960     		str	r1, [r7]
1048:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
ARM GAS  /tmp/ccHb00aP.s 			page 55


1049:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2013              		.loc 1 1049 32
 2014 000a 7B68     		ldr	r3, [r7, #4]
 2015 000c 0F22     		movs	r2, #15
 2016 000e 1A60     		str	r2, [r3]
1050:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1051:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1052:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2017              		.loc 1 1052 51
 2018 0010 124B     		ldr	r3, .L132
 2019 0012 9B68     		ldr	r3, [r3, #8]
 2020              		.loc 1 1052 37
 2021 0014 03F00302 		and	r2, r3, #3
 2022              		.loc 1 1052 35
 2023 0018 7B68     		ldr	r3, [r7, #4]
 2024 001a 5A60     		str	r2, [r3, #4]
1053:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1054:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1055:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 2025              		.loc 1 1055 52
 2026 001c 0F4B     		ldr	r3, .L132
 2027 001e 9B68     		ldr	r3, [r3, #8]
 2028              		.loc 1 1055 38
 2029 0020 03F0F002 		and	r2, r3, #240
 2030              		.loc 1 1055 36
 2031 0024 7B68     		ldr	r3, [r7, #4]
 2032 0026 9A60     		str	r2, [r3, #8]
1056:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1057:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1058:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 2033              		.loc 1 1058 53
 2034 0028 0C4B     		ldr	r3, .L132
 2035 002a 9B68     		ldr	r3, [r3, #8]
 2036              		.loc 1 1058 39
 2037 002c 03F4E052 		and	r2, r3, #7168
 2038              		.loc 1 1058 37
 2039 0030 7B68     		ldr	r3, [r7, #4]
 2040 0032 DA60     		str	r2, [r3, #12]
1059:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1060:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1061:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 2041              		.loc 1 1061 54
 2042 0034 094B     		ldr	r3, .L132
 2043 0036 9B68     		ldr	r3, [r3, #8]
 2044              		.loc 1 1061 39
 2045 0038 DB08     		lsrs	r3, r3, #3
 2046 003a 03F4E052 		and	r2, r3, #7168
 2047              		.loc 1 1061 37
 2048 003e 7B68     		ldr	r3, [r7, #4]
 2049 0040 1A61     		str	r2, [r3, #16]
1062:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1063:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1064:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 2050              		.loc 1 1064 32
 2051 0042 074B     		ldr	r3, .L132+4
 2052 0044 1B68     		ldr	r3, [r3]
 2053              		.loc 1 1064 16
ARM GAS  /tmp/ccHb00aP.s 			page 56


 2054 0046 03F00F02 		and	r2, r3, #15
 2055              		.loc 1 1064 14
 2056 004a 3B68     		ldr	r3, [r7]
 2057 004c 1A60     		str	r2, [r3]
1065:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2058              		.loc 1 1065 1
 2059 004e 00BF     		nop
 2060 0050 0C37     		adds	r7, r7, #12
 2061              	.LCFI49:
 2062              		.cfi_def_cfa_offset 4
 2063 0052 BD46     		mov	sp, r7
 2064              	.LCFI50:
 2065              		.cfi_def_cfa_register 13
 2066              		@ sp needed
 2067 0054 5DF8047B 		ldr	r7, [sp], #4
 2068              	.LCFI51:
 2069              		.cfi_restore 7
 2070              		.cfi_def_cfa_offset 0
 2071 0058 7047     		bx	lr
 2072              	.L133:
 2073 005a 00BF     		.align	2
 2074              	.L132:
 2075 005c 00380240 		.word	1073887232
 2076 0060 003C0240 		.word	1073888256
 2077              		.cfi_endproc
 2078              	.LFE137:
 2080              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2081              		.align	1
 2082              		.global	HAL_RCC_NMI_IRQHandler
 2083              		.syntax unified
 2084              		.thumb
 2085              		.thumb_func
 2086              		.fpu fpv4-sp-d16
 2088              	HAL_RCC_NMI_IRQHandler:
 2089              	.LFB138:
1066:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1067:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1068:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1069:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1070:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1071:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1072:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1073:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2090              		.loc 1 1073 1
 2091              		.cfi_startproc
 2092              		@ args = 0, pretend = 0, frame = 0
 2093              		@ frame_needed = 1, uses_anonymous_args = 0
 2094 0000 80B5     		push	{r7, lr}
 2095              	.LCFI52:
 2096              		.cfi_def_cfa_offset 8
 2097              		.cfi_offset 7, -8
 2098              		.cfi_offset 14, -4
 2099 0002 00AF     		add	r7, sp, #0
 2100              	.LCFI53:
 2101              		.cfi_def_cfa_register 7
1074:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1075:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
ARM GAS  /tmp/ccHb00aP.s 			page 57


 2102              		.loc 1 1075 6
 2103 0004 064B     		ldr	r3, .L137
 2104 0006 DB68     		ldr	r3, [r3, #12]
 2105 0008 03F08003 		and	r3, r3, #128
 2106              		.loc 1 1075 5
 2107 000c 802B     		cmp	r3, #128
 2108 000e 04D1     		bne	.L136
1076:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1077:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1078:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2109              		.loc 1 1078 5
 2110 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1079:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1080:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1081:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2111              		.loc 1 1081 5
 2112 0014 034B     		ldr	r3, .L137+4
 2113 0016 8022     		movs	r2, #128
 2114 0018 1A70     		strb	r2, [r3]
 2115              	.L136:
1082:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1083:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2116              		.loc 1 1083 1
 2117 001a 00BF     		nop
 2118 001c 80BD     		pop	{r7, pc}
 2119              	.L138:
 2120 001e 00BF     		.align	2
 2121              	.L137:
 2122 0020 00380240 		.word	1073887232
 2123 0024 0E380240 		.word	1073887246
 2124              		.cfi_endproc
 2125              	.LFE138:
 2127              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2128              		.align	1
 2129              		.weak	HAL_RCC_CSSCallback
 2130              		.syntax unified
 2131              		.thumb
 2132              		.thumb_func
 2133              		.fpu fpv4-sp-d16
 2135              	HAL_RCC_CSSCallback:
 2136              	.LFB139:
1084:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1085:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1086:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1087:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1088:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1089:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1090:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2137              		.loc 1 1090 1
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 0
 2140              		@ frame_needed = 1, uses_anonymous_args = 0
 2141              		@ link register save eliminated.
 2142 0000 80B4     		push	{r7}
 2143              	.LCFI54:
 2144              		.cfi_def_cfa_offset 4
 2145              		.cfi_offset 7, -4
ARM GAS  /tmp/ccHb00aP.s 			page 58


 2146 0002 00AF     		add	r7, sp, #0
 2147              	.LCFI55:
 2148              		.cfi_def_cfa_register 7
1091:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1092:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback could be implemented in the user file
1093:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    */
1094:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2149              		.loc 1 1094 1
 2150 0004 00BF     		nop
 2151 0006 BD46     		mov	sp, r7
 2152              	.LCFI56:
 2153              		.cfi_def_cfa_register 13
 2154              		@ sp needed
 2155 0008 5DF8047B 		ldr	r7, [sp], #4
 2156              	.LCFI57:
 2157              		.cfi_restore 7
 2158              		.cfi_def_cfa_offset 0
 2159 000c 7047     		bx	lr
 2160              		.cfi_endproc
 2161              	.LFE139:
 2163              		.text
 2164              	.Letext0:
 2165              		.file 2 "/home/hao/Documents/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 2166              		.file 3 "/home/hao/Documents/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 2167              		.file 4 "./Libraries/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2168              		.file 5 "./Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 2169              		.file 6 "./Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2170              		.file 7 "./Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2171              		.file 8 "./Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2172              		.file 9 "./Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2173              		.file 10 "./Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  /tmp/ccHb00aP.s 			page 59


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_rcc.c
     /tmp/ccHb00aP.s:18     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccHb00aP.s:26     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccHb00aP.s:58     .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccHb00aP.s:65     .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccHb00aP.s:458    .text.HAL_RCC_OscConfig:0000000000000240 $d
     /tmp/ccHb00aP.s:463    .text.HAL_RCC_OscConfig:000000000000024c $t
     /tmp/ccHb00aP.s:821    .text.HAL_RCC_OscConfig:0000000000000470 $d
     /tmp/ccHb00aP.s:828    .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccHb00aP.s:835    .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccHb00aP.s:1387   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccHb00aP.s:1135   .text.HAL_RCC_ClockConfig:00000000000001b4 $d
     /tmp/ccHb00aP.s:1143   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccHb00aP.s:1150   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccHb00aP.s:1282   .text.HAL_RCC_MCOConfig:00000000000000c4 $d
     /tmp/ccHb00aP.s:1289   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccHb00aP.s:1296   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccHb00aP.s:1329   .text.HAL_RCC_EnableCSS:0000000000000014 $d
     /tmp/ccHb00aP.s:1334   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/ccHb00aP.s:1341   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/ccHb00aP.s:1374   .text.HAL_RCC_DisableCSS:0000000000000014 $d
     /tmp/ccHb00aP.s:1380   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccHb00aP.s:1612   .text.HAL_RCC_GetSysClockFreq:0000000000000180 $d
     /tmp/ccHb00aP.s:1619   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccHb00aP.s:1626   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccHb00aP.s:1657   .text.HAL_RCC_GetHCLKFreq:0000000000000014 $d
     /tmp/ccHb00aP.s:1662   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccHb00aP.s:1669   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccHb00aP.s:1703   .text.HAL_RCC_GetPCLK1Freq:0000000000000020 $d
     /tmp/ccHb00aP.s:1709   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccHb00aP.s:1716   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccHb00aP.s:1750   .text.HAL_RCC_GetPCLK2Freq:0000000000000020 $d
     /tmp/ccHb00aP.s:1756   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccHb00aP.s:1763   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccHb00aP.s:1982   .text.HAL_RCC_GetOscConfig:0000000000000124 $d
     /tmp/ccHb00aP.s:1987   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccHb00aP.s:1994   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccHb00aP.s:2075   .text.HAL_RCC_GetClockConfig:000000000000005c $d
     /tmp/ccHb00aP.s:2081   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccHb00aP.s:2088   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccHb00aP.s:2135   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccHb00aP.s:2122   .text.HAL_RCC_NMI_IRQHandler:0000000000000020 $d
     /tmp/ccHb00aP.s:2128   .text.HAL_RCC_CSSCallback:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
AHBPrescTable
SystemCoreClock
HAL_GPIO_Init
__aeabi_uldivmod
APBPrescTable
