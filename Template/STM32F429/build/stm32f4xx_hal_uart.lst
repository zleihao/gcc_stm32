ARM GAS  /tmp/ccOBznmR.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_UART_Init:
  27              	.LFB126:
  28              		.file 1 "./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
   1:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   7:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  10:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions  
  11:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions  
  12:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           
  13:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim       
  14:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  15:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  16:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  17:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  18:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  20:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  21:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  22:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  23:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  24:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  25:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  26:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  27:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  28:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  29:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  30:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
ARM GAS  /tmp/ccOBznmR.s 			page 2


  31:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  32:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  33:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  34:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  35:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required 
  36:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.                
  37:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx Stream.
  38:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  39:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete 
  40:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx Stream.
  41:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  42:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware 
  43:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the Init structure.
  44:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  45:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  48:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling 
  49:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  51:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  53:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling 
  54:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
  56:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  57:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt, 
  58:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit 
  60:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  61:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
  62:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  63:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the 
  64:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized 
  65:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
  67:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  68:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :     
  69:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  70:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
  71:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
  72:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]    
  73:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit() 
  74:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  75:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        
  76:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***    
  77:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
  78:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]    
  79:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  80:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  81:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  82:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  83:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  84:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  85:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  86:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  87:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccOBznmR.s 			page 3


  88:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***    
  89:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
  90:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  91:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  92:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  93:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  94:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  95:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  96:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
  97:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
  98:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
  99:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 100:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 101:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 102:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 103:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()      
 104:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()  
 105:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()      
 106:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 107:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 108:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ============================================= 
 109:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 110:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 111:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        
 112:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 113:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral     
 114:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 115:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 116:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 117:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 118:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 119:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 120:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
 121:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 122:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 123:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 124:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 125:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
 126:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 127:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 128:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 129:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 130:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 131:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 132:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 133:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 134:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 135:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 136:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 137:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 138:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      without specific prior written permission.
 139:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 140:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 141:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 142:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 143:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 144:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/ccOBznmR.s 			page 4


 145:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 146:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 147:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 148:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 149:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 150:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 151:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 152:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */ 
 153:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 154:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 155:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
 156:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 157:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 158:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 159:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 160:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 161:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 162:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 163:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 164:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 165:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 166:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 167:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 168:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 169:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 170:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 171:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 172:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 173:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 174:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 175:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 176:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 177:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions   UART Private Functions
 179:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 180:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 181:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 182:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 183:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 184:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 185:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 186:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 187:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma); 
 188:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 189:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 190:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 191:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 192:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 193:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 194:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 195:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 196:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 197:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig (UART_HandleTypeDef *huart);
 198:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 199:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 200:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 201:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccOBznmR.s 			page 5


 202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 203:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 204:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 205:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 206:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 207:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions 
 208:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions 
 209:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 210:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim    
 211:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** ===============================================================================
 212:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 213:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================  
 214:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 215:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy 
 216:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 217:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured: 
 218:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 219:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length 
 220:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 221:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 222:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 223:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 224:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.           
 225:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 226:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 227:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 228:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 229:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs 
 230:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 231:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual (RM0329)
 232:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 233:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 234:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 235:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 236:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 237:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 238:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 239:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 240:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 242:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 244:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 245:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  29              		.loc 1 245 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccOBznmR.s 			page 6


  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 246:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 247:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
  45              		.loc 1 247 5
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 248:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 249:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
  49              		.loc 1 249 12
  50 000e 0123     		movs	r3, #1
  51 0010 3FE0     		b	.L3
  52              	.L2:
 250:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 251:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 252:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 253:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 254:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 255:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6 */
 256:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 257:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 258:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 259:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 260:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 261:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 262:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 263:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 264:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 265:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 266:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
  53              		.loc 1 266 11
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 93F83930 		ldrb	r3, [r3, #57]
  56 0018 DBB2     		uxtb	r3, r3
  57              		.loc 1 266 5
  58 001a 002B     		cmp	r3, #0
  59 001c 06D1     		bne	.L4
 267:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {  
 268:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 269:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  60              		.loc 1 269 17
  61 001e 7B68     		ldr	r3, [r7, #4]
  62 0020 0022     		movs	r2, #0
  63 0022 83F83820 		strb	r2, [r3, #56]
 270:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 271:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  64              		.loc 1 271 5
  65 0026 7868     		ldr	r0, [r7, #4]
  66 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  67              	.L4:
 272:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 273:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 274:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  68              		.loc 1 274 17
  69 002c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccOBznmR.s 			page 7


  70 002e 2422     		movs	r2, #36
  71 0030 83F83920 		strb	r2, [r3, #57]
 275:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 276:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  72              		.loc 1 277 3
  73 0034 7B68     		ldr	r3, [r7, #4]
  74 0036 1B68     		ldr	r3, [r3]
  75 0038 DA68     		ldr	r2, [r3, #12]
  76 003a 7B68     		ldr	r3, [r7, #4]
  77 003c 1B68     		ldr	r3, [r3]
  78 003e 22F40052 		bic	r2, r2, #8192
  79 0042 DA60     		str	r2, [r3, #12]
 278:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 279:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 280:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
  80              		.loc 1 280 3
  81 0044 7868     		ldr	r0, [r7, #4]
  82 0046 FFF7FEFF 		bl	UART_SetConfig
 281:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 282:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared: 
 283:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 284:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 285:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
  83              		.loc 1 285 3
  84 004a 7B68     		ldr	r3, [r7, #4]
  85 004c 1B68     		ldr	r3, [r3]
  86 004e 1A69     		ldr	r2, [r3, #16]
  87 0050 7B68     		ldr	r3, [r7, #4]
  88 0052 1B68     		ldr	r3, [r3]
  89 0054 22F49042 		bic	r2, r2, #18432
  90 0058 1A61     		str	r2, [r3, #16]
 286:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
  91              		.loc 1 286 3
  92 005a 7B68     		ldr	r3, [r7, #4]
  93 005c 1B68     		ldr	r3, [r3]
  94 005e 5A69     		ldr	r2, [r3, #20]
  95 0060 7B68     		ldr	r3, [r7, #4]
  96 0062 1B68     		ldr	r3, [r3]
  97 0064 22F02A02 		bic	r2, r2, #42
  98 0068 5A61     		str	r2, [r3, #20]
 287:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 288:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 289:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
  99              		.loc 1 289 3
 100 006a 7B68     		ldr	r3, [r7, #4]
 101 006c 1B68     		ldr	r3, [r3]
 102 006e DA68     		ldr	r2, [r3, #12]
 103 0070 7B68     		ldr	r3, [r7, #4]
 104 0072 1B68     		ldr	r3, [r3]
 105 0074 42F40052 		orr	r2, r2, #8192
 106 0078 DA60     		str	r2, [r3, #12]
 290:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 291:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 292:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 107              		.loc 1 292 20
 108 007a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccOBznmR.s 			page 8


 109 007c 0022     		movs	r2, #0
 110 007e DA63     		str	r2, [r3, #60]
 293:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 111              		.loc 1 293 16
 112 0080 7B68     		ldr	r3, [r7, #4]
 113 0082 2022     		movs	r2, #32
 114 0084 83F83920 		strb	r2, [r3, #57]
 294:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 115              		.loc 1 294 17
 116 0088 7B68     		ldr	r3, [r7, #4]
 117 008a 2022     		movs	r2, #32
 118 008c 83F83A20 		strb	r2, [r3, #58]
 295:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 296:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 119              		.loc 1 296 10
 120 0090 0023     		movs	r3, #0
 121              	.L3:
 297:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 122              		.loc 1 297 1
 123 0092 1846     		mov	r0, r3
 124 0094 0837     		adds	r7, r7, #8
 125              	.LCFI3:
 126              		.cfi_def_cfa_offset 8
 127 0096 BD46     		mov	sp, r7
 128              	.LCFI4:
 129              		.cfi_def_cfa_register 13
 130              		@ sp needed
 131 0098 80BD     		pop	{r7, pc}
 132              		.cfi_endproc
 133              	.LFE126:
 135              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 136              		.align	1
 137              		.global	HAL_HalfDuplex_Init
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	HAL_HalfDuplex_Init:
 144              	.LFB127:
 298:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 299:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 300:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 301:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 302:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 303:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 304:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 305:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 306:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 307:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 145              		.loc 1 307 1
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 8
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              	.LCFI5:
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
ARM GAS  /tmp/ccOBznmR.s 			page 9


 153              		.cfi_offset 14, -4
 154 0002 82B0     		sub	sp, sp, #8
 155              	.LCFI6:
 156              		.cfi_def_cfa_offset 16
 157 0004 00AF     		add	r7, sp, #0
 158              	.LCFI7:
 159              		.cfi_def_cfa_register 7
 160 0006 7860     		str	r0, [r7, #4]
 308:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 309:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 161              		.loc 1 309 5
 162 0008 7B68     		ldr	r3, [r7, #4]
 163 000a 002B     		cmp	r3, #0
 164 000c 01D1     		bne	.L6
 310:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 311:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 165              		.loc 1 311 12
 166 000e 0123     		movs	r3, #1
 167 0010 47E0     		b	.L7
 168              	.L6:
 312:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 313:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 314:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */ 
 315:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 316:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 317:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 318:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 319:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 169              		.loc 1 319 11
 170 0012 7B68     		ldr	r3, [r7, #4]
 171 0014 93F83930 		ldrb	r3, [r3, #57]
 172 0018 DBB2     		uxtb	r3, r3
 173              		.loc 1 319 5
 174 001a 002B     		cmp	r3, #0
 175 001c 06D1     		bne	.L8
 320:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 321:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 322:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 176              		.loc 1 322 17
 177 001e 7B68     		ldr	r3, [r7, #4]
 178 0020 0022     		movs	r2, #0
 179 0022 83F83820 		strb	r2, [r3, #56]
 323:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 324:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 180              		.loc 1 324 5
 181 0026 7868     		ldr	r0, [r7, #4]
 182 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 183              	.L8:
 325:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 326:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 327:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 184              		.loc 1 327 17
 185 002c 7B68     		ldr	r3, [r7, #4]
 186 002e 2422     		movs	r2, #36
 187 0030 83F83920 		strb	r2, [r3, #57]
 328:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 329:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
ARM GAS  /tmp/ccOBznmR.s 			page 10


 330:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 188              		.loc 1 330 3
 189 0034 7B68     		ldr	r3, [r7, #4]
 190 0036 1B68     		ldr	r3, [r3]
 191 0038 DA68     		ldr	r2, [r3, #12]
 192 003a 7B68     		ldr	r3, [r7, #4]
 193 003c 1B68     		ldr	r3, [r3]
 194 003e 22F40052 		bic	r2, r2, #8192
 195 0042 DA60     		str	r2, [r3, #12]
 331:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 332:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 333:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 196              		.loc 1 333 3
 197 0044 7868     		ldr	r0, [r7, #4]
 198 0046 FFF7FEFF 		bl	UART_SetConfig
 334:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 335:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared: 
 336:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 337:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 338:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 199              		.loc 1 338 3
 200 004a 7B68     		ldr	r3, [r7, #4]
 201 004c 1B68     		ldr	r3, [r3]
 202 004e 1A69     		ldr	r2, [r3, #16]
 203 0050 7B68     		ldr	r3, [r7, #4]
 204 0052 1B68     		ldr	r3, [r3]
 205 0054 22F49042 		bic	r2, r2, #18432
 206 0058 1A61     		str	r2, [r3, #16]
 339:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 207              		.loc 1 339 3
 208 005a 7B68     		ldr	r3, [r7, #4]
 209 005c 1B68     		ldr	r3, [r3]
 210 005e 5A69     		ldr	r2, [r3, #20]
 211 0060 7B68     		ldr	r3, [r7, #4]
 212 0062 1B68     		ldr	r3, [r3]
 213 0064 22F02202 		bic	r2, r2, #34
 214 0068 5A61     		str	r2, [r3, #20]
 340:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 341:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 342:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 215              		.loc 1 342 3
 216 006a 7B68     		ldr	r3, [r7, #4]
 217 006c 1B68     		ldr	r3, [r3]
 218 006e 5A69     		ldr	r2, [r3, #20]
 219 0070 7B68     		ldr	r3, [r7, #4]
 220 0072 1B68     		ldr	r3, [r3]
 221 0074 42F00802 		orr	r2, r2, #8
 222 0078 5A61     		str	r2, [r3, #20]
 343:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 344:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 345:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 223              		.loc 1 345 3
 224 007a 7B68     		ldr	r3, [r7, #4]
 225 007c 1B68     		ldr	r3, [r3]
 226 007e DA68     		ldr	r2, [r3, #12]
 227 0080 7B68     		ldr	r3, [r7, #4]
 228 0082 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccOBznmR.s 			page 11


 229 0084 42F40052 		orr	r2, r2, #8192
 230 0088 DA60     		str	r2, [r3, #12]
 346:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 347:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 348:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 231              		.loc 1 348 20
 232 008a 7B68     		ldr	r3, [r7, #4]
 233 008c 0022     		movs	r2, #0
 234 008e DA63     		str	r2, [r3, #60]
 349:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 235              		.loc 1 349 16
 236 0090 7B68     		ldr	r3, [r7, #4]
 237 0092 2022     		movs	r2, #32
 238 0094 83F83920 		strb	r2, [r3, #57]
 350:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 239              		.loc 1 350 17
 240 0098 7B68     		ldr	r3, [r7, #4]
 241 009a 2022     		movs	r2, #32
 242 009c 83F83A20 		strb	r2, [r3, #58]
 351:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 352:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 243              		.loc 1 352 10
 244 00a0 0023     		movs	r3, #0
 245              	.L7:
 353:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 246              		.loc 1 353 1
 247 00a2 1846     		mov	r0, r3
 248 00a4 0837     		adds	r7, r7, #8
 249              	.LCFI8:
 250              		.cfi_def_cfa_offset 8
 251 00a6 BD46     		mov	sp, r7
 252              	.LCFI9:
 253              		.cfi_def_cfa_register 13
 254              		@ sp needed
 255 00a8 80BD     		pop	{r7, pc}
 256              		.cfi_endproc
 257              	.LFE127:
 259              		.section	.text.HAL_LIN_Init,"ax",%progbits
 260              		.align	1
 261              		.global	HAL_LIN_Init
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	HAL_LIN_Init:
 268              	.LFB128:
 354:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 355:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 356:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 357:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 358:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 359:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 360:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 361:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 362:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 363:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 364:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccOBznmR.s 			page 12


 365:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 366:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 367:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 269              		.loc 1 367 1
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 8
 272              		@ frame_needed = 1, uses_anonymous_args = 0
 273 0000 80B5     		push	{r7, lr}
 274              	.LCFI10:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 7, -8
 277              		.cfi_offset 14, -4
 278 0002 82B0     		sub	sp, sp, #8
 279              	.LCFI11:
 280              		.cfi_def_cfa_offset 16
 281 0004 00AF     		add	r7, sp, #0
 282              	.LCFI12:
 283              		.cfi_def_cfa_register 7
 284 0006 7860     		str	r0, [r7, #4]
 285 0008 3960     		str	r1, [r7]
 368:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 369:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 286              		.loc 1 369 5
 287 000a 7B68     		ldr	r3, [r7, #4]
 288 000c 002B     		cmp	r3, #0
 289 000e 01D1     		bne	.L10
 370:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 371:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 290              		.loc 1 371 12
 291 0010 0123     		movs	r3, #1
 292 0012 57E0     		b	.L11
 293              	.L10:
 372:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 373:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    
 374:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 375:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 376:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 377:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 378:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 379:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 380:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 294              		.loc 1 380 11
 295 0014 7B68     		ldr	r3, [r7, #4]
 296 0016 93F83930 		ldrb	r3, [r3, #57]
 297 001a DBB2     		uxtb	r3, r3
 298              		.loc 1 380 5
 299 001c 002B     		cmp	r3, #0
 300 001e 06D1     		bne	.L12
 381:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 382:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 383:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 301              		.loc 1 383 17
 302 0020 7B68     		ldr	r3, [r7, #4]
 303 0022 0022     		movs	r2, #0
 304 0024 83F83820 		strb	r2, [r3, #56]
 384:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 385:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
ARM GAS  /tmp/ccOBznmR.s 			page 13


 305              		.loc 1 385 5
 306 0028 7868     		ldr	r0, [r7, #4]
 307 002a FFF7FEFF 		bl	HAL_UART_MspInit
 308              	.L12:
 386:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 387:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 388:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 309              		.loc 1 388 17
 310 002e 7B68     		ldr	r3, [r7, #4]
 311 0030 2422     		movs	r2, #36
 312 0032 83F83920 		strb	r2, [r3, #57]
 389:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 390:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 391:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 313              		.loc 1 391 3
 314 0036 7B68     		ldr	r3, [r7, #4]
 315 0038 1B68     		ldr	r3, [r3]
 316 003a DA68     		ldr	r2, [r3, #12]
 317 003c 7B68     		ldr	r3, [r7, #4]
 318 003e 1B68     		ldr	r3, [r3]
 319 0040 22F40052 		bic	r2, r2, #8192
 320 0044 DA60     		str	r2, [r3, #12]
 392:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 393:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 394:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 321              		.loc 1 394 3
 322 0046 7868     		ldr	r0, [r7, #4]
 323 0048 FFF7FEFF 		bl	UART_SetConfig
 395:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 396:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared: 
 397:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 398:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 399:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 324              		.loc 1 399 3
 325 004c 7B68     		ldr	r3, [r7, #4]
 326 004e 1B68     		ldr	r3, [r3]
 327 0050 1A69     		ldr	r2, [r3, #16]
 328 0052 7B68     		ldr	r3, [r7, #4]
 329 0054 1B68     		ldr	r3, [r3]
 330 0056 22F40062 		bic	r2, r2, #2048
 331 005a 1A61     		str	r2, [r3, #16]
 400:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 332              		.loc 1 400 3
 333 005c 7B68     		ldr	r3, [r7, #4]
 334 005e 1B68     		ldr	r3, [r3]
 335 0060 5A69     		ldr	r2, [r3, #20]
 336 0062 7B68     		ldr	r3, [r7, #4]
 337 0064 1B68     		ldr	r3, [r3]
 338 0066 22F02A02 		bic	r2, r2, #42
 339 006a 5A61     		str	r2, [r3, #20]
 401:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 402:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 403:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 340              		.loc 1 403 3
 341 006c 7B68     		ldr	r3, [r7, #4]
 342 006e 1B68     		ldr	r3, [r3]
 343 0070 1A69     		ldr	r2, [r3, #16]
ARM GAS  /tmp/ccOBznmR.s 			page 14


 344 0072 7B68     		ldr	r3, [r7, #4]
 345 0074 1B68     		ldr	r3, [r3]
 346 0076 42F48042 		orr	r2, r2, #16384
 347 007a 1A61     		str	r2, [r3, #16]
 404:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 405:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 406:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 348              		.loc 1 406 3
 349 007c 7B68     		ldr	r3, [r7, #4]
 350 007e 1B68     		ldr	r3, [r3]
 351 0080 1A69     		ldr	r2, [r3, #16]
 352 0082 7B68     		ldr	r3, [r7, #4]
 353 0084 1B68     		ldr	r3, [r3]
 354 0086 22F02002 		bic	r2, r2, #32
 355 008a 1A61     		str	r2, [r3, #16]
 407:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 356              		.loc 1 407 3
 357 008c 7B68     		ldr	r3, [r7, #4]
 358 008e 1B68     		ldr	r3, [r3]
 359 0090 1969     		ldr	r1, [r3, #16]
 360 0092 7B68     		ldr	r3, [r7, #4]
 361 0094 1B68     		ldr	r3, [r3]
 362 0096 3A68     		ldr	r2, [r7]
 363 0098 0A43     		orrs	r2, r2, r1
 364 009a 1A61     		str	r2, [r3, #16]
 408:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 409:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 410:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 365              		.loc 1 410 3
 366 009c 7B68     		ldr	r3, [r7, #4]
 367 009e 1B68     		ldr	r3, [r3]
 368 00a0 DA68     		ldr	r2, [r3, #12]
 369 00a2 7B68     		ldr	r3, [r7, #4]
 370 00a4 1B68     		ldr	r3, [r3]
 371 00a6 42F40052 		orr	r2, r2, #8192
 372 00aa DA60     		str	r2, [r3, #12]
 411:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 412:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 413:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 373              		.loc 1 413 20
 374 00ac 7B68     		ldr	r3, [r7, #4]
 375 00ae 0022     		movs	r2, #0
 376 00b0 DA63     		str	r2, [r3, #60]
 414:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 377              		.loc 1 414 16
 378 00b2 7B68     		ldr	r3, [r7, #4]
 379 00b4 2022     		movs	r2, #32
 380 00b6 83F83920 		strb	r2, [r3, #57]
 415:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 381              		.loc 1 415 17
 382 00ba 7B68     		ldr	r3, [r7, #4]
 383 00bc 2022     		movs	r2, #32
 384 00be 83F83A20 		strb	r2, [r3, #58]
 416:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 417:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 385              		.loc 1 417 10
 386 00c2 0023     		movs	r3, #0
ARM GAS  /tmp/ccOBznmR.s 			page 15


 387              	.L11:
 418:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 388              		.loc 1 418 1
 389 00c4 1846     		mov	r0, r3
 390 00c6 0837     		adds	r7, r7, #8
 391              	.LCFI13:
 392              		.cfi_def_cfa_offset 8
 393 00c8 BD46     		mov	sp, r7
 394              	.LCFI14:
 395              		.cfi_def_cfa_register 13
 396              		@ sp needed
 397 00ca 80BD     		pop	{r7, pc}
 398              		.cfi_endproc
 399              	.LFE128:
 401              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 402              		.align	1
 403              		.global	HAL_MultiProcessor_Init
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv4-sp-d16
 409              	HAL_MultiProcessor_Init:
 410              	.LFB129:
 419:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 420:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 421:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 422:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 423:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 424:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 425:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address USART address
 426:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 427:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This parameter can be one of the following values:
 428:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 429:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 430:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 431:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 432:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 433:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 411              		.loc 1 433 1
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 16
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415 0000 80B5     		push	{r7, lr}
 416              	.LCFI15:
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 7, -8
 419              		.cfi_offset 14, -4
 420 0002 84B0     		sub	sp, sp, #16
 421              	.LCFI16:
 422              		.cfi_def_cfa_offset 24
 423 0004 00AF     		add	r7, sp, #0
 424              	.LCFI17:
 425              		.cfi_def_cfa_register 7
 426 0006 F860     		str	r0, [r7, #12]
 427 0008 0B46     		mov	r3, r1
 428 000a 7A60     		str	r2, [r7, #4]
 429 000c FB72     		strb	r3, [r7, #11]
ARM GAS  /tmp/ccOBznmR.s 			page 16


 434:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 435:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 430              		.loc 1 435 5
 431 000e FB68     		ldr	r3, [r7, #12]
 432 0010 002B     		cmp	r3, #0
 433 0012 01D1     		bne	.L14
 436:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 437:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 434              		.loc 1 437 12
 435 0014 0123     		movs	r3, #1
 436 0016 5FE0     		b	.L15
 437              	.L14:
 438:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 439:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 440:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 441:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 442:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 443:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 444:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 445:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 446:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 447:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 438              		.loc 1 447 11
 439 0018 FB68     		ldr	r3, [r7, #12]
 440 001a 93F83930 		ldrb	r3, [r3, #57]
 441 001e DBB2     		uxtb	r3, r3
 442              		.loc 1 447 5
 443 0020 002B     		cmp	r3, #0
 444 0022 06D1     		bne	.L16
 448:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 449:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 450:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 445              		.loc 1 450 17
 446 0024 FB68     		ldr	r3, [r7, #12]
 447 0026 0022     		movs	r2, #0
 448 0028 83F83820 		strb	r2, [r3, #56]
 451:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 452:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 449              		.loc 1 452 5
 450 002c F868     		ldr	r0, [r7, #12]
 451 002e FFF7FEFF 		bl	HAL_UART_MspInit
 452              	.L16:
 453:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 454:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 455:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 453              		.loc 1 455 17
 454 0032 FB68     		ldr	r3, [r7, #12]
 455 0034 2422     		movs	r2, #36
 456 0036 83F83920 		strb	r2, [r3, #57]
 456:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 457:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 458:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 457              		.loc 1 458 3
 458 003a FB68     		ldr	r3, [r7, #12]
 459 003c 1B68     		ldr	r3, [r3]
 460 003e DA68     		ldr	r2, [r3, #12]
 461 0040 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccOBznmR.s 			page 17


 462 0042 1B68     		ldr	r3, [r3]
 463 0044 22F40052 		bic	r2, r2, #8192
 464 0048 DA60     		str	r2, [r3, #12]
 459:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 460:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 461:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 465              		.loc 1 461 3
 466 004a F868     		ldr	r0, [r7, #12]
 467 004c FFF7FEFF 		bl	UART_SetConfig
 462:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 463:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared: 
 464:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 465:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 466:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 468              		.loc 1 466 3
 469 0050 FB68     		ldr	r3, [r7, #12]
 470 0052 1B68     		ldr	r3, [r3]
 471 0054 1A69     		ldr	r2, [r3, #16]
 472 0056 FB68     		ldr	r3, [r7, #12]
 473 0058 1B68     		ldr	r3, [r3]
 474 005a 22F49042 		bic	r2, r2, #18432
 475 005e 1A61     		str	r2, [r3, #16]
 467:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 476              		.loc 1 467 3
 477 0060 FB68     		ldr	r3, [r7, #12]
 478 0062 1B68     		ldr	r3, [r3]
 479 0064 5A69     		ldr	r2, [r3, #20]
 480 0066 FB68     		ldr	r3, [r7, #12]
 481 0068 1B68     		ldr	r3, [r3]
 482 006a 22F02A02 		bic	r2, r2, #42
 483 006e 5A61     		str	r2, [r3, #20]
 468:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 469:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear the USART address */
 470:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 484              		.loc 1 470 3
 485 0070 FB68     		ldr	r3, [r7, #12]
 486 0072 1B68     		ldr	r3, [r3]
 487 0074 1A69     		ldr	r2, [r3, #16]
 488 0076 FB68     		ldr	r3, [r7, #12]
 489 0078 1B68     		ldr	r3, [r3]
 490 007a 22F00F02 		bic	r2, r2, #15
 491 007e 1A61     		str	r2, [r3, #16]
 471:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 472:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 492              		.loc 1 472 3
 493 0080 FB68     		ldr	r3, [r7, #12]
 494 0082 1B68     		ldr	r3, [r3]
 495 0084 1969     		ldr	r1, [r3, #16]
 496 0086 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 497 0088 FB68     		ldr	r3, [r7, #12]
 498 008a 1B68     		ldr	r3, [r3]
 499 008c 0A43     		orrs	r2, r2, r1
 500 008e 1A61     		str	r2, [r3, #16]
 473:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 474:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 475:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 501              		.loc 1 475 3
ARM GAS  /tmp/ccOBznmR.s 			page 18


 502 0090 FB68     		ldr	r3, [r7, #12]
 503 0092 1B68     		ldr	r3, [r3]
 504 0094 DA68     		ldr	r2, [r3, #12]
 505 0096 FB68     		ldr	r3, [r7, #12]
 506 0098 1B68     		ldr	r3, [r3]
 507 009a 22F40062 		bic	r2, r2, #2048
 508 009e DA60     		str	r2, [r3, #12]
 476:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 509              		.loc 1 476 3
 510 00a0 FB68     		ldr	r3, [r7, #12]
 511 00a2 1B68     		ldr	r3, [r3]
 512 00a4 D968     		ldr	r1, [r3, #12]
 513 00a6 FB68     		ldr	r3, [r7, #12]
 514 00a8 1B68     		ldr	r3, [r3]
 515 00aa 7A68     		ldr	r2, [r7, #4]
 516 00ac 0A43     		orrs	r2, r2, r1
 517 00ae DA60     		str	r2, [r3, #12]
 477:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 478:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 479:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 518              		.loc 1 479 3
 519 00b0 FB68     		ldr	r3, [r7, #12]
 520 00b2 1B68     		ldr	r3, [r3]
 521 00b4 DA68     		ldr	r2, [r3, #12]
 522 00b6 FB68     		ldr	r3, [r7, #12]
 523 00b8 1B68     		ldr	r3, [r3]
 524 00ba 42F40052 		orr	r2, r2, #8192
 525 00be DA60     		str	r2, [r3, #12]
 480:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 481:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 482:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 526              		.loc 1 482 20
 527 00c0 FB68     		ldr	r3, [r7, #12]
 528 00c2 0022     		movs	r2, #0
 529 00c4 DA63     		str	r2, [r3, #60]
 483:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 530              		.loc 1 483 16
 531 00c6 FB68     		ldr	r3, [r7, #12]
 532 00c8 2022     		movs	r2, #32
 533 00ca 83F83920 		strb	r2, [r3, #57]
 484:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 534              		.loc 1 484 17
 535 00ce FB68     		ldr	r3, [r7, #12]
 536 00d0 2022     		movs	r2, #32
 537 00d2 83F83A20 		strb	r2, [r3, #58]
 485:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 486:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 538              		.loc 1 486 10
 539 00d6 0023     		movs	r3, #0
 540              	.L15:
 487:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 541              		.loc 1 487 1
 542 00d8 1846     		mov	r0, r3
 543 00da 1037     		adds	r7, r7, #16
 544              	.LCFI18:
 545              		.cfi_def_cfa_offset 8
 546 00dc BD46     		mov	sp, r7
ARM GAS  /tmp/ccOBznmR.s 			page 19


 547              	.LCFI19:
 548              		.cfi_def_cfa_register 13
 549              		@ sp needed
 550 00de 80BD     		pop	{r7, pc}
 551              		.cfi_endproc
 552              	.LFE129:
 554              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 555              		.align	1
 556              		.global	HAL_UART_DeInit
 557              		.syntax unified
 558              		.thumb
 559              		.thumb_func
 560              		.fpu fpv4-sp-d16
 562              	HAL_UART_DeInit:
 563              	.LFB130:
 488:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 489:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 490:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral. 
 491:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 492:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 493:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 494:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 495:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 496:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 564              		.loc 1 496 1
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 8
 567              		@ frame_needed = 1, uses_anonymous_args = 0
 568 0000 80B5     		push	{r7, lr}
 569              	.LCFI20:
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 7, -8
 572              		.cfi_offset 14, -4
 573 0002 82B0     		sub	sp, sp, #8
 574              	.LCFI21:
 575              		.cfi_def_cfa_offset 16
 576 0004 00AF     		add	r7, sp, #0
 577              	.LCFI22:
 578              		.cfi_def_cfa_register 7
 579 0006 7860     		str	r0, [r7, #4]
 497:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 498:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 580              		.loc 1 498 5
 581 0008 7B68     		ldr	r3, [r7, #4]
 582 000a 002B     		cmp	r3, #0
 583 000c 01D1     		bne	.L18
 499:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 500:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 584              		.loc 1 500 12
 585 000e 0123     		movs	r3, #1
 586 0010 16E0     		b	.L19
 587              	.L18:
 501:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 502:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 503:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 504:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 505:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccOBznmR.s 			page 20


 506:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 588              		.loc 1 506 17
 589 0012 7B68     		ldr	r3, [r7, #4]
 590 0014 2422     		movs	r2, #36
 591 0016 83F83920 		strb	r2, [r3, #57]
 507:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 508:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 509:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 592              		.loc 1 509 3
 593 001a 7868     		ldr	r0, [r7, #4]
 594 001c FFF7FEFF 		bl	HAL_UART_MspDeInit
 510:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 511:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 595              		.loc 1 511 20
 596 0020 7B68     		ldr	r3, [r7, #4]
 597 0022 0022     		movs	r2, #0
 598 0024 DA63     		str	r2, [r3, #60]
 512:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 599              		.loc 1 512 17
 600 0026 7B68     		ldr	r3, [r7, #4]
 601 0028 0022     		movs	r2, #0
 602 002a 83F83920 		strb	r2, [r3, #57]
 513:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 603              		.loc 1 513 18
 604 002e 7B68     		ldr	r3, [r7, #4]
 605 0030 0022     		movs	r2, #0
 606 0032 83F83A20 		strb	r2, [r3, #58]
 514:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 515:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Lock */
 516:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 607              		.loc 1 516 3
 608 0036 7B68     		ldr	r3, [r7, #4]
 609 0038 0022     		movs	r2, #0
 610 003a 83F83820 		strb	r2, [r3, #56]
 517:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 518:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 611              		.loc 1 518 10
 612 003e 0023     		movs	r3, #0
 613              	.L19:
 519:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 614              		.loc 1 519 1
 615 0040 1846     		mov	r0, r3
 616 0042 0837     		adds	r7, r7, #8
 617              	.LCFI23:
 618              		.cfi_def_cfa_offset 8
 619 0044 BD46     		mov	sp, r7
 620              	.LCFI24:
 621              		.cfi_def_cfa_register 13
 622              		@ sp needed
 623 0046 80BD     		pop	{r7, pc}
 624              		.cfi_endproc
 625              	.LFE130:
 627              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 628              		.align	1
 629              		.weak	HAL_UART_MspInit
 630              		.syntax unified
 631              		.thumb
ARM GAS  /tmp/ccOBznmR.s 			page 21


 632              		.thumb_func
 633              		.fpu fpv4-sp-d16
 635              	HAL_UART_MspInit:
 636              	.LFB131:
 520:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 521:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 522:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
 523:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 524:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 525:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 526:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 527:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 528:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 637              		.loc 1 528 1
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 8
 640              		@ frame_needed = 1, uses_anonymous_args = 0
 641              		@ link register save eliminated.
 642 0000 80B4     		push	{r7}
 643              	.LCFI25:
 644              		.cfi_def_cfa_offset 4
 645              		.cfi_offset 7, -4
 646 0002 83B0     		sub	sp, sp, #12
 647              	.LCFI26:
 648              		.cfi_def_cfa_offset 16
 649 0004 00AF     		add	r7, sp, #0
 650              	.LCFI27:
 651              		.cfi_def_cfa_register 7
 652 0006 7860     		str	r0, [r7, #4]
 529:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    /* Prevent unused argument(s) compilation warning */
 530:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 531:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 532:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 533:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
 534:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 653              		.loc 1 534 1
 654 0008 00BF     		nop
 655 000a 0C37     		adds	r7, r7, #12
 656              	.LCFI28:
 657              		.cfi_def_cfa_offset 4
 658 000c BD46     		mov	sp, r7
 659              	.LCFI29:
 660              		.cfi_def_cfa_register 13
 661              		@ sp needed
 662 000e 5DF8047B 		ldr	r7, [sp], #4
 663              	.LCFI30:
 664              		.cfi_restore 7
 665              		.cfi_def_cfa_offset 0
 666 0012 7047     		bx	lr
 667              		.cfi_endproc
 668              	.LFE131:
 670              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 671              		.align	1
 672              		.weak	HAL_UART_MspDeInit
 673              		.syntax unified
 674              		.thumb
 675              		.thumb_func
ARM GAS  /tmp/ccOBznmR.s 			page 22


 676              		.fpu fpv4-sp-d16
 678              	HAL_UART_MspDeInit:
 679              	.LFB132:
 535:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 536:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 537:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 538:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 539:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 540:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 541:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 542:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 543:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 680              		.loc 1 543 1
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 8
 683              		@ frame_needed = 1, uses_anonymous_args = 0
 684              		@ link register save eliminated.
 685 0000 80B4     		push	{r7}
 686              	.LCFI31:
 687              		.cfi_def_cfa_offset 4
 688              		.cfi_offset 7, -4
 689 0002 83B0     		sub	sp, sp, #12
 690              	.LCFI32:
 691              		.cfi_def_cfa_offset 16
 692 0004 00AF     		add	r7, sp, #0
 693              	.LCFI33:
 694              		.cfi_def_cfa_register 7
 695 0006 7860     		str	r0, [r7, #4]
 544:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 545:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 546:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 547:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 548:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
 549:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 696              		.loc 1 549 1
 697 0008 00BF     		nop
 698 000a 0C37     		adds	r7, r7, #12
 699              	.LCFI34:
 700              		.cfi_def_cfa_offset 4
 701 000c BD46     		mov	sp, r7
 702              	.LCFI35:
 703              		.cfi_def_cfa_register 13
 704              		@ sp needed
 705 000e 5DF8047B 		ldr	r7, [sp], #4
 706              	.LCFI36:
 707              		.cfi_restore 7
 708              		.cfi_def_cfa_offset 0
 709 0012 7047     		bx	lr
 710              		.cfi_endproc
 711              	.LFE132:
 713              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 714              		.align	1
 715              		.global	HAL_UART_Transmit
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 719              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccOBznmR.s 			page 23


 721              	HAL_UART_Transmit:
 722              	.LFB133:
 550:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 551:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 552:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 553:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 554:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 555:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions 
 556:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions 
 557:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 558:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
 559:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
 560:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
 561:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
 562:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
 563:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 564:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
 565:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 566:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
 567:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode. 
 568:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function 
 569:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             after finishing transfer.  
 570:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (++) Non blocking mode: The communication is performed using Interrupts 
 571:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             or DMA, these APIs return the HAL status.
 572:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The end of the data processing will be indicated through the 
 573:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             dedicated UART IRQ when using Interrupt mode or the DMA IRQ when 
 574:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             using DMA mode.
 575:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks 
 576:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             will be executed respectively at the end of the transmit or receive process.
 577:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL_UART_ErrorCallback() user callback will be executed when 
 578:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             a communication error is detected.
 579:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 580:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode APIs are:
 581:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 582:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive() 
 583:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 584:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non Blocking mode APIs with Interrupt are:
 585:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 586:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 587:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 588:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 589:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non Blocking mode functions with DMA are:
 590:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 591:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 592:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 593:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in non blocking mode:
 594:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 595:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 596:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 597:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 598:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..] 
 599:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (@) In the Half duplex communication, it is forbidden to run the transmit 
 600:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX 
 601:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           can't be useful.
 602:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 603:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 604:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
ARM GAS  /tmp/ccOBznmR.s 			page 24


 605:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 606:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 607:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 608:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode. 
 609:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 610:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 611:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 612:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be sent
 613:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration  
 614:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 615:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 616:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 617:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 723              		.loc 1 617 1
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 24
 726              		@ frame_needed = 1, uses_anonymous_args = 0
 727 0000 80B5     		push	{r7, lr}
 728              	.LCFI37:
 729              		.cfi_def_cfa_offset 8
 730              		.cfi_offset 7, -8
 731              		.cfi_offset 14, -4
 732 0002 88B0     		sub	sp, sp, #32
 733              	.LCFI38:
 734              		.cfi_def_cfa_offset 40
 735 0004 02AF     		add	r7, sp, #8
 736              	.LCFI39:
 737              		.cfi_def_cfa 7, 32
 738 0006 F860     		str	r0, [r7, #12]
 739 0008 B960     		str	r1, [r7, #8]
 740 000a 3B60     		str	r3, [r7]
 741 000c 1346     		mov	r3, r2	@ movhi
 742 000e FB80     		strh	r3, [r7, #6]	@ movhi
 618:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 619:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 743              		.loc 1 619 12
 744 0010 0023     		movs	r3, #0
 745 0012 7B61     		str	r3, [r7, #20]
 620:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 621:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 622:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY) 
 746              		.loc 1 622 11
 747 0014 FB68     		ldr	r3, [r7, #12]
 748 0016 93F83930 		ldrb	r3, [r3, #57]
 749 001a DBB2     		uxtb	r3, r3
 750              		.loc 1 622 5
 751 001c 202B     		cmp	r3, #32
 752 001e 40F08380 		bne	.L23
 623:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 624:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 753              		.loc 1 624 7
 754 0022 BB68     		ldr	r3, [r7, #8]
 755 0024 002B     		cmp	r3, #0
 756 0026 02D0     		beq	.L24
 757              		.loc 1 624 25 discriminator 1
 758 0028 FB88     		ldrh	r3, [r7, #6]
 759 002a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccOBznmR.s 			page 25


 760 002c 01D1     		bne	.L25
 761              	.L24:
 625:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 626:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 762              		.loc 1 626 15
 763 002e 0123     		movs	r3, #1
 764 0030 7BE0     		b	.L26
 765              	.L25:
 627:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 628:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 629:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 630:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 766              		.loc 1 630 5
 767 0032 FB68     		ldr	r3, [r7, #12]
 768 0034 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 769 0038 012B     		cmp	r3, #1
 770 003a 01D1     		bne	.L27
 771              		.loc 1 630 5 is_stmt 0 discriminator 1
 772 003c 0223     		movs	r3, #2
 773 003e 74E0     		b	.L26
 774              	.L27:
 775              		.loc 1 630 5 discriminator 2
 776 0040 FB68     		ldr	r3, [r7, #12]
 777 0042 0122     		movs	r2, #1
 778 0044 83F83820 		strb	r2, [r3, #56]
 631:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 632:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 779              		.loc 1 632 22 is_stmt 1 discriminator 2
 780 0048 FB68     		ldr	r3, [r7, #12]
 781 004a 0022     		movs	r2, #0
 782 004c DA63     		str	r2, [r3, #60]
 633:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 783              		.loc 1 633 19 discriminator 2
 784 004e FB68     		ldr	r3, [r7, #12]
 785 0050 2122     		movs	r2, #33
 786 0052 83F83920 		strb	r2, [r3, #57]
 634:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 635:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 636:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 787              		.loc 1 636 17 discriminator 2
 788 0056 FFF7FEFF 		bl	HAL_GetTick
 789 005a 7861     		str	r0, [r7, #20]
 637:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 638:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 790              		.loc 1 638 23 discriminator 2
 791 005c FB68     		ldr	r3, [r7, #12]
 792 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 793 0060 9A84     		strh	r2, [r3, #36]	@ movhi
 639:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 794              		.loc 1 639 24 discriminator 2
 795 0062 FB68     		ldr	r3, [r7, #12]
 796 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 797 0066 DA84     		strh	r2, [r3, #38]	@ movhi
 640:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 798              		.loc 1 640 10 discriminator 2
 799 0068 42E0     		b	.L28
 800              	.L33:
ARM GAS  /tmp/ccOBznmR.s 			page 26


 641:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 642:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
 801              		.loc 1 642 12
 802 006a FB68     		ldr	r3, [r7, #12]
 803 006c DB8C     		ldrh	r3, [r3, #38]	@ movhi
 804 006e 9BB2     		uxth	r3, r3
 805              		.loc 1 642 25
 806 0070 013B     		subs	r3, r3, #1
 807 0072 9AB2     		uxth	r2, r3
 808 0074 FB68     		ldr	r3, [r7, #12]
 809 0076 DA84     		strh	r2, [r3, #38]	@ movhi
 643:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 810              		.loc 1 643 21
 811 0078 FB68     		ldr	r3, [r7, #12]
 812 007a 9B68     		ldr	r3, [r3, #8]
 813              		.loc 1 643 9
 814 007c B3F5805F 		cmp	r3, #4096
 815 0080 22D1     		bne	.L29
 644:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 645:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 816              		.loc 1 645 12
 817 0082 3B68     		ldr	r3, [r7]
 818 0084 0093     		str	r3, [sp]
 819 0086 7B69     		ldr	r3, [r7, #20]
 820 0088 0022     		movs	r2, #0
 821 008a 8021     		movs	r1, #128
 822 008c F868     		ldr	r0, [r7, #12]
 823 008e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 824 0092 0346     		mov	r3, r0
 825              		.loc 1 645 11
 826 0094 002B     		cmp	r3, #0
 827 0096 01D0     		beq	.L30
 646:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 647:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 828              		.loc 1 647 18
 829 0098 0323     		movs	r3, #3
 830 009a 46E0     		b	.L26
 831              	.L30:
 648:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 649:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 832              		.loc 1 649 13
 833 009c BB68     		ldr	r3, [r7, #8]
 834 009e 3B61     		str	r3, [r7, #16]
 650:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 835              		.loc 1 650 32
 836 00a0 3B69     		ldr	r3, [r7, #16]
 837 00a2 1B88     		ldrh	r3, [r3]
 838              		.loc 1 650 37
 839 00a4 1A46     		mov	r2, r3
 840              		.loc 1 650 14
 841 00a6 FB68     		ldr	r3, [r7, #12]
 842 00a8 1B68     		ldr	r3, [r3]
 843              		.loc 1 650 37
 844 00aa C2F30802 		ubfx	r2, r2, #0, #9
 845              		.loc 1 650 29
 846 00ae 5A60     		str	r2, [r3, #4]
 651:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
ARM GAS  /tmp/ccOBznmR.s 			page 27


 847              		.loc 1 651 23
 848 00b0 FB68     		ldr	r3, [r7, #12]
 849 00b2 1B69     		ldr	r3, [r3, #16]
 850              		.loc 1 651 11
 851 00b4 002B     		cmp	r3, #0
 852 00b6 03D1     		bne	.L31
 652:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 653:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 853              		.loc 1 653 17
 854 00b8 BB68     		ldr	r3, [r7, #8]
 855 00ba 0233     		adds	r3, r3, #2
 856 00bc BB60     		str	r3, [r7, #8]
 857 00be 17E0     		b	.L28
 858              	.L31:
 654:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 655:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 656:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 657:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
 859              		.loc 1 657 17
 860 00c0 BB68     		ldr	r3, [r7, #8]
 861 00c2 0133     		adds	r3, r3, #1
 862 00c4 BB60     		str	r3, [r7, #8]
 863 00c6 13E0     		b	.L28
 864              	.L29:
 658:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 659:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 660:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
 661:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 662:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 865              		.loc 1 662 12
 866 00c8 3B68     		ldr	r3, [r7]
 867 00ca 0093     		str	r3, [sp]
 868 00cc 7B69     		ldr	r3, [r7, #20]
 869 00ce 0022     		movs	r2, #0
 870 00d0 8021     		movs	r1, #128
 871 00d2 F868     		ldr	r0, [r7, #12]
 872 00d4 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 873 00d8 0346     		mov	r3, r0
 874              		.loc 1 662 11
 875 00da 002B     		cmp	r3, #0
 876 00dc 01D0     		beq	.L32
 663:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 664:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 877              		.loc 1 664 18
 878 00de 0323     		movs	r3, #3
 879 00e0 23E0     		b	.L26
 880              	.L32:
 665:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 666:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 881              		.loc 1 666 38
 882 00e2 BB68     		ldr	r3, [r7, #8]
 883 00e4 5A1C     		adds	r2, r3, #1
 884 00e6 BA60     		str	r2, [r7, #8]
 885              		.loc 1 666 32
 886 00e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 887              		.loc 1 666 14
 888 00ea FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccOBznmR.s 			page 28


 889 00ec 1B68     		ldr	r3, [r3]
 890              		.loc 1 666 29
 891 00ee 5A60     		str	r2, [r3, #4]
 892              	.L28:
 640:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 893              		.loc 1 640 16
 894 00f0 FB68     		ldr	r3, [r7, #12]
 895 00f2 DB8C     		ldrh	r3, [r3, #38]	@ movhi
 896 00f4 9BB2     		uxth	r3, r3
 640:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 897              		.loc 1 640 10
 898 00f6 002B     		cmp	r3, #0
 899 00f8 B7D1     		bne	.L33
 667:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 668:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 669:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 670:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 900              		.loc 1 670 8
 901 00fa 3B68     		ldr	r3, [r7]
 902 00fc 0093     		str	r3, [sp]
 903 00fe 7B69     		ldr	r3, [r7, #20]
 904 0100 0022     		movs	r2, #0
 905 0102 4021     		movs	r1, #64
 906 0104 F868     		ldr	r0, [r7, #12]
 907 0106 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 908 010a 0346     		mov	r3, r0
 909              		.loc 1 670 7
 910 010c 002B     		cmp	r3, #0
 911 010e 01D0     		beq	.L34
 671:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 672:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
 912              		.loc 1 672 14
 913 0110 0323     		movs	r3, #3
 914 0112 0AE0     		b	.L26
 915              	.L34:
 673:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 674:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 675:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 676:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 916              		.loc 1 676 21
 917 0114 FB68     		ldr	r3, [r7, #12]
 918 0116 2022     		movs	r2, #32
 919 0118 83F83920 		strb	r2, [r3, #57]
 677:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 678:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 679:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 920              		.loc 1 679 5
 921 011c FB68     		ldr	r3, [r7, #12]
 922 011e 0022     		movs	r2, #0
 923 0120 83F83820 		strb	r2, [r3, #56]
 680:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 681:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 924              		.loc 1 681 12
 925 0124 0023     		movs	r3, #0
 926 0126 00E0     		b	.L26
 927              	.L23:
 682:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccOBznmR.s 			page 29


 683:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 684:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 685:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 928              		.loc 1 685 12
 929 0128 0223     		movs	r3, #2
 930              	.L26:
 686:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 687:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 931              		.loc 1 687 1
 932 012a 1846     		mov	r0, r3
 933 012c 1837     		adds	r7, r7, #24
 934              	.LCFI40:
 935              		.cfi_def_cfa_offset 8
 936 012e BD46     		mov	sp, r7
 937              	.LCFI41:
 938              		.cfi_def_cfa_register 13
 939              		@ sp needed
 940 0130 80BD     		pop	{r7, pc}
 941              		.cfi_endproc
 942              	.LFE133:
 944              		.section	.text.HAL_UART_Receive,"ax",%progbits
 945              		.align	1
 946              		.global	HAL_UART_Receive
 947              		.syntax unified
 948              		.thumb
 949              		.thumb_func
 950              		.fpu fpv4-sp-d16
 952              	HAL_UART_Receive:
 953              	.LFB134:
 688:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 689:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 690:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode. 
 691:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 692:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 693:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 694:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be received
 695:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
 696:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 697:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 698:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 699:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** { 
 954              		.loc 1 699 1
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 24
 957              		@ frame_needed = 1, uses_anonymous_args = 0
 958 0000 80B5     		push	{r7, lr}
 959              	.LCFI42:
 960              		.cfi_def_cfa_offset 8
 961              		.cfi_offset 7, -8
 962              		.cfi_offset 14, -4
 963 0002 88B0     		sub	sp, sp, #32
 964              	.LCFI43:
 965              		.cfi_def_cfa_offset 40
 966 0004 02AF     		add	r7, sp, #8
 967              	.LCFI44:
 968              		.cfi_def_cfa 7, 32
 969 0006 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccOBznmR.s 			page 30


 970 0008 B960     		str	r1, [r7, #8]
 971 000a 3B60     		str	r3, [r7]
 972 000c 1346     		mov	r3, r2	@ movhi
 973 000e FB80     		strh	r3, [r7, #6]	@ movhi
 700:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 701:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 974              		.loc 1 701 12
 975 0010 0023     		movs	r3, #0
 976 0012 7B61     		str	r3, [r7, #20]
 702:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 703:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 704:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 977              		.loc 1 704 11
 978 0014 FB68     		ldr	r3, [r7, #12]
 979 0016 93F83A30 		ldrb	r3, [r3, #58]
 980 001a DBB2     		uxtb	r3, r3
 981              		.loc 1 704 5
 982 001c 202B     		cmp	r3, #32
 983 001e 40F09080 		bne	.L36
 705:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 706:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 984              		.loc 1 706 7
 985 0022 BB68     		ldr	r3, [r7, #8]
 986 0024 002B     		cmp	r3, #0
 987 0026 02D0     		beq	.L37
 988              		.loc 1 706 25 discriminator 1
 989 0028 FB88     		ldrh	r3, [r7, #6]
 990 002a 002B     		cmp	r3, #0
 991 002c 01D1     		bne	.L38
 992              	.L37:
 707:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 708:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 993              		.loc 1 708 15
 994 002e 0123     		movs	r3, #1
 995 0030 88E0     		b	.L39
 996              	.L38:
 709:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 710:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 711:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 712:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 997              		.loc 1 712 5
 998 0032 FB68     		ldr	r3, [r7, #12]
 999 0034 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1000 0038 012B     		cmp	r3, #1
 1001 003a 01D1     		bne	.L40
 1002              		.loc 1 712 5 is_stmt 0 discriminator 1
 1003 003c 0223     		movs	r3, #2
 1004 003e 81E0     		b	.L39
 1005              	.L40:
 1006              		.loc 1 712 5 discriminator 2
 1007 0040 FB68     		ldr	r3, [r7, #12]
 1008 0042 0122     		movs	r2, #1
 1009 0044 83F83820 		strb	r2, [r3, #56]
 713:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 714:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1010              		.loc 1 714 22 is_stmt 1 discriminator 2
 1011 0048 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccOBznmR.s 			page 31


 1012 004a 0022     		movs	r2, #0
 1013 004c DA63     		str	r2, [r3, #60]
 715:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1014              		.loc 1 715 20 discriminator 2
 1015 004e FB68     		ldr	r3, [r7, #12]
 1016 0050 2222     		movs	r2, #34
 1017 0052 83F83A20 		strb	r2, [r3, #58]
 716:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 717:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 718:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1018              		.loc 1 718 17 discriminator 2
 1019 0056 FFF7FEFF 		bl	HAL_GetTick
 1020 005a 7861     		str	r0, [r7, #20]
 719:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 720:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size; 
 1021              		.loc 1 720 23 discriminator 2
 1022 005c FB68     		ldr	r3, [r7, #12]
 1023 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1024 0060 9A85     		strh	r2, [r3, #44]	@ movhi
 721:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1025              		.loc 1 721 24 discriminator 2
 1026 0062 FB68     		ldr	r3, [r7, #12]
 1027 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1028 0066 DA85     		strh	r2, [r3, #46]	@ movhi
 722:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 723:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
 724:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 1029              		.loc 1 724 10 discriminator 2
 1030 0068 5CE0     		b	.L41
 1031              	.L47:
 725:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 726:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
 1032              		.loc 1 726 12
 1033 006a FB68     		ldr	r3, [r7, #12]
 1034 006c DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1035 006e 9BB2     		uxth	r3, r3
 1036              		.loc 1 726 25
 1037 0070 013B     		subs	r3, r3, #1
 1038 0072 9AB2     		uxth	r2, r3
 1039 0074 FB68     		ldr	r3, [r7, #12]
 1040 0076 DA85     		strh	r2, [r3, #46]	@ movhi
 727:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1041              		.loc 1 727 21
 1042 0078 FB68     		ldr	r3, [r7, #12]
 1043 007a 9B68     		ldr	r3, [r3, #8]
 1044              		.loc 1 727 9
 1045 007c B3F5805F 		cmp	r3, #4096
 1046 0080 2BD1     		bne	.L42
 728:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 729:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1047              		.loc 1 729 12
 1048 0082 3B68     		ldr	r3, [r7]
 1049 0084 0093     		str	r3, [sp]
 1050 0086 7B69     		ldr	r3, [r7, #20]
 1051 0088 0022     		movs	r2, #0
 1052 008a 2021     		movs	r1, #32
 1053 008c F868     		ldr	r0, [r7, #12]
ARM GAS  /tmp/ccOBznmR.s 			page 32


 1054 008e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1055 0092 0346     		mov	r3, r0
 1056              		.loc 1 729 11
 1057 0094 002B     		cmp	r3, #0
 1058 0096 01D0     		beq	.L43
 730:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 731:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 1059              		.loc 1 731 18
 1060 0098 0323     		movs	r3, #3
 1061 009a 53E0     		b	.L39
 1062              	.L43:
 732:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 733:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 1063              		.loc 1 733 13
 1064 009c BB68     		ldr	r3, [r7, #8]
 1065 009e 3B61     		str	r3, [r7, #16]
 734:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1066              		.loc 1 734 23
 1067 00a0 FB68     		ldr	r3, [r7, #12]
 1068 00a2 1B69     		ldr	r3, [r3, #16]
 1069              		.loc 1 734 11
 1070 00a4 002B     		cmp	r3, #0
 1071 00a6 0CD1     		bne	.L44
 735:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 736:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 1072              		.loc 1 736 34
 1073 00a8 FB68     		ldr	r3, [r7, #12]
 1074 00aa 1B68     		ldr	r3, [r3]
 1075              		.loc 1 736 44
 1076 00ac 5B68     		ldr	r3, [r3, #4]
 1077              		.loc 1 736 18
 1078 00ae 9BB2     		uxth	r3, r3
 1079 00b0 C3F30803 		ubfx	r3, r3, #0, #9
 1080 00b4 9AB2     		uxth	r2, r3
 1081              		.loc 1 736 16
 1082 00b6 3B69     		ldr	r3, [r7, #16]
 1083 00b8 1A80     		strh	r2, [r3]	@ movhi
 737:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 1084              		.loc 1 737 17
 1085 00ba BB68     		ldr	r3, [r7, #8]
 1086 00bc 0233     		adds	r3, r3, #2
 1087 00be BB60     		str	r3, [r7, #8]
 1088 00c0 30E0     		b	.L41
 1089              	.L44:
 738:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 739:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 740:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 741:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 1090              		.loc 1 741 34
 1091 00c2 FB68     		ldr	r3, [r7, #12]
 1092 00c4 1B68     		ldr	r3, [r3]
 1093              		.loc 1 741 44
 1094 00c6 5B68     		ldr	r3, [r3, #4]
 1095              		.loc 1 741 18
 1096 00c8 9BB2     		uxth	r3, r3
 1097 00ca DBB2     		uxtb	r3, r3
 1098 00cc 9AB2     		uxth	r2, r3
ARM GAS  /tmp/ccOBznmR.s 			page 33


 1099              		.loc 1 741 16
 1100 00ce 3B69     		ldr	r3, [r7, #16]
 1101 00d0 1A80     		strh	r2, [r3]	@ movhi
 742:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
 1102              		.loc 1 742 17
 1103 00d2 BB68     		ldr	r3, [r7, #8]
 1104 00d4 0133     		adds	r3, r3, #1
 1105 00d6 BB60     		str	r3, [r7, #8]
 1106 00d8 24E0     		b	.L41
 1107              	.L42:
 743:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 744:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 745:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 746:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
 747:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 748:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1108              		.loc 1 748 12
 1109 00da 3B68     		ldr	r3, [r7]
 1110 00dc 0093     		str	r3, [sp]
 1111 00de 7B69     		ldr	r3, [r7, #20]
 1112 00e0 0022     		movs	r2, #0
 1113 00e2 2021     		movs	r1, #32
 1114 00e4 F868     		ldr	r0, [r7, #12]
 1115 00e6 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1116 00ea 0346     		mov	r3, r0
 1117              		.loc 1 748 11
 1118 00ec 002B     		cmp	r3, #0
 1119 00ee 01D0     		beq	.L45
 749:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 750:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 1120              		.loc 1 750 18
 1121 00f0 0323     		movs	r3, #3
 1122 00f2 27E0     		b	.L39
 1123              	.L45:
 751:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 752:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1124              		.loc 1 752 23
 1125 00f4 FB68     		ldr	r3, [r7, #12]
 1126 00f6 1B69     		ldr	r3, [r3, #16]
 1127              		.loc 1 752 11
 1128 00f8 002B     		cmp	r3, #0
 1129 00fa 08D1     		bne	.L46
 753:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 754:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 1130              		.loc 1 754 37
 1131 00fc FB68     		ldr	r3, [r7, #12]
 1132 00fe 1B68     		ldr	r3, [r3]
 1133              		.loc 1 754 47
 1134 0100 5968     		ldr	r1, [r3, #4]
 1135              		.loc 1 754 17
 1136 0102 BB68     		ldr	r3, [r7, #8]
 1137 0104 5A1C     		adds	r2, r3, #1
 1138 0106 BA60     		str	r2, [r7, #8]
 1139              		.loc 1 754 22
 1140 0108 CAB2     		uxtb	r2, r1
 1141              		.loc 1 754 20
 1142 010a 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccOBznmR.s 			page 34


 1143 010c 0AE0     		b	.L41
 1144              	.L46:
 755:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 756:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 757:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 758:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 1145              		.loc 1 758 37
 1146 010e FB68     		ldr	r3, [r7, #12]
 1147 0110 1B68     		ldr	r3, [r3]
 1148              		.loc 1 758 47
 1149 0112 5B68     		ldr	r3, [r3, #4]
 1150              		.loc 1 758 22
 1151 0114 DAB2     		uxtb	r2, r3
 1152              		.loc 1 758 17
 1153 0116 BB68     		ldr	r3, [r7, #8]
 1154 0118 591C     		adds	r1, r3, #1
 1155 011a B960     		str	r1, [r7, #8]
 1156              		.loc 1 758 22
 1157 011c 02F07F02 		and	r2, r2, #127
 1158 0120 D2B2     		uxtb	r2, r2
 1159              		.loc 1 758 20
 1160 0122 1A70     		strb	r2, [r3]
 1161              	.L41:
 724:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1162              		.loc 1 724 16
 1163 0124 FB68     		ldr	r3, [r7, #12]
 1164 0126 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1165 0128 9BB2     		uxth	r3, r3
 724:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1166              		.loc 1 724 10
 1167 012a 002B     		cmp	r3, #0
 1168 012c 9DD1     		bne	.L47
 759:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 760:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 761:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 762:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 763:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 764:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 765:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1169              		.loc 1 765 20
 1170 012e FB68     		ldr	r3, [r7, #12]
 1171 0130 2022     		movs	r2, #32
 1172 0132 83F83A20 		strb	r2, [r3, #58]
 766:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 767:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 768:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1173              		.loc 1 768 5
 1174 0136 FB68     		ldr	r3, [r7, #12]
 1175 0138 0022     		movs	r2, #0
 1176 013a 83F83820 		strb	r2, [r3, #56]
 769:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 770:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1177              		.loc 1 770 12
 1178 013e 0023     		movs	r3, #0
 1179 0140 00E0     		b	.L39
 1180              	.L36:
 771:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccOBznmR.s 			page 35


 772:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 773:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 774:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;   
 1181              		.loc 1 774 12
 1182 0142 0223     		movs	r3, #2
 1183              	.L39:
 775:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 776:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1184              		.loc 1 776 1
 1185 0144 1846     		mov	r0, r3
 1186 0146 1837     		adds	r7, r7, #24
 1187              	.LCFI45:
 1188              		.cfi_def_cfa_offset 8
 1189 0148 BD46     		mov	sp, r7
 1190              	.LCFI46:
 1191              		.cfi_def_cfa_register 13
 1192              		@ sp needed
 1193 014a 80BD     		pop	{r7, pc}
 1194              		.cfi_endproc
 1195              	.LFE134:
 1197              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1198              		.align	1
 1199              		.global	HAL_UART_Transmit_IT
 1200              		.syntax unified
 1201              		.thumb
 1202              		.thumb_func
 1203              		.fpu fpv4-sp-d16
 1205              	HAL_UART_Transmit_IT:
 1206              	.LFB135:
 777:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 778:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 779:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
 780:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 781:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 782:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 783:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be sent
 784:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 785:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 786:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 787:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1207              		.loc 1 787 1
 1208              		.cfi_startproc
 1209              		@ args = 0, pretend = 0, frame = 16
 1210              		@ frame_needed = 1, uses_anonymous_args = 0
 1211              		@ link register save eliminated.
 1212 0000 80B4     		push	{r7}
 1213              	.LCFI47:
 1214              		.cfi_def_cfa_offset 4
 1215              		.cfi_offset 7, -4
 1216 0002 85B0     		sub	sp, sp, #20
 1217              	.LCFI48:
 1218              		.cfi_def_cfa_offset 24
 1219 0004 00AF     		add	r7, sp, #0
 1220              	.LCFI49:
 1221              		.cfi_def_cfa_register 7
 1222 0006 F860     		str	r0, [r7, #12]
 1223 0008 B960     		str	r1, [r7, #8]
ARM GAS  /tmp/ccOBznmR.s 			page 36


 1224 000a 1346     		mov	r3, r2
 1225 000c FB80     		strh	r3, [r7, #6]	@ movhi
 788:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 789:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 1226              		.loc 1 789 11
 1227 000e FB68     		ldr	r3, [r7, #12]
 1228 0010 93F83930 		ldrb	r3, [r3, #57]
 1229 0014 DBB2     		uxtb	r3, r3
 1230              		.loc 1 789 5
 1231 0016 202B     		cmp	r3, #32
 1232 0018 30D1     		bne	.L49
 790:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 791:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 1233              		.loc 1 791 7
 1234 001a BB68     		ldr	r3, [r7, #8]
 1235 001c 002B     		cmp	r3, #0
 1236 001e 02D0     		beq	.L50
 1237              		.loc 1 791 25 discriminator 1
 1238 0020 FB88     		ldrh	r3, [r7, #6]
 1239 0022 002B     		cmp	r3, #0
 1240 0024 01D1     		bne	.L51
 1241              	.L50:
 792:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 793:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1242              		.loc 1 793 14
 1243 0026 0123     		movs	r3, #1
 1244 0028 29E0     		b	.L52
 1245              	.L51:
 794:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 795:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 796:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 797:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1246              		.loc 1 797 5
 1247 002a FB68     		ldr	r3, [r7, #12]
 1248 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1249 0030 012B     		cmp	r3, #1
 1250 0032 01D1     		bne	.L53
 1251              		.loc 1 797 5 is_stmt 0 discriminator 1
 1252 0034 0223     		movs	r3, #2
 1253 0036 22E0     		b	.L52
 1254              	.L53:
 1255              		.loc 1 797 5 discriminator 2
 1256 0038 FB68     		ldr	r3, [r7, #12]
 1257 003a 0122     		movs	r2, #1
 1258 003c 83F83820 		strb	r2, [r3, #56]
 798:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 799:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1259              		.loc 1 799 23 is_stmt 1 discriminator 2
 1260 0040 FB68     		ldr	r3, [r7, #12]
 1261 0042 BA68     		ldr	r2, [r7, #8]
 1262 0044 1A62     		str	r2, [r3, #32]
 800:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1263              		.loc 1 800 23 discriminator 2
 1264 0046 FB68     		ldr	r3, [r7, #12]
 1265 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1266 004a 9A84     		strh	r2, [r3, #36]	@ movhi
 801:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
ARM GAS  /tmp/ccOBznmR.s 			page 37


 1267              		.loc 1 801 24 discriminator 2
 1268 004c FB68     		ldr	r3, [r7, #12]
 1269 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1270 0050 DA84     		strh	r2, [r3, #38]	@ movhi
 802:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 803:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1271              		.loc 1 803 22 discriminator 2
 1272 0052 FB68     		ldr	r3, [r7, #12]
 1273 0054 0022     		movs	r2, #0
 1274 0056 DA63     		str	r2, [r3, #60]
 804:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1275              		.loc 1 804 19 discriminator 2
 1276 0058 FB68     		ldr	r3, [r7, #12]
 1277 005a 2122     		movs	r2, #33
 1278 005c 83F83920 		strb	r2, [r3, #57]
 805:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 806:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 807:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1279              		.loc 1 807 5 discriminator 2
 1280 0060 FB68     		ldr	r3, [r7, #12]
 1281 0062 0022     		movs	r2, #0
 1282 0064 83F83820 		strb	r2, [r3, #56]
 808:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 809:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
 810:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 1283              		.loc 1 810 5 discriminator 2
 1284 0068 FB68     		ldr	r3, [r7, #12]
 1285 006a 1B68     		ldr	r3, [r3]
 1286 006c DA68     		ldr	r2, [r3, #12]
 1287 006e FB68     		ldr	r3, [r7, #12]
 1288 0070 1B68     		ldr	r3, [r3]
 1289 0072 42F08002 		orr	r2, r2, #128
 1290 0076 DA60     		str	r2, [r3, #12]
 811:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 812:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1291              		.loc 1 812 12 discriminator 2
 1292 0078 0023     		movs	r3, #0
 1293 007a 00E0     		b	.L52
 1294              	.L49:
 813:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 814:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 815:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 816:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;   
 1295              		.loc 1 816 12
 1296 007c 0223     		movs	r3, #2
 1297              	.L52:
 817:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 818:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1298              		.loc 1 818 1
 1299 007e 1846     		mov	r0, r3
 1300 0080 1437     		adds	r7, r7, #20
 1301              	.LCFI50:
 1302              		.cfi_def_cfa_offset 4
 1303 0082 BD46     		mov	sp, r7
 1304              	.LCFI51:
 1305              		.cfi_def_cfa_register 13
 1306              		@ sp needed
ARM GAS  /tmp/ccOBznmR.s 			page 38


 1307 0084 5DF8047B 		ldr	r7, [sp], #4
 1308              	.LCFI52:
 1309              		.cfi_restore 7
 1310              		.cfi_def_cfa_offset 0
 1311 0088 7047     		bx	lr
 1312              		.cfi_endproc
 1313              	.LFE135:
 1315              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1316              		.align	1
 1317              		.global	HAL_UART_Receive_IT
 1318              		.syntax unified
 1319              		.thumb
 1320              		.thumb_func
 1321              		.fpu fpv4-sp-d16
 1323              	HAL_UART_Receive_IT:
 1324              	.LFB136:
 819:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 820:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 821:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
 822:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 823:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 824:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 825:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be received
 826:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 827:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 828:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 829:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1325              		.loc 1 829 1
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 16
 1328              		@ frame_needed = 1, uses_anonymous_args = 0
 1329              		@ link register save eliminated.
 1330 0000 80B4     		push	{r7}
 1331              	.LCFI53:
 1332              		.cfi_def_cfa_offset 4
 1333              		.cfi_offset 7, -4
 1334 0002 85B0     		sub	sp, sp, #20
 1335              	.LCFI54:
 1336              		.cfi_def_cfa_offset 24
 1337 0004 00AF     		add	r7, sp, #0
 1338              	.LCFI55:
 1339              		.cfi_def_cfa_register 7
 1340 0006 F860     		str	r0, [r7, #12]
 1341 0008 B960     		str	r1, [r7, #8]
 1342 000a 1346     		mov	r3, r2
 1343 000c FB80     		strh	r3, [r7, #6]	@ movhi
 830:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */ 
 831:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 1344              		.loc 1 831 11
 1345 000e FB68     		ldr	r3, [r7, #12]
 1346 0010 93F83A30 		ldrb	r3, [r3, #58]
 1347 0014 DBB2     		uxtb	r3, r3
 1348              		.loc 1 831 5
 1349 0016 202B     		cmp	r3, #32
 1350 0018 38D1     		bne	.L55
 832:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 833:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
ARM GAS  /tmp/ccOBznmR.s 			page 39


 1351              		.loc 1 833 7
 1352 001a BB68     		ldr	r3, [r7, #8]
 1353 001c 002B     		cmp	r3, #0
 1354 001e 02D0     		beq	.L56
 1355              		.loc 1 833 25 discriminator 1
 1356 0020 FB88     		ldrh	r3, [r7, #6]
 1357 0022 002B     		cmp	r3, #0
 1358 0024 01D1     		bne	.L57
 1359              	.L56:
 834:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 835:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1360              		.loc 1 835 14
 1361 0026 0123     		movs	r3, #1
 1362 0028 31E0     		b	.L58
 1363              	.L57:
 836:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 837:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 838:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 839:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1364              		.loc 1 839 5
 1365 002a FB68     		ldr	r3, [r7, #12]
 1366 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1367 0030 012B     		cmp	r3, #1
 1368 0032 01D1     		bne	.L59
 1369              		.loc 1 839 5 is_stmt 0 discriminator 1
 1370 0034 0223     		movs	r3, #2
 1371 0036 2AE0     		b	.L58
 1372              	.L59:
 1373              		.loc 1 839 5 discriminator 2
 1374 0038 FB68     		ldr	r3, [r7, #12]
 1375 003a 0122     		movs	r2, #1
 1376 003c 83F83820 		strb	r2, [r3, #56]
 840:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 841:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1377              		.loc 1 841 23 is_stmt 1 discriminator 2
 1378 0040 FB68     		ldr	r3, [r7, #12]
 1379 0042 BA68     		ldr	r2, [r7, #8]
 1380 0044 9A62     		str	r2, [r3, #40]
 842:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1381              		.loc 1 842 23 discriminator 2
 1382 0046 FB68     		ldr	r3, [r7, #12]
 1383 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1384 004a 9A85     		strh	r2, [r3, #44]	@ movhi
 843:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1385              		.loc 1 843 24 discriminator 2
 1386 004c FB68     		ldr	r3, [r7, #12]
 1387 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1388 0050 DA85     		strh	r2, [r3, #46]	@ movhi
 844:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 845:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1389              		.loc 1 845 22 discriminator 2
 1390 0052 FB68     		ldr	r3, [r7, #12]
 1391 0054 0022     		movs	r2, #0
 1392 0056 DA63     		str	r2, [r3, #60]
 846:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1393              		.loc 1 846 20 discriminator 2
 1394 0058 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccOBznmR.s 			page 40


 1395 005a 2222     		movs	r2, #34
 1396 005c 83F83A20 		strb	r2, [r3, #58]
 847:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 848:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 849:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1397              		.loc 1 849 5 discriminator 2
 1398 0060 FB68     		ldr	r3, [r7, #12]
 1399 0062 0022     		movs	r2, #0
 1400 0064 83F83820 		strb	r2, [r3, #56]
 850:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 851:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 852:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1401              		.loc 1 852 5 discriminator 2
 1402 0068 FB68     		ldr	r3, [r7, #12]
 1403 006a 1B68     		ldr	r3, [r3]
 1404 006c 5A69     		ldr	r2, [r3, #20]
 1405 006e FB68     		ldr	r3, [r7, #12]
 1406 0070 1B68     		ldr	r3, [r3]
 1407 0072 42F00102 		orr	r2, r2, #1
 1408 0076 5A61     		str	r2, [r3, #20]
 853:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 854:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 855:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 1409              		.loc 1 855 5 discriminator 2
 1410 0078 FB68     		ldr	r3, [r7, #12]
 1411 007a 1B68     		ldr	r3, [r3]
 1412 007c DA68     		ldr	r2, [r3, #12]
 1413 007e FB68     		ldr	r3, [r7, #12]
 1414 0080 1B68     		ldr	r3, [r3]
 1415 0082 42F49072 		orr	r2, r2, #288
 1416 0086 DA60     		str	r2, [r3, #12]
 856:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 857:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1417              		.loc 1 857 12 discriminator 2
 1418 0088 0023     		movs	r3, #0
 1419 008a 00E0     		b	.L58
 1420              	.L55:
 858:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 859:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 860:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 861:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY; 
 1421              		.loc 1 861 12
 1422 008c 0223     		movs	r3, #2
 1423              	.L58:
 862:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 863:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1424              		.loc 1 863 1
 1425 008e 1846     		mov	r0, r3
 1426 0090 1437     		adds	r7, r7, #20
 1427              	.LCFI56:
 1428              		.cfi_def_cfa_offset 4
 1429 0092 BD46     		mov	sp, r7
 1430              	.LCFI57:
 1431              		.cfi_def_cfa_register 13
 1432              		@ sp needed
 1433 0094 5DF8047B 		ldr	r7, [sp], #4
 1434              	.LCFI58:
ARM GAS  /tmp/ccOBznmR.s 			page 41


 1435              		.cfi_restore 7
 1436              		.cfi_def_cfa_offset 0
 1437 0098 7047     		bx	lr
 1438              		.cfi_endproc
 1439              	.LFE136:
 1441              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1442              		.align	1
 1443              		.global	HAL_UART_Transmit_DMA
 1444              		.syntax unified
 1445              		.thumb
 1446              		.thumb_func
 1447              		.fpu fpv4-sp-d16
 1449              	HAL_UART_Transmit_DMA:
 1450              	.LFB137:
 864:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 865:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 866:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode. 
 867:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 868:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 869:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 870:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be sent
 871:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 872:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 873:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 874:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1451              		.loc 1 874 1
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 24
 1454              		@ frame_needed = 1, uses_anonymous_args = 0
 1455 0000 80B5     		push	{r7, lr}
 1456              	.LCFI59:
 1457              		.cfi_def_cfa_offset 8
 1458              		.cfi_offset 7, -8
 1459              		.cfi_offset 14, -4
 1460 0002 86B0     		sub	sp, sp, #24
 1461              	.LCFI60:
 1462              		.cfi_def_cfa_offset 32
 1463 0004 00AF     		add	r7, sp, #0
 1464              	.LCFI61:
 1465              		.cfi_def_cfa_register 7
 1466 0006 F860     		str	r0, [r7, #12]
 1467 0008 B960     		str	r1, [r7, #8]
 1468 000a 1346     		mov	r3, r2
 1469 000c FB80     		strh	r3, [r7, #6]	@ movhi
 875:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 876:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 877:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 878:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 1470              		.loc 1 878 11
 1471 000e FB68     		ldr	r3, [r7, #12]
 1472 0010 93F83930 		ldrb	r3, [r3, #57]
 1473 0014 DBB2     		uxtb	r3, r3
 1474              		.loc 1 878 5
 1475 0016 202B     		cmp	r3, #32
 1476 0018 53D1     		bne	.L61
 879:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 880:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
ARM GAS  /tmp/ccOBznmR.s 			page 42


 1477              		.loc 1 880 15
 1478 001a BB68     		ldr	r3, [r7, #8]
 1479              		.loc 1 880 7
 1480 001c 002B     		cmp	r3, #0
 1481 001e 02D0     		beq	.L62
 1482              		.loc 1 880 25 discriminator 1
 1483 0020 FB88     		ldrh	r3, [r7, #6]
 1484 0022 002B     		cmp	r3, #0
 1485 0024 01D1     		bne	.L63
 1486              	.L62:
 881:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 882:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1487              		.loc 1 882 14
 1488 0026 0123     		movs	r3, #1
 1489 0028 4CE0     		b	.L64
 1490              	.L63:
 883:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 884:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 885:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 886:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1491              		.loc 1 886 5
 1492 002a FB68     		ldr	r3, [r7, #12]
 1493 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1494 0030 012B     		cmp	r3, #1
 1495 0032 01D1     		bne	.L65
 1496              		.loc 1 886 5 is_stmt 0 discriminator 1
 1497 0034 0223     		movs	r3, #2
 1498 0036 45E0     		b	.L64
 1499              	.L65:
 1500              		.loc 1 886 5 discriminator 2
 1501 0038 FB68     		ldr	r3, [r7, #12]
 1502 003a 0122     		movs	r2, #1
 1503 003c 83F83820 		strb	r2, [r3, #56]
 887:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 888:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1504              		.loc 1 888 23 is_stmt 1 discriminator 2
 1505 0040 BA68     		ldr	r2, [r7, #8]
 1506 0042 FB68     		ldr	r3, [r7, #12]
 1507 0044 1A62     		str	r2, [r3, #32]
 889:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1508              		.loc 1 889 23 discriminator 2
 1509 0046 FB68     		ldr	r3, [r7, #12]
 1510 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1511 004a 9A84     		strh	r2, [r3, #36]	@ movhi
 890:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1512              		.loc 1 890 24 discriminator 2
 1513 004c FB68     		ldr	r3, [r7, #12]
 1514 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1515 0050 DA84     		strh	r2, [r3, #38]	@ movhi
 891:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 892:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1516              		.loc 1 892 22 discriminator 2
 1517 0052 FB68     		ldr	r3, [r7, #12]
 1518 0054 0022     		movs	r2, #0
 1519 0056 DA63     		str	r2, [r3, #60]
 893:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1520              		.loc 1 893 19 discriminator 2
ARM GAS  /tmp/ccOBznmR.s 			page 43


 1521 0058 FB68     		ldr	r3, [r7, #12]
 1522 005a 2122     		movs	r2, #33
 1523 005c 83F83920 		strb	r2, [r3, #57]
 894:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 895:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 896:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1524              		.loc 1 896 10 discriminator 2
 1525 0060 FB68     		ldr	r3, [r7, #12]
 1526 0062 1B6B     		ldr	r3, [r3, #48]
 1527              		.loc 1 896 37 discriminator 2
 1528 0064 194A     		ldr	r2, .L66
 1529 0066 DA63     		str	r2, [r3, #60]
 897:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 898:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 899:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1530              		.loc 1 899 10 discriminator 2
 1531 0068 FB68     		ldr	r3, [r7, #12]
 1532 006a 1B6B     		ldr	r3, [r3, #48]
 1533              		.loc 1 899 41 discriminator 2
 1534 006c 184A     		ldr	r2, .L66+4
 1535 006e 1A64     		str	r2, [r3, #64]
 900:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 901:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
 902:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1536              		.loc 1 902 10 discriminator 2
 1537 0070 FB68     		ldr	r3, [r7, #12]
 1538 0072 1B6B     		ldr	r3, [r3, #48]
 1539              		.loc 1 902 38 discriminator 2
 1540 0074 174A     		ldr	r2, .L66+8
 1541 0076 DA64     		str	r2, [r3, #76]
 903:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 904:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
 905:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 1542              		.loc 1 905 10 discriminator 2
 1543 0078 FB68     		ldr	r3, [r7, #12]
 1544 007a 1B6B     		ldr	r3, [r3, #48]
 1545              		.loc 1 905 38 discriminator 2
 1546 007c 0022     		movs	r2, #0
 1547 007e 1A65     		str	r2, [r3, #80]
 906:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 907:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA Stream */
 908:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 1548              		.loc 1 908 9 discriminator 2
 1549 0080 07F10803 		add	r3, r7, #8
 1550 0084 7B61     		str	r3, [r7, #20]
 909:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->DR, Size);
 1551              		.loc 1 909 5 discriminator 2
 1552 0086 FB68     		ldr	r3, [r7, #12]
 1553 0088 186B     		ldr	r0, [r3, #48]
 1554 008a 7B69     		ldr	r3, [r7, #20]
 1555 008c 1968     		ldr	r1, [r3]
 1556              		.loc 1 909 70 discriminator 2
 1557 008e FB68     		ldr	r3, [r7, #12]
 1558 0090 1B68     		ldr	r3, [r3]
 1559              		.loc 1 909 64 discriminator 2
 1560 0092 0433     		adds	r3, r3, #4
 1561              		.loc 1 909 5 discriminator 2
ARM GAS  /tmp/ccOBznmR.s 			page 44


 1562 0094 1A46     		mov	r2, r3
 1563 0096 FB88     		ldrh	r3, [r7, #6]
 1564 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
 910:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 911:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 912:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 1565              		.loc 1 912 5 discriminator 2
 1566 009c FB68     		ldr	r3, [r7, #12]
 1567 009e 1B68     		ldr	r3, [r3]
 1568 00a0 6FF04002 		mvn	r2, #64
 1569 00a4 1A60     		str	r2, [r3]
 913:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 914:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 915:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1570              		.loc 1 915 5 discriminator 2
 1571 00a6 FB68     		ldr	r3, [r7, #12]
 1572 00a8 0022     		movs	r2, #0
 1573 00aa 83F83820 		strb	r2, [r3, #56]
 916:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 917:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 918:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
 919:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1574              		.loc 1 919 5 discriminator 2
 1575 00ae FB68     		ldr	r3, [r7, #12]
 1576 00b0 1B68     		ldr	r3, [r3]
 1577 00b2 5A69     		ldr	r2, [r3, #20]
 1578 00b4 FB68     		ldr	r3, [r7, #12]
 1579 00b6 1B68     		ldr	r3, [r3]
 1580 00b8 42F08002 		orr	r2, r2, #128
 1581 00bc 5A61     		str	r2, [r3, #20]
 920:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 921:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1582              		.loc 1 921 12 discriminator 2
 1583 00be 0023     		movs	r3, #0
 1584 00c0 00E0     		b	.L64
 1585              	.L61:
 922:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 923:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 924:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 925:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1586              		.loc 1 925 12
 1587 00c2 0223     		movs	r3, #2
 1588              	.L64:
 926:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 927:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1589              		.loc 1 927 1
 1590 00c4 1846     		mov	r0, r3
 1591 00c6 1837     		adds	r7, r7, #24
 1592              	.LCFI62:
 1593              		.cfi_def_cfa_offset 8
 1594 00c8 BD46     		mov	sp, r7
 1595              	.LCFI63:
 1596              		.cfi_def_cfa_register 13
 1597              		@ sp needed
 1598 00ca 80BD     		pop	{r7, pc}
 1599              	.L67:
 1600              		.align	2
ARM GAS  /tmp/ccOBznmR.s 			page 45


 1601              	.L66:
 1602 00cc 00000000 		.word	UART_DMATransmitCplt
 1603 00d0 00000000 		.word	UART_DMATxHalfCplt
 1604 00d4 00000000 		.word	UART_DMAError
 1605              		.cfi_endproc
 1606              	.LFE137:
 1608              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1609              		.align	1
 1610              		.global	HAL_UART_Receive_DMA
 1611              		.syntax unified
 1612              		.thumb
 1613              		.thumb_func
 1614              		.fpu fpv4-sp-d16
 1616              	HAL_UART_Receive_DMA:
 1617              	.LFB138:
 928:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 929:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 930:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 931:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 932:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 933:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 934:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be received
 935:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the data received contain the parity bit.
 936:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 937:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 938:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 939:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {  
 1618              		.loc 1 939 1
 1619              		.cfi_startproc
 1620              		@ args = 0, pretend = 0, frame = 24
 1621              		@ frame_needed = 1, uses_anonymous_args = 0
 1622 0000 80B5     		push	{r7, lr}
 1623              	.LCFI64:
 1624              		.cfi_def_cfa_offset 8
 1625              		.cfi_offset 7, -8
 1626              		.cfi_offset 14, -4
 1627 0002 86B0     		sub	sp, sp, #24
 1628              	.LCFI65:
 1629              		.cfi_def_cfa_offset 32
 1630 0004 00AF     		add	r7, sp, #0
 1631              	.LCFI66:
 1632              		.cfi_def_cfa_register 7
 1633 0006 F860     		str	r0, [r7, #12]
 1634 0008 B960     		str	r1, [r7, #8]
 1635 000a 1346     		mov	r3, r2
 1636 000c FB80     		strh	r3, [r7, #6]	@ movhi
 940:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 941:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 942:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 943:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 1637              		.loc 1 943 11
 1638 000e FB68     		ldr	r3, [r7, #12]
 1639 0010 93F83A30 		ldrb	r3, [r3, #58]
 1640 0014 DBB2     		uxtb	r3, r3
 1641              		.loc 1 943 5
 1642 0016 202B     		cmp	r3, #32
 1643 0018 66D1     		bne	.L69
ARM GAS  /tmp/ccOBznmR.s 			page 46


 944:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 945:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 1644              		.loc 1 945 15
 1645 001a BB68     		ldr	r3, [r7, #8]
 1646              		.loc 1 945 7
 1647 001c 002B     		cmp	r3, #0
 1648 001e 02D0     		beq	.L70
 1649              		.loc 1 945 25 discriminator 1
 1650 0020 FB88     		ldrh	r3, [r7, #6]
 1651 0022 002B     		cmp	r3, #0
 1652 0024 01D1     		bne	.L71
 1653              	.L70:
 946:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 947:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1654              		.loc 1 947 14
 1655 0026 0123     		movs	r3, #1
 1656 0028 5FE0     		b	.L72
 1657              	.L71:
 948:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 949:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 950:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 951:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1658              		.loc 1 951 5
 1659 002a FB68     		ldr	r3, [r7, #12]
 1660 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1661 0030 012B     		cmp	r3, #1
 1662 0032 01D1     		bne	.L73
 1663              		.loc 1 951 5 is_stmt 0 discriminator 1
 1664 0034 0223     		movs	r3, #2
 1665 0036 58E0     		b	.L72
 1666              	.L73:
 1667              		.loc 1 951 5 discriminator 2
 1668 0038 FB68     		ldr	r3, [r7, #12]
 1669 003a 0122     		movs	r2, #1
 1670 003c 83F83820 		strb	r2, [r3, #56]
 952:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 953:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1671              		.loc 1 953 23 is_stmt 1 discriminator 2
 1672 0040 BA68     		ldr	r2, [r7, #8]
 1673 0042 FB68     		ldr	r3, [r7, #12]
 1674 0044 9A62     		str	r2, [r3, #40]
 954:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1675              		.loc 1 954 23 discriminator 2
 1676 0046 FB68     		ldr	r3, [r7, #12]
 1677 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1678 004a 9A85     		strh	r2, [r3, #44]	@ movhi
 955:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 956:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1679              		.loc 1 956 22 discriminator 2
 1680 004c FB68     		ldr	r3, [r7, #12]
 1681 004e 0022     		movs	r2, #0
 1682 0050 DA63     		str	r2, [r3, #60]
 957:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1683              		.loc 1 957 20 discriminator 2
 1684 0052 FB68     		ldr	r3, [r7, #12]
 1685 0054 2222     		movs	r2, #34
 1686 0056 83F83A20 		strb	r2, [r3, #58]
ARM GAS  /tmp/ccOBznmR.s 			page 47


 958:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 959:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 960:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1687              		.loc 1 960 10 discriminator 2
 1688 005a FB68     		ldr	r3, [r7, #12]
 1689 005c 5B6B     		ldr	r3, [r3, #52]
 1690              		.loc 1 960 37 discriminator 2
 1691 005e 254A     		ldr	r2, .L74
 1692 0060 DA63     		str	r2, [r3, #60]
 961:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 962:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 963:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1693              		.loc 1 963 10 discriminator 2
 1694 0062 FB68     		ldr	r3, [r7, #12]
 1695 0064 5B6B     		ldr	r3, [r3, #52]
 1696              		.loc 1 963 41 discriminator 2
 1697 0066 244A     		ldr	r2, .L74+4
 1698 0068 1A64     		str	r2, [r3, #64]
 964:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 965:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
 966:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 1699              		.loc 1 966 10 discriminator 2
 1700 006a FB68     		ldr	r3, [r7, #12]
 1701 006c 5B6B     		ldr	r3, [r3, #52]
 1702              		.loc 1 966 38 discriminator 2
 1703 006e 234A     		ldr	r2, .L74+8
 1704 0070 DA64     		str	r2, [r3, #76]
 967:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 968:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
 969:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 1705              		.loc 1 969 10 discriminator 2
 1706 0072 FB68     		ldr	r3, [r7, #12]
 1707 0074 5B6B     		ldr	r3, [r3, #52]
 1708              		.loc 1 969 38 discriminator 2
 1709 0076 0022     		movs	r2, #0
 1710 0078 1A65     		str	r2, [r3, #80]
 970:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 971:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA Stream */
 972:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 1711              		.loc 1 972 9 discriminator 2
 1712 007a 07F10803 		add	r3, r7, #8
 1713 007e 7B61     		str	r3, [r7, #20]
 973:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size);
 1714              		.loc 1 973 5 discriminator 2
 1715 0080 FB68     		ldr	r3, [r7, #12]
 1716 0082 586B     		ldr	r0, [r3, #52]
 1717              		.loc 1 973 53 discriminator 2
 1718 0084 FB68     		ldr	r3, [r7, #12]
 1719 0086 1B68     		ldr	r3, [r3]
 1720              		.loc 1 973 47 discriminator 2
 1721 0088 0433     		adds	r3, r3, #4
 1722              		.loc 1 973 5 discriminator 2
 1723 008a 1946     		mov	r1, r3
 1724 008c 7B69     		ldr	r3, [r7, #20]
 1725 008e 1A68     		ldr	r2, [r3]
 1726 0090 FB88     		ldrh	r3, [r7, #6]
 1727 0092 FFF7FEFF 		bl	HAL_DMA_Start_IT
ARM GAS  /tmp/ccOBznmR.s 			page 48


 1728              	.LBB2:
 974:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 975:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the sec
 976:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 1729              		.loc 1 976 5 discriminator 2
 1730 0096 0023     		movs	r3, #0
 1731 0098 3B61     		str	r3, [r7, #16]
 1732 009a FB68     		ldr	r3, [r7, #12]
 1733 009c 1B68     		ldr	r3, [r3]
 1734 009e 1B68     		ldr	r3, [r3]
 1735 00a0 3B61     		str	r3, [r7, #16]
 1736 00a2 FB68     		ldr	r3, [r7, #12]
 1737 00a4 1B68     		ldr	r3, [r3]
 1738 00a6 5B68     		ldr	r3, [r3, #4]
 1739 00a8 3B61     		str	r3, [r7, #16]
 1740 00aa 3B69     		ldr	r3, [r7, #16]
 1741              	.LBE2:
 977:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 978:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 979:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1742              		.loc 1 979 5 discriminator 2
 1743 00ac FB68     		ldr	r3, [r7, #12]
 1744 00ae 0022     		movs	r2, #0
 1745 00b0 83F83820 		strb	r2, [r3, #56]
 980:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 981:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 982:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1746              		.loc 1 982 5 discriminator 2
 1747 00b4 FB68     		ldr	r3, [r7, #12]
 1748 00b6 1B68     		ldr	r3, [r3]
 1749 00b8 DA68     		ldr	r2, [r3, #12]
 1750 00ba FB68     		ldr	r3, [r7, #12]
 1751 00bc 1B68     		ldr	r3, [r3]
 1752 00be 42F48072 		orr	r2, r2, #256
 1753 00c2 DA60     		str	r2, [r3, #12]
 983:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 984:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 985:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1754              		.loc 1 985 5 discriminator 2
 1755 00c4 FB68     		ldr	r3, [r7, #12]
 1756 00c6 1B68     		ldr	r3, [r3]
 1757 00c8 5A69     		ldr	r2, [r3, #20]
 1758 00ca FB68     		ldr	r3, [r7, #12]
 1759 00cc 1B68     		ldr	r3, [r3]
 1760 00ce 42F00102 		orr	r2, r2, #1
 1761 00d2 5A61     		str	r2, [r3, #20]
 986:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 987:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
 988:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in the UART CR3 register */
 989:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1762              		.loc 1 989 5 discriminator 2
 1763 00d4 FB68     		ldr	r3, [r7, #12]
 1764 00d6 1B68     		ldr	r3, [r3]
 1765 00d8 5A69     		ldr	r2, [r3, #20]
 1766 00da FB68     		ldr	r3, [r7, #12]
 1767 00dc 1B68     		ldr	r3, [r3]
 1768 00de 42F04002 		orr	r2, r2, #64
ARM GAS  /tmp/ccOBznmR.s 			page 49


 1769 00e2 5A61     		str	r2, [r3, #20]
 990:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 991:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1770              		.loc 1 991 12 discriminator 2
 1771 00e4 0023     		movs	r3, #0
 1772 00e6 00E0     		b	.L72
 1773              	.L69:
 992:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 993:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 994:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 995:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY; 
 1774              		.loc 1 995 12
 1775 00e8 0223     		movs	r3, #2
 1776              	.L72:
 996:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 997:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1777              		.loc 1 997 1
 1778 00ea 1846     		mov	r0, r3
 1779 00ec 1837     		adds	r7, r7, #24
 1780              	.LCFI67:
 1781              		.cfi_def_cfa_offset 8
 1782 00ee BD46     		mov	sp, r7
 1783              	.LCFI68:
 1784              		.cfi_def_cfa_register 13
 1785              		@ sp needed
 1786 00f0 80BD     		pop	{r7, pc}
 1787              	.L75:
 1788 00f2 00BF     		.align	2
 1789              	.L74:
 1790 00f4 00000000 		.word	UART_DMAReceiveCplt
 1791 00f8 00000000 		.word	UART_DMARxHalfCplt
 1792 00fc 00000000 		.word	UART_DMAError
 1793              		.cfi_endproc
 1794              	.LFE138:
 1796              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1797              		.align	1
 1798              		.global	HAL_UART_DMAPause
 1799              		.syntax unified
 1800              		.thumb
 1801              		.thumb_func
 1802              		.fpu fpv4-sp-d16
 1804              	HAL_UART_DMAPause:
 1805              	.LFB139:
 998:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 999:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1000:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1001:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1002:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1003:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1004:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1005:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1006:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1806              		.loc 1 1006 1
 1807              		.cfi_startproc
 1808              		@ args = 0, pretend = 0, frame = 16
 1809              		@ frame_needed = 1, uses_anonymous_args = 0
 1810              		@ link register save eliminated.
ARM GAS  /tmp/ccOBznmR.s 			page 50


 1811 0000 80B4     		push	{r7}
 1812              	.LCFI69:
 1813              		.cfi_def_cfa_offset 4
 1814              		.cfi_offset 7, -4
 1815 0002 85B0     		sub	sp, sp, #20
 1816              	.LCFI70:
 1817              		.cfi_def_cfa_offset 24
 1818 0004 00AF     		add	r7, sp, #0
 1819              	.LCFI71:
 1820              		.cfi_def_cfa_register 7
 1821 0006 7860     		str	r0, [r7, #4]
1007:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
 1822              		.loc 1 1007 13
 1823 0008 0023     		movs	r3, #0
 1824 000a FB60     		str	r3, [r7, #12]
1008:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1009:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1010:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1825              		.loc 1 1010 3
 1826 000c 7B68     		ldr	r3, [r7, #4]
 1827 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1828 0012 012B     		cmp	r3, #1
 1829 0014 01D1     		bne	.L77
 1830              		.loc 1 1010 3 is_stmt 0 discriminator 1
 1831 0016 0223     		movs	r3, #2
 1832 0018 50E0     		b	.L78
 1833              	.L77:
 1834              		.loc 1 1010 3 discriminator 2
 1835 001a 7B68     		ldr	r3, [r7, #4]
 1836 001c 0122     		movs	r2, #1
 1837 001e 83F83820 		strb	r2, [r3, #56]
1011:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1838              		.loc 1 1011 16 is_stmt 1 discriminator 2
 1839 0022 7B68     		ldr	r3, [r7, #4]
 1840 0024 1B68     		ldr	r3, [r3]
 1841 0026 5B69     		ldr	r3, [r3, #20]
 1842 0028 03F08003 		and	r3, r3, #128
 1843 002c 002B     		cmp	r3, #0
 1844 002e 14BF     		ite	ne
 1845 0030 0123     		movne	r3, #1
 1846 0032 0023     		moveq	r3, #0
 1847 0034 DBB2     		uxtb	r3, r3
 1848              		.loc 1 1011 14 discriminator 2
 1849 0036 FB60     		str	r3, [r7, #12]
1012:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1850              		.loc 1 1012 12 discriminator 2
 1851 0038 7B68     		ldr	r3, [r7, #4]
 1852 003a 93F83930 		ldrb	r3, [r3, #57]
 1853 003e DBB2     		uxtb	r3, r3
 1854              		.loc 1 1012 5 discriminator 2
 1855 0040 212B     		cmp	r3, #33
 1856 0042 0AD1     		bne	.L79
 1857              		.loc 1 1012 48 discriminator 1
 1858 0044 FB68     		ldr	r3, [r7, #12]
 1859 0046 002B     		cmp	r3, #0
 1860 0048 07D0     		beq	.L79
1013:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccOBznmR.s 			page 51


1014:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1015:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1861              		.loc 1 1015 5
 1862 004a 7B68     		ldr	r3, [r7, #4]
 1863 004c 1B68     		ldr	r3, [r3]
 1864 004e 5A69     		ldr	r2, [r3, #20]
 1865 0050 7B68     		ldr	r3, [r7, #4]
 1866 0052 1B68     		ldr	r3, [r3]
 1867 0054 22F08002 		bic	r2, r2, #128
 1868 0058 5A61     		str	r2, [r3, #20]
 1869              	.L79:
1016:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1017:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 1870              		.loc 1 1017 16
 1871 005a 7B68     		ldr	r3, [r7, #4]
 1872 005c 1B68     		ldr	r3, [r3]
 1873 005e 5B69     		ldr	r3, [r3, #20]
 1874 0060 03F04003 		and	r3, r3, #64
 1875 0064 002B     		cmp	r3, #0
 1876 0066 14BF     		ite	ne
 1877 0068 0123     		movne	r3, #1
 1878 006a 0023     		moveq	r3, #0
 1879 006c DBB2     		uxtb	r3, r3
 1880              		.loc 1 1017 14
 1881 006e FB60     		str	r3, [r7, #12]
1018:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1882              		.loc 1 1018 12
 1883 0070 7B68     		ldr	r3, [r7, #4]
 1884 0072 93F83A30 		ldrb	r3, [r3, #58]
 1885 0076 DBB2     		uxtb	r3, r3
 1886              		.loc 1 1018 5
 1887 0078 222B     		cmp	r3, #34
 1888 007a 1AD1     		bne	.L80
 1889              		.loc 1 1018 49 discriminator 1
 1890 007c FB68     		ldr	r3, [r7, #12]
 1891 007e 002B     		cmp	r3, #0
 1892 0080 17D0     		beq	.L80
1019:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1020:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1021:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1893              		.loc 1 1021 5
 1894 0082 7B68     		ldr	r3, [r7, #4]
 1895 0084 1B68     		ldr	r3, [r3]
 1896 0086 DA68     		ldr	r2, [r3, #12]
 1897 0088 7B68     		ldr	r3, [r7, #4]
 1898 008a 1B68     		ldr	r3, [r3]
 1899 008c 22F48072 		bic	r2, r2, #256
 1900 0090 DA60     		str	r2, [r3, #12]
1022:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1901              		.loc 1 1022 5
 1902 0092 7B68     		ldr	r3, [r7, #4]
 1903 0094 1B68     		ldr	r3, [r3]
 1904 0096 5A69     		ldr	r2, [r3, #20]
 1905 0098 7B68     		ldr	r3, [r7, #4]
 1906 009a 1B68     		ldr	r3, [r3]
 1907 009c 22F00102 		bic	r2, r2, #1
 1908 00a0 5A61     		str	r2, [r3, #20]
ARM GAS  /tmp/ccOBznmR.s 			page 52


1023:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1024:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1025:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1909              		.loc 1 1025 5
 1910 00a2 7B68     		ldr	r3, [r7, #4]
 1911 00a4 1B68     		ldr	r3, [r3]
 1912 00a6 5A69     		ldr	r2, [r3, #20]
 1913 00a8 7B68     		ldr	r3, [r7, #4]
 1914 00aa 1B68     		ldr	r3, [r3]
 1915 00ac 22F04002 		bic	r2, r2, #64
 1916 00b0 5A61     		str	r2, [r3, #20]
 1917              	.L80:
1026:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1027:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1028:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1029:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1918              		.loc 1 1029 3
 1919 00b2 7B68     		ldr	r3, [r7, #4]
 1920 00b4 0022     		movs	r2, #0
 1921 00b6 83F83820 		strb	r2, [r3, #56]
1030:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1031:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
 1922              		.loc 1 1031 10
 1923 00ba 0023     		movs	r3, #0
 1924              	.L78:
1032:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1925              		.loc 1 1032 1
 1926 00bc 1846     		mov	r0, r3
 1927 00be 1437     		adds	r7, r7, #20
 1928              	.LCFI72:
 1929              		.cfi_def_cfa_offset 4
 1930 00c0 BD46     		mov	sp, r7
 1931              	.LCFI73:
 1932              		.cfi_def_cfa_register 13
 1933              		@ sp needed
 1934 00c2 5DF8047B 		ldr	r7, [sp], #4
 1935              	.LCFI74:
 1936              		.cfi_restore 7
 1937              		.cfi_def_cfa_offset 0
 1938 00c6 7047     		bx	lr
 1939              		.cfi_endproc
 1940              	.LFE139:
 1942              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1943              		.align	1
 1944              		.global	HAL_UART_DMAResume
 1945              		.syntax unified
 1946              		.thumb
 1947              		.thumb_func
 1948              		.fpu fpv4-sp-d16
 1950              	HAL_UART_DMAResume:
 1951              	.LFB140:
1033:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1034:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1035:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1036:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1037:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1038:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccOBznmR.s 			page 53


1039:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1040:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1041:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1952              		.loc 1 1041 1
 1953              		.cfi_startproc
 1954              		@ args = 0, pretend = 0, frame = 16
 1955              		@ frame_needed = 1, uses_anonymous_args = 0
 1956              		@ link register save eliminated.
 1957 0000 80B4     		push	{r7}
 1958              	.LCFI75:
 1959              		.cfi_def_cfa_offset 4
 1960              		.cfi_offset 7, -4
 1961 0002 85B0     		sub	sp, sp, #20
 1962              	.LCFI76:
 1963              		.cfi_def_cfa_offset 24
 1964 0004 00AF     		add	r7, sp, #0
 1965              	.LCFI77:
 1966              		.cfi_def_cfa_register 7
 1967 0006 7860     		str	r0, [r7, #4]
1042:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1043:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1968              		.loc 1 1043 3
 1969 0008 7B68     		ldr	r3, [r7, #4]
 1970 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1971 000e 012B     		cmp	r3, #1
 1972 0010 01D1     		bne	.L82
 1973              		.loc 1 1043 3 is_stmt 0 discriminator 1
 1974 0012 0223     		movs	r3, #2
 1975 0014 3FE0     		b	.L83
 1976              	.L82:
 1977              		.loc 1 1043 3 discriminator 2
 1978 0016 7B68     		ldr	r3, [r7, #4]
 1979 0018 0122     		movs	r2, #1
 1980 001a 83F83820 		strb	r2, [r3, #56]
1044:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1045:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
 1981              		.loc 1 1045 11 is_stmt 1 discriminator 2
 1982 001e 7B68     		ldr	r3, [r7, #4]
 1983 0020 93F83930 		ldrb	r3, [r3, #57]
 1984 0024 DBB2     		uxtb	r3, r3
 1985              		.loc 1 1045 5 discriminator 2
 1986 0026 212B     		cmp	r3, #33
 1987 0028 07D1     		bne	.L84
1046:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1047:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1048:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1988              		.loc 1 1048 5
 1989 002a 7B68     		ldr	r3, [r7, #4]
 1990 002c 1B68     		ldr	r3, [r3]
 1991 002e 5A69     		ldr	r2, [r3, #20]
 1992 0030 7B68     		ldr	r3, [r7, #4]
 1993 0032 1B68     		ldr	r3, [r3]
 1994 0034 42F08002 		orr	r2, r2, #128
 1995 0038 5A61     		str	r2, [r3, #20]
 1996              	.L84:
1049:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1050:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
ARM GAS  /tmp/ccOBznmR.s 			page 54


 1997              		.loc 1 1050 11
 1998 003a 7B68     		ldr	r3, [r7, #4]
 1999 003c 93F83A30 		ldrb	r3, [r3, #58]
 2000 0040 DBB2     		uxtb	r3, r3
 2001              		.loc 1 1050 5
 2002 0042 222B     		cmp	r3, #34
 2003 0044 22D1     		bne	.L85
 2004              	.LBB3:
1051:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1052:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1053:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 2005              		.loc 1 1053 5
 2006 0046 0023     		movs	r3, #0
 2007 0048 FB60     		str	r3, [r7, #12]
 2008 004a 7B68     		ldr	r3, [r7, #4]
 2009 004c 1B68     		ldr	r3, [r3]
 2010 004e 1B68     		ldr	r3, [r3]
 2011 0050 FB60     		str	r3, [r7, #12]
 2012 0052 7B68     		ldr	r3, [r7, #4]
 2013 0054 1B68     		ldr	r3, [r3]
 2014 0056 5B68     		ldr	r3, [r3, #4]
 2015 0058 FB60     		str	r3, [r7, #12]
 2016 005a FB68     		ldr	r3, [r7, #12]
 2017              	.LBE3:
1054:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1055:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1056:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2018              		.loc 1 1056 5
 2019 005c 7B68     		ldr	r3, [r7, #4]
 2020 005e 1B68     		ldr	r3, [r3]
 2021 0060 DA68     		ldr	r2, [r3, #12]
 2022 0062 7B68     		ldr	r3, [r7, #4]
 2023 0064 1B68     		ldr	r3, [r3]
 2024 0066 42F48072 		orr	r2, r2, #256
 2025 006a DA60     		str	r2, [r3, #12]
1057:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2026              		.loc 1 1057 5
 2027 006c 7B68     		ldr	r3, [r7, #4]
 2028 006e 1B68     		ldr	r3, [r3]
 2029 0070 5A69     		ldr	r2, [r3, #20]
 2030 0072 7B68     		ldr	r3, [r7, #4]
 2031 0074 1B68     		ldr	r3, [r3]
 2032 0076 42F00102 		orr	r2, r2, #1
 2033 007a 5A61     		str	r2, [r3, #20]
1058:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1059:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1060:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2034              		.loc 1 1060 5
 2035 007c 7B68     		ldr	r3, [r7, #4]
 2036 007e 1B68     		ldr	r3, [r3]
 2037 0080 5A69     		ldr	r2, [r3, #20]
 2038 0082 7B68     		ldr	r3, [r7, #4]
 2039 0084 1B68     		ldr	r3, [r3]
 2040 0086 42F04002 		orr	r2, r2, #64
 2041 008a 5A61     		str	r2, [r3, #20]
 2042              	.L85:
1061:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccOBznmR.s 			page 55


1062:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1063:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1064:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2043              		.loc 1 1064 3
 2044 008c 7B68     		ldr	r3, [r7, #4]
 2045 008e 0022     		movs	r2, #0
 2046 0090 83F83820 		strb	r2, [r3, #56]
1065:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1066:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2047              		.loc 1 1066 10
 2048 0094 0023     		movs	r3, #0
 2049              	.L83:
1067:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2050              		.loc 1 1067 1
 2051 0096 1846     		mov	r0, r3
 2052 0098 1437     		adds	r7, r7, #20
 2053              	.LCFI78:
 2054              		.cfi_def_cfa_offset 4
 2055 009a BD46     		mov	sp, r7
 2056              	.LCFI79:
 2057              		.cfi_def_cfa_register 13
 2058              		@ sp needed
 2059 009c 5DF8047B 		ldr	r7, [sp], #4
 2060              	.LCFI80:
 2061              		.cfi_restore 7
 2062              		.cfi_def_cfa_offset 0
 2063 00a0 7047     		bx	lr
 2064              		.cfi_endproc
 2065              	.LFE140:
 2067              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2068              		.align	1
 2069              		.global	HAL_UART_DMAStop
 2070              		.syntax unified
 2071              		.thumb
 2072              		.thumb_func
 2073              		.fpu fpv4-sp-d16
 2075              	HAL_UART_DMAStop:
 2076              	.LFB141:
1068:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1069:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1070:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1071:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1072:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1073:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1074:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1075:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1076:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2077              		.loc 1 1076 1
 2078              		.cfi_startproc
 2079              		@ args = 0, pretend = 0, frame = 16
 2080              		@ frame_needed = 1, uses_anonymous_args = 0
 2081 0000 80B5     		push	{r7, lr}
 2082              	.LCFI81:
 2083              		.cfi_def_cfa_offset 8
 2084              		.cfi_offset 7, -8
 2085              		.cfi_offset 14, -4
 2086 0002 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/ccOBznmR.s 			page 56


 2087              	.LCFI82:
 2088              		.cfi_def_cfa_offset 24
 2089 0004 00AF     		add	r7, sp, #0
 2090              	.LCFI83:
 2091              		.cfi_def_cfa_register 7
 2092 0006 7860     		str	r0, [r7, #4]
1077:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2093              		.loc 1 1077 12
 2094 0008 0023     		movs	r3, #0
 2095 000a FB60     		str	r3, [r7, #12]
1078:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1079:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1080:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1081:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1082:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1083:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1084:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1085:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 2096              		.loc 1 1085 16
 2097 000c 7B68     		ldr	r3, [r7, #4]
 2098 000e 1B68     		ldr	r3, [r3]
 2099 0010 5B69     		ldr	r3, [r3, #20]
 2100 0012 03F08003 		and	r3, r3, #128
 2101 0016 002B     		cmp	r3, #0
 2102 0018 14BF     		ite	ne
 2103 001a 0123     		movne	r3, #1
 2104 001c 0023     		moveq	r3, #0
 2105 001e DBB2     		uxtb	r3, r3
 2106              		.loc 1 1085 14
 2107 0020 FB60     		str	r3, [r7, #12]
1086:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2108              		.loc 1 1086 12
 2109 0022 7B68     		ldr	r3, [r7, #4]
 2110 0024 93F83930 		ldrb	r3, [r3, #57]
 2111 0028 DBB2     		uxtb	r3, r3
 2112              		.loc 1 1086 5
 2113 002a 212B     		cmp	r3, #33
 2114 002c 16D1     		bne	.L87
 2115              		.loc 1 1086 48 discriminator 1
 2116 002e FB68     		ldr	r3, [r7, #12]
 2117 0030 002B     		cmp	r3, #0
 2118 0032 13D0     		beq	.L87
1087:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1088:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2119              		.loc 1 1088 5
 2120 0034 7B68     		ldr	r3, [r7, #4]
 2121 0036 1B68     		ldr	r3, [r3]
 2122 0038 5A69     		ldr	r2, [r3, #20]
 2123 003a 7B68     		ldr	r3, [r7, #4]
 2124 003c 1B68     		ldr	r3, [r3]
 2125 003e 22F08002 		bic	r2, r2, #128
 2126 0042 5A61     		str	r2, [r3, #20]
1089:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1090:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1091:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2127              		.loc 1 1091 13
 2128 0044 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccOBznmR.s 			page 57


 2129 0046 1B6B     		ldr	r3, [r3, #48]
 2130              		.loc 1 1091 7
 2131 0048 002B     		cmp	r3, #0
 2132 004a 04D0     		beq	.L88
1092:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1093:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2133              		.loc 1 1093 7
 2134 004c 7B68     		ldr	r3, [r7, #4]
 2135 004e 1B6B     		ldr	r3, [r3, #48]
 2136 0050 1846     		mov	r0, r3
 2137 0052 FFF7FEFF 		bl	HAL_DMA_Abort
 2138              	.L88:
1094:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1095:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2139              		.loc 1 1095 5
 2140 0056 7868     		ldr	r0, [r7, #4]
 2141 0058 FFF7FEFF 		bl	UART_EndTxTransfer
 2142              	.L87:
1096:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1097:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1098:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1099:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 2143              		.loc 1 1099 16
 2144 005c 7B68     		ldr	r3, [r7, #4]
 2145 005e 1B68     		ldr	r3, [r3]
 2146 0060 5B69     		ldr	r3, [r3, #20]
 2147 0062 03F04003 		and	r3, r3, #64
 2148 0066 002B     		cmp	r3, #0
 2149 0068 14BF     		ite	ne
 2150 006a 0123     		movne	r3, #1
 2151 006c 0023     		moveq	r3, #0
 2152 006e DBB2     		uxtb	r3, r3
 2153              		.loc 1 1099 14
 2154 0070 FB60     		str	r3, [r7, #12]
1100:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2155              		.loc 1 1100 12
 2156 0072 7B68     		ldr	r3, [r7, #4]
 2157 0074 93F83A30 		ldrb	r3, [r3, #58]
 2158 0078 DBB2     		uxtb	r3, r3
 2159              		.loc 1 1100 5
 2160 007a 222B     		cmp	r3, #34
 2161 007c 16D1     		bne	.L89
 2162              		.loc 1 1100 49 discriminator 1
 2163 007e FB68     		ldr	r3, [r7, #12]
 2164 0080 002B     		cmp	r3, #0
 2165 0082 13D0     		beq	.L89
1101:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1102:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2166              		.loc 1 1102 5
 2167 0084 7B68     		ldr	r3, [r7, #4]
 2168 0086 1B68     		ldr	r3, [r3]
 2169 0088 5A69     		ldr	r2, [r3, #20]
 2170 008a 7B68     		ldr	r3, [r7, #4]
 2171 008c 1B68     		ldr	r3, [r3]
 2172 008e 22F04002 		bic	r2, r2, #64
 2173 0092 5A61     		str	r2, [r3, #20]
1103:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccOBznmR.s 			page 58


1104:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1105:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2174              		.loc 1 1105 13
 2175 0094 7B68     		ldr	r3, [r7, #4]
 2176 0096 5B6B     		ldr	r3, [r3, #52]
 2177              		.loc 1 1105 7
 2178 0098 002B     		cmp	r3, #0
 2179 009a 04D0     		beq	.L90
1106:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1107:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2180              		.loc 1 1107 7
 2181 009c 7B68     		ldr	r3, [r7, #4]
 2182 009e 5B6B     		ldr	r3, [r3, #52]
 2183 00a0 1846     		mov	r0, r3
 2184 00a2 FFF7FEFF 		bl	HAL_DMA_Abort
 2185              	.L90:
1108:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1109:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2186              		.loc 1 1109 5
 2187 00a6 7868     		ldr	r0, [r7, #4]
 2188 00a8 FFF7FEFF 		bl	UART_EndRxTransfer
 2189              	.L89:
1110:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1111:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1112:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2190              		.loc 1 1112 10
 2191 00ac 0023     		movs	r3, #0
1113:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2192              		.loc 1 1113 1
 2193 00ae 1846     		mov	r0, r3
 2194 00b0 1037     		adds	r7, r7, #16
 2195              	.LCFI84:
 2196              		.cfi_def_cfa_offset 8
 2197 00b2 BD46     		mov	sp, r7
 2198              	.LCFI85:
 2199              		.cfi_def_cfa_register 13
 2200              		@ sp needed
 2201 00b4 80BD     		pop	{r7, pc}
 2202              		.cfi_endproc
 2203              	.LFE141:
 2205              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2206              		.align	1
 2207              		.global	HAL_UART_Abort
 2208              		.syntax unified
 2209              		.thumb
 2210              		.thumb_func
 2211              		.fpu fpv4-sp-d16
 2213              	HAL_UART_Abort:
 2214              	.LFB142:
1114:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1115:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1116:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1117:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1118:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1119:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1120:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1121:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
ARM GAS  /tmp/ccOBznmR.s 			page 59


1122:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1123:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1124:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1125:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1126:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1127:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1128:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2215              		.loc 1 1128 1
 2216              		.cfi_startproc
 2217              		@ args = 0, pretend = 0, frame = 8
 2218              		@ frame_needed = 1, uses_anonymous_args = 0
 2219 0000 80B5     		push	{r7, lr}
 2220              	.LCFI86:
 2221              		.cfi_def_cfa_offset 8
 2222              		.cfi_offset 7, -8
 2223              		.cfi_offset 14, -4
 2224 0002 82B0     		sub	sp, sp, #8
 2225              	.LCFI87:
 2226              		.cfi_def_cfa_offset 16
 2227 0004 00AF     		add	r7, sp, #0
 2228              	.LCFI88:
 2229              		.cfi_def_cfa_register 7
 2230 0006 7860     		str	r0, [r7, #4]
1129:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1130:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2231              		.loc 1 1130 3
 2232 0008 7B68     		ldr	r3, [r7, #4]
 2233 000a 1B68     		ldr	r3, [r3]
 2234 000c DA68     		ldr	r2, [r3, #12]
 2235 000e 7B68     		ldr	r3, [r7, #4]
 2236 0010 1B68     		ldr	r3, [r3]
 2237 0012 22F4F072 		bic	r2, r2, #480
 2238 0016 DA60     		str	r2, [r3, #12]
1131:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2239              		.loc 1 1131 3
 2240 0018 7B68     		ldr	r3, [r7, #4]
 2241 001a 1B68     		ldr	r3, [r3]
 2242 001c 5A69     		ldr	r2, [r3, #20]
 2243 001e 7B68     		ldr	r3, [r7, #4]
 2244 0020 1B68     		ldr	r3, [r3]
 2245 0022 22F00102 		bic	r2, r2, #1
 2246 0026 5A61     		str	r2, [r3, #20]
1132:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1133:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1134:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2247              		.loc 1 1134 6
 2248 0028 7B68     		ldr	r3, [r7, #4]
 2249 002a 1B68     		ldr	r3, [r3]
 2250 002c 5B69     		ldr	r3, [r3, #20]
 2251 002e 03F08003 		and	r3, r3, #128
 2252              		.loc 1 1134 5
 2253 0032 002B     		cmp	r3, #0
 2254 0034 14D0     		beq	.L93
1135:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1136:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2255              		.loc 1 1136 5
 2256 0036 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccOBznmR.s 			page 60


 2257 0038 1B68     		ldr	r3, [r3]
 2258 003a 5A69     		ldr	r2, [r3, #20]
 2259 003c 7B68     		ldr	r3, [r7, #4]
 2260 003e 1B68     		ldr	r3, [r3]
 2261 0040 22F08002 		bic	r2, r2, #128
 2262 0044 5A61     		str	r2, [r3, #20]
1137:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1138:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel: use blocking DMA Abort API (no callback) */
1139:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2263              		.loc 1 1139 13
 2264 0046 7B68     		ldr	r3, [r7, #4]
 2265 0048 1B6B     		ldr	r3, [r3, #48]
 2266              		.loc 1 1139 7
 2267 004a 002B     		cmp	r3, #0
 2268 004c 08D0     		beq	.L93
1140:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1141:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1142:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1143:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2269              		.loc 1 1143 12
 2270 004e 7B68     		ldr	r3, [r7, #4]
 2271 0050 1B6B     		ldr	r3, [r3, #48]
 2272              		.loc 1 1143 40
 2273 0052 0022     		movs	r2, #0
 2274 0054 1A65     		str	r2, [r3, #80]
1144:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1145:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2275              		.loc 1 1145 7
 2276 0056 7B68     		ldr	r3, [r7, #4]
 2277 0058 1B6B     		ldr	r3, [r3, #48]
 2278 005a 1846     		mov	r0, r3
 2279 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2280              	.L93:
1146:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1147:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1148:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1149:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1150:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2281              		.loc 1 1150 6
 2282 0060 7B68     		ldr	r3, [r7, #4]
 2283 0062 1B68     		ldr	r3, [r3]
 2284 0064 5B69     		ldr	r3, [r3, #20]
 2285 0066 03F04003 		and	r3, r3, #64
 2286              		.loc 1 1150 5
 2287 006a 002B     		cmp	r3, #0
 2288 006c 14D0     		beq	.L94
1151:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1152:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2289              		.loc 1 1152 5
 2290 006e 7B68     		ldr	r3, [r7, #4]
 2291 0070 1B68     		ldr	r3, [r3]
 2292 0072 5A69     		ldr	r2, [r3, #20]
 2293 0074 7B68     		ldr	r3, [r7, #4]
 2294 0076 1B68     		ldr	r3, [r3]
 2295 0078 22F04002 		bic	r2, r2, #64
 2296 007c 5A61     		str	r2, [r3, #20]
1153:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccOBznmR.s 			page 61


1154:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel: use blocking DMA Abort API (no callback) */
1155:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2297              		.loc 1 1155 13
 2298 007e 7B68     		ldr	r3, [r7, #4]
 2299 0080 5B6B     		ldr	r3, [r3, #52]
 2300              		.loc 1 1155 7
 2301 0082 002B     		cmp	r3, #0
 2302 0084 08D0     		beq	.L94
1156:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1157:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1158:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1159:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2303              		.loc 1 1159 12
 2304 0086 7B68     		ldr	r3, [r7, #4]
 2305 0088 5B6B     		ldr	r3, [r3, #52]
 2306              		.loc 1 1159 40
 2307 008a 0022     		movs	r2, #0
 2308 008c 1A65     		str	r2, [r3, #80]
1160:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1161:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2309              		.loc 1 1161 7
 2310 008e 7B68     		ldr	r3, [r7, #4]
 2311 0090 5B6B     		ldr	r3, [r3, #52]
 2312 0092 1846     		mov	r0, r3
 2313 0094 FFF7FEFF 		bl	HAL_DMA_Abort
 2314              	.L94:
1162:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1163:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1164:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1165:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1166:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 2315              		.loc 1 1166 22
 2316 0098 7B68     		ldr	r3, [r7, #4]
 2317 009a 0022     		movs	r2, #0
 2318 009c DA84     		strh	r2, [r3, #38]	@ movhi
1167:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2319              		.loc 1 1167 22
 2320 009e 7B68     		ldr	r3, [r7, #4]
 2321 00a0 0022     		movs	r2, #0
 2322 00a2 DA85     		strh	r2, [r3, #46]	@ movhi
1168:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1169:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
1170:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2323              		.loc 1 1170 20
 2324 00a4 7B68     		ldr	r3, [r7, #4]
 2325 00a6 0022     		movs	r2, #0
 2326 00a8 DA63     		str	r2, [r3, #60]
1171:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1172:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1173:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2327              		.loc 1 1173 18
 2328 00aa 7B68     		ldr	r3, [r7, #4]
 2329 00ac 2022     		movs	r2, #32
 2330 00ae 83F83A20 		strb	r2, [r3, #58]
1174:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2331              		.loc 1 1174 17
 2332 00b2 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccOBznmR.s 			page 62


 2333 00b4 2022     		movs	r2, #32
 2334 00b6 83F83920 		strb	r2, [r3, #57]
1175:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1176:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2335              		.loc 1 1176 10
 2336 00ba 0023     		movs	r3, #0
1177:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2337              		.loc 1 1177 1
 2338 00bc 1846     		mov	r0, r3
 2339 00be 0837     		adds	r7, r7, #8
 2340              	.LCFI89:
 2341              		.cfi_def_cfa_offset 8
 2342 00c0 BD46     		mov	sp, r7
 2343              	.LCFI90:
 2344              		.cfi_def_cfa_register 13
 2345              		@ sp needed
 2346 00c2 80BD     		pop	{r7, pc}
 2347              		.cfi_endproc
 2348              	.LFE142:
 2350              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2351              		.align	1
 2352              		.global	HAL_UART_AbortTransmit
 2353              		.syntax unified
 2354              		.thumb
 2355              		.thumb_func
 2356              		.fpu fpv4-sp-d16
 2358              	HAL_UART_AbortTransmit:
 2359              	.LFB143:
1178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1179:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1180:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1181:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1182:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1183:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1184:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1185:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1186:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1187:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1188:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1189:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1190:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1191:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1192:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2360              		.loc 1 1192 1
 2361              		.cfi_startproc
 2362              		@ args = 0, pretend = 0, frame = 8
 2363              		@ frame_needed = 1, uses_anonymous_args = 0
 2364 0000 80B5     		push	{r7, lr}
 2365              	.LCFI91:
 2366              		.cfi_def_cfa_offset 8
 2367              		.cfi_offset 7, -8
 2368              		.cfi_offset 14, -4
 2369 0002 82B0     		sub	sp, sp, #8
 2370              	.LCFI92:
 2371              		.cfi_def_cfa_offset 16
 2372 0004 00AF     		add	r7, sp, #0
 2373              	.LCFI93:
ARM GAS  /tmp/ccOBznmR.s 			page 63


 2374              		.cfi_def_cfa_register 7
 2375 0006 7860     		str	r0, [r7, #4]
1193:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1194:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2376              		.loc 1 1194 3
 2377 0008 7B68     		ldr	r3, [r7, #4]
 2378 000a 1B68     		ldr	r3, [r3]
 2379 000c DA68     		ldr	r2, [r3, #12]
 2380 000e 7B68     		ldr	r3, [r7, #4]
 2381 0010 1B68     		ldr	r3, [r3]
 2382 0012 22F0C002 		bic	r2, r2, #192
 2383 0016 DA60     		str	r2, [r3, #12]
1195:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1196:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1197:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2384              		.loc 1 1197 6
 2385 0018 7B68     		ldr	r3, [r7, #4]
 2386 001a 1B68     		ldr	r3, [r3]
 2387 001c 5B69     		ldr	r3, [r3, #20]
 2388 001e 03F08003 		and	r3, r3, #128
 2389              		.loc 1 1197 5
 2390 0022 002B     		cmp	r3, #0
 2391 0024 14D0     		beq	.L97
1198:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1199:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2392              		.loc 1 1199 5
 2393 0026 7B68     		ldr	r3, [r7, #4]
 2394 0028 1B68     		ldr	r3, [r3]
 2395 002a 5A69     		ldr	r2, [r3, #20]
 2396 002c 7B68     		ldr	r3, [r7, #4]
 2397 002e 1B68     		ldr	r3, [r3]
 2398 0030 22F08002 		bic	r2, r2, #128
 2399 0034 5A61     		str	r2, [r3, #20]
1200:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1201:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2400              		.loc 1 1202 13
 2401 0036 7B68     		ldr	r3, [r7, #4]
 2402 0038 1B6B     		ldr	r3, [r3, #48]
 2403              		.loc 1 1202 7
 2404 003a 002B     		cmp	r3, #0
 2405 003c 08D0     		beq	.L97
1203:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1204:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1205:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1206:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2406              		.loc 1 1206 12
 2407 003e 7B68     		ldr	r3, [r7, #4]
 2408 0040 1B6B     		ldr	r3, [r3, #48]
 2409              		.loc 1 1206 40
 2410 0042 0022     		movs	r2, #0
 2411 0044 1A65     		str	r2, [r3, #80]
1207:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1208:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2412              		.loc 1 1208 7
 2413 0046 7B68     		ldr	r3, [r7, #4]
 2414 0048 1B6B     		ldr	r3, [r3, #48]
ARM GAS  /tmp/ccOBznmR.s 			page 64


 2415 004a 1846     		mov	r0, r3
 2416 004c FFF7FEFF 		bl	HAL_DMA_Abort
 2417              	.L97:
1209:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1210:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1211:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1212:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1213:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 2418              		.loc 1 1213 22
 2419 0050 7B68     		ldr	r3, [r7, #4]
 2420 0052 0022     		movs	r2, #0
 2421 0054 DA84     		strh	r2, [r3, #38]	@ movhi
1214:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1215:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1216:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2422              		.loc 1 1216 17
 2423 0056 7B68     		ldr	r3, [r7, #4]
 2424 0058 2022     		movs	r2, #32
 2425 005a 83F83920 		strb	r2, [r3, #57]
1217:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1218:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2426              		.loc 1 1218 10
 2427 005e 0023     		movs	r3, #0
1219:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2428              		.loc 1 1219 1
 2429 0060 1846     		mov	r0, r3
 2430 0062 0837     		adds	r7, r7, #8
 2431              	.LCFI94:
 2432              		.cfi_def_cfa_offset 8
 2433 0064 BD46     		mov	sp, r7
 2434              	.LCFI95:
 2435              		.cfi_def_cfa_register 13
 2436              		@ sp needed
 2437 0066 80BD     		pop	{r7, pc}
 2438              		.cfi_endproc
 2439              	.LFE143:
 2441              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2442              		.align	1
 2443              		.global	HAL_UART_AbortReceive
 2444              		.syntax unified
 2445              		.thumb
 2446              		.thumb_func
 2447              		.fpu fpv4-sp-d16
 2449              	HAL_UART_AbortReceive:
 2450              	.LFB144:
1220:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1221:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1222:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1223:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1224:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1225:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1226:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1227:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1228:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1229:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1230:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1231:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccOBznmR.s 			page 65


1232:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1233:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1234:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2451              		.loc 1 1234 1
 2452              		.cfi_startproc
 2453              		@ args = 0, pretend = 0, frame = 8
 2454              		@ frame_needed = 1, uses_anonymous_args = 0
 2455 0000 80B5     		push	{r7, lr}
 2456              	.LCFI96:
 2457              		.cfi_def_cfa_offset 8
 2458              		.cfi_offset 7, -8
 2459              		.cfi_offset 14, -4
 2460 0002 82B0     		sub	sp, sp, #8
 2461              	.LCFI97:
 2462              		.cfi_def_cfa_offset 16
 2463 0004 00AF     		add	r7, sp, #0
 2464              	.LCFI98:
 2465              		.cfi_def_cfa_register 7
 2466 0006 7860     		str	r0, [r7, #4]
1235:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1236:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 2467              		.loc 1 1236 3
 2468 0008 7B68     		ldr	r3, [r7, #4]
 2469 000a 1B68     		ldr	r3, [r3]
 2470 000c DA68     		ldr	r2, [r3, #12]
 2471 000e 7B68     		ldr	r3, [r7, #4]
 2472 0010 1B68     		ldr	r3, [r3]
 2473 0012 22F49072 		bic	r2, r2, #288
 2474 0016 DA60     		str	r2, [r3, #12]
1237:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2475              		.loc 1 1237 3
 2476 0018 7B68     		ldr	r3, [r7, #4]
 2477 001a 1B68     		ldr	r3, [r3]
 2478 001c 5A69     		ldr	r2, [r3, #20]
 2479 001e 7B68     		ldr	r3, [r7, #4]
 2480 0020 1B68     		ldr	r3, [r3]
 2481 0022 22F00102 		bic	r2, r2, #1
 2482 0026 5A61     		str	r2, [r3, #20]
1238:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1239:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1240:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2483              		.loc 1 1240 6
 2484 0028 7B68     		ldr	r3, [r7, #4]
 2485 002a 1B68     		ldr	r3, [r3]
 2486 002c 5B69     		ldr	r3, [r3, #20]
 2487 002e 03F04003 		and	r3, r3, #64
 2488              		.loc 1 1240 5
 2489 0032 002B     		cmp	r3, #0
 2490 0034 14D0     		beq	.L100
1241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1242:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2491              		.loc 1 1242 5
 2492 0036 7B68     		ldr	r3, [r7, #4]
 2493 0038 1B68     		ldr	r3, [r3]
 2494 003a 5A69     		ldr	r2, [r3, #20]
 2495 003c 7B68     		ldr	r3, [r7, #4]
 2496 003e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccOBznmR.s 			page 66


 2497 0040 22F04002 		bic	r2, r2, #64
 2498 0044 5A61     		str	r2, [r3, #20]
1243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1244:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1245:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2499              		.loc 1 1245 13
 2500 0046 7B68     		ldr	r3, [r7, #4]
 2501 0048 5B6B     		ldr	r3, [r3, #52]
 2502              		.loc 1 1245 7
 2503 004a 002B     		cmp	r3, #0
 2504 004c 08D0     		beq	.L100
1246:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1247:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1248:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1249:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2505              		.loc 1 1249 12
 2506 004e 7B68     		ldr	r3, [r7, #4]
 2507 0050 5B6B     		ldr	r3, [r3, #52]
 2508              		.loc 1 1249 40
 2509 0052 0022     		movs	r2, #0
 2510 0054 1A65     		str	r2, [r3, #80]
1250:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1251:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2511              		.loc 1 1251 7
 2512 0056 7B68     		ldr	r3, [r7, #4]
 2513 0058 5B6B     		ldr	r3, [r3, #52]
 2514 005a 1846     		mov	r0, r3
 2515 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2516              	.L100:
1252:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1253:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1254:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1255:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1256:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2517              		.loc 1 1256 22
 2518 0060 7B68     		ldr	r3, [r7, #4]
 2519 0062 0022     		movs	r2, #0
 2520 0064 DA85     		strh	r2, [r3, #46]	@ movhi
1257:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1258:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1259:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2521              		.loc 1 1259 18
 2522 0066 7B68     		ldr	r3, [r7, #4]
 2523 0068 2022     		movs	r2, #32
 2524 006a 83F83A20 		strb	r2, [r3, #58]
1260:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1261:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2525              		.loc 1 1261 10
 2526 006e 0023     		movs	r3, #0
1262:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2527              		.loc 1 1262 1
 2528 0070 1846     		mov	r0, r3
 2529 0072 0837     		adds	r7, r7, #8
 2530              	.LCFI99:
 2531              		.cfi_def_cfa_offset 8
 2532 0074 BD46     		mov	sp, r7
 2533              	.LCFI100:
ARM GAS  /tmp/ccOBznmR.s 			page 67


 2534              		.cfi_def_cfa_register 13
 2535              		@ sp needed
 2536 0076 80BD     		pop	{r7, pc}
 2537              		.cfi_endproc
 2538              	.LFE144:
 2540              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2541              		.align	1
 2542              		.global	HAL_UART_Abort_IT
 2543              		.syntax unified
 2544              		.thumb
 2545              		.thumb_func
 2546              		.fpu fpv4-sp-d16
 2548              	HAL_UART_Abort_IT:
 2549              	.LFB145:
1263:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1264:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1265:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1266:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1267:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1268:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1269:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1270:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1271:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1272:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1273:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1274:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1275:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1276:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1278:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1279:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2550              		.loc 1 1279 1
 2551              		.cfi_startproc
 2552              		@ args = 0, pretend = 0, frame = 16
 2553              		@ frame_needed = 1, uses_anonymous_args = 0
 2554 0000 80B5     		push	{r7, lr}
 2555              	.LCFI101:
 2556              		.cfi_def_cfa_offset 8
 2557              		.cfi_offset 7, -8
 2558              		.cfi_offset 14, -4
 2559 0002 84B0     		sub	sp, sp, #16
 2560              	.LCFI102:
 2561              		.cfi_def_cfa_offset 24
 2562 0004 00AF     		add	r7, sp, #0
 2563              	.LCFI103:
 2564              		.cfi_def_cfa_register 7
 2565 0006 7860     		str	r0, [r7, #4]
1280:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 2566              		.loc 1 1280 12
 2567 0008 0123     		movs	r3, #1
 2568 000a FB60     		str	r3, [r7, #12]
1281:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1282:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1283:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2569              		.loc 1 1283 3
 2570 000c 7B68     		ldr	r3, [r7, #4]
 2571 000e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccOBznmR.s 			page 68


 2572 0010 DA68     		ldr	r2, [r3, #12]
 2573 0012 7B68     		ldr	r3, [r7, #4]
 2574 0014 1B68     		ldr	r3, [r3]
 2575 0016 22F4F072 		bic	r2, r2, #480
 2576 001a DA60     		str	r2, [r3, #12]
1284:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2577              		.loc 1 1284 3
 2578 001c 7B68     		ldr	r3, [r7, #4]
 2579 001e 1B68     		ldr	r3, [r3]
 2580 0020 5A69     		ldr	r2, [r3, #20]
 2581 0022 7B68     		ldr	r3, [r7, #4]
 2582 0024 1B68     		ldr	r3, [r3]
 2583 0026 22F00102 		bic	r2, r2, #1
 2584 002a 5A61     		str	r2, [r3, #20]
1285:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1286:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1287:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      before any call to DMA Abort functions */
1288:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1289:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 2585              		.loc 1 1289 11
 2586 002c 7B68     		ldr	r3, [r7, #4]
 2587 002e 1B6B     		ldr	r3, [r3, #48]
 2588              		.loc 1 1289 5
 2589 0030 002B     		cmp	r3, #0
 2590 0032 0FD0     		beq	.L103
1290:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1291:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1292:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1293:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2591              		.loc 1 1293 8
 2592 0034 7B68     		ldr	r3, [r7, #4]
 2593 0036 1B68     		ldr	r3, [r3]
 2594 0038 5B69     		ldr	r3, [r3, #20]
 2595 003a 03F08003 		and	r3, r3, #128
 2596              		.loc 1 1293 7
 2597 003e 002B     		cmp	r3, #0
 2598 0040 04D0     		beq	.L104
1294:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1295:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 2599              		.loc 1 1295 12
 2600 0042 7B68     		ldr	r3, [r7, #4]
 2601 0044 1B6B     		ldr	r3, [r3, #48]
 2602              		.loc 1 1295 40
 2603 0046 3E4A     		ldr	r2, .L113
 2604 0048 1A65     		str	r2, [r3, #80]
 2605 004a 03E0     		b	.L103
 2606              	.L104:
1296:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1297:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1298:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1299:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2607              		.loc 1 1299 12
 2608 004c 7B68     		ldr	r3, [r7, #4]
 2609 004e 1B6B     		ldr	r3, [r3, #48]
 2610              		.loc 1 1299 40
 2611 0050 0022     		movs	r2, #0
 2612 0052 1A65     		str	r2, [r3, #80]
ARM GAS  /tmp/ccOBznmR.s 			page 69


 2613              	.L103:
1300:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1301:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1302:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1303:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmarx != NULL)
 2614              		.loc 1 1303 11
 2615 0054 7B68     		ldr	r3, [r7, #4]
 2616 0056 5B6B     		ldr	r3, [r3, #52]
 2617              		.loc 1 1303 5
 2618 0058 002B     		cmp	r3, #0
 2619 005a 0FD0     		beq	.L105
1304:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1305:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1306:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1307:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2620              		.loc 1 1307 8
 2621 005c 7B68     		ldr	r3, [r7, #4]
 2622 005e 1B68     		ldr	r3, [r3]
 2623 0060 5B69     		ldr	r3, [r3, #20]
 2624 0062 03F04003 		and	r3, r3, #64
 2625              		.loc 1 1307 7
 2626 0066 002B     		cmp	r3, #0
 2627 0068 04D0     		beq	.L106
1308:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1309:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 2628              		.loc 1 1309 12
 2629 006a 7B68     		ldr	r3, [r7, #4]
 2630 006c 5B6B     		ldr	r3, [r3, #52]
 2631              		.loc 1 1309 40
 2632 006e 354A     		ldr	r2, .L113+4
 2633 0070 1A65     		str	r2, [r3, #80]
 2634 0072 03E0     		b	.L105
 2635              	.L106:
1310:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1311:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1312:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1313:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2636              		.loc 1 1313 12
 2637 0074 7B68     		ldr	r3, [r7, #4]
 2638 0076 5B6B     		ldr	r3, [r3, #52]
 2639              		.loc 1 1313 40
 2640 0078 0022     		movs	r2, #0
 2641 007a 1A65     		str	r2, [r3, #80]
 2642              	.L105:
1314:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1315:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1316:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1317:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1318:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2643              		.loc 1 1318 6
 2644 007c 7B68     		ldr	r3, [r7, #4]
 2645 007e 1B68     		ldr	r3, [r3]
 2646 0080 5B69     		ldr	r3, [r3, #20]
 2647 0082 03F08003 		and	r3, r3, #128
 2648              		.loc 1 1318 5
 2649 0086 002B     		cmp	r3, #0
 2650 0088 1AD0     		beq	.L107
ARM GAS  /tmp/ccOBznmR.s 			page 70


1319:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1320:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1321:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2651              		.loc 1 1321 5
 2652 008a 7B68     		ldr	r3, [r7, #4]
 2653 008c 1B68     		ldr	r3, [r3]
 2654 008e 5A69     		ldr	r2, [r3, #20]
 2655 0090 7B68     		ldr	r3, [r7, #4]
 2656 0092 1B68     		ldr	r3, [r3]
 2657 0094 22F08002 		bic	r2, r2, #128
 2658 0098 5A61     		str	r2, [r3, #20]
1322:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1323:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1324:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2659              		.loc 1 1324 13
 2660 009a 7B68     		ldr	r3, [r7, #4]
 2661 009c 1B6B     		ldr	r3, [r3, #48]
 2662              		.loc 1 1324 7
 2663 009e 002B     		cmp	r3, #0
 2664 00a0 0ED0     		beq	.L107
1325:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1326:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1327:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1328:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1329:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1330:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 2665              		.loc 1 1330 10
 2666 00a2 7B68     		ldr	r3, [r7, #4]
 2667 00a4 1B6B     		ldr	r3, [r3, #48]
 2668 00a6 1846     		mov	r0, r3
 2669 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2670 00ac 0346     		mov	r3, r0
 2671              		.loc 1 1330 9
 2672 00ae 002B     		cmp	r3, #0
 2673 00b0 04D0     		beq	.L108
1331:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1332:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 2674              		.loc 1 1332 14
 2675 00b2 7B68     		ldr	r3, [r7, #4]
 2676 00b4 1B6B     		ldr	r3, [r3, #48]
 2677              		.loc 1 1332 42
 2678 00b6 0022     		movs	r2, #0
 2679 00b8 1A65     		str	r2, [r3, #80]
 2680 00ba 01E0     		b	.L107
 2681              	.L108:
1333:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1334:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1335:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1336:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
 2682              		.loc 1 1336 19
 2683 00bc 0023     		movs	r3, #0
 2684 00be FB60     		str	r3, [r7, #12]
 2685              	.L107:
1337:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1338:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1339:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1340:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccOBznmR.s 			page 71


1341:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1342:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2686              		.loc 1 1342 6
 2687 00c0 7B68     		ldr	r3, [r7, #4]
 2688 00c2 1B68     		ldr	r3, [r3]
 2689 00c4 5B69     		ldr	r3, [r3, #20]
 2690 00c6 03F04003 		and	r3, r3, #64
 2691              		.loc 1 1342 5
 2692 00ca 002B     		cmp	r3, #0
 2693 00cc 1CD0     		beq	.L109
1343:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1344:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2694              		.loc 1 1344 5
 2695 00ce 7B68     		ldr	r3, [r7, #4]
 2696 00d0 1B68     		ldr	r3, [r3]
 2697 00d2 5A69     		ldr	r2, [r3, #20]
 2698 00d4 7B68     		ldr	r3, [r7, #4]
 2699 00d6 1B68     		ldr	r3, [r3]
 2700 00d8 22F04002 		bic	r2, r2, #64
 2701 00dc 5A61     		str	r2, [r3, #20]
1345:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1346:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1347:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2702              		.loc 1 1347 13
 2703 00de 7B68     		ldr	r3, [r7, #4]
 2704 00e0 5B6B     		ldr	r3, [r3, #52]
 2705              		.loc 1 1347 7
 2706 00e2 002B     		cmp	r3, #0
 2707 00e4 10D0     		beq	.L109
1348:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1349:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1350:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1351:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1352:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1353:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2708              		.loc 1 1353 10
 2709 00e6 7B68     		ldr	r3, [r7, #4]
 2710 00e8 5B6B     		ldr	r3, [r3, #52]
 2711 00ea 1846     		mov	r0, r3
 2712 00ec FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2713 00f0 0346     		mov	r3, r0
 2714              		.loc 1 1353 9
 2715 00f2 002B     		cmp	r3, #0
 2716 00f4 06D0     		beq	.L110
1354:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1355:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 2717              		.loc 1 1355 14
 2718 00f6 7B68     		ldr	r3, [r7, #4]
 2719 00f8 5B6B     		ldr	r3, [r3, #52]
 2720              		.loc 1 1355 42
 2721 00fa 0022     		movs	r2, #0
 2722 00fc 1A65     		str	r2, [r3, #80]
1356:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
 2723              		.loc 1 1356 19
 2724 00fe 0123     		movs	r3, #1
 2725 0100 FB60     		str	r3, [r7, #12]
 2726 0102 01E0     		b	.L109
ARM GAS  /tmp/ccOBznmR.s 			page 72


 2727              	.L110:
1357:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1358:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1359:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1360:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
 2728              		.loc 1 1360 19
 2729 0104 0023     		movs	r3, #0
 2730 0106 FB60     		str	r3, [r7, #12]
 2731              	.L109:
1361:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1362:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1363:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1364:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1365:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1366:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(AbortCplt == 0x01U)
 2732              		.loc 1 1366 5
 2733 0108 FB68     		ldr	r3, [r7, #12]
 2734 010a 012B     		cmp	r3, #1
 2735 010c 13D1     		bne	.L111
1367:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1368:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1369:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U; 
 2736              		.loc 1 1369 24
 2737 010e 7B68     		ldr	r3, [r7, #4]
 2738 0110 0022     		movs	r2, #0
 2739 0112 DA84     		strh	r2, [r3, #38]	@ movhi
1370:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 2740              		.loc 1 1370 24
 2741 0114 7B68     		ldr	r3, [r7, #4]
 2742 0116 0022     		movs	r2, #0
 2743 0118 DA85     		strh	r2, [r3, #46]	@ movhi
1371:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1372:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset ErrorCode */
1373:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2744              		.loc 1 1373 22
 2745 011a 7B68     		ldr	r3, [r7, #4]
 2746 011c 0022     		movs	r2, #0
 2747 011e DA63     		str	r2, [r3, #60]
1374:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1375:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1376:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 2748              		.loc 1 1376 20
 2749 0120 7B68     		ldr	r3, [r7, #4]
 2750 0122 2022     		movs	r2, #32
 2751 0124 83F83920 		strb	r2, [r3, #57]
1377:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2752              		.loc 1 1377 20
 2753 0128 7B68     		ldr	r3, [r7, #4]
 2754 012a 2022     		movs	r2, #32
 2755 012c 83F83A20 		strb	r2, [r3, #58]
1378:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1379:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1380:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 2756              		.loc 1 1380 5
 2757 0130 7868     		ldr	r0, [r7, #4]
 2758 0132 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2759              	.L111:
ARM GAS  /tmp/ccOBznmR.s 			page 73


1381:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1382:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1383:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2760              		.loc 1 1383 10
 2761 0136 0023     		movs	r3, #0
1384:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2762              		.loc 1 1384 1
 2763 0138 1846     		mov	r0, r3
 2764 013a 1037     		adds	r7, r7, #16
 2765              	.LCFI104:
 2766              		.cfi_def_cfa_offset 8
 2767 013c BD46     		mov	sp, r7
 2768              	.LCFI105:
 2769              		.cfi_def_cfa_register 13
 2770              		@ sp needed
 2771 013e 80BD     		pop	{r7, pc}
 2772              	.L114:
 2773              		.align	2
 2774              	.L113:
 2775 0140 00000000 		.word	UART_DMATxAbortCallback
 2776 0144 00000000 		.word	UART_DMARxAbortCallback
 2777              		.cfi_endproc
 2778              	.LFE145:
 2780              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2781              		.align	1
 2782              		.global	HAL_UART_AbortTransmit_IT
 2783              		.syntax unified
 2784              		.thumb
 2785              		.thumb_func
 2786              		.fpu fpv4-sp-d16
 2788              	HAL_UART_AbortTransmit_IT:
 2789              	.LFB146:
1385:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1386:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1387:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1388:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1389:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1390:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1391:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1392:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1393:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1394:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1395:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1396:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1397:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1398:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1399:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1400:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1401:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2790              		.loc 1 1401 1
 2791              		.cfi_startproc
 2792              		@ args = 0, pretend = 0, frame = 8
 2793              		@ frame_needed = 1, uses_anonymous_args = 0
 2794 0000 80B5     		push	{r7, lr}
 2795              	.LCFI106:
 2796              		.cfi_def_cfa_offset 8
 2797              		.cfi_offset 7, -8
ARM GAS  /tmp/ccOBznmR.s 			page 74


 2798              		.cfi_offset 14, -4
 2799 0002 82B0     		sub	sp, sp, #8
 2800              	.LCFI107:
 2801              		.cfi_def_cfa_offset 16
 2802 0004 00AF     		add	r7, sp, #0
 2803              	.LCFI108:
 2804              		.cfi_def_cfa_register 7
 2805 0006 7860     		str	r0, [r7, #4]
1402:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1403:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2806              		.loc 1 1403 3
 2807 0008 7B68     		ldr	r3, [r7, #4]
 2808 000a 1B68     		ldr	r3, [r3]
 2809 000c DA68     		ldr	r2, [r3, #12]
 2810 000e 7B68     		ldr	r3, [r7, #4]
 2811 0010 1B68     		ldr	r3, [r3]
 2812 0012 22F0C002 		bic	r2, r2, #192
 2813 0016 DA60     		str	r2, [r3, #12]
1404:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1405:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1406:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2814              		.loc 1 1406 6
 2815 0018 7B68     		ldr	r3, [r7, #4]
 2816 001a 1B68     		ldr	r3, [r3]
 2817 001c 5B69     		ldr	r3, [r3, #20]
 2818 001e 03F08003 		and	r3, r3, #128
 2819              		.loc 1 1406 5
 2820 0022 002B     		cmp	r3, #0
 2821 0024 2AD0     		beq	.L116
1407:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1408:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2822              		.loc 1 1408 5
 2823 0026 7B68     		ldr	r3, [r7, #4]
 2824 0028 1B68     		ldr	r3, [r3]
 2825 002a 5A69     		ldr	r2, [r3, #20]
 2826 002c 7B68     		ldr	r3, [r7, #4]
 2827 002e 1B68     		ldr	r3, [r3]
 2828 0030 22F08002 		bic	r2, r2, #128
 2829 0034 5A61     		str	r2, [r3, #20]
1409:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1410:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1411:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2830              		.loc 1 1411 13
 2831 0036 7B68     		ldr	r3, [r7, #4]
 2832 0038 1B6B     		ldr	r3, [r3, #48]
 2833              		.loc 1 1411 7
 2834 003a 002B     		cmp	r3, #0
 2835 003c 13D0     		beq	.L117
1412:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1413:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1414:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1415:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 2836              		.loc 1 1415 12
 2837 003e 7B68     		ldr	r3, [r7, #4]
 2838 0040 1B6B     		ldr	r3, [r3, #48]
 2839              		.loc 1 1415 40
 2840 0042 164A     		ldr	r2, .L120
ARM GAS  /tmp/ccOBznmR.s 			page 75


 2841 0044 1A65     		str	r2, [r3, #80]
1416:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1417:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1418:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 2842              		.loc 1 1418 10
 2843 0046 7B68     		ldr	r3, [r7, #4]
 2844 0048 1B6B     		ldr	r3, [r3, #48]
 2845 004a 1846     		mov	r0, r3
 2846 004c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2847 0050 0346     		mov	r3, r0
 2848              		.loc 1 1418 9
 2849 0052 002B     		cmp	r3, #0
 2850 0054 1CD0     		beq	.L118
1419:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1420:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1421:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 2851              		.loc 1 1421 14
 2852 0056 7B68     		ldr	r3, [r7, #4]
 2853 0058 1B6B     		ldr	r3, [r3, #48]
 2854              		.loc 1 1421 22
 2855 005a 1B6D     		ldr	r3, [r3, #80]
 2856              		.loc 1 1421 47
 2857 005c 7A68     		ldr	r2, [r7, #4]
 2858 005e 126B     		ldr	r2, [r2, #48]
 2859              		.loc 1 1421 9
 2860 0060 1046     		mov	r0, r2
 2861 0062 9847     		blx	r3
 2862              	.LVL0:
 2863 0064 14E0     		b	.L118
 2864              	.L117:
1422:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1423:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1424:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1425:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {      
1426:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Tx transfer counter */
1427:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
 2865              		.loc 1 1427 26
 2866 0066 7B68     		ldr	r3, [r7, #4]
 2867 0068 0022     		movs	r2, #0
 2868 006a DA84     		strh	r2, [r3, #38]	@ movhi
1428:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1429:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1430:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 2869              		.loc 1 1430 21
 2870 006c 7B68     		ldr	r3, [r7, #4]
 2871 006e 2022     		movs	r2, #32
 2872 0070 83F83920 		strb	r2, [r3, #57]
1431:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1432:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1433:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 2873              		.loc 1 1433 7
 2874 0074 7868     		ldr	r0, [r7, #4]
 2875 0076 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2876 007a 09E0     		b	.L118
 2877              	.L116:
1434:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1435:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccOBznmR.s 			page 76


1436:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1437:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1438:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx transfer counter */
1439:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 2878              		.loc 1 1439 24
 2879 007c 7B68     		ldr	r3, [r7, #4]
 2880 007e 0022     		movs	r2, #0
 2881 0080 DA84     		strh	r2, [r3, #38]	@ movhi
1440:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1441:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1442:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 2882              		.loc 1 1442 19
 2883 0082 7B68     		ldr	r3, [r7, #4]
 2884 0084 2022     		movs	r2, #32
 2885 0086 83F83920 		strb	r2, [r3, #57]
1443:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1444:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1445:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 2886              		.loc 1 1445 5
 2887 008a 7868     		ldr	r0, [r7, #4]
 2888 008c FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2889              	.L118:
1446:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1447:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1448:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2890              		.loc 1 1448 10
 2891 0090 0023     		movs	r3, #0
1449:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2892              		.loc 1 1449 1
 2893 0092 1846     		mov	r0, r3
 2894 0094 0837     		adds	r7, r7, #8
 2895              	.LCFI109:
 2896              		.cfi_def_cfa_offset 8
 2897 0096 BD46     		mov	sp, r7
 2898              	.LCFI110:
 2899              		.cfi_def_cfa_register 13
 2900              		@ sp needed
 2901 0098 80BD     		pop	{r7, pc}
 2902              	.L121:
 2903 009a 00BF     		.align	2
 2904              	.L120:
 2905 009c 00000000 		.word	UART_DMATxOnlyAbortCallback
 2906              		.cfi_endproc
 2907              	.LFE146:
 2909              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2910              		.align	1
 2911              		.global	HAL_UART_AbortReceive_IT
 2912              		.syntax unified
 2913              		.thumb
 2914              		.thumb_func
 2915              		.fpu fpv4-sp-d16
 2917              	HAL_UART_AbortReceive_IT:
 2918              	.LFB147:
1450:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1451:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1452:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1453:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/ccOBznmR.s 			page 77


1454:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1455:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1456:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1457:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1458:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1459:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1460:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1461:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1462:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1463:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1464:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1465:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1466:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2919              		.loc 1 1466 1
 2920              		.cfi_startproc
 2921              		@ args = 0, pretend = 0, frame = 8
 2922              		@ frame_needed = 1, uses_anonymous_args = 0
 2923 0000 80B5     		push	{r7, lr}
 2924              	.LCFI111:
 2925              		.cfi_def_cfa_offset 8
 2926              		.cfi_offset 7, -8
 2927              		.cfi_offset 14, -4
 2928 0002 82B0     		sub	sp, sp, #8
 2929              	.LCFI112:
 2930              		.cfi_def_cfa_offset 16
 2931 0004 00AF     		add	r7, sp, #0
 2932              	.LCFI113:
 2933              		.cfi_def_cfa_register 7
 2934 0006 7860     		str	r0, [r7, #4]
1467:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1468:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 2935              		.loc 1 1468 3
 2936 0008 7B68     		ldr	r3, [r7, #4]
 2937 000a 1B68     		ldr	r3, [r3]
 2938 000c DA68     		ldr	r2, [r3, #12]
 2939 000e 7B68     		ldr	r3, [r7, #4]
 2940 0010 1B68     		ldr	r3, [r3]
 2941 0012 22F49072 		bic	r2, r2, #288
 2942 0016 DA60     		str	r2, [r3, #12]
1469:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2943              		.loc 1 1469 3
 2944 0018 7B68     		ldr	r3, [r7, #4]
 2945 001a 1B68     		ldr	r3, [r3]
 2946 001c 5A69     		ldr	r2, [r3, #20]
 2947 001e 7B68     		ldr	r3, [r7, #4]
 2948 0020 1B68     		ldr	r3, [r3]
 2949 0022 22F00102 		bic	r2, r2, #1
 2950 0026 5A61     		str	r2, [r3, #20]
1470:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1471:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1472:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2951              		.loc 1 1472 6
 2952 0028 7B68     		ldr	r3, [r7, #4]
 2953 002a 1B68     		ldr	r3, [r3]
 2954 002c 5B69     		ldr	r3, [r3, #20]
 2955 002e 03F04003 		and	r3, r3, #64
 2956              		.loc 1 1472 5
ARM GAS  /tmp/ccOBznmR.s 			page 78


 2957 0032 002B     		cmp	r3, #0
 2958 0034 2AD0     		beq	.L123
1473:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1474:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2959              		.loc 1 1474 5
 2960 0036 7B68     		ldr	r3, [r7, #4]
 2961 0038 1B68     		ldr	r3, [r3]
 2962 003a 5A69     		ldr	r2, [r3, #20]
 2963 003c 7B68     		ldr	r3, [r7, #4]
 2964 003e 1B68     		ldr	r3, [r3]
 2965 0040 22F04002 		bic	r2, r2, #64
 2966 0044 5A61     		str	r2, [r3, #20]
1475:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1476:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1477:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2967              		.loc 1 1477 13
 2968 0046 7B68     		ldr	r3, [r7, #4]
 2969 0048 5B6B     		ldr	r3, [r3, #52]
 2970              		.loc 1 1477 7
 2971 004a 002B     		cmp	r3, #0
 2972 004c 13D0     		beq	.L124
1478:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1479:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1480:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1481:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 2973              		.loc 1 1481 12
 2974 004e 7B68     		ldr	r3, [r7, #4]
 2975 0050 5B6B     		ldr	r3, [r3, #52]
 2976              		.loc 1 1481 40
 2977 0052 164A     		ldr	r2, .L127
 2978 0054 1A65     		str	r2, [r3, #80]
1482:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1483:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1484:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2979              		.loc 1 1484 10
 2980 0056 7B68     		ldr	r3, [r7, #4]
 2981 0058 5B6B     		ldr	r3, [r3, #52]
 2982 005a 1846     		mov	r0, r3
 2983 005c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2984 0060 0346     		mov	r3, r0
 2985              		.loc 1 1484 9
 2986 0062 002B     		cmp	r3, #0
 2987 0064 1CD0     		beq	.L125
1485:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1486:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1487:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 2988              		.loc 1 1487 14
 2989 0066 7B68     		ldr	r3, [r7, #4]
 2990 0068 5B6B     		ldr	r3, [r3, #52]
 2991              		.loc 1 1487 22
 2992 006a 1B6D     		ldr	r3, [r3, #80]
 2993              		.loc 1 1487 47
 2994 006c 7A68     		ldr	r2, [r7, #4]
 2995 006e 526B     		ldr	r2, [r2, #52]
 2996              		.loc 1 1487 9
 2997 0070 1046     		mov	r0, r2
 2998 0072 9847     		blx	r3
ARM GAS  /tmp/ccOBznmR.s 			page 79


 2999              	.LVL1:
 3000 0074 14E0     		b	.L125
 3001              	.L124:
1488:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1489:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1490:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1491:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1492:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Rx transfer counter */
1493:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount = 0x00U; 
 3002              		.loc 1 1493 26
 3003 0076 7B68     		ldr	r3, [r7, #4]
 3004 0078 0022     		movs	r2, #0
 3005 007a DA85     		strh	r2, [r3, #46]	@ movhi
1494:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1495:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1496:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 3006              		.loc 1 1496 22
 3007 007c 7B68     		ldr	r3, [r7, #4]
 3008 007e 2022     		movs	r2, #32
 3009 0080 83F83A20 		strb	r2, [r3, #58]
1497:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1498:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1499:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 3010              		.loc 1 1499 7
 3011 0084 7868     		ldr	r0, [r7, #4]
 3012 0086 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3013 008a 09E0     		b	.L125
 3014              	.L123:
1500:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1501:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1502:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1503:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1504:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Rx transfer counter */
1505:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U; 
 3015              		.loc 1 1505 24
 3016 008c 7B68     		ldr	r3, [r7, #4]
 3017 008e 0022     		movs	r2, #0
 3018 0090 DA85     		strh	r2, [r3, #46]	@ movhi
1506:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1507:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1508:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3019              		.loc 1 1508 20
 3020 0092 7B68     		ldr	r3, [r7, #4]
 3021 0094 2022     		movs	r2, #32
 3022 0096 83F83A20 		strb	r2, [r3, #58]
1509:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1510:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1511:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 3023              		.loc 1 1511 5
 3024 009a 7868     		ldr	r0, [r7, #4]
 3025 009c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3026              	.L125:
1512:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1513:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1514:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3027              		.loc 1 1514 10
 3028 00a0 0023     		movs	r3, #0
ARM GAS  /tmp/ccOBznmR.s 			page 80


1515:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3029              		.loc 1 1515 1
 3030 00a2 1846     		mov	r0, r3
 3031 00a4 0837     		adds	r7, r7, #8
 3032              	.LCFI114:
 3033              		.cfi_def_cfa_offset 8
 3034 00a6 BD46     		mov	sp, r7
 3035              	.LCFI115:
 3036              		.cfi_def_cfa_register 13
 3037              		@ sp needed
 3038 00a8 80BD     		pop	{r7, pc}
 3039              	.L128:
 3040 00aa 00BF     		.align	2
 3041              	.L127:
 3042 00ac 00000000 		.word	UART_DMARxOnlyAbortCallback
 3043              		.cfi_endproc
 3044              	.LFE147:
 3046              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3047              		.align	1
 3048              		.global	HAL_UART_IRQHandler
 3049              		.syntax unified
 3050              		.thumb
 3051              		.thumb_func
 3052              		.fpu fpv4-sp-d16
 3054              	HAL_UART_IRQHandler:
 3055              	.LFB148:
1516:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1517:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1518:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
1519:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1520:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1521:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1522:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1523:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1524:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3056              		.loc 1 1524 1
 3057              		.cfi_startproc
 3058              		@ args = 0, pretend = 0, frame = 32
 3059              		@ frame_needed = 1, uses_anonymous_args = 0
 3060 0000 80B5     		push	{r7, lr}
 3061              	.LCFI116:
 3062              		.cfi_def_cfa_offset 8
 3063              		.cfi_offset 7, -8
 3064              		.cfi_offset 14, -4
 3065 0002 88B0     		sub	sp, sp, #32
 3066              	.LCFI117:
 3067              		.cfi_def_cfa_offset 40
 3068 0004 00AF     		add	r7, sp, #0
 3069              	.LCFI118:
 3070              		.cfi_def_cfa_register 7
 3071 0006 7860     		str	r0, [r7, #4]
1525:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
 3072              		.loc 1 1525 26
 3073 0008 7B68     		ldr	r3, [r7, #4]
 3074 000a 1B68     		ldr	r3, [r3]
 3075              		.loc 1 1525 13
 3076 000c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccOBznmR.s 			page 81


 3077 000e FB61     		str	r3, [r7, #28]
1526:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3078              		.loc 1 1526 26
 3079 0010 7B68     		ldr	r3, [r7, #4]
 3080 0012 1B68     		ldr	r3, [r3]
 3081              		.loc 1 1526 13
 3082 0014 DB68     		ldr	r3, [r3, #12]
 3083 0016 BB61     		str	r3, [r7, #24]
1527:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3084              		.loc 1 1527 26
 3085 0018 7B68     		ldr	r3, [r7, #4]
 3086 001a 1B68     		ldr	r3, [r3]
 3087              		.loc 1 1527 13
 3088 001c 5B69     		ldr	r3, [r3, #20]
 3089 001e 7B61     		str	r3, [r7, #20]
1528:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
 3090              		.loc 1 1528 13
 3091 0020 0023     		movs	r3, #0
 3092 0022 3B61     		str	r3, [r7, #16]
1529:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
 3093              		.loc 1 1529 13
 3094 0024 0023     		movs	r3, #0
 3095 0026 FB60     		str	r3, [r7, #12]
1530:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1531:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
1532:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 3096              		.loc 1 1532 14
 3097 0028 FB69     		ldr	r3, [r7, #28]
 3098 002a 03F00F03 		and	r3, r3, #15
 3099 002e 3B61     		str	r3, [r7, #16]
1533:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(errorflags == RESET)
 3100              		.loc 1 1533 5
 3101 0030 3B69     		ldr	r3, [r7, #16]
 3102 0032 002B     		cmp	r3, #0
 3103 0034 0DD1     		bne	.L130
1534:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1535:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
1536:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3104              		.loc 1 1536 19
 3105 0036 FB69     		ldr	r3, [r7, #28]
 3106 0038 03F02003 		and	r3, r3, #32
 3107              		.loc 1 1536 7
 3108 003c 002B     		cmp	r3, #0
 3109 003e 08D0     		beq	.L130
 3110              		.loc 1 1536 58 discriminator 1
 3111 0040 BB69     		ldr	r3, [r7, #24]
 3112 0042 03F02003 		and	r3, r3, #32
 3113              		.loc 1 1536 46 discriminator 1
 3114 0046 002B     		cmp	r3, #0
 3115 0048 03D0     		beq	.L130
1537:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1538:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
 3116              		.loc 1 1538 7
 3117 004a 7868     		ldr	r0, [r7, #4]
 3118 004c FFF7FEFF 		bl	UART_Receive_IT
1539:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 3119              		.loc 1 1539 7
ARM GAS  /tmp/ccOBznmR.s 			page 82


 3120 0050 CBE0     		b	.L129
 3121              	.L130:
1540:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1541:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }  
1542:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1543:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
1544:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE 
 3122              		.loc 1 1544 5
 3123 0052 3B69     		ldr	r3, [r7, #16]
 3124 0054 002B     		cmp	r3, #0
 3125 0056 00F0AB80 		beq	.L132
 3126              		.loc 1 1544 41 discriminator 1
 3127 005a 7B69     		ldr	r3, [r7, #20]
 3128 005c 03F00103 		and	r3, r3, #1
 3129              		.loc 1 1544 28 discriminator 1
 3130 0060 002B     		cmp	r3, #0
 3131 0062 05D1     		bne	.L133
 3132              		.loc 1 1544 80 discriminator 2
 3133 0064 BB69     		ldr	r3, [r7, #24]
 3134 0066 03F49073 		and	r3, r3, #288
 3135              		.loc 1 1544 68 discriminator 2
 3136 006a 002B     		cmp	r3, #0
 3137 006c 00F0A080 		beq	.L132
 3138              	.L133:
1545:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1546:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
1547:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 3139              		.loc 1 1547 19
 3140 0070 FB69     		ldr	r3, [r7, #28]
 3141 0072 03F00103 		and	r3, r3, #1
 3142              		.loc 1 1547 7
 3143 0076 002B     		cmp	r3, #0
 3144 0078 0AD0     		beq	.L134
 3145              		.loc 1 1547 56 discriminator 1
 3146 007a BB69     		ldr	r3, [r7, #24]
 3147 007c 03F48073 		and	r3, r3, #256
 3148              		.loc 1 1547 44 discriminator 1
 3149 0080 002B     		cmp	r3, #0
 3150 0082 05D0     		beq	.L134
1548:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1549:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 3151              		.loc 1 1549 24
 3152 0084 7B68     		ldr	r3, [r7, #4]
 3153 0086 DB6B     		ldr	r3, [r3, #60]
 3154 0088 43F00102 		orr	r2, r3, #1
 3155 008c 7B68     		ldr	r3, [r7, #4]
 3156 008e DA63     		str	r2, [r3, #60]
 3157              	.L134:
1550:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1551:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1552:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
1553:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3158              		.loc 1 1553 19
 3159 0090 FB69     		ldr	r3, [r7, #28]
 3160 0092 03F00403 		and	r3, r3, #4
 3161              		.loc 1 1553 7
 3162 0096 002B     		cmp	r3, #0
ARM GAS  /tmp/ccOBznmR.s 			page 83


 3163 0098 0AD0     		beq	.L135
 3164              		.loc 1 1553 56 discriminator 1
 3165 009a 7B69     		ldr	r3, [r7, #20]
 3166 009c 03F00103 		and	r3, r3, #1
 3167              		.loc 1 1553 44 discriminator 1
 3168 00a0 002B     		cmp	r3, #0
 3169 00a2 05D0     		beq	.L135
1554:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1555:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 3170              		.loc 1 1555 24
 3171 00a4 7B68     		ldr	r3, [r7, #4]
 3172 00a6 DB6B     		ldr	r3, [r3, #60]
 3173 00a8 43F00202 		orr	r2, r3, #2
 3174 00ac 7B68     		ldr	r3, [r7, #4]
 3175 00ae DA63     		str	r2, [r3, #60]
 3176              	.L135:
1556:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1557:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1558:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
1559:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3177              		.loc 1 1559 19
 3178 00b0 FB69     		ldr	r3, [r7, #28]
 3179 00b2 03F00203 		and	r3, r3, #2
 3180              		.loc 1 1559 7
 3181 00b6 002B     		cmp	r3, #0
 3182 00b8 0AD0     		beq	.L136
 3183              		.loc 1 1559 56 discriminator 1
 3184 00ba 7B69     		ldr	r3, [r7, #20]
 3185 00bc 03F00103 		and	r3, r3, #1
 3186              		.loc 1 1559 44 discriminator 1
 3187 00c0 002B     		cmp	r3, #0
 3188 00c2 05D0     		beq	.L136
1560:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1561:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 3189              		.loc 1 1561 24
 3190 00c4 7B68     		ldr	r3, [r7, #4]
 3191 00c6 DB6B     		ldr	r3, [r3, #60]
 3192 00c8 43F00402 		orr	r2, r3, #4
 3193 00cc 7B68     		ldr	r3, [r7, #4]
 3194 00ce DA63     		str	r2, [r3, #60]
 3195              	.L136:
1562:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1563:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1564:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
1565:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3196              		.loc 1 1565 19
 3197 00d0 FB69     		ldr	r3, [r7, #28]
 3198 00d2 03F00803 		and	r3, r3, #8
 3199              		.loc 1 1565 7
 3200 00d6 002B     		cmp	r3, #0
 3201 00d8 0AD0     		beq	.L137
 3202              		.loc 1 1565 57 discriminator 1
 3203 00da 7B69     		ldr	r3, [r7, #20]
 3204 00dc 03F00103 		and	r3, r3, #1
 3205              		.loc 1 1565 45 discriminator 1
 3206 00e0 002B     		cmp	r3, #0
 3207 00e2 05D0     		beq	.L137
ARM GAS  /tmp/ccOBznmR.s 			page 84


1566:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
1567:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 3208              		.loc 1 1567 24
 3209 00e4 7B68     		ldr	r3, [r7, #4]
 3210 00e6 DB6B     		ldr	r3, [r3, #60]
 3211 00e8 43F00802 		orr	r2, r3, #8
 3212 00ec 7B68     		ldr	r3, [r7, #4]
 3213 00ee DA63     		str	r2, [r3, #60]
 3214              	.L137:
1568:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1569:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1570:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/    
1571:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
 3215              		.loc 1 1571 13
 3216 00f0 7B68     		ldr	r3, [r7, #4]
 3217 00f2 DB6B     		ldr	r3, [r3, #60]
 3218              		.loc 1 1571 7
 3219 00f4 002B     		cmp	r3, #0
 3220 00f6 77D0     		beq	.L146
1572:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1573:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
1574:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3221              		.loc 1 1574 21
 3222 00f8 FB69     		ldr	r3, [r7, #28]
 3223 00fa 03F02003 		and	r3, r3, #32
 3224              		.loc 1 1574 9
 3225 00fe 002B     		cmp	r3, #0
 3226 0100 07D0     		beq	.L139
 3227              		.loc 1 1574 60 discriminator 1
 3228 0102 BB69     		ldr	r3, [r7, #24]
 3229 0104 03F02003 		and	r3, r3, #32
 3230              		.loc 1 1574 48 discriminator 1
 3231 0108 002B     		cmp	r3, #0
 3232 010a 02D0     		beq	.L139
1575:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1576:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
 3233              		.loc 1 1576 9
 3234 010c 7868     		ldr	r0, [r7, #4]
 3235 010e FFF7FEFF 		bl	UART_Receive_IT
 3236              	.L139:
1577:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1578:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1579:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1580:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
1581:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 3237              		.loc 1 1581 20
 3238 0112 7B68     		ldr	r3, [r7, #4]
 3239 0114 1B68     		ldr	r3, [r3]
 3240 0116 5B69     		ldr	r3, [r3, #20]
 3241 0118 03F04003 		and	r3, r3, #64
 3242 011c 002B     		cmp	r3, #0
 3243 011e 14BF     		ite	ne
 3244 0120 0123     		movne	r3, #1
 3245 0122 0023     		moveq	r3, #0
 3246 0124 DBB2     		uxtb	r3, r3
 3247              		.loc 1 1581 18
 3248 0126 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccOBznmR.s 			page 85


1582:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 3249              		.loc 1 1582 17
 3250 0128 7B68     		ldr	r3, [r7, #4]
 3251 012a DB6B     		ldr	r3, [r3, #60]
 3252              		.loc 1 1582 29
 3253 012c 03F00803 		and	r3, r3, #8
 3254              		.loc 1 1582 9
 3255 0130 002B     		cmp	r3, #0
 3256 0132 02D1     		bne	.L140
 3257              		.loc 1 1582 61 discriminator 1
 3258 0134 FB68     		ldr	r3, [r7, #12]
 3259 0136 002B     		cmp	r3, #0
 3260 0138 31D0     		beq	.L141
 3261              	.L140:
1583:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1584:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1585:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1586:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1587:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 3262              		.loc 1 1587 9
 3263 013a 7868     		ldr	r0, [r7, #4]
 3264 013c FFF7FEFF 		bl	UART_EndRxTransfer
1588:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
1589:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1590:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3265              		.loc 1 1590 12
 3266 0140 7B68     		ldr	r3, [r7, #4]
 3267 0142 1B68     		ldr	r3, [r3]
 3268 0144 5B69     		ldr	r3, [r3, #20]
 3269 0146 03F04003 		and	r3, r3, #64
 3270              		.loc 1 1590 11
 3271 014a 002B     		cmp	r3, #0
 3272 014c 23D0     		beq	.L142
1591:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1592:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3273              		.loc 1 1592 11
 3274 014e 7B68     		ldr	r3, [r7, #4]
 3275 0150 1B68     		ldr	r3, [r3]
 3276 0152 5A69     		ldr	r2, [r3, #20]
 3277 0154 7B68     		ldr	r3, [r7, #4]
 3278 0156 1B68     		ldr	r3, [r3]
 3279 0158 22F04002 		bic	r2, r2, #64
 3280 015c 5A61     		str	r2, [r3, #20]
1593:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
1594:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1595:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if(huart->hdmarx != NULL)
 3281              		.loc 1 1595 19
 3282 015e 7B68     		ldr	r3, [r7, #4]
 3283 0160 5B6B     		ldr	r3, [r3, #52]
 3284              		.loc 1 1595 13
 3285 0162 002B     		cmp	r3, #0
 3286 0164 13D0     		beq	.L143
1596:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1597:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1598:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1599:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 3287              		.loc 1 1599 18
ARM GAS  /tmp/ccOBznmR.s 			page 86


 3288 0166 7B68     		ldr	r3, [r7, #4]
 3289 0168 5B6B     		ldr	r3, [r3, #52]
 3290              		.loc 1 1599 46
 3291 016a 214A     		ldr	r2, .L148
 3292 016c 1A65     		str	r2, [r3, #80]
1600:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3293              		.loc 1 1600 16
 3294 016e 7B68     		ldr	r3, [r7, #4]
 3295 0170 5B6B     		ldr	r3, [r3, #52]
 3296 0172 1846     		mov	r0, r3
 3297 0174 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3298 0178 0346     		mov	r3, r0
 3299              		.loc 1 1600 15
 3300 017a 002B     		cmp	r3, #0
 3301 017c 16D0     		beq	.L147
1601:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
1602:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
1603:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3302              		.loc 1 1603 20
 3303 017e 7B68     		ldr	r3, [r7, #4]
 3304 0180 5B6B     		ldr	r3, [r3, #52]
 3305              		.loc 1 1603 28
 3306 0182 1B6D     		ldr	r3, [r3, #80]
 3307              		.loc 1 1603 53
 3308 0184 7A68     		ldr	r2, [r7, #4]
 3309 0186 526B     		ldr	r2, [r2, #52]
 3310              		.loc 1 1603 15
 3311 0188 1046     		mov	r0, r2
 3312 018a 9847     		blx	r3
 3313              	.LVL2:
1590:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3314              		.loc 1 1590 11
 3315 018c 0EE0     		b	.L147
 3316              	.L143:
1604:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
1605:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1606:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
1607:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1608:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
1609:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 3317              		.loc 1 1609 13
 3318 018e 7868     		ldr	r0, [r7, #4]
 3319 0190 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1590:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3320              		.loc 1 1590 11
 3321 0194 0AE0     		b	.L147
 3322              	.L142:
1610:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1611:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1612:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1613:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1614:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
1615:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 3323              		.loc 1 1615 11
 3324 0196 7868     		ldr	r0, [r7, #4]
 3325 0198 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1590:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
ARM GAS  /tmp/ccOBznmR.s 			page 87


 3326              		.loc 1 1590 11
 3327 019c 06E0     		b	.L147
 3328              	.L141:
1616:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1617:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1618:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1619:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1620:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1621:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
1622:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 3329              		.loc 1 1622 9
 3330 019e 7868     		ldr	r0, [r7, #4]
 3331 01a0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1623:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3332              		.loc 1 1623 26
 3333 01a4 7B68     		ldr	r3, [r7, #4]
 3334 01a6 0022     		movs	r2, #0
 3335 01a8 DA63     		str	r2, [r3, #60]
1624:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1625:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1626:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3336              		.loc 1 1626 5
 3337 01aa 1DE0     		b	.L146
 3338              	.L147:
1590:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3339              		.loc 1 1590 11
 3340 01ac 00BF     		nop
 3341              		.loc 1 1626 5
 3342 01ae 1BE0     		b	.L146
 3343              	.L132:
1627:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
1628:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1629:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1630:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 3344              		.loc 1 1630 17
 3345 01b0 FB69     		ldr	r3, [r7, #28]
 3346 01b2 03F08003 		and	r3, r3, #128
 3347              		.loc 1 1630 5
 3348 01b6 002B     		cmp	r3, #0
 3349 01b8 08D0     		beq	.L145
 3350              		.loc 1 1630 55 discriminator 1
 3351 01ba BB69     		ldr	r3, [r7, #24]
 3352 01bc 03F08003 		and	r3, r3, #128
 3353              		.loc 1 1630 43 discriminator 1
 3354 01c0 002B     		cmp	r3, #0
 3355 01c2 03D0     		beq	.L145
1631:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1632:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
 3356              		.loc 1 1632 5
 3357 01c4 7868     		ldr	r0, [r7, #4]
 3358 01c6 FFF7FEFF 		bl	UART_Transmit_IT
1633:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3359              		.loc 1 1633 5
 3360 01ca 0EE0     		b	.L129
 3361              	.L145:
1634:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1635:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
ARM GAS  /tmp/ccOBznmR.s 			page 88


1636:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
1637:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 3362              		.loc 1 1637 17
 3363 01cc FB69     		ldr	r3, [r7, #28]
 3364 01ce 03F04003 		and	r3, r3, #64
 3365              		.loc 1 1637 5
 3366 01d2 002B     		cmp	r3, #0
 3367 01d4 09D0     		beq	.L129
 3368              		.loc 1 1637 54 discriminator 1
 3369 01d6 BB69     		ldr	r3, [r7, #24]
 3370 01d8 03F04003 		and	r3, r3, #64
 3371              		.loc 1 1637 42 discriminator 1
 3372 01dc 002B     		cmp	r3, #0
 3373 01de 04D0     		beq	.L129
1638:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1639:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 3374              		.loc 1 1639 5
 3375 01e0 7868     		ldr	r0, [r7, #4]
 3376 01e2 FFF7FEFF 		bl	UART_EndTransmit_IT
1640:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3377              		.loc 1 1640 5
 3378 01e6 00E0     		b	.L129
 3379              	.L146:
1626:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
 3380              		.loc 1 1626 5
 3381 01e8 00BF     		nop
 3382              	.L129:
1641:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1642:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3383              		.loc 1 1642 1
 3384 01ea 2037     		adds	r7, r7, #32
 3385              	.LCFI119:
 3386              		.cfi_def_cfa_offset 8
 3387 01ec BD46     		mov	sp, r7
 3388              	.LCFI120:
 3389              		.cfi_def_cfa_register 13
 3390              		@ sp needed
 3391 01ee 80BD     		pop	{r7, pc}
 3392              	.L149:
 3393              		.align	2
 3394              	.L148:
 3395 01f0 00000000 		.word	UART_DMAAbortOnError
 3396              		.cfi_endproc
 3397              	.LFE148:
 3399              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 3400              		.align	1
 3401              		.weak	HAL_UART_TxCpltCallback
 3402              		.syntax unified
 3403              		.thumb
 3404              		.thumb_func
 3405              		.fpu fpv4-sp-d16
 3407              	HAL_UART_TxCpltCallback:
 3408              	.LFB149:
1643:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1644:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1645:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
1646:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
ARM GAS  /tmp/ccOBznmR.s 			page 89


1647:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1648:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1649:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1650:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1651:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3409              		.loc 1 1651 1
 3410              		.cfi_startproc
 3411              		@ args = 0, pretend = 0, frame = 8
 3412              		@ frame_needed = 1, uses_anonymous_args = 0
 3413              		@ link register save eliminated.
 3414 0000 80B4     		push	{r7}
 3415              	.LCFI121:
 3416              		.cfi_def_cfa_offset 4
 3417              		.cfi_offset 7, -4
 3418 0002 83B0     		sub	sp, sp, #12
 3419              	.LCFI122:
 3420              		.cfi_def_cfa_offset 16
 3421 0004 00AF     		add	r7, sp, #0
 3422              	.LCFI123:
 3423              		.cfi_def_cfa_register 7
 3424 0006 7860     		str	r0, [r7, #4]
1652:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1653:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1654:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1655:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1656:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1657:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3425              		.loc 1 1657 1
 3426 0008 00BF     		nop
 3427 000a 0C37     		adds	r7, r7, #12
 3428              	.LCFI124:
 3429              		.cfi_def_cfa_offset 4
 3430 000c BD46     		mov	sp, r7
 3431              	.LCFI125:
 3432              		.cfi_def_cfa_register 13
 3433              		@ sp needed
 3434 000e 5DF8047B 		ldr	r7, [sp], #4
 3435              	.LCFI126:
 3436              		.cfi_restore 7
 3437              		.cfi_def_cfa_offset 0
 3438 0012 7047     		bx	lr
 3439              		.cfi_endproc
 3440              	.LFE149:
 3442              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 3443              		.align	1
 3444              		.weak	HAL_UART_TxHalfCpltCallback
 3445              		.syntax unified
 3446              		.thumb
 3447              		.thumb_func
 3448              		.fpu fpv4-sp-d16
 3450              	HAL_UART_TxHalfCpltCallback:
 3451              	.LFB150:
1658:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1659:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1660:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1661:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1662:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
ARM GAS  /tmp/ccOBznmR.s 			page 90


1663:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1664:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1665:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1666:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3452              		.loc 1 1666 1
 3453              		.cfi_startproc
 3454              		@ args = 0, pretend = 0, frame = 8
 3455              		@ frame_needed = 1, uses_anonymous_args = 0
 3456              		@ link register save eliminated.
 3457 0000 80B4     		push	{r7}
 3458              	.LCFI127:
 3459              		.cfi_def_cfa_offset 4
 3460              		.cfi_offset 7, -4
 3461 0002 83B0     		sub	sp, sp, #12
 3462              	.LCFI128:
 3463              		.cfi_def_cfa_offset 16
 3464 0004 00AF     		add	r7, sp, #0
 3465              	.LCFI129:
 3466              		.cfi_def_cfa_register 7
 3467 0006 7860     		str	r0, [r7, #4]
1667:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1668:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1669:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1670:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1671:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1672:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3468              		.loc 1 1672 1
 3469 0008 00BF     		nop
 3470 000a 0C37     		adds	r7, r7, #12
 3471              	.LCFI130:
 3472              		.cfi_def_cfa_offset 4
 3473 000c BD46     		mov	sp, r7
 3474              	.LCFI131:
 3475              		.cfi_def_cfa_register 13
 3476              		@ sp needed
 3477 000e 5DF8047B 		ldr	r7, [sp], #4
 3478              	.LCFI132:
 3479              		.cfi_restore 7
 3480              		.cfi_def_cfa_offset 0
 3481 0012 7047     		bx	lr
 3482              		.cfi_endproc
 3483              	.LFE150:
 3485              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3486              		.align	1
 3487              		.weak	HAL_UART_RxCpltCallback
 3488              		.syntax unified
 3489              		.thumb
 3490              		.thumb_func
 3491              		.fpu fpv4-sp-d16
 3493              	HAL_UART_RxCpltCallback:
 3494              	.LFB151:
1673:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1674:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1675:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
1676:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1677:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1678:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccOBznmR.s 			page 91


1679:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1680:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1681:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3495              		.loc 1 1681 1
 3496              		.cfi_startproc
 3497              		@ args = 0, pretend = 0, frame = 8
 3498              		@ frame_needed = 1, uses_anonymous_args = 0
 3499              		@ link register save eliminated.
 3500 0000 80B4     		push	{r7}
 3501              	.LCFI133:
 3502              		.cfi_def_cfa_offset 4
 3503              		.cfi_offset 7, -4
 3504 0002 83B0     		sub	sp, sp, #12
 3505              	.LCFI134:
 3506              		.cfi_def_cfa_offset 16
 3507 0004 00AF     		add	r7, sp, #0
 3508              	.LCFI135:
 3509              		.cfi_def_cfa_register 7
 3510 0006 7860     		str	r0, [r7, #4]
1682:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1683:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1684:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1685:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1686:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1687:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3511              		.loc 1 1687 1
 3512 0008 00BF     		nop
 3513 000a 0C37     		adds	r7, r7, #12
 3514              	.LCFI136:
 3515              		.cfi_def_cfa_offset 4
 3516 000c BD46     		mov	sp, r7
 3517              	.LCFI137:
 3518              		.cfi_def_cfa_register 13
 3519              		@ sp needed
 3520 000e 5DF8047B 		ldr	r7, [sp], #4
 3521              	.LCFI138:
 3522              		.cfi_restore 7
 3523              		.cfi_def_cfa_offset 0
 3524 0012 7047     		bx	lr
 3525              		.cfi_endproc
 3526              	.LFE151:
 3528              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 3529              		.align	1
 3530              		.weak	HAL_UART_RxHalfCpltCallback
 3531              		.syntax unified
 3532              		.thumb
 3533              		.thumb_func
 3534              		.fpu fpv4-sp-d16
 3536              	HAL_UART_RxHalfCpltCallback:
 3537              	.LFB152:
1688:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1689:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1690:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1691:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1692:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1693:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1694:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccOBznmR.s 			page 92


1695:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1696:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3538              		.loc 1 1696 1
 3539              		.cfi_startproc
 3540              		@ args = 0, pretend = 0, frame = 8
 3541              		@ frame_needed = 1, uses_anonymous_args = 0
 3542              		@ link register save eliminated.
 3543 0000 80B4     		push	{r7}
 3544              	.LCFI139:
 3545              		.cfi_def_cfa_offset 4
 3546              		.cfi_offset 7, -4
 3547 0002 83B0     		sub	sp, sp, #12
 3548              	.LCFI140:
 3549              		.cfi_def_cfa_offset 16
 3550 0004 00AF     		add	r7, sp, #0
 3551              	.LCFI141:
 3552              		.cfi_def_cfa_register 7
 3553 0006 7860     		str	r0, [r7, #4]
1697:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1698:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1699:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1700:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1701:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1702:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3554              		.loc 1 1702 1
 3555 0008 00BF     		nop
 3556 000a 0C37     		adds	r7, r7, #12
 3557              	.LCFI142:
 3558              		.cfi_def_cfa_offset 4
 3559 000c BD46     		mov	sp, r7
 3560              	.LCFI143:
 3561              		.cfi_def_cfa_register 13
 3562              		@ sp needed
 3563 000e 5DF8047B 		ldr	r7, [sp], #4
 3564              	.LCFI144:
 3565              		.cfi_restore 7
 3566              		.cfi_def_cfa_offset 0
 3567 0012 7047     		bx	lr
 3568              		.cfi_endproc
 3569              	.LFE152:
 3571              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 3572              		.align	1
 3573              		.weak	HAL_UART_ErrorCallback
 3574              		.syntax unified
 3575              		.thumb
 3576              		.thumb_func
 3577              		.fpu fpv4-sp-d16
 3579              	HAL_UART_ErrorCallback:
 3580              	.LFB153:
1703:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1704:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1705:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
1706:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1707:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1708:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1709:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1710:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccOBznmR.s 			page 93


1711:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3581              		.loc 1 1711 1
 3582              		.cfi_startproc
 3583              		@ args = 0, pretend = 0, frame = 8
 3584              		@ frame_needed = 1, uses_anonymous_args = 0
 3585              		@ link register save eliminated.
 3586 0000 80B4     		push	{r7}
 3587              	.LCFI145:
 3588              		.cfi_def_cfa_offset 4
 3589              		.cfi_offset 7, -4
 3590 0002 83B0     		sub	sp, sp, #12
 3591              	.LCFI146:
 3592              		.cfi_def_cfa_offset 16
 3593 0004 00AF     		add	r7, sp, #0
 3594              	.LCFI147:
 3595              		.cfi_def_cfa_register 7
 3596 0006 7860     		str	r0, [r7, #4]
1712:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1713:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart); 
1714:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1715:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
1716:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1717:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3597              		.loc 1 1717 1
 3598 0008 00BF     		nop
 3599 000a 0C37     		adds	r7, r7, #12
 3600              	.LCFI148:
 3601              		.cfi_def_cfa_offset 4
 3602 000c BD46     		mov	sp, r7
 3603              	.LCFI149:
 3604              		.cfi_def_cfa_register 13
 3605              		@ sp needed
 3606 000e 5DF8047B 		ldr	r7, [sp], #4
 3607              	.LCFI150:
 3608              		.cfi_restore 7
 3609              		.cfi_def_cfa_offset 0
 3610 0012 7047     		bx	lr
 3611              		.cfi_endproc
 3612              	.LFE153:
 3614              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3615              		.align	1
 3616              		.weak	HAL_UART_AbortCpltCallback
 3617              		.syntax unified
 3618              		.thumb
 3619              		.thumb_func
 3620              		.fpu fpv4-sp-d16
 3622              	HAL_UART_AbortCpltCallback:
 3623              	.LFB154:
1718:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1719:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1720:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1721:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1722:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1723:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1724:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1725:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3624              		.loc 1 1725 1
ARM GAS  /tmp/ccOBznmR.s 			page 94


 3625              		.cfi_startproc
 3626              		@ args = 0, pretend = 0, frame = 8
 3627              		@ frame_needed = 1, uses_anonymous_args = 0
 3628              		@ link register save eliminated.
 3629 0000 80B4     		push	{r7}
 3630              	.LCFI151:
 3631              		.cfi_def_cfa_offset 4
 3632              		.cfi_offset 7, -4
 3633 0002 83B0     		sub	sp, sp, #12
 3634              	.LCFI152:
 3635              		.cfi_def_cfa_offset 16
 3636 0004 00AF     		add	r7, sp, #0
 3637              	.LCFI153:
 3638              		.cfi_def_cfa_register 7
 3639 0006 7860     		str	r0, [r7, #4]
1726:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1727:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1728:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1729:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1730:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1731:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1732:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3640              		.loc 1 1732 1
 3641 0008 00BF     		nop
 3642 000a 0C37     		adds	r7, r7, #12
 3643              	.LCFI154:
 3644              		.cfi_def_cfa_offset 4
 3645 000c BD46     		mov	sp, r7
 3646              	.LCFI155:
 3647              		.cfi_def_cfa_register 13
 3648              		@ sp needed
 3649 000e 5DF8047B 		ldr	r7, [sp], #4
 3650              	.LCFI156:
 3651              		.cfi_restore 7
 3652              		.cfi_def_cfa_offset 0
 3653 0012 7047     		bx	lr
 3654              		.cfi_endproc
 3655              	.LFE154:
 3657              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3658              		.align	1
 3659              		.weak	HAL_UART_AbortTransmitCpltCallback
 3660              		.syntax unified
 3661              		.thumb
 3662              		.thumb_func
 3663              		.fpu fpv4-sp-d16
 3665              	HAL_UART_AbortTransmitCpltCallback:
 3666              	.LFB155:
1733:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1734:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1735:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1736:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1737:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1738:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1739:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3667              		.loc 1 1739 1
 3668              		.cfi_startproc
 3669              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccOBznmR.s 			page 95


 3670              		@ frame_needed = 1, uses_anonymous_args = 0
 3671              		@ link register save eliminated.
 3672 0000 80B4     		push	{r7}
 3673              	.LCFI157:
 3674              		.cfi_def_cfa_offset 4
 3675              		.cfi_offset 7, -4
 3676 0002 83B0     		sub	sp, sp, #12
 3677              	.LCFI158:
 3678              		.cfi_def_cfa_offset 16
 3679 0004 00AF     		add	r7, sp, #0
 3680              	.LCFI159:
 3681              		.cfi_def_cfa_register 7
 3682 0006 7860     		str	r0, [r7, #4]
1740:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1741:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1742:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1743:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1744:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1745:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1746:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3683              		.loc 1 1746 1
 3684 0008 00BF     		nop
 3685 000a 0C37     		adds	r7, r7, #12
 3686              	.LCFI160:
 3687              		.cfi_def_cfa_offset 4
 3688 000c BD46     		mov	sp, r7
 3689              	.LCFI161:
 3690              		.cfi_def_cfa_register 13
 3691              		@ sp needed
 3692 000e 5DF8047B 		ldr	r7, [sp], #4
 3693              	.LCFI162:
 3694              		.cfi_restore 7
 3695              		.cfi_def_cfa_offset 0
 3696 0012 7047     		bx	lr
 3697              		.cfi_endproc
 3698              	.LFE155:
 3700              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3701              		.align	1
 3702              		.weak	HAL_UART_AbortReceiveCpltCallback
 3703              		.syntax unified
 3704              		.thumb
 3705              		.thumb_func
 3706              		.fpu fpv4-sp-d16
 3708              	HAL_UART_AbortReceiveCpltCallback:
 3709              	.LFB156:
1747:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1748:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1749:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1750:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1751:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1752:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1753:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1754:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3710              		.loc 1 1754 1
 3711              		.cfi_startproc
 3712              		@ args = 0, pretend = 0, frame = 8
 3713              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccOBznmR.s 			page 96


 3714              		@ link register save eliminated.
 3715 0000 80B4     		push	{r7}
 3716              	.LCFI163:
 3717              		.cfi_def_cfa_offset 4
 3718              		.cfi_offset 7, -4
 3719 0002 83B0     		sub	sp, sp, #12
 3720              	.LCFI164:
 3721              		.cfi_def_cfa_offset 16
 3722 0004 00AF     		add	r7, sp, #0
 3723              	.LCFI165:
 3724              		.cfi_def_cfa_register 7
 3725 0006 7860     		str	r0, [r7, #4]
1755:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1756:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1757:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1758:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1759:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1760:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1761:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3726              		.loc 1 1761 1
 3727 0008 00BF     		nop
 3728 000a 0C37     		adds	r7, r7, #12
 3729              	.LCFI166:
 3730              		.cfi_def_cfa_offset 4
 3731 000c BD46     		mov	sp, r7
 3732              	.LCFI167:
 3733              		.cfi_def_cfa_register 13
 3734              		@ sp needed
 3735 000e 5DF8047B 		ldr	r7, [sp], #4
 3736              	.LCFI168:
 3737              		.cfi_restore 7
 3738              		.cfi_def_cfa_offset 0
 3739 0012 7047     		bx	lr
 3740              		.cfi_endproc
 3741              	.LFE156:
 3743              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3744              		.align	1
 3745              		.global	HAL_LIN_SendBreak
 3746              		.syntax unified
 3747              		.thumb
 3748              		.thumb_func
 3749              		.fpu fpv4-sp-d16
 3751              	HAL_LIN_SendBreak:
 3752              	.LFB157:
1762:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1763:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1764:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1765:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1766:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1767:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions 
1768:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions 
1769:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1770:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
1771:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
1772:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1773:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
1774:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
ARM GAS  /tmp/ccOBznmR.s 			page 97


1775:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
1776:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
1777:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode. 
1778:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
1779:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1780:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1781:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1782:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1783:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1784:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1785:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
1786:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1787:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1788:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1789:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1790:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
1791:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3753              		.loc 1 1791 1
 3754              		.cfi_startproc
 3755              		@ args = 0, pretend = 0, frame = 8
 3756              		@ frame_needed = 1, uses_anonymous_args = 0
 3757              		@ link register save eliminated.
 3758 0000 80B4     		push	{r7}
 3759              	.LCFI169:
 3760              		.cfi_def_cfa_offset 4
 3761              		.cfi_offset 7, -4
 3762 0002 83B0     		sub	sp, sp, #12
 3763              	.LCFI170:
 3764              		.cfi_def_cfa_offset 16
 3765 0004 00AF     		add	r7, sp, #0
 3766              	.LCFI171:
 3767              		.cfi_def_cfa_register 7
 3768 0006 7860     		str	r0, [r7, #4]
1792:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1793:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1794:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1795:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1796:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3769              		.loc 1 1796 3
 3770 0008 7B68     		ldr	r3, [r7, #4]
 3771 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 3772 000e 012B     		cmp	r3, #1
 3773 0010 01D1     		bne	.L159
 3774              		.loc 1 1796 3 is_stmt 0 discriminator 1
 3775 0012 0223     		movs	r3, #2
 3776 0014 18E0     		b	.L160
 3777              	.L159:
 3778              		.loc 1 1796 3 discriminator 2
 3779 0016 7B68     		ldr	r3, [r7, #4]
 3780 0018 0122     		movs	r2, #1
 3781 001a 83F83820 		strb	r2, [r3, #56]
1797:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1798:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3782              		.loc 1 1798 17 is_stmt 1 discriminator 2
 3783 001e 7B68     		ldr	r3, [r7, #4]
 3784 0020 2422     		movs	r2, #36
 3785 0022 83F83920 		strb	r2, [r3, #57]
ARM GAS  /tmp/ccOBznmR.s 			page 98


1799:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1800:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
1801:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
 3786              		.loc 1 1801 3 discriminator 2
 3787 0026 7B68     		ldr	r3, [r7, #4]
 3788 0028 1B68     		ldr	r3, [r3]
 3789 002a DA68     		ldr	r2, [r3, #12]
 3790 002c 7B68     		ldr	r3, [r7, #4]
 3791 002e 1B68     		ldr	r3, [r3]
 3792 0030 42F00102 		orr	r2, r2, #1
 3793 0034 DA60     		str	r2, [r3, #12]
1802:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
1803:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3794              		.loc 1 1803 17 discriminator 2
 3795 0036 7B68     		ldr	r3, [r7, #4]
 3796 0038 2022     		movs	r2, #32
 3797 003a 83F83920 		strb	r2, [r3, #57]
1804:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1805:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1806:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3798              		.loc 1 1806 3 discriminator 2
 3799 003e 7B68     		ldr	r3, [r7, #4]
 3800 0040 0022     		movs	r2, #0
 3801 0042 83F83820 		strb	r2, [r3, #56]
1807:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1808:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
 3802              		.loc 1 1808 10 discriminator 2
 3803 0046 0023     		movs	r3, #0
 3804              	.L160:
1809:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3805              		.loc 1 1809 1
 3806 0048 1846     		mov	r0, r3
 3807 004a 0C37     		adds	r7, r7, #12
 3808              	.LCFI172:
 3809              		.cfi_def_cfa_offset 4
 3810 004c BD46     		mov	sp, r7
 3811              	.LCFI173:
 3812              		.cfi_def_cfa_register 13
 3813              		@ sp needed
 3814 004e 5DF8047B 		ldr	r7, [sp], #4
 3815              	.LCFI174:
 3816              		.cfi_restore 7
 3817              		.cfi_def_cfa_offset 0
 3818 0052 7047     		bx	lr
 3819              		.cfi_endproc
 3820              	.LFE157:
 3822              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3823              		.align	1
 3824              		.global	HAL_MultiProcessor_EnterMuteMode
 3825              		.syntax unified
 3826              		.thumb
 3827              		.thumb_func
 3828              		.fpu fpv4-sp-d16
 3830              	HAL_MultiProcessor_EnterMuteMode:
 3831              	.LFB158:
1810:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1811:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  /tmp/ccOBznmR.s 			page 99


1812:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode. 
1813:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1814:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1815:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1816:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1817:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1818:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3832              		.loc 1 1818 1
 3833              		.cfi_startproc
 3834              		@ args = 0, pretend = 0, frame = 8
 3835              		@ frame_needed = 1, uses_anonymous_args = 0
 3836              		@ link register save eliminated.
 3837 0000 80B4     		push	{r7}
 3838              	.LCFI175:
 3839              		.cfi_def_cfa_offset 4
 3840              		.cfi_offset 7, -4
 3841 0002 83B0     		sub	sp, sp, #12
 3842              	.LCFI176:
 3843              		.cfi_def_cfa_offset 16
 3844 0004 00AF     		add	r7, sp, #0
 3845              	.LCFI177:
 3846              		.cfi_def_cfa_register 7
 3847 0006 7860     		str	r0, [r7, #4]
1819:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1820:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1821:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1822:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1823:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3848              		.loc 1 1823 3
 3849 0008 7B68     		ldr	r3, [r7, #4]
 3850 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 3851 000e 012B     		cmp	r3, #1
 3852 0010 01D1     		bne	.L162
 3853              		.loc 1 1823 3 is_stmt 0 discriminator 1
 3854 0012 0223     		movs	r3, #2
 3855 0014 18E0     		b	.L163
 3856              	.L162:
 3857              		.loc 1 1823 3 discriminator 2
 3858 0016 7B68     		ldr	r3, [r7, #4]
 3859 0018 0122     		movs	r2, #1
 3860 001a 83F83820 		strb	r2, [r3, #56]
1824:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1825:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3861              		.loc 1 1825 17 is_stmt 1 discriminator 2
 3862 001e 7B68     		ldr	r3, [r7, #4]
 3863 0020 2422     		movs	r2, #36
 3864 0022 83F83920 		strb	r2, [r3, #57]
1826:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1827:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
1828:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
 3865              		.loc 1 1828 3 discriminator 2
 3866 0026 7B68     		ldr	r3, [r7, #4]
 3867 0028 1B68     		ldr	r3, [r3]
 3868 002a DA68     		ldr	r2, [r3, #12]
 3869 002c 7B68     		ldr	r3, [r7, #4]
 3870 002e 1B68     		ldr	r3, [r3]
 3871 0030 42F00202 		orr	r2, r2, #2
ARM GAS  /tmp/ccOBznmR.s 			page 100


 3872 0034 DA60     		str	r2, [r3, #12]
1829:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1830:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3873              		.loc 1 1830 17 discriminator 2
 3874 0036 7B68     		ldr	r3, [r7, #4]
 3875 0038 2022     		movs	r2, #32
 3876 003a 83F83920 		strb	r2, [r3, #57]
1831:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1832:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1833:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3877              		.loc 1 1833 3 discriminator 2
 3878 003e 7B68     		ldr	r3, [r7, #4]
 3879 0040 0022     		movs	r2, #0
 3880 0042 83F83820 		strb	r2, [r3, #56]
1834:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1835:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
 3881              		.loc 1 1835 10 discriminator 2
 3882 0046 0023     		movs	r3, #0
 3883              	.L163:
1836:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3884              		.loc 1 1836 1
 3885 0048 1846     		mov	r0, r3
 3886 004a 0C37     		adds	r7, r7, #12
 3887              	.LCFI178:
 3888              		.cfi_def_cfa_offset 4
 3889 004c BD46     		mov	sp, r7
 3890              	.LCFI179:
 3891              		.cfi_def_cfa_register 13
 3892              		@ sp needed
 3893 004e 5DF8047B 		ldr	r7, [sp], #4
 3894              	.LCFI180:
 3895              		.cfi_restore 7
 3896              		.cfi_def_cfa_offset 0
 3897 0052 7047     		bx	lr
 3898              		.cfi_endproc
 3899              	.LFE158:
 3901              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 3902              		.align	1
 3903              		.global	HAL_MultiProcessor_ExitMuteMode
 3904              		.syntax unified
 3905              		.thumb
 3906              		.thumb_func
 3907              		.fpu fpv4-sp-d16
 3909              	HAL_MultiProcessor_ExitMuteMode:
 3910              	.LFB159:
1837:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1838:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1839:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software. 
1840:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1841:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1842:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1843:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1844:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
1845:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3911              		.loc 1 1845 1
 3912              		.cfi_startproc
 3913              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccOBznmR.s 			page 101


 3914              		@ frame_needed = 1, uses_anonymous_args = 0
 3915              		@ link register save eliminated.
 3916 0000 80B4     		push	{r7}
 3917              	.LCFI181:
 3918              		.cfi_def_cfa_offset 4
 3919              		.cfi_offset 7, -4
 3920 0002 83B0     		sub	sp, sp, #12
 3921              	.LCFI182:
 3922              		.cfi_def_cfa_offset 16
 3923 0004 00AF     		add	r7, sp, #0
 3924              	.LCFI183:
 3925              		.cfi_def_cfa_register 7
 3926 0006 7860     		str	r0, [r7, #4]
1846:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1847:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1848:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1849:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1850:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3927              		.loc 1 1850 3
 3928 0008 7B68     		ldr	r3, [r7, #4]
 3929 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 3930 000e 012B     		cmp	r3, #1
 3931 0010 01D1     		bne	.L165
 3932              		.loc 1 1850 3 is_stmt 0 discriminator 1
 3933 0012 0223     		movs	r3, #2
 3934 0014 18E0     		b	.L166
 3935              	.L165:
 3936              		.loc 1 1850 3 discriminator 2
 3937 0016 7B68     		ldr	r3, [r7, #4]
 3938 0018 0122     		movs	r2, #1
 3939 001a 83F83820 		strb	r2, [r3, #56]
1851:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1852:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3940              		.loc 1 1852 17 is_stmt 1 discriminator 2
 3941 001e 7B68     		ldr	r3, [r7, #4]
 3942 0020 2422     		movs	r2, #36
 3943 0022 83F83920 		strb	r2, [r3, #57]
1853:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1854:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
1855:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
 3944              		.loc 1 1855 3 discriminator 2
 3945 0026 7B68     		ldr	r3, [r7, #4]
 3946 0028 1B68     		ldr	r3, [r3]
 3947 002a DA68     		ldr	r2, [r3, #12]
 3948 002c 7B68     		ldr	r3, [r7, #4]
 3949 002e 1B68     		ldr	r3, [r3]
 3950 0030 22F00202 		bic	r2, r2, #2
 3951 0034 DA60     		str	r2, [r3, #12]
1856:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1857:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3952              		.loc 1 1857 17 discriminator 2
 3953 0036 7B68     		ldr	r3, [r7, #4]
 3954 0038 2022     		movs	r2, #32
 3955 003a 83F83920 		strb	r2, [r3, #57]
1858:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1859:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1860:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
ARM GAS  /tmp/ccOBznmR.s 			page 102


 3956              		.loc 1 1860 3 discriminator 2
 3957 003e 7B68     		ldr	r3, [r7, #4]
 3958 0040 0022     		movs	r2, #0
 3959 0042 83F83820 		strb	r2, [r3, #56]
1861:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1862:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
 3960              		.loc 1 1862 10 discriminator 2
 3961 0046 0023     		movs	r3, #0
 3962              	.L166:
1863:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3963              		.loc 1 1863 1
 3964 0048 1846     		mov	r0, r3
 3965 004a 0C37     		adds	r7, r7, #12
 3966              	.LCFI184:
 3967              		.cfi_def_cfa_offset 4
 3968 004c BD46     		mov	sp, r7
 3969              	.LCFI185:
 3970              		.cfi_def_cfa_register 13
 3971              		@ sp needed
 3972 004e 5DF8047B 		ldr	r7, [sp], #4
 3973              	.LCFI186:
 3974              		.cfi_restore 7
 3975              		.cfi_def_cfa_offset 0
 3976 0052 7047     		bx	lr
 3977              		.cfi_endproc
 3978              	.LFE159:
 3980              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3981              		.align	1
 3982              		.global	HAL_HalfDuplex_EnableTransmitter
 3983              		.syntax unified
 3984              		.thumb
 3985              		.thumb_func
 3986              		.fpu fpv4-sp-d16
 3988              	HAL_HalfDuplex_EnableTransmitter:
 3989              	.LFB160:
1864:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1865:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1866:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
1867:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1868:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1869:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1870:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1871:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1872:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3990              		.loc 1 1872 1
 3991              		.cfi_startproc
 3992              		@ args = 0, pretend = 0, frame = 16
 3993              		@ frame_needed = 1, uses_anonymous_args = 0
 3994              		@ link register save eliminated.
 3995 0000 80B4     		push	{r7}
 3996              	.LCFI187:
 3997              		.cfi_def_cfa_offset 4
 3998              		.cfi_offset 7, -4
 3999 0002 85B0     		sub	sp, sp, #20
 4000              	.LCFI188:
 4001              		.cfi_def_cfa_offset 24
 4002 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccOBznmR.s 			page 103


 4003              	.LCFI189:
 4004              		.cfi_def_cfa_register 7
 4005 0006 7860     		str	r0, [r7, #4]
1873:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4006              		.loc 1 1873 12
 4007 0008 0023     		movs	r3, #0
 4008 000a FB60     		str	r3, [r7, #12]
1874:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1875:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1876:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4009              		.loc 1 1876 3
 4010 000c 7B68     		ldr	r3, [r7, #4]
 4011 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 4012 0012 012B     		cmp	r3, #1
 4013 0014 01D1     		bne	.L168
 4014              		.loc 1 1876 3 is_stmt 0 discriminator 1
 4015 0016 0223     		movs	r3, #2
 4016 0018 20E0     		b	.L169
 4017              	.L168:
 4018              		.loc 1 1876 3 discriminator 2
 4019 001a 7B68     		ldr	r3, [r7, #4]
 4020 001c 0122     		movs	r2, #1
 4021 001e 83F83820 		strb	r2, [r3, #56]
1877:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1878:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4022              		.loc 1 1878 17 is_stmt 1 discriminator 2
 4023 0022 7B68     		ldr	r3, [r7, #4]
 4024 0024 2422     		movs	r2, #36
 4025 0026 83F83920 		strb	r2, [r3, #57]
1879:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1880:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1881:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 4026              		.loc 1 1881 17 discriminator 2
 4027 002a 7B68     		ldr	r3, [r7, #4]
 4028 002c 1B68     		ldr	r3, [r3]
 4029              		.loc 1 1881 10 discriminator 2
 4030 002e DB68     		ldr	r3, [r3, #12]
 4031 0030 FB60     		str	r3, [r7, #12]
1882:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1883:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
1884:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 4032              		.loc 1 1884 10 discriminator 2
 4033 0032 FB68     		ldr	r3, [r7, #12]
 4034 0034 23F00C03 		bic	r3, r3, #12
 4035 0038 FB60     		str	r3, [r7, #12]
1885:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1886:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1887:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
 4036              		.loc 1 1887 10 discriminator 2
 4037 003a FB68     		ldr	r3, [r7, #12]
 4038 003c 43F00803 		orr	r3, r3, #8
 4039 0040 FB60     		str	r3, [r7, #12]
1888:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1889:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
1890:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 4040              		.loc 1 1890 3 discriminator 2
 4041 0042 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccOBznmR.s 			page 104


 4042 0044 1B68     		ldr	r3, [r3]
 4043 0046 FA68     		ldr	r2, [r7, #12]
 4044 0048 DA60     		str	r2, [r3, #12]
1891:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
1892:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4045              		.loc 1 1892 17 discriminator 2
 4046 004a 7B68     		ldr	r3, [r7, #4]
 4047 004c 2022     		movs	r2, #32
 4048 004e 83F83920 		strb	r2, [r3, #57]
1893:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1894:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1895:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4049              		.loc 1 1895 3 discriminator 2
 4050 0052 7B68     		ldr	r3, [r7, #4]
 4051 0054 0022     		movs	r2, #0
 4052 0056 83F83820 		strb	r2, [r3, #56]
1896:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1897:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
 4053              		.loc 1 1897 10 discriminator 2
 4054 005a 0023     		movs	r3, #0
 4055              	.L169:
1898:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4056              		.loc 1 1898 1
 4057 005c 1846     		mov	r0, r3
 4058 005e 1437     		adds	r7, r7, #20
 4059              	.LCFI190:
 4060              		.cfi_def_cfa_offset 4
 4061 0060 BD46     		mov	sp, r7
 4062              	.LCFI191:
 4063              		.cfi_def_cfa_register 13
 4064              		@ sp needed
 4065 0062 5DF8047B 		ldr	r7, [sp], #4
 4066              	.LCFI192:
 4067              		.cfi_restore 7
 4068              		.cfi_def_cfa_offset 0
 4069 0066 7047     		bx	lr
 4070              		.cfi_endproc
 4071              	.LFE160:
 4073              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4074              		.align	1
 4075              		.global	HAL_HalfDuplex_EnableReceiver
 4076              		.syntax unified
 4077              		.thumb
 4078              		.thumb_func
 4079              		.fpu fpv4-sp-d16
 4081              	HAL_HalfDuplex_EnableReceiver:
 4082              	.LFB161:
1899:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1900:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1901:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
1902:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1903:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1904:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1905:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1906:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1907:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4083              		.loc 1 1907 1
ARM GAS  /tmp/ccOBznmR.s 			page 105


 4084              		.cfi_startproc
 4085              		@ args = 0, pretend = 0, frame = 16
 4086              		@ frame_needed = 1, uses_anonymous_args = 0
 4087              		@ link register save eliminated.
 4088 0000 80B4     		push	{r7}
 4089              	.LCFI193:
 4090              		.cfi_def_cfa_offset 4
 4091              		.cfi_offset 7, -4
 4092 0002 85B0     		sub	sp, sp, #20
 4093              	.LCFI194:
 4094              		.cfi_def_cfa_offset 24
 4095 0004 00AF     		add	r7, sp, #0
 4096              	.LCFI195:
 4097              		.cfi_def_cfa_register 7
 4098 0006 7860     		str	r0, [r7, #4]
1908:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4099              		.loc 1 1908 12
 4100 0008 0023     		movs	r3, #0
 4101 000a FB60     		str	r3, [r7, #12]
1909:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1910:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1911:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4102              		.loc 1 1911 3
 4103 000c 7B68     		ldr	r3, [r7, #4]
 4104 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 4105 0012 012B     		cmp	r3, #1
 4106 0014 01D1     		bne	.L171
 4107              		.loc 1 1911 3 is_stmt 0 discriminator 1
 4108 0016 0223     		movs	r3, #2
 4109 0018 20E0     		b	.L172
 4110              	.L171:
 4111              		.loc 1 1911 3 discriminator 2
 4112 001a 7B68     		ldr	r3, [r7, #4]
 4113 001c 0122     		movs	r2, #1
 4114 001e 83F83820 		strb	r2, [r3, #56]
1912:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1913:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4115              		.loc 1 1913 17 is_stmt 1 discriminator 2
 4116 0022 7B68     		ldr	r3, [r7, #4]
 4117 0024 2422     		movs	r2, #36
 4118 0026 83F83920 		strb	r2, [r3, #57]
1914:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1915:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1916:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 4119              		.loc 1 1916 17 discriminator 2
 4120 002a 7B68     		ldr	r3, [r7, #4]
 4121 002c 1B68     		ldr	r3, [r3]
 4122              		.loc 1 1916 10 discriminator 2
 4123 002e DB68     		ldr	r3, [r3, #12]
 4124 0030 FB60     		str	r3, [r7, #12]
1917:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1918:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
1919:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 4125              		.loc 1 1919 10 discriminator 2
 4126 0032 FB68     		ldr	r3, [r7, #12]
 4127 0034 23F00C03 		bic	r3, r3, #12
 4128 0038 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccOBznmR.s 			page 106


1920:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1921:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1922:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
 4129              		.loc 1 1922 10 discriminator 2
 4130 003a FB68     		ldr	r3, [r7, #12]
 4131 003c 43F00403 		orr	r3, r3, #4
 4132 0040 FB60     		str	r3, [r7, #12]
1923:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1924:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
1925:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 4133              		.loc 1 1925 3 discriminator 2
 4134 0042 7B68     		ldr	r3, [r7, #4]
 4135 0044 1B68     		ldr	r3, [r3]
 4136 0046 FA68     		ldr	r2, [r7, #12]
 4137 0048 DA60     		str	r2, [r3, #12]
1926:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1927:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4138              		.loc 1 1927 17 discriminator 2
 4139 004a 7B68     		ldr	r3, [r7, #4]
 4140 004c 2022     		movs	r2, #32
 4141 004e 83F83920 		strb	r2, [r3, #57]
1928:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1929:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1930:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4142              		.loc 1 1930 3 discriminator 2
 4143 0052 7B68     		ldr	r3, [r7, #4]
 4144 0054 0022     		movs	r2, #0
 4145 0056 83F83820 		strb	r2, [r3, #56]
1931:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1932:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
 4146              		.loc 1 1932 10 discriminator 2
 4147 005a 0023     		movs	r3, #0
 4148              	.L172:
1933:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4149              		.loc 1 1933 1
 4150 005c 1846     		mov	r0, r3
 4151 005e 1437     		adds	r7, r7, #20
 4152              	.LCFI196:
 4153              		.cfi_def_cfa_offset 4
 4154 0060 BD46     		mov	sp, r7
 4155              	.LCFI197:
 4156              		.cfi_def_cfa_register 13
 4157              		@ sp needed
 4158 0062 5DF8047B 		ldr	r7, [sp], #4
 4159              	.LCFI198:
 4160              		.cfi_restore 7
 4161              		.cfi_def_cfa_offset 0
 4162 0066 7047     		bx	lr
 4163              		.cfi_endproc
 4164              	.LFE161:
 4166              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4167              		.align	1
 4168              		.global	HAL_UART_GetState
 4169              		.syntax unified
 4170              		.thumb
 4171              		.thumb_func
 4172              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccOBznmR.s 			page 107


 4174              	HAL_UART_GetState:
 4175              	.LFB162:
1934:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1935:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1936:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1937:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1938:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1939:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions 
1940:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions 
1941:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1942:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
1943:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
1944:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
1945:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
1946:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
1947:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of 
1948:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication 
1949:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
1950:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
1951:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication. 
1952:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1953:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1954:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1955:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1956:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1957:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1958:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
1959:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1960:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1961:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
1962:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1963:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1964:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4176              		.loc 1 1964 1
 4177              		.cfi_startproc
 4178              		@ args = 0, pretend = 0, frame = 16
 4179              		@ frame_needed = 1, uses_anonymous_args = 0
 4180              		@ link register save eliminated.
 4181 0000 80B4     		push	{r7}
 4182              	.LCFI199:
 4183              		.cfi_def_cfa_offset 4
 4184              		.cfi_offset 7, -4
 4185 0002 85B0     		sub	sp, sp, #20
 4186              	.LCFI200:
 4187              		.cfi_def_cfa_offset 24
 4188 0004 00AF     		add	r7, sp, #0
 4189              	.LCFI201:
 4190              		.cfi_def_cfa_register 7
 4191 0006 7860     		str	r0, [r7, #4]
1965:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 4192              		.loc 1 1965 12
 4193 0008 0023     		movs	r3, #0
 4194 000a FB60     		str	r3, [r7, #12]
 4195              		.loc 1 1965 26
 4196 000c 0023     		movs	r3, #0
 4197 000e BB60     		str	r3, [r7, #8]
1966:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
ARM GAS  /tmp/ccOBznmR.s 			page 108


 4198              		.loc 1 1966 16
 4199 0010 7B68     		ldr	r3, [r7, #4]
 4200 0012 93F83930 		ldrb	r3, [r3, #57]
 4201 0016 DBB2     		uxtb	r3, r3
 4202              		.loc 1 1966 9
 4203 0018 FB60     		str	r3, [r7, #12]
1967:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 4204              		.loc 1 1967 16
 4205 001a 7B68     		ldr	r3, [r7, #4]
 4206 001c 93F83A30 		ldrb	r3, [r3, #58]
 4207 0020 DBB2     		uxtb	r3, r3
 4208              		.loc 1 1967 9
 4209 0022 BB60     		str	r3, [r7, #8]
1968:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1969:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 4210              		.loc 1 1969 10
 4211 0024 FB68     		ldr	r3, [r7, #12]
 4212 0026 DAB2     		uxtb	r2, r3
 4213 0028 BB68     		ldr	r3, [r7, #8]
 4214 002a DBB2     		uxtb	r3, r3
 4215 002c 1343     		orrs	r3, r3, r2
 4216 002e DBB2     		uxtb	r3, r3
1970:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4217              		.loc 1 1970 1
 4218 0030 1846     		mov	r0, r3
 4219 0032 1437     		adds	r7, r7, #20
 4220              	.LCFI202:
 4221              		.cfi_def_cfa_offset 4
 4222 0034 BD46     		mov	sp, r7
 4223              	.LCFI203:
 4224              		.cfi_def_cfa_register 13
 4225              		@ sp needed
 4226 0036 5DF8047B 		ldr	r7, [sp], #4
 4227              	.LCFI204:
 4228              		.cfi_restore 7
 4229              		.cfi_def_cfa_offset 0
 4230 003a 7047     		bx	lr
 4231              		.cfi_endproc
 4232              	.LFE162:
 4234              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4235              		.align	1
 4236              		.global	HAL_UART_GetError
 4237              		.syntax unified
 4238              		.thumb
 4239              		.thumb_func
 4240              		.fpu fpv4-sp-d16
 4242              	HAL_UART_GetError:
 4243              	.LFB163:
1971:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1972:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1973:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
1974:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  pointer to a UART_HandleTypeDef structure that contains
1975:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *              the configuration information for the specified UART.
1976:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
1977:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1978:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1979:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  /tmp/ccOBznmR.s 			page 109


 4244              		.loc 1 1979 1
 4245              		.cfi_startproc
 4246              		@ args = 0, pretend = 0, frame = 8
 4247              		@ frame_needed = 1, uses_anonymous_args = 0
 4248              		@ link register save eliminated.
 4249 0000 80B4     		push	{r7}
 4250              	.LCFI205:
 4251              		.cfi_def_cfa_offset 4
 4252              		.cfi_offset 7, -4
 4253 0002 83B0     		sub	sp, sp, #12
 4254              	.LCFI206:
 4255              		.cfi_def_cfa_offset 16
 4256 0004 00AF     		add	r7, sp, #0
 4257              	.LCFI207:
 4258              		.cfi_def_cfa_register 7
 4259 0006 7860     		str	r0, [r7, #4]
1980:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 4260              		.loc 1 1980 15
 4261 0008 7B68     		ldr	r3, [r7, #4]
 4262 000a DB6B     		ldr	r3, [r3, #60]
1981:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4263              		.loc 1 1981 1
 4264 000c 1846     		mov	r0, r3
 4265 000e 0C37     		adds	r7, r7, #12
 4266              	.LCFI208:
 4267              		.cfi_def_cfa_offset 4
 4268 0010 BD46     		mov	sp, r7
 4269              	.LCFI209:
 4270              		.cfi_def_cfa_register 13
 4271              		@ sp needed
 4272 0012 5DF8047B 		ldr	r7, [sp], #4
 4273              	.LCFI210:
 4274              		.cfi_restore 7
 4275              		.cfi_def_cfa_offset 0
 4276 0016 7047     		bx	lr
 4277              		.cfi_endproc
 4278              	.LFE163:
 4280              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 4281              		.align	1
 4282              		.syntax unified
 4283              		.thumb
 4284              		.thumb_func
 4285              		.fpu fpv4-sp-d16
 4287              	UART_DMATransmitCplt:
 4288              	.LFB164:
1982:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1983:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1984:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1985:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1986:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1987:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1988:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback. 
1989:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle
1990:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1991:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1992:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1993:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  /tmp/ccOBznmR.s 			page 110


 4289              		.loc 1 1993 1
 4290              		.cfi_startproc
 4291              		@ args = 0, pretend = 0, frame = 16
 4292              		@ frame_needed = 1, uses_anonymous_args = 0
 4293 0000 80B5     		push	{r7, lr}
 4294              	.LCFI211:
 4295              		.cfi_def_cfa_offset 8
 4296              		.cfi_offset 7, -8
 4297              		.cfi_offset 14, -4
 4298 0002 84B0     		sub	sp, sp, #16
 4299              	.LCFI212:
 4300              		.cfi_def_cfa_offset 24
 4301 0004 00AF     		add	r7, sp, #0
 4302              	.LCFI213:
 4303              		.cfi_def_cfa_register 7
 4304 0006 7860     		str	r0, [r7, #4]
1994:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4305              		.loc 1 1994 23
 4306 0008 7B68     		ldr	r3, [r7, #4]
 4307 000a 9B6B     		ldr	r3, [r3, #56]
 4308 000c FB60     		str	r3, [r7, #12]
1995:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
1996:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 4309              		.loc 1 1996 11
 4310 000e 7B68     		ldr	r3, [r7, #4]
 4311 0010 1B68     		ldr	r3, [r3]
 4312              		.loc 1 1996 21
 4313 0012 1B68     		ldr	r3, [r3]
 4314              		.loc 1 1996 26
 4315 0014 03F48073 		and	r3, r3, #256
 4316              		.loc 1 1996 5
 4317 0018 002B     		cmp	r3, #0
 4318 001a 13D1     		bne	.L178
1997:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1998:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 4319              		.loc 1 1998 24
 4320 001c FB68     		ldr	r3, [r7, #12]
 4321 001e 0022     		movs	r2, #0
 4322 0020 DA84     		strh	r2, [r3, #38]	@ movhi
1999:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2000:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2001:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2002:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4323              		.loc 1 2002 5
 4324 0022 FB68     		ldr	r3, [r7, #12]
 4325 0024 1B68     		ldr	r3, [r3]
 4326 0026 5A69     		ldr	r2, [r3, #20]
 4327 0028 FB68     		ldr	r3, [r7, #12]
 4328 002a 1B68     		ldr	r3, [r3]
 4329 002c 22F08002 		bic	r2, r2, #128
 4330 0030 5A61     		str	r2, [r3, #20]
2003:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2004:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2005:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4331              		.loc 1 2005 5
 4332 0032 FB68     		ldr	r3, [r7, #12]
 4333 0034 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccOBznmR.s 			page 111


 4334 0036 DA68     		ldr	r2, [r3, #12]
 4335 0038 FB68     		ldr	r3, [r7, #12]
 4336 003a 1B68     		ldr	r3, [r3]
 4337 003c 42F04002 		orr	r2, r2, #64
 4338 0040 DA60     		str	r2, [r3, #12]
2006:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2007:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2008:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
2009:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2010:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2011:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2012:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2013:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4339              		.loc 1 2013 1
 4340 0042 02E0     		b	.L180
 4341              	.L178:
2011:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 4342              		.loc 1 2011 5
 4343 0044 F868     		ldr	r0, [r7, #12]
 4344 0046 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 4345              	.L180:
 4346              		.loc 1 2013 1
 4347 004a 00BF     		nop
 4348 004c 1037     		adds	r7, r7, #16
 4349              	.LCFI214:
 4350              		.cfi_def_cfa_offset 8
 4351 004e BD46     		mov	sp, r7
 4352              	.LCFI215:
 4353              		.cfi_def_cfa_register 13
 4354              		@ sp needed
 4355 0050 80BD     		pop	{r7, pc}
 4356              		.cfi_endproc
 4357              	.LFE164:
 4359              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 4360              		.align	1
 4361              		.syntax unified
 4362              		.thumb
 4363              		.thumb_func
 4364              		.fpu fpv4-sp-d16
 4366              	UART_DMATxHalfCplt:
 4367              	.LFB165:
2014:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2015:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2016:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback 
2017:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2018:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2019:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2020:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2021:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2022:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4368              		.loc 1 2022 1
 4369              		.cfi_startproc
 4370              		@ args = 0, pretend = 0, frame = 16
 4371              		@ frame_needed = 1, uses_anonymous_args = 0
 4372 0000 80B5     		push	{r7, lr}
 4373              	.LCFI216:
 4374              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccOBznmR.s 			page 112


 4375              		.cfi_offset 7, -8
 4376              		.cfi_offset 14, -4
 4377 0002 84B0     		sub	sp, sp, #16
 4378              	.LCFI217:
 4379              		.cfi_def_cfa_offset 24
 4380 0004 00AF     		add	r7, sp, #0
 4381              	.LCFI218:
 4382              		.cfi_def_cfa_register 7
 4383 0006 7860     		str	r0, [r7, #4]
2023:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 4384              		.loc 1 2023 23
 4385 0008 7B68     		ldr	r3, [r7, #4]
 4386 000a 9B6B     		ldr	r3, [r3, #56]
 4387 000c FB60     		str	r3, [r7, #12]
2024:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2025:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 4388              		.loc 1 2025 3
 4389 000e F868     		ldr	r0, [r7, #12]
 4390 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
2026:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4391              		.loc 1 2026 1
 4392 0014 00BF     		nop
 4393 0016 1037     		adds	r7, r7, #16
 4394              	.LCFI219:
 4395              		.cfi_def_cfa_offset 8
 4396 0018 BD46     		mov	sp, r7
 4397              	.LCFI220:
 4398              		.cfi_def_cfa_register 13
 4399              		@ sp needed
 4400 001a 80BD     		pop	{r7, pc}
 4401              		.cfi_endproc
 4402              	.LFE165:
 4404              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 4405              		.align	1
 4406              		.syntax unified
 4407              		.thumb
 4408              		.thumb_func
 4409              		.fpu fpv4-sp-d16
 4411              	UART_DMAReceiveCplt:
 4412              	.LFB166:
2027:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2028:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2029:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback. 
2030:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle
2031:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2032:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2033:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2034:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4413              		.loc 1 2034 1
 4414              		.cfi_startproc
 4415              		@ args = 0, pretend = 0, frame = 16
 4416              		@ frame_needed = 1, uses_anonymous_args = 0
 4417 0000 80B5     		push	{r7, lr}
 4418              	.LCFI221:
 4419              		.cfi_def_cfa_offset 8
 4420              		.cfi_offset 7, -8
 4421              		.cfi_offset 14, -4
ARM GAS  /tmp/ccOBznmR.s 			page 113


 4422 0002 84B0     		sub	sp, sp, #16
 4423              	.LCFI222:
 4424              		.cfi_def_cfa_offset 24
 4425 0004 00AF     		add	r7, sp, #0
 4426              	.LCFI223:
 4427              		.cfi_def_cfa_register 7
 4428 0006 7860     		str	r0, [r7, #4]
2035:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4429              		.loc 1 2035 23
 4430 0008 7B68     		ldr	r3, [r7, #4]
 4431 000a 9B6B     		ldr	r3, [r3, #56]
 4432 000c FB60     		str	r3, [r7, #12]
2036:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2037:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 4433              		.loc 1 2037 11
 4434 000e 7B68     		ldr	r3, [r7, #4]
 4435 0010 1B68     		ldr	r3, [r3]
 4436              		.loc 1 2037 21
 4437 0012 1B68     		ldr	r3, [r3]
 4438              		.loc 1 2037 26
 4439 0014 03F48073 		and	r3, r3, #256
 4440              		.loc 1 2037 5
 4441 0018 002B     		cmp	r3, #0
 4442 001a 1ED1     		bne	.L183
2038:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2039:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 4443              		.loc 1 2039 24
 4444 001c FB68     		ldr	r3, [r7, #12]
 4445 001e 0022     		movs	r2, #0
 4446 0020 DA85     		strh	r2, [r3, #46]	@ movhi
2040:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2041:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2042:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 4447              		.loc 1 2042 5
 4448 0022 FB68     		ldr	r3, [r7, #12]
 4449 0024 1B68     		ldr	r3, [r3]
 4450 0026 DA68     		ldr	r2, [r3, #12]
 4451 0028 FB68     		ldr	r3, [r7, #12]
 4452 002a 1B68     		ldr	r3, [r3]
 4453 002c 22F48072 		bic	r2, r2, #256
 4454 0030 DA60     		str	r2, [r3, #12]
2043:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4455              		.loc 1 2043 5
 4456 0032 FB68     		ldr	r3, [r7, #12]
 4457 0034 1B68     		ldr	r3, [r3]
 4458 0036 5A69     		ldr	r2, [r3, #20]
 4459 0038 FB68     		ldr	r3, [r7, #12]
 4460 003a 1B68     		ldr	r3, [r3]
 4461 003c 22F00102 		bic	r2, r2, #1
 4462 0040 5A61     		str	r2, [r3, #20]
2044:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
2045:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
2046:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2047:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4463              		.loc 1 2047 5
 4464 0042 FB68     		ldr	r3, [r7, #12]
 4465 0044 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccOBznmR.s 			page 114


 4466 0046 5A69     		ldr	r2, [r3, #20]
 4467 0048 FB68     		ldr	r3, [r7, #12]
 4468 004a 1B68     		ldr	r3, [r3]
 4469 004c 22F04002 		bic	r2, r2, #64
 4470 0050 5A61     		str	r2, [r3, #20]
2048:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
2049:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2050:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4471              		.loc 1 2050 20
 4472 0052 FB68     		ldr	r3, [r7, #12]
 4473 0054 2022     		movs	r2, #32
 4474 0056 83F83A20 		strb	r2, [r3, #58]
 4475              	.L183:
2051:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2052:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 4476              		.loc 1 2052 3
 4477 005a F868     		ldr	r0, [r7, #12]
 4478 005c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
2053:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4479              		.loc 1 2053 1
 4480 0060 00BF     		nop
 4481 0062 1037     		adds	r7, r7, #16
 4482              	.LCFI224:
 4483              		.cfi_def_cfa_offset 8
 4484 0064 BD46     		mov	sp, r7
 4485              	.LCFI225:
 4486              		.cfi_def_cfa_register 13
 4487              		@ sp needed
 4488 0066 80BD     		pop	{r7, pc}
 4489              		.cfi_endproc
 4490              	.LFE166:
 4492              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 4493              		.align	1
 4494              		.syntax unified
 4495              		.thumb
 4496              		.thumb_func
 4497              		.fpu fpv4-sp-d16
 4499              	UART_DMARxHalfCplt:
 4500              	.LFB167:
2054:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2055:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2056:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback 
2057:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2058:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2059:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2060:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2061:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2062:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4501              		.loc 1 2062 1
 4502              		.cfi_startproc
 4503              		@ args = 0, pretend = 0, frame = 16
 4504              		@ frame_needed = 1, uses_anonymous_args = 0
 4505 0000 80B5     		push	{r7, lr}
 4506              	.LCFI226:
 4507              		.cfi_def_cfa_offset 8
 4508              		.cfi_offset 7, -8
 4509              		.cfi_offset 14, -4
ARM GAS  /tmp/ccOBznmR.s 			page 115


 4510 0002 84B0     		sub	sp, sp, #16
 4511              	.LCFI227:
 4512              		.cfi_def_cfa_offset 24
 4513 0004 00AF     		add	r7, sp, #0
 4514              	.LCFI228:
 4515              		.cfi_def_cfa_register 7
 4516 0006 7860     		str	r0, [r7, #4]
2063:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 4517              		.loc 1 2063 23
 4518 0008 7B68     		ldr	r3, [r7, #4]
 4519 000a 9B6B     		ldr	r3, [r3, #56]
 4520 000c FB60     		str	r3, [r7, #12]
2064:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2065:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart); 
 4521              		.loc 1 2065 3
 4522 000e F868     		ldr	r0, [r7, #12]
 4523 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
2066:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4524              		.loc 1 2066 1
 4525 0014 00BF     		nop
 4526 0016 1037     		adds	r7, r7, #16
 4527              	.LCFI229:
 4528              		.cfi_def_cfa_offset 8
 4529 0018 BD46     		mov	sp, r7
 4530              	.LCFI230:
 4531              		.cfi_def_cfa_register 13
 4532              		@ sp needed
 4533 001a 80BD     		pop	{r7, pc}
 4534              		.cfi_endproc
 4535              	.LFE167:
 4537              		.section	.text.UART_DMAError,"ax",%progbits
 4538              		.align	1
 4539              		.syntax unified
 4540              		.thumb
 4541              		.thumb_func
 4542              		.fpu fpv4-sp-d16
 4544              	UART_DMAError:
 4545              	.LFB168:
2067:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2068:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2069:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2070:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle
2071:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2072:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2073:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2074:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4546              		.loc 1 2074 1
 4547              		.cfi_startproc
 4548              		@ args = 0, pretend = 0, frame = 16
 4549              		@ frame_needed = 1, uses_anonymous_args = 0
 4550 0000 80B5     		push	{r7, lr}
 4551              	.LCFI231:
 4552              		.cfi_def_cfa_offset 8
 4553              		.cfi_offset 7, -8
 4554              		.cfi_offset 14, -4
 4555 0002 84B0     		sub	sp, sp, #16
 4556              	.LCFI232:
ARM GAS  /tmp/ccOBznmR.s 			page 116


 4557              		.cfi_def_cfa_offset 24
 4558 0004 00AF     		add	r7, sp, #0
 4559              	.LCFI233:
 4560              		.cfi_def_cfa_register 7
 4561 0006 7860     		str	r0, [r7, #4]
2075:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 4562              		.loc 1 2075 12
 4563 0008 0023     		movs	r3, #0
 4564 000a FB60     		str	r3, [r7, #12]
2076:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4565              		.loc 1 2076 23
 4566 000c 7B68     		ldr	r3, [r7, #4]
 4567 000e 9B6B     		ldr	r3, [r3, #56]
 4568 0010 BB60     		str	r3, [r7, #8]
2077:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2078:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2079:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 4569              		.loc 1 2079 16
 4570 0012 BB68     		ldr	r3, [r7, #8]
 4571 0014 1B68     		ldr	r3, [r3]
 4572 0016 5B69     		ldr	r3, [r3, #20]
 4573 0018 03F08003 		and	r3, r3, #128
 4574 001c 002B     		cmp	r3, #0
 4575 001e 14BF     		ite	ne
 4576 0020 0123     		movne	r3, #1
 4577 0022 0023     		moveq	r3, #0
 4578 0024 DBB2     		uxtb	r3, r3
 4579              		.loc 1 2079 14
 4580 0026 FB60     		str	r3, [r7, #12]
2080:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 4581              		.loc 1 2080 12
 4582 0028 BB68     		ldr	r3, [r7, #8]
 4583 002a 93F83930 		ldrb	r3, [r3, #57]
 4584 002e DBB2     		uxtb	r3, r3
 4585              		.loc 1 2080 5
 4586 0030 212B     		cmp	r3, #33
 4587 0032 08D1     		bne	.L186
 4588              		.loc 1 2080 48 discriminator 1
 4589 0034 FB68     		ldr	r3, [r7, #12]
 4590 0036 002B     		cmp	r3, #0
 4591 0038 05D0     		beq	.L186
2081:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2082:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 4592              		.loc 1 2082 24
 4593 003a BB68     		ldr	r3, [r7, #8]
 4594 003c 0022     		movs	r2, #0
 4595 003e DA84     		strh	r2, [r3, #38]	@ movhi
2083:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 4596              		.loc 1 2083 5
 4597 0040 B868     		ldr	r0, [r7, #8]
 4598 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 4599              	.L186:
2084:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2085:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2086:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2087:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR); 
 4600              		.loc 1 2087 16
ARM GAS  /tmp/ccOBznmR.s 			page 117


 4601 0046 BB68     		ldr	r3, [r7, #8]
 4602 0048 1B68     		ldr	r3, [r3]
 4603 004a 5B69     		ldr	r3, [r3, #20]
 4604 004c 03F04003 		and	r3, r3, #64
 4605 0050 002B     		cmp	r3, #0
 4606 0052 14BF     		ite	ne
 4607 0054 0123     		movne	r3, #1
 4608 0056 0023     		moveq	r3, #0
 4609 0058 DBB2     		uxtb	r3, r3
 4610              		.loc 1 2087 14
 4611 005a FB60     		str	r3, [r7, #12]
2088:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 4612              		.loc 1 2088 12
 4613 005c BB68     		ldr	r3, [r7, #8]
 4614 005e 93F83A30 		ldrb	r3, [r3, #58]
 4615 0062 DBB2     		uxtb	r3, r3
 4616              		.loc 1 2088 5
 4617 0064 222B     		cmp	r3, #34
 4618 0066 08D1     		bne	.L187
 4619              		.loc 1 2088 49 discriminator 1
 4620 0068 FB68     		ldr	r3, [r7, #12]
 4621 006a 002B     		cmp	r3, #0
 4622 006c 05D0     		beq	.L187
2089:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2090:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 4623              		.loc 1 2090 24
 4624 006e BB68     		ldr	r3, [r7, #8]
 4625 0070 0022     		movs	r2, #0
 4626 0072 DA85     		strh	r2, [r3, #46]	@ movhi
2091:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 4627              		.loc 1 2091 5
 4628 0074 B868     		ldr	r0, [r7, #8]
 4629 0076 FFF7FEFF 		bl	UART_EndRxTransfer
 4630              	.L187:
2092:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2093:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2094:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 4631              		.loc 1 2094 20
 4632 007a BB68     		ldr	r3, [r7, #8]
 4633 007c DB6B     		ldr	r3, [r3, #60]
 4634 007e 43F01002 		orr	r2, r3, #16
 4635 0082 BB68     		ldr	r3, [r7, #8]
 4636 0084 DA63     		str	r2, [r3, #60]
2095:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 4637              		.loc 1 2095 3
 4638 0086 B868     		ldr	r0, [r7, #8]
 4639 0088 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2096:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4640              		.loc 1 2096 1
 4641 008c 00BF     		nop
 4642 008e 1037     		adds	r7, r7, #16
 4643              	.LCFI234:
 4644              		.cfi_def_cfa_offset 8
 4645 0090 BD46     		mov	sp, r7
 4646              	.LCFI235:
 4647              		.cfi_def_cfa_register 13
 4648              		@ sp needed
ARM GAS  /tmp/ccOBznmR.s 			page 118


 4649 0092 80BD     		pop	{r7, pc}
 4650              		.cfi_endproc
 4651              	.LFE168:
 4653              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 4654              		.align	1
 4655              		.syntax unified
 4656              		.thumb
 4657              		.thumb_func
 4658              		.fpu fpv4-sp-d16
 4660              	UART_WaitOnFlagUntilTimeout:
 4661              	.LFB169:
2097:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2098:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2099:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
2100:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2101:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2102:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
2103:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
2104:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
2105:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
2106:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2107:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2108:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
2109:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4662              		.loc 1 2109 1
 4663              		.cfi_startproc
 4664              		@ args = 4, pretend = 0, frame = 16
 4665              		@ frame_needed = 1, uses_anonymous_args = 0
 4666 0000 80B5     		push	{r7, lr}
 4667              	.LCFI236:
 4668              		.cfi_def_cfa_offset 8
 4669              		.cfi_offset 7, -8
 4670              		.cfi_offset 14, -4
 4671 0002 84B0     		sub	sp, sp, #16
 4672              	.LCFI237:
 4673              		.cfi_def_cfa_offset 24
 4674 0004 00AF     		add	r7, sp, #0
 4675              	.LCFI238:
 4676              		.cfi_def_cfa_register 7
 4677 0006 F860     		str	r0, [r7, #12]
 4678 0008 B960     		str	r1, [r7, #8]
 4679 000a 3B60     		str	r3, [r7]
 4680 000c 1346     		mov	r3, r2
 4681 000e FB71     		strb	r3, [r7, #7]
2110:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
2111:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status) 
 4682              		.loc 1 2111 8
 4683 0010 2CE0     		b	.L189
 4684              	.L192:
2112:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2113:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
2114:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
 4685              		.loc 1 2114 7
 4686 0012 BB69     		ldr	r3, [r7, #24]
 4687 0014 B3F1FF3F 		cmp	r3, #-1
 4688 0018 28D0     		beq	.L189
2115:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccOBznmR.s 			page 119


2116:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
 4689              		.loc 1 2116 9
 4690 001a BB69     		ldr	r3, [r7, #24]
 4691 001c 002B     		cmp	r3, #0
 4692 001e 07D0     		beq	.L190
 4693              		.loc 1 2116 29 discriminator 1
 4694 0020 FFF7FEFF 		bl	HAL_GetTick
 4695 0024 0246     		mov	r2, r0
 4696              		.loc 1 2116 43 discriminator 1
 4697 0026 3B68     		ldr	r3, [r7]
 4698 0028 D31A     		subs	r3, r2, r3
 4699              		.loc 1 2116 25 discriminator 1
 4700 002a BA69     		ldr	r2, [r7, #24]
 4701 002c 9A42     		cmp	r2, r3
 4702 002e 1DD2     		bcs	.L189
 4703              	.L190:
2117:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2118:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2119:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 4704              		.loc 1 2119 9
 4705 0030 FB68     		ldr	r3, [r7, #12]
 4706 0032 1B68     		ldr	r3, [r3]
 4707 0034 DA68     		ldr	r2, [r3, #12]
 4708 0036 FB68     		ldr	r3, [r7, #12]
 4709 0038 1B68     		ldr	r3, [r3]
 4710 003a 22F4D072 		bic	r2, r2, #416
 4711 003e DA60     		str	r2, [r3, #12]
2120:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4712              		.loc 1 2120 9
 4713 0040 FB68     		ldr	r3, [r7, #12]
 4714 0042 1B68     		ldr	r3, [r3]
 4715 0044 5A69     		ldr	r2, [r3, #20]
 4716 0046 FB68     		ldr	r3, [r7, #12]
 4717 0048 1B68     		ldr	r3, [r3]
 4718 004a 22F00102 		bic	r2, r2, #1
 4719 004e 5A61     		str	r2, [r3, #20]
2121:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
2122:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
 4720              		.loc 1 2122 24
 4721 0050 FB68     		ldr	r3, [r7, #12]
 4722 0052 2022     		movs	r2, #32
 4723 0054 83F83920 		strb	r2, [r3, #57]
2123:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 4724              		.loc 1 2123 24
 4725 0058 FB68     		ldr	r3, [r7, #12]
 4726 005a 2022     		movs	r2, #32
 4727 005c 83F83A20 		strb	r2, [r3, #58]
2124:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
2125:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Process Unlocked */
2126:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 4728              		.loc 1 2126 9
 4729 0060 FB68     		ldr	r3, [r7, #12]
 4730 0062 0022     		movs	r2, #0
 4731 0064 83F83820 		strb	r2, [r3, #56]
2127:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
2128:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 4732              		.loc 1 2128 16
ARM GAS  /tmp/ccOBznmR.s 			page 120


 4733 0068 0323     		movs	r3, #3
 4734 006a 0FE0     		b	.L191
 4735              	.L189:
2111:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4736              		.loc 1 2111 10
 4737 006c FB68     		ldr	r3, [r7, #12]
 4738 006e 1B68     		ldr	r3, [r3]
 4739 0070 1A68     		ldr	r2, [r3]
 4740 0072 BB68     		ldr	r3, [r7, #8]
 4741 0074 1340     		ands	r3, r3, r2
2111:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4742              		.loc 1 2111 49
 4743 0076 BA68     		ldr	r2, [r7, #8]
 4744 0078 9A42     		cmp	r2, r3
 4745 007a 0CBF     		ite	eq
 4746 007c 0123     		moveq	r3, #1
 4747 007e 0023     		movne	r3, #0
 4748 0080 DBB2     		uxtb	r3, r3
 4749 0082 1A46     		mov	r2, r3
2111:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4750              		.loc 1 2111 58
 4751 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
2111:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4752              		.loc 1 2111 8
 4753 0086 9A42     		cmp	r2, r3
 4754 0088 C3D0     		beq	.L192
2129:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2130:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2131:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2132:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2133:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4755              		.loc 1 2133 10
 4756 008a 0023     		movs	r3, #0
 4757              	.L191:
2134:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4758              		.loc 1 2134 1
 4759 008c 1846     		mov	r0, r3
 4760 008e 1037     		adds	r7, r7, #16
 4761              	.LCFI239:
 4762              		.cfi_def_cfa_offset 8
 4763 0090 BD46     		mov	sp, r7
 4764              	.LCFI240:
 4765              		.cfi_def_cfa_register 13
 4766              		@ sp needed
 4767 0092 80BD     		pop	{r7, pc}
 4768              		.cfi_endproc
 4769              	.LFE169:
 4771              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 4772              		.align	1
 4773              		.syntax unified
 4774              		.thumb
 4775              		.thumb_func
 4776              		.fpu fpv4-sp-d16
 4778              	UART_EndTxTransfer:
 4779              	.LFB170:
2135:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2136:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  /tmp/ccOBznmR.s 			page 121


2137:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2138:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2139:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2140:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2141:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2142:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4780              		.loc 1 2142 1
 4781              		.cfi_startproc
 4782              		@ args = 0, pretend = 0, frame = 8
 4783              		@ frame_needed = 1, uses_anonymous_args = 0
 4784              		@ link register save eliminated.
 4785 0000 80B4     		push	{r7}
 4786              	.LCFI241:
 4787              		.cfi_def_cfa_offset 4
 4788              		.cfi_offset 7, -4
 4789 0002 83B0     		sub	sp, sp, #12
 4790              	.LCFI242:
 4791              		.cfi_def_cfa_offset 16
 4792 0004 00AF     		add	r7, sp, #0
 4793              	.LCFI243:
 4794              		.cfi_def_cfa_register 7
 4795 0006 7860     		str	r0, [r7, #4]
2143:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2144:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 4796              		.loc 1 2144 3
 4797 0008 7B68     		ldr	r3, [r7, #4]
 4798 000a 1B68     		ldr	r3, [r3]
 4799 000c DA68     		ldr	r2, [r3, #12]
 4800 000e 7B68     		ldr	r3, [r7, #4]
 4801 0010 1B68     		ldr	r3, [r3]
 4802 0012 22F0C002 		bic	r2, r2, #192
 4803 0016 DA60     		str	r2, [r3, #12]
2145:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2146:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2147:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4804              		.loc 1 2147 17
 4805 0018 7B68     		ldr	r3, [r7, #4]
 4806 001a 2022     		movs	r2, #32
 4807 001c 83F83920 		strb	r2, [r3, #57]
2148:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4808              		.loc 1 2148 1
 4809 0020 00BF     		nop
 4810 0022 0C37     		adds	r7, r7, #12
 4811              	.LCFI244:
 4812              		.cfi_def_cfa_offset 4
 4813 0024 BD46     		mov	sp, r7
 4814              	.LCFI245:
 4815              		.cfi_def_cfa_register 13
 4816              		@ sp needed
 4817 0026 5DF8047B 		ldr	r7, [sp], #4
 4818              	.LCFI246:
 4819              		.cfi_restore 7
 4820              		.cfi_def_cfa_offset 0
 4821 002a 7047     		bx	lr
 4822              		.cfi_endproc
 4823              	.LFE170:
 4825              		.section	.text.UART_EndRxTransfer,"ax",%progbits
ARM GAS  /tmp/ccOBznmR.s 			page 122


 4826              		.align	1
 4827              		.syntax unified
 4828              		.thumb
 4829              		.thumb_func
 4830              		.fpu fpv4-sp-d16
 4832              	UART_EndRxTransfer:
 4833              	.LFB171:
2149:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2150:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2151:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2152:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2153:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2154:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2155:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2156:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4834              		.loc 1 2156 1
 4835              		.cfi_startproc
 4836              		@ args = 0, pretend = 0, frame = 8
 4837              		@ frame_needed = 1, uses_anonymous_args = 0
 4838              		@ link register save eliminated.
 4839 0000 80B4     		push	{r7}
 4840              	.LCFI247:
 4841              		.cfi_def_cfa_offset 4
 4842              		.cfi_offset 7, -4
 4843 0002 83B0     		sub	sp, sp, #12
 4844              	.LCFI248:
 4845              		.cfi_def_cfa_offset 16
 4846 0004 00AF     		add	r7, sp, #0
 4847              	.LCFI249:
 4848              		.cfi_def_cfa_register 7
 4849 0006 7860     		str	r0, [r7, #4]
2157:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2158:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4850              		.loc 1 2158 3
 4851 0008 7B68     		ldr	r3, [r7, #4]
 4852 000a 1B68     		ldr	r3, [r3]
 4853 000c DA68     		ldr	r2, [r3, #12]
 4854 000e 7B68     		ldr	r3, [r7, #4]
 4855 0010 1B68     		ldr	r3, [r3]
 4856 0012 22F49072 		bic	r2, r2, #288
 4857 0016 DA60     		str	r2, [r3, #12]
2159:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4858              		.loc 1 2159 3
 4859 0018 7B68     		ldr	r3, [r7, #4]
 4860 001a 1B68     		ldr	r3, [r3]
 4861 001c 5A69     		ldr	r2, [r3, #20]
 4862 001e 7B68     		ldr	r3, [r7, #4]
 4863 0020 1B68     		ldr	r3, [r3]
 4864 0022 22F00102 		bic	r2, r2, #1
 4865 0026 5A61     		str	r2, [r3, #20]
2160:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2161:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2162:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4866              		.loc 1 2162 18
 4867 0028 7B68     		ldr	r3, [r7, #4]
 4868 002a 2022     		movs	r2, #32
 4869 002c 83F83A20 		strb	r2, [r3, #58]
ARM GAS  /tmp/ccOBznmR.s 			page 123


2163:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4870              		.loc 1 2163 1
 4871 0030 00BF     		nop
 4872 0032 0C37     		adds	r7, r7, #12
 4873              	.LCFI250:
 4874              		.cfi_def_cfa_offset 4
 4875 0034 BD46     		mov	sp, r7
 4876              	.LCFI251:
 4877              		.cfi_def_cfa_register 13
 4878              		@ sp needed
 4879 0036 5DF8047B 		ldr	r7, [sp], #4
 4880              	.LCFI252:
 4881              		.cfi_restore 7
 4882              		.cfi_def_cfa_offset 0
 4883 003a 7047     		bx	lr
 4884              		.cfi_endproc
 4885              	.LFE171:
 4887              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 4888              		.align	1
 4889              		.syntax unified
 4890              		.thumb
 4891              		.thumb_func
 4892              		.fpu fpv4-sp-d16
 4894              	UART_DMAAbortOnError:
 4895              	.LFB172:
2164:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2165:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2166:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2167:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2168:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2169:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2170:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2171:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2172:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4896              		.loc 1 2172 1
 4897              		.cfi_startproc
 4898              		@ args = 0, pretend = 0, frame = 16
 4899              		@ frame_needed = 1, uses_anonymous_args = 0
 4900 0000 80B5     		push	{r7, lr}
 4901              	.LCFI253:
 4902              		.cfi_def_cfa_offset 8
 4903              		.cfi_offset 7, -8
 4904              		.cfi_offset 14, -4
 4905 0002 84B0     		sub	sp, sp, #16
 4906              	.LCFI254:
 4907              		.cfi_def_cfa_offset 24
 4908 0004 00AF     		add	r7, sp, #0
 4909              	.LCFI255:
 4910              		.cfi_def_cfa_register 7
 4911 0006 7860     		str	r0, [r7, #4]
2173:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4912              		.loc 1 2173 23
 4913 0008 7B68     		ldr	r3, [r7, #4]
 4914 000a 9B6B     		ldr	r3, [r3, #56]
 4915 000c FB60     		str	r3, [r7, #12]
2174:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 4916              		.loc 1 2174 22
ARM GAS  /tmp/ccOBznmR.s 			page 124


 4917 000e FB68     		ldr	r3, [r7, #12]
 4918 0010 0022     		movs	r2, #0
 4919 0012 DA85     		strh	r2, [r3, #46]	@ movhi
2175:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 4920              		.loc 1 2175 22
 4921 0014 FB68     		ldr	r3, [r7, #12]
 4922 0016 0022     		movs	r2, #0
 4923 0018 DA84     		strh	r2, [r3, #38]	@ movhi
2176:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2177:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 4924              		.loc 1 2177 3
 4925 001a F868     		ldr	r0, [r7, #12]
 4926 001c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4927              		.loc 1 2178 1
 4928 0020 00BF     		nop
 4929 0022 1037     		adds	r7, r7, #16
 4930              	.LCFI256:
 4931              		.cfi_def_cfa_offset 8
 4932 0024 BD46     		mov	sp, r7
 4933              	.LCFI257:
 4934              		.cfi_def_cfa_register 13
 4935              		@ sp needed
 4936 0026 80BD     		pop	{r7, pc}
 4937              		.cfi_endproc
 4938              	.LFE172:
 4940              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 4941              		.align	1
 4942              		.syntax unified
 4943              		.thumb
 4944              		.thumb_func
 4945              		.fpu fpv4-sp-d16
 4947              	UART_DMATxAbortCallback:
 4948              	.LFB173:
2179:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2180:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2181:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2182:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2183:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2184:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2185:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2186:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2187:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2188:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2189:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4949              		.loc 1 2189 1
 4950              		.cfi_startproc
 4951              		@ args = 0, pretend = 0, frame = 16
 4952              		@ frame_needed = 1, uses_anonymous_args = 0
 4953 0000 80B5     		push	{r7, lr}
 4954              	.LCFI258:
 4955              		.cfi_def_cfa_offset 8
 4956              		.cfi_offset 7, -8
 4957              		.cfi_offset 14, -4
 4958 0002 84B0     		sub	sp, sp, #16
 4959              	.LCFI259:
 4960              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccOBznmR.s 			page 125


 4961 0004 00AF     		add	r7, sp, #0
 4962              	.LCFI260:
 4963              		.cfi_def_cfa_register 7
 4964 0006 7860     		str	r0, [r7, #4]
2190:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4965              		.loc 1 2190 23
 4966 0008 7B68     		ldr	r3, [r7, #4]
 4967 000a 9B6B     		ldr	r3, [r3, #56]
 4968 000c FB60     		str	r3, [r7, #12]
2191:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2192:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 4969              		.loc 1 2192 8
 4970 000e FB68     		ldr	r3, [r7, #12]
 4971 0010 1B6B     		ldr	r3, [r3, #48]
 4972              		.loc 1 2192 36
 4973 0012 0022     		movs	r2, #0
 4974 0014 1A65     		str	r2, [r3, #80]
2193:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2194:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2195:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmarx != NULL)
 4975              		.loc 1 2195 11
 4976 0016 FB68     		ldr	r3, [r7, #12]
 4977 0018 5B6B     		ldr	r3, [r3, #52]
 4978              		.loc 1 2195 5
 4979 001a 002B     		cmp	r3, #0
 4980 001c 04D0     		beq	.L197
2196:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2197:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
 4981              		.loc 1 2197 13
 4982 001e FB68     		ldr	r3, [r7, #12]
 4983 0020 5B6B     		ldr	r3, [r3, #52]
 4984              		.loc 1 2197 21
 4985 0022 1B6D     		ldr	r3, [r3, #80]
 4986              		.loc 1 2197 7
 4987 0024 002B     		cmp	r3, #0
 4988 0026 14D1     		bne	.L199
 4989              	.L197:
2198:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2199:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2200:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2201:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2203:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2204:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 4990              		.loc 1 2204 22
 4991 0028 FB68     		ldr	r3, [r7, #12]
 4992 002a 0022     		movs	r2, #0
 4993 002c DA84     		strh	r2, [r3, #38]	@ movhi
2205:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4994              		.loc 1 2205 22
 4995 002e FB68     		ldr	r3, [r7, #12]
 4996 0030 0022     		movs	r2, #0
 4997 0032 DA85     		strh	r2, [r3, #46]	@ movhi
2206:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2207:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2208:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 4998              		.loc 1 2208 20
ARM GAS  /tmp/ccOBznmR.s 			page 126


 4999 0034 FB68     		ldr	r3, [r7, #12]
 5000 0036 0022     		movs	r2, #0
 5001 0038 DA63     		str	r2, [r3, #60]
2209:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2210:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2211:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 5002              		.loc 1 2211 18
 5003 003a FB68     		ldr	r3, [r7, #12]
 5004 003c 2022     		movs	r2, #32
 5005 003e 83F83920 		strb	r2, [r3, #57]
2212:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5006              		.loc 1 2212 18
 5007 0042 FB68     		ldr	r3, [r7, #12]
 5008 0044 2022     		movs	r2, #32
 5009 0046 83F83A20 		strb	r2, [r3, #58]
2213:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2214:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2215:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 5010              		.loc 1 2215 3
 5011 004a F868     		ldr	r0, [r7, #12]
 5012 004c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 5013 0050 00E0     		b	.L196
 5014              	.L199:
2199:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5015              		.loc 1 2199 7
 5016 0052 00BF     		nop
 5017              	.L196:
2216:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5018              		.loc 1 2216 1
 5019 0054 1037     		adds	r7, r7, #16
 5020              	.LCFI261:
 5021              		.cfi_def_cfa_offset 8
 5022 0056 BD46     		mov	sp, r7
 5023              	.LCFI262:
 5024              		.cfi_def_cfa_register 13
 5025              		@ sp needed
 5026 0058 80BD     		pop	{r7, pc}
 5027              		.cfi_endproc
 5028              	.LFE173:
 5030              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 5031              		.align	1
 5032              		.syntax unified
 5033              		.thumb
 5034              		.thumb_func
 5035              		.fpu fpv4-sp-d16
 5037              	UART_DMARxAbortCallback:
 5038              	.LFB174:
2217:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2218:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2219:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2220:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2221:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2222:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2223:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2224:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2225:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2226:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/ccOBznmR.s 			page 127


2227:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5039              		.loc 1 2227 1
 5040              		.cfi_startproc
 5041              		@ args = 0, pretend = 0, frame = 16
 5042              		@ frame_needed = 1, uses_anonymous_args = 0
 5043 0000 80B5     		push	{r7, lr}
 5044              	.LCFI263:
 5045              		.cfi_def_cfa_offset 8
 5046              		.cfi_offset 7, -8
 5047              		.cfi_offset 14, -4
 5048 0002 84B0     		sub	sp, sp, #16
 5049              	.LCFI264:
 5050              		.cfi_def_cfa_offset 24
 5051 0004 00AF     		add	r7, sp, #0
 5052              	.LCFI265:
 5053              		.cfi_def_cfa_register 7
 5054 0006 7860     		str	r0, [r7, #4]
2228:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 5055              		.loc 1 2228 23
 5056 0008 7B68     		ldr	r3, [r7, #4]
 5057 000a 9B6B     		ldr	r3, [r3, #56]
 5058 000c FB60     		str	r3, [r7, #12]
2229:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2230:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 5059              		.loc 1 2230 8
 5060 000e FB68     		ldr	r3, [r7, #12]
 5061 0010 5B6B     		ldr	r3, [r3, #52]
 5062              		.loc 1 2230 36
 5063 0012 0022     		movs	r2, #0
 5064 0014 1A65     		str	r2, [r3, #80]
2231:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2232:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2233:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 5065              		.loc 1 2233 11
 5066 0016 FB68     		ldr	r3, [r7, #12]
 5067 0018 1B6B     		ldr	r3, [r3, #48]
 5068              		.loc 1 2233 5
 5069 001a 002B     		cmp	r3, #0
 5070 001c 04D0     		beq	.L201
2234:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2235:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
 5071              		.loc 1 2235 13
 5072 001e FB68     		ldr	r3, [r7, #12]
 5073 0020 1B6B     		ldr	r3, [r3, #48]
 5074              		.loc 1 2235 21
 5075 0022 1B6D     		ldr	r3, [r3, #80]
 5076              		.loc 1 2235 7
 5077 0024 002B     		cmp	r3, #0
 5078 0026 14D1     		bne	.L203
 5079              	.L201:
2236:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2237:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2238:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2239:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2240:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2242:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
ARM GAS  /tmp/ccOBznmR.s 			page 128


 5080              		.loc 1 2242 22
 5081 0028 FB68     		ldr	r3, [r7, #12]
 5082 002a 0022     		movs	r2, #0
 5083 002c DA84     		strh	r2, [r3, #38]	@ movhi
2243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5084              		.loc 1 2243 22
 5085 002e FB68     		ldr	r3, [r7, #12]
 5086 0030 0022     		movs	r2, #0
 5087 0032 DA85     		strh	r2, [r3, #46]	@ movhi
2244:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2245:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2246:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5088              		.loc 1 2246 20
 5089 0034 FB68     		ldr	r3, [r7, #12]
 5090 0036 0022     		movs	r2, #0
 5091 0038 DA63     		str	r2, [r3, #60]
2247:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2248:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2249:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 5092              		.loc 1 2249 18
 5093 003a FB68     		ldr	r3, [r7, #12]
 5094 003c 2022     		movs	r2, #32
 5095 003e 83F83920 		strb	r2, [r3, #57]
2250:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5096              		.loc 1 2250 18
 5097 0042 FB68     		ldr	r3, [r7, #12]
 5098 0044 2022     		movs	r2, #32
 5099 0046 83F83A20 		strb	r2, [r3, #58]
2251:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2252:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2253:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 5100              		.loc 1 2253 3
 5101 004a F868     		ldr	r0, [r7, #12]
 5102 004c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 5103 0050 00E0     		b	.L200
 5104              	.L203:
2237:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5105              		.loc 1 2237 7
 5106 0052 00BF     		nop
 5107              	.L200:
2254:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5108              		.loc 1 2254 1
 5109 0054 1037     		adds	r7, r7, #16
 5110              	.LCFI266:
 5111              		.cfi_def_cfa_offset 8
 5112 0056 BD46     		mov	sp, r7
 5113              	.LCFI267:
 5114              		.cfi_def_cfa_register 13
 5115              		@ sp needed
 5116 0058 80BD     		pop	{r7, pc}
 5117              		.cfi_endproc
 5118              	.LFE174:
 5120              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 5121              		.align	1
 5122              		.syntax unified
 5123              		.thumb
 5124              		.thumb_func
ARM GAS  /tmp/ccOBznmR.s 			page 129


 5125              		.fpu fpv4-sp-d16
 5127              	UART_DMATxOnlyAbortCallback:
 5128              	.LFB175:
2255:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2256:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2257:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2258:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2259:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2260:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2261:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2262:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2263:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2264:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2265:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5129              		.loc 1 2265 1
 5130              		.cfi_startproc
 5131              		@ args = 0, pretend = 0, frame = 16
 5132              		@ frame_needed = 1, uses_anonymous_args = 0
 5133 0000 80B5     		push	{r7, lr}
 5134              	.LCFI268:
 5135              		.cfi_def_cfa_offset 8
 5136              		.cfi_offset 7, -8
 5137              		.cfi_offset 14, -4
 5138 0002 84B0     		sub	sp, sp, #16
 5139              	.LCFI269:
 5140              		.cfi_def_cfa_offset 24
 5141 0004 00AF     		add	r7, sp, #0
 5142              	.LCFI270:
 5143              		.cfi_def_cfa_register 7
 5144 0006 7860     		str	r0, [r7, #4]
2266:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 5145              		.loc 1 2266 23
 5146 0008 7B68     		ldr	r3, [r7, #4]
 5147 000a 9B6B     		ldr	r3, [r3, #56]
 5148 000c FB60     		str	r3, [r7, #12]
2267:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2268:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 5149              		.loc 1 2268 22
 5150 000e FB68     		ldr	r3, [r7, #12]
 5151 0010 0022     		movs	r2, #0
 5152 0012 DA84     		strh	r2, [r3, #38]	@ movhi
2269:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2270:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2271:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5153              		.loc 1 2271 17
 5154 0014 FB68     		ldr	r3, [r7, #12]
 5155 0016 2022     		movs	r2, #32
 5156 0018 83F83920 		strb	r2, [r3, #57]
2272:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2273:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2274:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 5157              		.loc 1 2274 3
 5158 001c F868     		ldr	r0, [r7, #12]
 5159 001e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
2275:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5160              		.loc 1 2275 1
 5161 0022 00BF     		nop
ARM GAS  /tmp/ccOBznmR.s 			page 130


 5162 0024 1037     		adds	r7, r7, #16
 5163              	.LCFI271:
 5164              		.cfi_def_cfa_offset 8
 5165 0026 BD46     		mov	sp, r7
 5166              	.LCFI272:
 5167              		.cfi_def_cfa_register 13
 5168              		@ sp needed
 5169 0028 80BD     		pop	{r7, pc}
 5170              		.cfi_endproc
 5171              	.LFE175:
 5173              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 5174              		.align	1
 5175              		.syntax unified
 5176              		.thumb
 5177              		.thumb_func
 5178              		.fpu fpv4-sp-d16
 5180              	UART_DMARxOnlyAbortCallback:
 5181              	.LFB176:
2276:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2278:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2279:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2280:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2281:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2282:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2283:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2284:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2285:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2286:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5182              		.loc 1 2286 1
 5183              		.cfi_startproc
 5184              		@ args = 0, pretend = 0, frame = 16
 5185              		@ frame_needed = 1, uses_anonymous_args = 0
 5186 0000 80B5     		push	{r7, lr}
 5187              	.LCFI273:
 5188              		.cfi_def_cfa_offset 8
 5189              		.cfi_offset 7, -8
 5190              		.cfi_offset 14, -4
 5191 0002 84B0     		sub	sp, sp, #16
 5192              	.LCFI274:
 5193              		.cfi_def_cfa_offset 24
 5194 0004 00AF     		add	r7, sp, #0
 5195              	.LCFI275:
 5196              		.cfi_def_cfa_register 7
 5197 0006 7860     		str	r0, [r7, #4]
2287:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 5198              		.loc 1 2287 23
 5199 0008 7B68     		ldr	r3, [r7, #4]
 5200 000a 9B6B     		ldr	r3, [r3, #56]
 5201 000c FB60     		str	r3, [r7, #12]
2288:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2289:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5202              		.loc 1 2289 22
 5203 000e FB68     		ldr	r3, [r7, #12]
 5204 0010 0022     		movs	r2, #0
 5205 0012 DA85     		strh	r2, [r3, #46]	@ movhi
2290:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccOBznmR.s 			page 131


2291:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2292:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5206              		.loc 1 2292 18
 5207 0014 FB68     		ldr	r3, [r7, #12]
 5208 0016 2022     		movs	r2, #32
 5209 0018 83F83A20 		strb	r2, [r3, #58]
2293:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2294:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2295:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 5210              		.loc 1 2295 3
 5211 001c F868     		ldr	r0, [r7, #12]
 5212 001e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
2296:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5213              		.loc 1 2296 1
 5214 0022 00BF     		nop
 5215 0024 1037     		adds	r7, r7, #16
 5216              	.LCFI276:
 5217              		.cfi_def_cfa_offset 8
 5218 0026 BD46     		mov	sp, r7
 5219              	.LCFI277:
 5220              		.cfi_def_cfa_register 13
 5221              		@ sp needed
 5222 0028 80BD     		pop	{r7, pc}
 5223              		.cfi_endproc
 5224              	.LFE176:
 5226              		.section	.text.UART_Transmit_IT,"ax",%progbits
 5227              		.align	1
 5228              		.syntax unified
 5229              		.thumb
 5230              		.thumb_func
 5231              		.fpu fpv4-sp-d16
 5233              	UART_Transmit_IT:
 5234              	.LFB177:
2297:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2298:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2299:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
2300:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2301:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2302:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2303:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2304:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2305:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5235              		.loc 1 2305 1
 5236              		.cfi_startproc
 5237              		@ args = 0, pretend = 0, frame = 16
 5238              		@ frame_needed = 1, uses_anonymous_args = 0
 5239              		@ link register save eliminated.
 5240 0000 80B4     		push	{r7}
 5241              	.LCFI278:
 5242              		.cfi_def_cfa_offset 4
 5243              		.cfi_offset 7, -4
 5244 0002 85B0     		sub	sp, sp, #20
 5245              	.LCFI279:
 5246              		.cfi_def_cfa_offset 24
 5247 0004 00AF     		add	r7, sp, #0
 5248              	.LCFI280:
 5249              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccOBznmR.s 			page 132


 5250 0006 7860     		str	r0, [r7, #4]
2306:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
2307:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2308:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2309:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
 5251              		.loc 1 2309 11
 5252 0008 7B68     		ldr	r3, [r7, #4]
 5253 000a 93F83930 		ldrb	r3, [r3, #57]
 5254 000e DBB2     		uxtb	r3, r3
 5255              		.loc 1 2309 5
 5256 0010 212B     		cmp	r3, #33
 5257 0012 44D1     		bne	.L207
2310:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2311:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 5258              		.loc 1 2311 19
 5259 0014 7B68     		ldr	r3, [r7, #4]
 5260 0016 9B68     		ldr	r3, [r3, #8]
 5261              		.loc 1 2311 7
 5262 0018 B3F5805F 		cmp	r3, #4096
 5263 001c 1AD1     		bne	.L208
2312:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2313:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t*) huart->pTxBuffPtr;
 5264              		.loc 1 2313 11
 5265 001e 7B68     		ldr	r3, [r7, #4]
 5266 0020 1B6A     		ldr	r3, [r3, #32]
 5267 0022 FB60     		str	r3, [r7, #12]
2314:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 5268              		.loc 1 2314 40
 5269 0024 FB68     		ldr	r3, [r7, #12]
 5270 0026 1B88     		ldrh	r3, [r3]
 5271              		.loc 1 2314 29
 5272 0028 1A46     		mov	r2, r3
 5273              		.loc 1 2314 12
 5274 002a 7B68     		ldr	r3, [r7, #4]
 5275 002c 1B68     		ldr	r3, [r3]
 5276              		.loc 1 2314 29
 5277 002e C2F30802 		ubfx	r2, r2, #0, #9
 5278              		.loc 1 2314 27
 5279 0032 5A60     		str	r2, [r3, #4]
2315:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 5280              		.loc 1 2315 21
 5281 0034 7B68     		ldr	r3, [r7, #4]
 5282 0036 1B69     		ldr	r3, [r3, #16]
 5283              		.loc 1 2315 9
 5284 0038 002B     		cmp	r3, #0
 5285 003a 05D1     		bne	.L209
2316:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2317:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 5286              		.loc 1 2317 27
 5287 003c 7B68     		ldr	r3, [r7, #4]
 5288 003e 1B6A     		ldr	r3, [r3, #32]
 5289 0040 9A1C     		adds	r2, r3, #2
 5290 0042 7B68     		ldr	r3, [r7, #4]
 5291 0044 1A62     		str	r2, [r3, #32]
 5292 0046 0EE0     		b	.L210
 5293              	.L209:
2318:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
ARM GAS  /tmp/ccOBznmR.s 			page 133


2319:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2320:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2321:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
 5294              		.loc 1 2321 27
 5295 0048 7B68     		ldr	r3, [r7, #4]
 5296 004a 1B6A     		ldr	r3, [r3, #32]
 5297 004c 5A1C     		adds	r2, r3, #1
 5298 004e 7B68     		ldr	r3, [r7, #4]
 5299 0050 1A62     		str	r2, [r3, #32]
 5300 0052 08E0     		b	.L210
 5301              	.L208:
2322:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2323:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     } 
2324:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2325:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2326:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 5302              		.loc 1 2326 45
 5303 0054 7B68     		ldr	r3, [r7, #4]
 5304 0056 1B6A     		ldr	r3, [r3, #32]
 5305              		.loc 1 2326 57
 5306 0058 591C     		adds	r1, r3, #1
 5307 005a 7A68     		ldr	r2, [r7, #4]
 5308 005c 1162     		str	r1, [r2, #32]
 5309              		.loc 1 2326 39
 5310 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5311              		.loc 1 2326 12
 5312 0060 7B68     		ldr	r3, [r7, #4]
 5313 0062 1B68     		ldr	r3, [r3]
 5314              		.loc 1 2326 27
 5315 0064 5A60     		str	r2, [r3, #4]
 5316              	.L210:
2327:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2328:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2329:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(--huart->TxXferCount == 0U)
 5317              		.loc 1 2329 15
 5318 0066 7B68     		ldr	r3, [r7, #4]
 5319 0068 DB8C     		ldrh	r3, [r3, #38]	@ movhi
 5320 006a 9BB2     		uxth	r3, r3
 5321              		.loc 1 2329 8
 5322 006c 013B     		subs	r3, r3, #1
 5323 006e 9BB2     		uxth	r3, r3
 5324              		.loc 1 2329 7
 5325 0070 7A68     		ldr	r2, [r7, #4]
 5326 0072 1946     		mov	r1, r3	@ movhi
 5327 0074 D184     		strh	r1, [r2, #38]	@ movhi
 5328 0076 002B     		cmp	r3, #0
 5329 0078 0FD1     		bne	.L211
2330:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2331:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2332:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 5330              		.loc 1 2332 7
 5331 007a 7B68     		ldr	r3, [r7, #4]
 5332 007c 1B68     		ldr	r3, [r3]
 5333 007e DA68     		ldr	r2, [r3, #12]
 5334 0080 7B68     		ldr	r3, [r7, #4]
 5335 0082 1B68     		ldr	r3, [r3]
 5336 0084 22F08002 		bic	r2, r2, #128
ARM GAS  /tmp/ccOBznmR.s 			page 134


 5337 0088 DA60     		str	r2, [r3, #12]
2333:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2334:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */    
2335:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 5338              		.loc 1 2335 7
 5339 008a 7B68     		ldr	r3, [r7, #4]
 5340 008c 1B68     		ldr	r3, [r3]
 5341 008e DA68     		ldr	r2, [r3, #12]
 5342 0090 7B68     		ldr	r3, [r7, #4]
 5343 0092 1B68     		ldr	r3, [r3]
 5344 0094 42F04002 		orr	r2, r2, #64
 5345 0098 DA60     		str	r2, [r3, #12]
 5346              	.L211:
2336:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2337:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 5347              		.loc 1 2337 12
 5348 009a 0023     		movs	r3, #0
 5349 009c 00E0     		b	.L212
 5350              	.L207:
2338:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2339:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2340:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2341:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 5351              		.loc 1 2341 12
 5352 009e 0223     		movs	r3, #2
 5353              	.L212:
2342:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2343:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5354              		.loc 1 2343 1
 5355 00a0 1846     		mov	r0, r3
 5356 00a2 1437     		adds	r7, r7, #20
 5357              	.LCFI281:
 5358              		.cfi_def_cfa_offset 4
 5359 00a4 BD46     		mov	sp, r7
 5360              	.LCFI282:
 5361              		.cfi_def_cfa_register 13
 5362              		@ sp needed
 5363 00a6 5DF8047B 		ldr	r7, [sp], #4
 5364              	.LCFI283:
 5365              		.cfi_restore 7
 5366              		.cfi_def_cfa_offset 0
 5367 00aa 7047     		bx	lr
 5368              		.cfi_endproc
 5369              	.LFE177:
 5371              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 5372              		.align	1
 5373              		.syntax unified
 5374              		.thumb
 5375              		.thumb_func
 5376              		.fpu fpv4-sp-d16
 5378              	UART_EndTransmit_IT:
 5379              	.LFB178:
2344:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2345:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2346:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2347:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2348:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
ARM GAS  /tmp/ccOBznmR.s 			page 135


2349:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2350:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2351:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2352:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5380              		.loc 1 2352 1
 5381              		.cfi_startproc
 5382              		@ args = 0, pretend = 0, frame = 8
 5383              		@ frame_needed = 1, uses_anonymous_args = 0
 5384 0000 80B5     		push	{r7, lr}
 5385              	.LCFI284:
 5386              		.cfi_def_cfa_offset 8
 5387              		.cfi_offset 7, -8
 5388              		.cfi_offset 14, -4
 5389 0002 82B0     		sub	sp, sp, #8
 5390              	.LCFI285:
 5391              		.cfi_def_cfa_offset 16
 5392 0004 00AF     		add	r7, sp, #0
 5393              	.LCFI286:
 5394              		.cfi_def_cfa_register 7
 5395 0006 7860     		str	r0, [r7, #4]
2353:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
2354:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 5396              		.loc 1 2354 3
 5397 0008 7B68     		ldr	r3, [r7, #4]
 5398 000a 1B68     		ldr	r3, [r3]
 5399 000c DA68     		ldr	r2, [r3, #12]
 5400 000e 7B68     		ldr	r3, [r7, #4]
 5401 0010 1B68     		ldr	r3, [r3]
 5402 0012 22F04002 		bic	r2, r2, #64
 5403 0016 DA60     		str	r2, [r3, #12]
2355:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2356:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2357:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5404              		.loc 1 2357 17
 5405 0018 7B68     		ldr	r3, [r7, #4]
 5406 001a 2022     		movs	r2, #32
 5407 001c 83F83920 		strb	r2, [r3, #57]
2358:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
2359:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 5408              		.loc 1 2359 3
 5409 0020 7868     		ldr	r0, [r7, #4]
 5410 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
2360:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2361:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 5411              		.loc 1 2361 10
 5412 0026 0023     		movs	r3, #0
2362:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5413              		.loc 1 2362 1
 5414 0028 1846     		mov	r0, r3
 5415 002a 0837     		adds	r7, r7, #8
 5416              	.LCFI287:
 5417              		.cfi_def_cfa_offset 8
 5418 002c BD46     		mov	sp, r7
 5419              	.LCFI288:
 5420              		.cfi_def_cfa_register 13
 5421              		@ sp needed
 5422 002e 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccOBznmR.s 			page 136


 5423              		.cfi_endproc
 5424              	.LFE178:
 5426              		.section	.text.UART_Receive_IT,"ax",%progbits
 5427              		.align	1
 5428              		.syntax unified
 5429              		.thumb
 5430              		.thumb_func
 5431              		.fpu fpv4-sp-d16
 5433              	UART_Receive_IT:
 5434              	.LFB179:
2363:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2364:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2365:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
2366:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2367:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2368:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2369:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2370:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2371:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5435              		.loc 1 2371 1
 5436              		.cfi_startproc
 5437              		@ args = 0, pretend = 0, frame = 16
 5438              		@ frame_needed = 1, uses_anonymous_args = 0
 5439 0000 80B5     		push	{r7, lr}
 5440              	.LCFI289:
 5441              		.cfi_def_cfa_offset 8
 5442              		.cfi_offset 7, -8
 5443              		.cfi_offset 14, -4
 5444 0002 84B0     		sub	sp, sp, #16
 5445              	.LCFI290:
 5446              		.cfi_def_cfa_offset 24
 5447 0004 00AF     		add	r7, sp, #0
 5448              	.LCFI291:
 5449              		.cfi_def_cfa_register 7
 5450 0006 7860     		str	r0, [r7, #4]
2372:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
2373:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2374:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2375:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX) 
 5451              		.loc 1 2375 11
 5452 0008 7B68     		ldr	r3, [r7, #4]
 5453 000a 93F83A30 		ldrb	r3, [r3, #58]
 5454 000e DBB2     		uxtb	r3, r3
 5455              		.loc 1 2375 5
 5456 0010 222B     		cmp	r3, #34
 5457 0012 69D1     		bne	.L216
2376:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2377:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 5458              		.loc 1 2377 19
 5459 0014 7B68     		ldr	r3, [r7, #4]
 5460 0016 9B68     		ldr	r3, [r3, #8]
 5461              		.loc 1 2377 7
 5462 0018 B3F5805F 		cmp	r3, #4096
 5463 001c 23D1     		bne	.L217
2378:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2379:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr;
 5464              		.loc 1 2379 11
ARM GAS  /tmp/ccOBznmR.s 			page 137


 5465 001e 7B68     		ldr	r3, [r7, #4]
 5466 0020 9B6A     		ldr	r3, [r3, #40]
 5467 0022 FB60     		str	r3, [r7, #12]
2380:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 5468              		.loc 1 2380 21
 5469 0024 7B68     		ldr	r3, [r7, #4]
 5470 0026 1B69     		ldr	r3, [r3, #16]
 5471              		.loc 1 2380 9
 5472 0028 002B     		cmp	r3, #0
 5473 002a 0ED1     		bne	.L218
2381:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2382:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 5474              		.loc 1 2382 32
 5475 002c 7B68     		ldr	r3, [r7, #4]
 5476 002e 1B68     		ldr	r3, [r3]
 5477              		.loc 1 2382 42
 5478 0030 5B68     		ldr	r3, [r3, #4]
 5479              		.loc 1 2382 16
 5480 0032 9BB2     		uxth	r3, r3
 5481 0034 C3F30803 		ubfx	r3, r3, #0, #9
 5482 0038 9AB2     		uxth	r2, r3
 5483              		.loc 1 2382 14
 5484 003a FB68     		ldr	r3, [r7, #12]
 5485 003c 1A80     		strh	r2, [r3]	@ movhi
2383:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 5486              		.loc 1 2383 27
 5487 003e 7B68     		ldr	r3, [r7, #4]
 5488 0040 9B6A     		ldr	r3, [r3, #40]
 5489 0042 9A1C     		adds	r2, r3, #2
 5490 0044 7B68     		ldr	r3, [r7, #4]
 5491 0046 9A62     		str	r2, [r3, #40]
 5492 0048 29E0     		b	.L219
 5493              	.L218:
2384:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2385:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2386:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2387:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 5494              		.loc 1 2387 32
 5495 004a 7B68     		ldr	r3, [r7, #4]
 5496 004c 1B68     		ldr	r3, [r3]
 5497              		.loc 1 2387 42
 5498 004e 5B68     		ldr	r3, [r3, #4]
 5499              		.loc 1 2387 16
 5500 0050 9BB2     		uxth	r3, r3
 5501 0052 DBB2     		uxtb	r3, r3
 5502 0054 9AB2     		uxth	r2, r3
 5503              		.loc 1 2387 14
 5504 0056 FB68     		ldr	r3, [r7, #12]
 5505 0058 1A80     		strh	r2, [r3]	@ movhi
2388:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 5506              		.loc 1 2388 27
 5507 005a 7B68     		ldr	r3, [r7, #4]
 5508 005c 9B6A     		ldr	r3, [r3, #40]
 5509 005e 5A1C     		adds	r2, r3, #1
 5510 0060 7B68     		ldr	r3, [r7, #4]
 5511 0062 9A62     		str	r2, [r3, #40]
 5512 0064 1BE0     		b	.L219
ARM GAS  /tmp/ccOBznmR.s 			page 138


 5513              	.L217:
2389:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2390:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2391:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2392:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2393:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 5514              		.loc 1 2393 21
 5515 0066 7B68     		ldr	r3, [r7, #4]
 5516 0068 1B69     		ldr	r3, [r3, #16]
 5517              		.loc 1 2393 9
 5518 006a 002B     		cmp	r3, #0
 5519 006c 0AD1     		bne	.L220
2394:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2395:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 5520              		.loc 1 2395 47
 5521 006e 7B68     		ldr	r3, [r7, #4]
 5522 0070 1B68     		ldr	r3, [r3]
 5523              		.loc 1 2395 57
 5524 0072 5868     		ldr	r0, [r3, #4]
 5525              		.loc 1 2395 15
 5526 0074 7B68     		ldr	r3, [r7, #4]
 5527 0076 9B6A     		ldr	r3, [r3, #40]
 5528              		.loc 1 2395 27
 5529 0078 591C     		adds	r1, r3, #1
 5530 007a 7A68     		ldr	r2, [r7, #4]
 5531 007c 9162     		str	r1, [r2, #40]
 5532              		.loc 1 2395 32
 5533 007e C2B2     		uxtb	r2, r0
 5534              		.loc 1 2395 30
 5535 0080 1A70     		strb	r2, [r3]
 5536 0082 0CE0     		b	.L219
 5537              	.L220:
2396:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2397:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2398:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2399:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 5538              		.loc 1 2399 47
 5539 0084 7B68     		ldr	r3, [r7, #4]
 5540 0086 1B68     		ldr	r3, [r3]
 5541              		.loc 1 2399 57
 5542 0088 5B68     		ldr	r3, [r3, #4]
 5543              		.loc 1 2399 32
 5544 008a DAB2     		uxtb	r2, r3
 5545              		.loc 1 2399 15
 5546 008c 7B68     		ldr	r3, [r7, #4]
 5547 008e 9B6A     		ldr	r3, [r3, #40]
 5548              		.loc 1 2399 27
 5549 0090 581C     		adds	r0, r3, #1
 5550 0092 7968     		ldr	r1, [r7, #4]
 5551 0094 8862     		str	r0, [r1, #40]
 5552              		.loc 1 2399 32
 5553 0096 02F07F02 		and	r2, r2, #127
 5554 009a D2B2     		uxtb	r2, r2
 5555              		.loc 1 2399 30
 5556 009c 1A70     		strb	r2, [r3]
 5557              	.L219:
2400:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
ARM GAS  /tmp/ccOBznmR.s 			page 139


2401:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2402:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2403:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
 5558              		.loc 1 2403 15
 5559 009e 7B68     		ldr	r3, [r7, #4]
 5560 00a0 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5561 00a2 9BB2     		uxth	r3, r3
 5562              		.loc 1 2403 8
 5563 00a4 013B     		subs	r3, r3, #1
 5564 00a6 9BB2     		uxth	r3, r3
 5565              		.loc 1 2403 7
 5566 00a8 7A68     		ldr	r2, [r7, #4]
 5567 00aa 1946     		mov	r1, r3	@ movhi
 5568 00ac D185     		strh	r1, [r2, #46]	@ movhi
 5569 00ae 002B     		cmp	r3, #0
 5570 00b0 18D1     		bne	.L221
2404:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2405:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2406:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 5571              		.loc 1 2406 7
 5572 00b2 7B68     		ldr	r3, [r7, #4]
 5573 00b4 1B68     		ldr	r3, [r3]
 5574 00b6 DA68     		ldr	r2, [r3, #12]
 5575 00b8 7B68     		ldr	r3, [r7, #4]
 5576 00ba 1B68     		ldr	r3, [r3]
 5577 00bc 22F49072 		bic	r2, r2, #288
 5578 00c0 DA60     		str	r2, [r3, #12]
2407:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2408:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2409:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5579              		.loc 1 2409 7
 5580 00c2 7B68     		ldr	r3, [r7, #4]
 5581 00c4 1B68     		ldr	r3, [r3]
 5582 00c6 5A69     		ldr	r2, [r3, #20]
 5583 00c8 7B68     		ldr	r3, [r7, #4]
 5584 00ca 1B68     		ldr	r3, [r3]
 5585 00cc 22F00102 		bic	r2, r2, #1
 5586 00d0 5A61     		str	r2, [r3, #20]
2410:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2411:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2412:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 5587              		.loc 1 2412 22
 5588 00d2 7B68     		ldr	r3, [r7, #4]
 5589 00d4 2022     		movs	r2, #32
 5590 00d6 83F83A20 		strb	r2, [r3, #58]
2413:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      
2414:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 5591              		.loc 1 2414 7
 5592 00da 7868     		ldr	r0, [r7, #4]
 5593 00dc FFF7FEFF 		bl	HAL_UART_RxCpltCallback
2415:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2416:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
 5594              		.loc 1 2416 14
 5595 00e0 0023     		movs	r3, #0
 5596 00e2 02E0     		b	.L222
 5597              	.L221:
2417:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  /tmp/ccOBznmR.s 			page 140


2418:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 5598              		.loc 1 2418 12
 5599 00e4 0023     		movs	r3, #0
 5600 00e6 00E0     		b	.L222
 5601              	.L216:
2419:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2420:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2421:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2422:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 5602              		.loc 1 2422 12
 5603 00e8 0223     		movs	r3, #2
 5604              	.L222:
2423:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2424:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5605              		.loc 1 2424 1
 5606 00ea 1846     		mov	r0, r3
 5607 00ec 1037     		adds	r7, r7, #16
 5608              	.LCFI292:
 5609              		.cfi_def_cfa_offset 8
 5610 00ee BD46     		mov	sp, r7
 5611              	.LCFI293:
 5612              		.cfi_def_cfa_register 13
 5613              		@ sp needed
 5614 00f0 80BD     		pop	{r7, pc}
 5615              		.cfi_endproc
 5616              	.LFE179:
 5618              		.section	.text.UART_SetConfig,"ax",%progbits
 5619              		.align	1
 5620              		.syntax unified
 5621              		.thumb
 5622              		.thumb_func
 5623              		.fpu fpv4-sp-d16
 5625              	UART_SetConfig:
 5626              	.LFB180:
2425:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2426:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2427:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral. 
2428:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2429:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2430:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2431:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2432:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
2433:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5627              		.loc 1 2433 1
 5628              		.cfi_startproc
 5629              		@ args = 0, pretend = 0, frame = 16
 5630              		@ frame_needed = 1, uses_anonymous_args = 0
 5631 0000 B0B5     		push	{r4, r5, r7, lr}
 5632              	.LCFI294:
 5633              		.cfi_def_cfa_offset 16
 5634              		.cfi_offset 4, -16
 5635              		.cfi_offset 5, -12
 5636              		.cfi_offset 7, -8
 5637              		.cfi_offset 14, -4
 5638 0002 84B0     		sub	sp, sp, #16
 5639              	.LCFI295:
 5640              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/ccOBznmR.s 			page 141


 5641 0004 00AF     		add	r7, sp, #0
 5642              	.LCFI296:
 5643              		.cfi_def_cfa_register 7
 5644 0006 7860     		str	r0, [r7, #4]
2434:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 5645              		.loc 1 2434 12
 5646 0008 0023     		movs	r3, #0
 5647 000a FB60     		str	r3, [r7, #12]
2435:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2436:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2437:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2438:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2439:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2440:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2441:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2442:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2443:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR2;
 5648              		.loc 1 2443 17
 5649 000c 7B68     		ldr	r3, [r7, #4]
 5650 000e 1B68     		ldr	r3, [r3]
 5651              		.loc 1 2443 10
 5652 0010 1B69     		ldr	r3, [r3, #16]
 5653 0012 FB60     		str	r3, [r7, #12]
2444:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2445:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear STOP[13:12] bits */
2446:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 5654              		.loc 1 2446 10
 5655 0014 FB68     		ldr	r3, [r7, #12]
 5656 0016 23F44053 		bic	r3, r3, #12288
 5657 001a FB60     		str	r3, [r7, #12]
2447:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2448:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according to huart->Init.StopBits value */
2449:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.StopBits;
 5658              		.loc 1 2449 34
 5659 001c 7B68     		ldr	r3, [r7, #4]
 5660 001e DB68     		ldr	r3, [r3, #12]
 5661              		.loc 1 2449 10
 5662 0020 FA68     		ldr	r2, [r7, #12]
 5663 0022 1343     		orrs	r3, r3, r2
 5664 0024 FB60     		str	r3, [r7, #12]
2450:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2451:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR2 */
2452:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR2, (uint32_t)tmpreg);
 5665              		.loc 1 2452 3
 5666 0026 7B68     		ldr	r3, [r7, #4]
 5667 0028 1B68     		ldr	r3, [r3]
 5668 002a FA68     		ldr	r2, [r7, #12]
 5669 002c 1A61     		str	r2, [r3, #16]
2453:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2454:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2455:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 5670              		.loc 1 2455 17
 5671 002e 7B68     		ldr	r3, [r7, #4]
 5672 0030 1B68     		ldr	r3, [r3]
 5673              		.loc 1 2455 10
 5674 0032 DB68     		ldr	r3, [r3, #12]
 5675 0034 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccOBznmR.s 			page 142


2456:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2457:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE and RE bits */
2458:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | \
 5676              		.loc 1 2458 10
 5677 0036 FB68     		ldr	r3, [r7, #12]
 5678 0038 23F41643 		bic	r3, r3, #38400
 5679 003c 23F00C03 		bic	r3, r3, #12
 5680 0040 FB60     		str	r3, [r7, #12]
2459:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                    USART_CR1_RE | USART_CR1_OVER8));
2460:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2461:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode: 
2462:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value 
2463:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
2464:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
2465:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
2466:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.
 5681              		.loc 1 2466 34
 5682 0042 7B68     		ldr	r3, [r7, #4]
 5683 0044 9A68     		ldr	r2, [r3, #8]
 5684              		.loc 1 2466 59
 5685 0046 7B68     		ldr	r3, [r7, #4]
 5686 0048 1B69     		ldr	r3, [r3, #16]
 5687              		.loc 1 2466 46
 5688 004a 1A43     		orrs	r2, r2, r3
 5689              		.loc 1 2466 80
 5690 004c 7B68     		ldr	r3, [r7, #4]
 5691 004e 5B69     		ldr	r3, [r3, #20]
 5692              		.loc 1 2466 67
 5693 0050 1A43     		orrs	r2, r2, r3
 5694              		.loc 1 2466 99
 5695 0052 7B68     		ldr	r3, [r7, #4]
 5696 0054 DB69     		ldr	r3, [r3, #28]
 5697              		.loc 1 2466 86
 5698 0056 1343     		orrs	r3, r3, r2
 5699              		.loc 1 2466 10
 5700 0058 FA68     		ldr	r2, [r7, #12]
 5701 005a 1343     		orrs	r3, r3, r2
 5702 005c FB60     		str	r3, [r7, #12]
2467:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2468:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2469:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 5703              		.loc 1 2469 3
 5704 005e 7B68     		ldr	r3, [r7, #4]
 5705 0060 1B68     		ldr	r3, [r3]
 5706 0062 FA68     		ldr	r2, [r7, #12]
 5707 0064 DA60     		str	r2, [r3, #12]
2470:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2471:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/  
2472:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR3;
 5708              		.loc 1 2472 17
 5709 0066 7B68     		ldr	r3, [r7, #4]
 5710 0068 1B68     		ldr	r3, [r3]
 5711              		.loc 1 2472 10
 5712 006a 5B69     		ldr	r3, [r3, #20]
 5713 006c FB60     		str	r3, [r7, #12]
2473:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2474:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear CTSE and RTSE bits */
ARM GAS  /tmp/ccOBznmR.s 			page 143


2475:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE));
 5714              		.loc 1 2475 10
 5715 006e FB68     		ldr	r3, [r7, #12]
 5716 0070 23F44073 		bic	r3, r3, #768
 5717 0074 FB60     		str	r3, [r7, #12]
2476:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2477:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
2478:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= huart->Init.HwFlowCtl;
 5718              		.loc 1 2478 24
 5719 0076 7B68     		ldr	r3, [r7, #4]
 5720 0078 9B69     		ldr	r3, [r3, #24]
 5721              		.loc 1 2478 10
 5722 007a FA68     		ldr	r2, [r7, #12]
 5723 007c 1343     		orrs	r3, r3, r2
 5724 007e FB60     		str	r3, [r7, #12]
2479:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2480:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR3 */
2481:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR3, (uint32_t)tmpreg);
 5725              		.loc 1 2481 3
 5726 0080 7B68     		ldr	r3, [r7, #4]
 5727 0082 1B68     		ldr	r3, [r3]
 5728 0084 FA68     		ldr	r2, [r7, #12]
 5729 0086 5A61     		str	r2, [r3, #20]
2482:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2483:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Over Sampling */
2484:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 5730              		.loc 1 2484 17
 5731 0088 7B68     		ldr	r3, [r7, #4]
 5732 008a DB69     		ldr	r3, [r3, #28]
 5733              		.loc 1 2484 5
 5734 008c B3F5004F 		cmp	r3, #32768
 5735 0090 40F0E480 		bne	.L224
2485:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2486:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2487:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) 
2488:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
 5736              		.loc 1 2488 14
 5737 0094 7B68     		ldr	r3, [r7, #4]
 5738 0096 1B68     		ldr	r3, [r3]
 5739              		.loc 1 2488 7
 5740 0098 AB4A     		ldr	r2, .L232
 5741 009a 9342     		cmp	r3, r2
 5742 009c 04D0     		beq	.L225
 5743              		.loc 1 2488 45 discriminator 1
 5744 009e 7B68     		ldr	r3, [r7, #4]
 5745 00a0 1B68     		ldr	r3, [r3]
 5746              		.loc 1 2488 36 discriminator 1
 5747 00a2 AA4A     		ldr	r2, .L232+4
 5748 00a4 9342     		cmp	r3, r2
 5749 00a6 6CD1     		bne	.L226
 5750              	.L225:
2489:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2490:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 5751              		.loc 1 2490 30
 5752 00a8 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5753 00ac 0246     		mov	r2, r0
 5754 00ae 1346     		mov	r3, r2
ARM GAS  /tmp/ccOBznmR.s 			page 144


 5755 00b0 9B00     		lsls	r3, r3, #2
 5756 00b2 1344     		add	r3, r3, r2
 5757 00b4 9A00     		lsls	r2, r3, #2
 5758 00b6 1A44     		add	r2, r2, r3
 5759 00b8 7B68     		ldr	r3, [r7, #4]
 5760 00ba 5B68     		ldr	r3, [r3, #4]
 5761 00bc 5B00     		lsls	r3, r3, #1
 5762 00be B2FBF3F3 		udiv	r3, r2, r3
 5763 00c2 A34A     		ldr	r2, .L232+8
 5764 00c4 A2FB0323 		umull	r2, r3, r2, r3
 5765 00c8 5B09     		lsrs	r3, r3, #5
 5766 00ca 1C01     		lsls	r4, r3, #4
 5767 00cc FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5768 00d0 0246     		mov	r2, r0
 5769 00d2 1346     		mov	r3, r2
 5770 00d4 9B00     		lsls	r3, r3, #2
 5771 00d6 1344     		add	r3, r3, r2
 5772 00d8 9A00     		lsls	r2, r3, #2
 5773 00da 1A44     		add	r2, r2, r3
 5774 00dc 7B68     		ldr	r3, [r7, #4]
 5775 00de 5B68     		ldr	r3, [r3, #4]
 5776 00e0 5B00     		lsls	r3, r3, #1
 5777 00e2 B2FBF3F5 		udiv	r5, r2, r3
 5778 00e6 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5779 00ea 0246     		mov	r2, r0
 5780 00ec 1346     		mov	r3, r2
 5781 00ee 9B00     		lsls	r3, r3, #2
 5782 00f0 1344     		add	r3, r3, r2
 5783 00f2 9A00     		lsls	r2, r3, #2
 5784 00f4 1A44     		add	r2, r2, r3
 5785 00f6 7B68     		ldr	r3, [r7, #4]
 5786 00f8 5B68     		ldr	r3, [r3, #4]
 5787 00fa 5B00     		lsls	r3, r3, #1
 5788 00fc B2FBF3F3 		udiv	r3, r2, r3
 5789 0100 934A     		ldr	r2, .L232+8
 5790 0102 A2FB0323 		umull	r2, r3, r2, r3
 5791 0106 5B09     		lsrs	r3, r3, #5
 5792 0108 6422     		movs	r2, #100
 5793 010a 02FB03F3 		mul	r3, r2, r3
 5794 010e EB1A     		subs	r3, r5, r3
 5795 0110 DB00     		lsls	r3, r3, #3
 5796 0112 3233     		adds	r3, r3, #50
 5797 0114 8E4A     		ldr	r2, .L232+8
 5798 0116 A2FB0323 		umull	r2, r3, r2, r3
 5799 011a 5B09     		lsrs	r3, r3, #5
 5800 011c 5B00     		lsls	r3, r3, #1
 5801 011e 03F4F873 		and	r3, r3, #496
 5802 0122 1C44     		add	r4, r4, r3
 5803 0124 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5804 0128 0246     		mov	r2, r0
 5805 012a 1346     		mov	r3, r2
 5806 012c 9B00     		lsls	r3, r3, #2
 5807 012e 1344     		add	r3, r3, r2
 5808 0130 9A00     		lsls	r2, r3, #2
 5809 0132 1A44     		add	r2, r2, r3
 5810 0134 7B68     		ldr	r3, [r7, #4]
 5811 0136 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccOBznmR.s 			page 145


 5812 0138 5B00     		lsls	r3, r3, #1
 5813 013a B2FBF3F5 		udiv	r5, r2, r3
 5814 013e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5815 0142 0246     		mov	r2, r0
 5816 0144 1346     		mov	r3, r2
 5817 0146 9B00     		lsls	r3, r3, #2
 5818 0148 1344     		add	r3, r3, r2
 5819 014a 9A00     		lsls	r2, r3, #2
 5820 014c 1A44     		add	r2, r2, r3
 5821 014e 7B68     		ldr	r3, [r7, #4]
 5822 0150 5B68     		ldr	r3, [r3, #4]
 5823 0152 5B00     		lsls	r3, r3, #1
 5824 0154 B2FBF3F3 		udiv	r3, r2, r3
 5825 0158 7D4A     		ldr	r2, .L232+8
 5826 015a A2FB0323 		umull	r2, r3, r2, r3
 5827 015e 5B09     		lsrs	r3, r3, #5
 5828 0160 6422     		movs	r2, #100
 5829 0162 02FB03F3 		mul	r3, r2, r3
 5830 0166 EB1A     		subs	r3, r5, r3
 5831 0168 DB00     		lsls	r3, r3, #3
 5832 016a 3233     		adds	r3, r3, #50
 5833 016c 784A     		ldr	r2, .L232+8
 5834 016e A2FB0323 		umull	r2, r3, r2, r3
 5835 0172 5B09     		lsrs	r3, r3, #5
 5836 0174 03F00702 		and	r2, r3, #7
 5837              		.loc 1 2490 12
 5838 0178 7B68     		ldr	r3, [r7, #4]
 5839 017a 1B68     		ldr	r3, [r3]
 5840              		.loc 1 2490 30
 5841 017c 2244     		add	r2, r2, r4
 5842              		.loc 1 2490 28
 5843 017e 9A60     		str	r2, [r3, #8]
 5844 0180 54E1     		b	.L228
 5845              	.L226:
2491:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2492:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2493:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Instance == USART1)
2494:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2495:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2496:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }	
2497:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
2498:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2499:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2500:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 5846              		.loc 1 2500 30
 5847 0182 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5848 0186 0246     		mov	r2, r0
 5849 0188 1346     		mov	r3, r2
 5850 018a 9B00     		lsls	r3, r3, #2
 5851 018c 1344     		add	r3, r3, r2
 5852 018e 9A00     		lsls	r2, r3, #2
 5853 0190 1A44     		add	r2, r2, r3
 5854 0192 7B68     		ldr	r3, [r7, #4]
 5855 0194 5B68     		ldr	r3, [r3, #4]
 5856 0196 5B00     		lsls	r3, r3, #1
 5857 0198 B2FBF3F3 		udiv	r3, r2, r3
 5858 019c 6C4A     		ldr	r2, .L232+8
ARM GAS  /tmp/ccOBznmR.s 			page 146


 5859 019e A2FB0323 		umull	r2, r3, r2, r3
 5860 01a2 5B09     		lsrs	r3, r3, #5
 5861 01a4 1C01     		lsls	r4, r3, #4
 5862 01a6 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5863 01aa 0246     		mov	r2, r0
 5864 01ac 1346     		mov	r3, r2
 5865 01ae 9B00     		lsls	r3, r3, #2
 5866 01b0 1344     		add	r3, r3, r2
 5867 01b2 9A00     		lsls	r2, r3, #2
 5868 01b4 1A44     		add	r2, r2, r3
 5869 01b6 7B68     		ldr	r3, [r7, #4]
 5870 01b8 5B68     		ldr	r3, [r3, #4]
 5871 01ba 5B00     		lsls	r3, r3, #1
 5872 01bc B2FBF3F5 		udiv	r5, r2, r3
 5873 01c0 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5874 01c4 0246     		mov	r2, r0
 5875 01c6 1346     		mov	r3, r2
 5876 01c8 9B00     		lsls	r3, r3, #2
 5877 01ca 1344     		add	r3, r3, r2
 5878 01cc 9A00     		lsls	r2, r3, #2
 5879 01ce 1A44     		add	r2, r2, r3
 5880 01d0 7B68     		ldr	r3, [r7, #4]
 5881 01d2 5B68     		ldr	r3, [r3, #4]
 5882 01d4 5B00     		lsls	r3, r3, #1
 5883 01d6 B2FBF3F3 		udiv	r3, r2, r3
 5884 01da 5D4A     		ldr	r2, .L232+8
 5885 01dc A2FB0323 		umull	r2, r3, r2, r3
 5886 01e0 5B09     		lsrs	r3, r3, #5
 5887 01e2 6422     		movs	r2, #100
 5888 01e4 02FB03F3 		mul	r3, r2, r3
 5889 01e8 EB1A     		subs	r3, r5, r3
 5890 01ea DB00     		lsls	r3, r3, #3
 5891 01ec 3233     		adds	r3, r3, #50
 5892 01ee 584A     		ldr	r2, .L232+8
 5893 01f0 A2FB0323 		umull	r2, r3, r2, r3
 5894 01f4 5B09     		lsrs	r3, r3, #5
 5895 01f6 5B00     		lsls	r3, r3, #1
 5896 01f8 03F4F873 		and	r3, r3, #496
 5897 01fc 1C44     		add	r4, r4, r3
 5898 01fe FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5899 0202 0246     		mov	r2, r0
 5900 0204 1346     		mov	r3, r2
 5901 0206 9B00     		lsls	r3, r3, #2
 5902 0208 1344     		add	r3, r3, r2
 5903 020a 9A00     		lsls	r2, r3, #2
 5904 020c 1A44     		add	r2, r2, r3
 5905 020e 7B68     		ldr	r3, [r7, #4]
 5906 0210 5B68     		ldr	r3, [r3, #4]
 5907 0212 5B00     		lsls	r3, r3, #1
 5908 0214 B2FBF3F5 		udiv	r5, r2, r3
 5909 0218 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5910 021c 0246     		mov	r2, r0
 5911 021e 1346     		mov	r3, r2
 5912 0220 9B00     		lsls	r3, r3, #2
 5913 0222 1344     		add	r3, r3, r2
 5914 0224 9A00     		lsls	r2, r3, #2
 5915 0226 1A44     		add	r2, r2, r3
ARM GAS  /tmp/ccOBznmR.s 			page 147


 5916 0228 7B68     		ldr	r3, [r7, #4]
 5917 022a 5B68     		ldr	r3, [r3, #4]
 5918 022c 5B00     		lsls	r3, r3, #1
 5919 022e B2FBF3F3 		udiv	r3, r2, r3
 5920 0232 474A     		ldr	r2, .L232+8
 5921 0234 A2FB0323 		umull	r2, r3, r2, r3
 5922 0238 5B09     		lsrs	r3, r3, #5
 5923 023a 6422     		movs	r2, #100
 5924 023c 02FB03F3 		mul	r3, r2, r3
 5925 0240 EB1A     		subs	r3, r5, r3
 5926 0242 DB00     		lsls	r3, r3, #3
 5927 0244 3233     		adds	r3, r3, #50
 5928 0246 424A     		ldr	r2, .L232+8
 5929 0248 A2FB0323 		umull	r2, r3, r2, r3
 5930 024c 5B09     		lsrs	r3, r3, #5
 5931 024e 03F00702 		and	r2, r3, #7
 5932              		.loc 1 2500 12
 5933 0252 7B68     		ldr	r3, [r7, #4]
 5934 0254 1B68     		ldr	r3, [r3]
 5935              		.loc 1 2500 30
 5936 0256 2244     		add	r2, r2, r4
 5937              		.loc 1 2500 28
 5938 0258 9A60     		str	r2, [r3, #8]
2501:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2502:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2503:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2504:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2505:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2506:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) 
2507:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
2508:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2509:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2510:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2511:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2512:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Instance == USART1)
2513:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2514:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2515:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }	
2516:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
2517:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2518:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2519:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
2520:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2521:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2522:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5939              		.loc 1 2522 1
 5940 025a E7E0     		b	.L231
 5941              	.L224:
2507:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 5942              		.loc 1 2507 14
 5943 025c 7B68     		ldr	r3, [r7, #4]
 5944 025e 1B68     		ldr	r3, [r3]
2507:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 5945              		.loc 1 2507 7
 5946 0260 394A     		ldr	r2, .L232
 5947 0262 9342     		cmp	r3, r2
 5948 0264 04D0     		beq	.L229
ARM GAS  /tmp/ccOBznmR.s 			page 148


2507:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 5949              		.loc 1 2507 45 discriminator 1
 5950 0266 7B68     		ldr	r3, [r7, #4]
 5951 0268 1B68     		ldr	r3, [r3]
2507:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 5952              		.loc 1 2507 36 discriminator 1
 5953 026a 384A     		ldr	r2, .L232+4
 5954 026c 9342     		cmp	r3, r2
 5955 026e 71D1     		bne	.L230
 5956              	.L229:
2509:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5957              		.loc 1 2509 30
 5958 0270 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5959 0274 0246     		mov	r2, r0
 5960 0276 1346     		mov	r3, r2
 5961 0278 9B00     		lsls	r3, r3, #2
 5962 027a 1344     		add	r3, r3, r2
 5963 027c 9A00     		lsls	r2, r3, #2
 5964 027e 1A44     		add	r2, r2, r3
 5965 0280 7B68     		ldr	r3, [r7, #4]
 5966 0282 5B68     		ldr	r3, [r3, #4]
 5967 0284 9B00     		lsls	r3, r3, #2
 5968 0286 B2FBF3F3 		udiv	r3, r2, r3
 5969 028a 314A     		ldr	r2, .L232+8
 5970 028c A2FB0323 		umull	r2, r3, r2, r3
 5971 0290 5B09     		lsrs	r3, r3, #5
 5972 0292 1C01     		lsls	r4, r3, #4
 5973 0294 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5974 0298 0246     		mov	r2, r0
 5975 029a 1346     		mov	r3, r2
 5976 029c 9B00     		lsls	r3, r3, #2
 5977 029e 1344     		add	r3, r3, r2
 5978 02a0 9A00     		lsls	r2, r3, #2
 5979 02a2 1A44     		add	r2, r2, r3
 5980 02a4 7B68     		ldr	r3, [r7, #4]
 5981 02a6 5B68     		ldr	r3, [r3, #4]
 5982 02a8 9B00     		lsls	r3, r3, #2
 5983 02aa B2FBF3F5 		udiv	r5, r2, r3
 5984 02ae FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5985 02b2 0246     		mov	r2, r0
 5986 02b4 1346     		mov	r3, r2
 5987 02b6 9B00     		lsls	r3, r3, #2
 5988 02b8 1344     		add	r3, r3, r2
 5989 02ba 9A00     		lsls	r2, r3, #2
 5990 02bc 1A44     		add	r2, r2, r3
 5991 02be 7B68     		ldr	r3, [r7, #4]
 5992 02c0 5B68     		ldr	r3, [r3, #4]
 5993 02c2 9B00     		lsls	r3, r3, #2
 5994 02c4 B2FBF3F3 		udiv	r3, r2, r3
 5995 02c8 214A     		ldr	r2, .L232+8
 5996 02ca A2FB0323 		umull	r2, r3, r2, r3
 5997 02ce 5B09     		lsrs	r3, r3, #5
 5998 02d0 6422     		movs	r2, #100
 5999 02d2 02FB03F3 		mul	r3, r2, r3
 6000 02d6 EB1A     		subs	r3, r5, r3
 6001 02d8 1B01     		lsls	r3, r3, #4
 6002 02da 3233     		adds	r3, r3, #50
ARM GAS  /tmp/ccOBznmR.s 			page 149


 6003 02dc 1C4A     		ldr	r2, .L232+8
 6004 02de A2FB0323 		umull	r2, r3, r2, r3
 6005 02e2 5B09     		lsrs	r3, r3, #5
 6006 02e4 03F0F003 		and	r3, r3, #240
 6007 02e8 1C44     		add	r4, r4, r3
 6008 02ea FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 6009 02ee 0246     		mov	r2, r0
 6010 02f0 1346     		mov	r3, r2
 6011 02f2 9B00     		lsls	r3, r3, #2
 6012 02f4 1344     		add	r3, r3, r2
 6013 02f6 9A00     		lsls	r2, r3, #2
 6014 02f8 1A44     		add	r2, r2, r3
 6015 02fa 7B68     		ldr	r3, [r7, #4]
 6016 02fc 5B68     		ldr	r3, [r3, #4]
 6017 02fe 9B00     		lsls	r3, r3, #2
 6018 0300 B2FBF3F5 		udiv	r5, r2, r3
 6019 0304 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 6020 0308 0246     		mov	r2, r0
 6021 030a 1346     		mov	r3, r2
 6022 030c 9B00     		lsls	r3, r3, #2
 6023 030e 1344     		add	r3, r3, r2
 6024 0310 9A00     		lsls	r2, r3, #2
 6025 0312 1A44     		add	r2, r2, r3
 6026 0314 7B68     		ldr	r3, [r7, #4]
 6027 0316 5B68     		ldr	r3, [r3, #4]
 6028 0318 9B00     		lsls	r3, r3, #2
 6029 031a B2FBF3F3 		udiv	r3, r2, r3
 6030 031e 0C4A     		ldr	r2, .L232+8
 6031 0320 A2FB0323 		umull	r2, r3, r2, r3
 6032 0324 5B09     		lsrs	r3, r3, #5
 6033 0326 6422     		movs	r2, #100
 6034 0328 02FB03F3 		mul	r3, r2, r3
 6035 032c EB1A     		subs	r3, r5, r3
 6036 032e 1B01     		lsls	r3, r3, #4
 6037 0330 3233     		adds	r3, r3, #50
 6038 0332 074A     		ldr	r2, .L232+8
 6039 0334 A2FB0323 		umull	r2, r3, r2, r3
 6040 0338 5B09     		lsrs	r3, r3, #5
 6041 033a 03F00F02 		and	r2, r3, #15
2509:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6042              		.loc 1 2509 12
 6043 033e 7B68     		ldr	r3, [r7, #4]
 6044 0340 1B68     		ldr	r3, [r3]
2509:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6045              		.loc 1 2509 30
 6046 0342 2244     		add	r2, r2, r4
2509:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6047              		.loc 1 2509 28
 6048 0344 9A60     		str	r2, [r3, #8]
 6049 0346 71E0     		b	.L228
 6050              	.L233:
 6051              		.align	2
 6052              	.L232:
 6053 0348 00100140 		.word	1073811456
 6054 034c 00140140 		.word	1073812480
 6055 0350 1F85EB51 		.word	1374389535
 6056              	.L230:
ARM GAS  /tmp/ccOBznmR.s 			page 150


2519:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6057              		.loc 1 2519 30
 6058 0354 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6059 0358 0246     		mov	r2, r0
 6060 035a 1346     		mov	r3, r2
 6061 035c 9B00     		lsls	r3, r3, #2
 6062 035e 1344     		add	r3, r3, r2
 6063 0360 9A00     		lsls	r2, r3, #2
 6064 0362 1A44     		add	r2, r2, r3
 6065 0364 7B68     		ldr	r3, [r7, #4]
 6066 0366 5B68     		ldr	r3, [r3, #4]
 6067 0368 9B00     		lsls	r3, r3, #2
 6068 036a B2FBF3F3 		udiv	r3, r2, r3
 6069 036e 314A     		ldr	r2, .L234
 6070 0370 A2FB0323 		umull	r2, r3, r2, r3
 6071 0374 5B09     		lsrs	r3, r3, #5
 6072 0376 1C01     		lsls	r4, r3, #4
 6073 0378 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6074 037c 0246     		mov	r2, r0
 6075 037e 1346     		mov	r3, r2
 6076 0380 9B00     		lsls	r3, r3, #2
 6077 0382 1344     		add	r3, r3, r2
 6078 0384 9A00     		lsls	r2, r3, #2
 6079 0386 1A44     		add	r2, r2, r3
 6080 0388 7B68     		ldr	r3, [r7, #4]
 6081 038a 5B68     		ldr	r3, [r3, #4]
 6082 038c 9B00     		lsls	r3, r3, #2
 6083 038e B2FBF3F5 		udiv	r5, r2, r3
 6084 0392 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6085 0396 0246     		mov	r2, r0
 6086 0398 1346     		mov	r3, r2
 6087 039a 9B00     		lsls	r3, r3, #2
 6088 039c 1344     		add	r3, r3, r2
 6089 039e 9A00     		lsls	r2, r3, #2
 6090 03a0 1A44     		add	r2, r2, r3
 6091 03a2 7B68     		ldr	r3, [r7, #4]
 6092 03a4 5B68     		ldr	r3, [r3, #4]
 6093 03a6 9B00     		lsls	r3, r3, #2
 6094 03a8 B2FBF3F3 		udiv	r3, r2, r3
 6095 03ac 214A     		ldr	r2, .L234
 6096 03ae A2FB0323 		umull	r2, r3, r2, r3
 6097 03b2 5B09     		lsrs	r3, r3, #5
 6098 03b4 6422     		movs	r2, #100
 6099 03b6 02FB03F3 		mul	r3, r2, r3
 6100 03ba EB1A     		subs	r3, r5, r3
 6101 03bc 1B01     		lsls	r3, r3, #4
 6102 03be 3233     		adds	r3, r3, #50
 6103 03c0 1C4A     		ldr	r2, .L234
 6104 03c2 A2FB0323 		umull	r2, r3, r2, r3
 6105 03c6 5B09     		lsrs	r3, r3, #5
 6106 03c8 03F0F003 		and	r3, r3, #240
 6107 03cc 1C44     		add	r4, r4, r3
 6108 03ce FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6109 03d2 0246     		mov	r2, r0
 6110 03d4 1346     		mov	r3, r2
 6111 03d6 9B00     		lsls	r3, r3, #2
 6112 03d8 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccOBznmR.s 			page 151


 6113 03da 9A00     		lsls	r2, r3, #2
 6114 03dc 1A44     		add	r2, r2, r3
 6115 03de 7B68     		ldr	r3, [r7, #4]
 6116 03e0 5B68     		ldr	r3, [r3, #4]
 6117 03e2 9B00     		lsls	r3, r3, #2
 6118 03e4 B2FBF3F5 		udiv	r5, r2, r3
 6119 03e8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6120 03ec 0246     		mov	r2, r0
 6121 03ee 1346     		mov	r3, r2
 6122 03f0 9B00     		lsls	r3, r3, #2
 6123 03f2 1344     		add	r3, r3, r2
 6124 03f4 9A00     		lsls	r2, r3, #2
 6125 03f6 1A44     		add	r2, r2, r3
 6126 03f8 7B68     		ldr	r3, [r7, #4]
 6127 03fa 5B68     		ldr	r3, [r3, #4]
 6128 03fc 9B00     		lsls	r3, r3, #2
 6129 03fe B2FBF3F3 		udiv	r3, r2, r3
 6130 0402 0C4A     		ldr	r2, .L234
 6131 0404 A2FB0323 		umull	r2, r3, r2, r3
 6132 0408 5B09     		lsrs	r3, r3, #5
 6133 040a 6422     		movs	r2, #100
 6134 040c 02FB03F3 		mul	r3, r2, r3
 6135 0410 EB1A     		subs	r3, r5, r3
 6136 0412 1B01     		lsls	r3, r3, #4
 6137 0414 3233     		adds	r3, r3, #50
 6138 0416 074A     		ldr	r2, .L234
 6139 0418 A2FB0323 		umull	r2, r3, r2, r3
 6140 041c 5B09     		lsrs	r3, r3, #5
 6141 041e 03F00F02 		and	r2, r3, #15
2519:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6142              		.loc 1 2519 12
 6143 0422 7B68     		ldr	r3, [r7, #4]
 6144 0424 1B68     		ldr	r3, [r3]
2519:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6145              		.loc 1 2519 30
 6146 0426 2244     		add	r2, r2, r4
2519:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6147              		.loc 1 2519 28
 6148 0428 9A60     		str	r2, [r3, #8]
 6149              		.loc 1 2522 1
 6150 042a FFE7     		b	.L231
 6151              	.L228:
 6152              	.L231:
 6153 042c 00BF     		nop
 6154 042e 1037     		adds	r7, r7, #16
 6155              	.LCFI297:
 6156              		.cfi_def_cfa_offset 16
 6157 0430 BD46     		mov	sp, r7
 6158              	.LCFI298:
 6159              		.cfi_def_cfa_register 13
 6160              		@ sp needed
 6161 0432 B0BD     		pop	{r4, r5, r7, pc}
 6162              	.L235:
 6163              		.align	2
 6164              	.L234:
 6165 0434 1F85EB51 		.word	1374389535
 6166              		.cfi_endproc
ARM GAS  /tmp/ccOBznmR.s 			page 152


 6167              	.LFE180:
 6169              		.text
 6170              	.Letext0:
 6171              		.file 2 "/home/hao/Documents/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 6172              		.file 3 "/home/hao/Documents/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 6173              		.file 4 "./Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 6174              		.file 5 "./Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 6175              		.file 6 "./Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 6176              		.file 7 "./Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 6177              		.file 8 "./Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
ARM GAS  /tmp/ccOBznmR.s 			page 153


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_uart.c
     /tmp/ccOBznmR.s:18     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccOBznmR.s:26     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccOBznmR.s:635    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccOBznmR.s:5625   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccOBznmR.s:136    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccOBznmR.s:143    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccOBznmR.s:260    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccOBznmR.s:267    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccOBznmR.s:402    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccOBznmR.s:409    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccOBznmR.s:555    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccOBznmR.s:562    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccOBznmR.s:678    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccOBznmR.s:628    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccOBznmR.s:671    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccOBznmR.s:714    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccOBznmR.s:721    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccOBznmR.s:4660   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccOBznmR.s:945    .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccOBznmR.s:952    .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccOBznmR.s:1198   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccOBznmR.s:1205   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccOBznmR.s:1316   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccOBznmR.s:1323   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccOBznmR.s:1442   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccOBznmR.s:1449   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccOBznmR.s:1602   .text.HAL_UART_Transmit_DMA:00000000000000cc $d
     /tmp/ccOBznmR.s:4287   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccOBznmR.s:4366   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccOBznmR.s:4544   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccOBznmR.s:1609   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccOBznmR.s:1616   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccOBznmR.s:1790   .text.HAL_UART_Receive_DMA:00000000000000f4 $d
     /tmp/ccOBznmR.s:4411   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccOBznmR.s:4499   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccOBznmR.s:1797   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccOBznmR.s:1804   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccOBznmR.s:1943   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccOBznmR.s:1950   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccOBznmR.s:2068   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccOBznmR.s:2075   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccOBznmR.s:4778   .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccOBznmR.s:4832   .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccOBznmR.s:2206   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccOBznmR.s:2213   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccOBznmR.s:2351   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccOBznmR.s:2358   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccOBznmR.s:2442   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccOBznmR.s:2449   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccOBznmR.s:2541   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccOBznmR.s:2548   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccOBznmR.s:3622   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccOBznmR.s:2775   .text.HAL_UART_Abort_IT:0000000000000140 $d
     /tmp/ccOBznmR.s:4947   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccOBznmR.s:5037   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
ARM GAS  /tmp/ccOBznmR.s 			page 154


     /tmp/ccOBznmR.s:2781   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccOBznmR.s:2788   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccOBznmR.s:3665   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccOBznmR.s:2905   .text.HAL_UART_AbortTransmit_IT:000000000000009c $d
     /tmp/ccOBznmR.s:5127   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccOBznmR.s:2910   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccOBznmR.s:2917   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccOBznmR.s:3708   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccOBznmR.s:3042   .text.HAL_UART_AbortReceive_IT:00000000000000ac $d
     /tmp/ccOBznmR.s:5180   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccOBznmR.s:3047   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccOBznmR.s:3054   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccOBznmR.s:5433   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/ccOBznmR.s:3579   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccOBznmR.s:5233   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/ccOBznmR.s:5378   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccOBznmR.s:3395   .text.HAL_UART_IRQHandler:00000000000001f0 $d
     /tmp/ccOBznmR.s:4894   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccOBznmR.s:3400   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccOBznmR.s:3407   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccOBznmR.s:3443   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccOBznmR.s:3450   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccOBznmR.s:3486   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccOBznmR.s:3493   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccOBznmR.s:3529   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccOBznmR.s:3536   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccOBznmR.s:3572   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccOBznmR.s:3615   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccOBznmR.s:3658   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccOBznmR.s:3701   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccOBznmR.s:3744   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccOBznmR.s:3751   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccOBznmR.s:3823   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccOBznmR.s:3830   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccOBznmR.s:3902   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 $t
     /tmp/ccOBznmR.s:3909   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 HAL_MultiProcessor_ExitMuteMode
     /tmp/ccOBznmR.s:3981   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccOBznmR.s:3988   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccOBznmR.s:4074   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccOBznmR.s:4081   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccOBznmR.s:4167   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccOBznmR.s:4174   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccOBznmR.s:4235   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccOBznmR.s:4242   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccOBznmR.s:4281   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccOBznmR.s:4360   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccOBznmR.s:4405   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccOBznmR.s:4493   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccOBznmR.s:4538   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccOBznmR.s:4654   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccOBznmR.s:4772   .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccOBznmR.s:4826   .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccOBznmR.s:4888   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccOBznmR.s:4941   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccOBznmR.s:5031   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccOBznmR.s:5121   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccOBznmR.s:5174   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
ARM GAS  /tmp/ccOBznmR.s 			page 155


     /tmp/ccOBznmR.s:5227   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/ccOBznmR.s:5372   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccOBznmR.s:5427   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/ccOBznmR.s:5619   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccOBznmR.s:6053   .text.UART_SetConfig:0000000000000348 $d
     /tmp/ccOBznmR.s:6058   .text.UART_SetConfig:0000000000000354 $t
     /tmp/ccOBznmR.s:6165   .text.UART_SetConfig:0000000000000434 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
