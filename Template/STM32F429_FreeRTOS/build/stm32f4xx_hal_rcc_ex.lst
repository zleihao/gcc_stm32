ARM GAS  /tmp/cckRf2Ua.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_rcc_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCCEx_PeriphCLKConfig,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_RCCEx_PeriphCLKConfig
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_RCCEx_PeriphCLKConfig:
  27              	.LVL0:
  28              	.LFB126:
  29              		.file 1 "./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c"
   1:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
   2:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   ******************************************************************************
   3:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @file    stm32f4xx_hal_rcc_ex.c
   4:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @author  MCD Application Team
   5:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief   Extension RCC HAL module driver.
   6:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *          This file provides firmware functions to manage the following
   7:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *          functionalities RCC extension peripheral:
   8:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *           + Extended Peripheral Control functions
   9:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
  10:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   ******************************************************************************
  11:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @attention
  12:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
  13:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  14:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
  15:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  16:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * are permitted provided that the following conditions are met:
  17:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *      this list of conditions and the following disclaimer.
  19:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  21:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *      and/or other materials provided with the distribution.
  22:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *      may be used to endorse or promote products derived from this software
  24:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *      without specific prior written permission.
  25:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
  26:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /tmp/cckRf2Ua.s 			page 2


  30:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
  37:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   ******************************************************************************
  38:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
  39:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
  40:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /* Includes ------------------------------------------------------------------*/
  41:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #include "stm32f4xx_hal.h"
  42:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
  43:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /** @addtogroup STM32F4xx_HAL_Driver
  44:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @{
  45:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
  46:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
  47:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /** @defgroup RCCEx RCCEx
  48:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief RCCEx HAL module driver
  49:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @{
  50:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
  51:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
  52:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #ifdef HAL_RCC_MODULE_ENABLED
  53:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
  54:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  55:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /* Private define ------------------------------------------------------------*/
  56:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /** @addtogroup RCCEx_Private_Constants
  57:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @{
  58:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
  59:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
  60:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @}
  61:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
  62:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /* Private macro -------------------------------------------------------------*/
  63:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /* Private variables ---------------------------------------------------------*/
  64:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /* Private function prototypes -----------------------------------------------*/
  65:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /* Private functions ---------------------------------------------------------*/
  66:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Exported_Functions RCCEx Exported Functions
  67:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *  @{
  68:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
  69:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
  70:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Exported_Functions_Group1 Extended Peripheral Control functions
  71:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****  *  @brief  Extended Peripheral Control functions
  72:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****  *
  73:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** @verbatim
  74:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****  ===============================================================================
  75:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                 ##### Extended Peripheral Control functions  #####
  76:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****  ===============================================================================
  77:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     [..]
  78:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
  79:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     frequencies.
  80:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     [..]
  81:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     (@) Important note: Care must be taken when HAL_RCCEx_PeriphCLKConfig() is used to
  82:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         select the RTC clock source; in this case the Backup domain will be reset in
  83:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         order to modify the RTC Clock source, as consequence RTC registers (including
  84:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         the backup registers) and RCC_BDCR register are set to their reset values.
  85:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
  86:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** @endverbatim
ARM GAS  /tmp/cckRf2Ua.s 			page 3


  87:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @{
  88:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
  89:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
  90:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F446xx)
  91:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
  92:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Initializes the RCC extended peripherals clocks according to the specified
  93:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         parameters in the RCC_PeriphCLKInitTypeDef.
  94:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PeriphClkInit pointer to an RCC_PeriphCLKInitTypeDef structure that
  95:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         contains the configuration information for the Extended Peripherals
  96:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         clocks(I2S, SAI, LTDC RTC and TIM).
  97:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
  98:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   Care must be taken when HAL_RCCEx_PeriphCLKConfig() is used to select
  99:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         the RTC clock source; in this case the Backup domain will be reset in
 100:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         order to modify the RTC Clock source, as consequence RTC registers (including
 101:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         the backup registers) and RCC_BDCR register are set to their reset values.
 102:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
 103:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval HAL status
 104:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
 105:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
 106:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
 107:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tickstart = 0U;
 108:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tmpreg1 = 0U;
 109:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t plli2sp = 0U;
 110:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t plli2sq = 0U;
 111:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t plli2sr = 0U;
 112:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t pllsaip = 0U;
 113:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t pllsaiq = 0U;
 114:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t plli2sused = 0U;
 115:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t pllsaiused = 0U;
 116:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 117:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Check the peripheral clock selection parameters */
 118:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
 119:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 120:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*------------------------ I2S APB1 configuration --------------------------*/
 121:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB1) == (RCC_PERIPHCLK_I2S_APB1))
 122:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 123:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
 124:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_I2SAPB1CLKSOURCE(PeriphClkInit->I2sApb1ClockSelection));
 125:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 126:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure I2S Clock source */
 127:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_I2S_APB1_CONFIG(PeriphClkInit->I2sApb1ClockSelection);
 128:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLI2S when it's used as clock source for I2S */
 129:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(PeriphClkInit->I2sApb1ClockSelection == RCC_I2SAPB1CLKSOURCE_PLLI2S)
 130:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 131:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       plli2sused = 1U;
 132:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 133:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 134:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
 135:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 136:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*---------------------------- I2S APB2 configuration ----------------------*/
 137:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB2) == (RCC_PERIPHCLK_I2S_APB2))
 138:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 139:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
 140:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_I2SAPB2CLKSOURCE(PeriphClkInit->I2sApb2ClockSelection));
 141:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 142:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure I2S Clock source */
 143:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_I2S_APB2_CONFIG(PeriphClkInit->I2sApb2ClockSelection);
ARM GAS  /tmp/cckRf2Ua.s 			page 4


 144:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLI2S when it's used as clock source for I2S */
 145:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(PeriphClkInit->I2sApb2ClockSelection == RCC_I2SAPB2CLKSOURCE_PLLI2S)
 146:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 147:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       plli2sused = 1U;
 148:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 149:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 150:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
 151:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 152:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------- SAI1 configuration ---------------------------*/
 153:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 154:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 155:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
 156:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));
 157:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 158:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure SAI1 Clock source */
 159:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 160:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLI2S when it's used as clock source for SAI */
 161:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 162:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 163:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       plli2sused = 1U;
 164:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 165:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLSAI when it's used as clock source for SAI */
 166:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 167:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 168:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       pllsaiused = 1U;
 169:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 170:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 171:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
 172:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 173:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*-------------------------- SAI2 configuration ----------------------------*/
 174:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 175:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 176:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
 177:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));
 178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 179:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure SAI2 Clock source */
 180:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 181:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 182:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLI2S when it's used as clock source for SAI */
 183:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 184:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 185:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       plli2sused = 1U;
 186:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 187:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLSAI when it's used as clock source for SAI */
 188:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
 189:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 190:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       pllsaiused = 1U;
 191:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 192:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 193:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
 194:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 195:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*----------------------------- RTC configuration --------------------------*/
 196:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 197:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 198:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check for RTC Parameters used to output RTCCLK */
 199:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
 200:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
ARM GAS  /tmp/cckRf2Ua.s 			page 5


 201:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable Power Clock*/
 202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 203:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 204:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable write access to Backup domain */
 205:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     PWR->CR |= PWR_CR_DBP;
 206:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 207:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
 208:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
 209:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 210:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while((PWR->CR & PWR_CR_DBP) == RESET)
 211:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 212:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 213:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 214:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
 215:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
 216:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 217:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value 
 218:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 219:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSE
 220:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 221:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Store the content of BDCR register before the reset of Backup Domain */
 222:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 223:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 224:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_BACKUPRESET_FORCE();
 225:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 226:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Restore the Content of BDCR register */
 227:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       RCC->BDCR = tmpreg1;
 228:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 229:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
 230:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 231:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 232:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Get tick */
 233:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         tickstart = HAL_GetTick();
 234:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 235:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Wait till LSE is ready */
 236:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 237:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 238:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 239:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 240:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             return HAL_TIMEOUT;
 241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 242:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
 243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
 244:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 245:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 246:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 247:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
 248:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 249:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*---------------------------- TIM configuration ---------------------------*/
 250:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 251:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 252:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure Timer Prescaler */
 253:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 254:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 255:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
 256:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 257:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*---------------------------- FMPI2C1 Configuration -----------------------*/
ARM GAS  /tmp/cckRf2Ua.s 			page 6


 258:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMPI2C1) == RCC_PERIPHCLK_FMPI2C1)
 259:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 260:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
 261:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_FMPI2C1CLKSOURCE(PeriphClkInit->Fmpi2c1ClockSelection));
 262:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 263:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the FMPI2C1 clock source */
 264:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_FMPI2C1_CONFIG(PeriphClkInit->Fmpi2c1ClockSelection);
 265:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 266:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
 267:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 268:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*------------------------------ CEC Configuration -------------------------*/
 269:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 270:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 271:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
 272:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));
 273:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 274:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the CEC clock source */
 275:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 276:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
 278:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 279:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*----------------------------- CLK48 Configuration ------------------------*/
 280:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 281:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 282:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
 283:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));
 284:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 285:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the CLK48 clock source */
 286:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 287:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 288:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLSAI when it's used as clock source for CLK48 */
 289:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP)
 290:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 291:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       pllsaiused = 1U;
 292:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 293:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 294:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
 295:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 296:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*----------------------------- SDIO Configuration -------------------------*/
 297:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 298:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 299:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
 300:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));
 301:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 302:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the SDIO clock source */
 303:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 304:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 305:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
 306:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 307:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*------------------------------ SPDIFRX Configuration ---------------------*/
 308:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 309:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 310:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
 311:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_SPDIFRXCLKSOURCE(PeriphClkInit->SpdifClockSelection));
 312:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 313:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the SPDIFRX clock source */
 314:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifClockSelection);
ARM GAS  /tmp/cckRf2Ua.s 			page 7


 315:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLI2S when it's used as clock source for SPDIFRX */
 316:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(PeriphClkInit->SpdifClockSelection == RCC_SPDIFRXCLKSOURCE_PLLI2SP)
 317:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 318:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       plli2sused = 1U;
 319:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 320:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 321:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
 322:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 323:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*---------------------------- PLLI2S Configuration ------------------------*/
 324:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S on APB1,
 325:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****      I2S on APB2 or SPDIFRX */
 326:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if((plli2sused == 1U) || (PeriphClkInit->PeriphClockSelection == RCC_PERIPHCLK_PLLI2S))
 327:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 328:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Disable the PLLI2S */
 329:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLI2S_DISABLE();
 330:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
 331:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
 332:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLI2S is disabled */
 333:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 334:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 335:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 336:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 337:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* return in case of Timeout detected */
 338:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
 339:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
 340:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 341:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 342:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* check for common PLLI2S Parameters */
 343:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_PLLI2SM_VALUE(PeriphClkInit->PLLI2S.PLLI2SM));
 344:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));
 345:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 346:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*------ In Case of PLLI2S is selected as source clock for I2S -----------*/
 347:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB1) == RCC_PERIPHCLK_I2S_APB1
 348:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****        ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB2) == RCC_PERIPHCLK_I2S_APB2
 349:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 350:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* check for Parameters */
 351:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
 352:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 353:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Read PLLI2SP/PLLI2SQ value from PLLI2SCFGR register (this value is not needed for I2S conf
 354:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       plli2sp = ((((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos) + 1U) 
 355:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       plli2sq = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 356:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Configure the PLLI2S division factors */
 357:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLI2SM) */
 358:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
 359:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , plli2s
 360:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 361:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 362:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*------- In Case of PLLI2S is selected as source clock for SAI ----------*/
 363:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (Pe
 364:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****        ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (Pe
 365:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 366:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check for PLLI2S Parameters */
 367:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
 368:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check for PLLI2S/DIVQ parameters */
 369:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));
 370:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 371:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Read PLLI2SP/PLLI2SR value from PLLI2SCFGR register (this value is not needed for SAI conf
ARM GAS  /tmp/cckRf2Ua.s 			page 8


 372:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       plli2sp = ((((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos) + 1U) 
 373:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       plli2sr = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 374:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Configure the PLLI2S division factors */
 375:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLI2S_VCO Input  = PLL_SOURCE/PLLI2SM */
 376:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
 377:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
 378:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , plli2s
 379:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 380:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
 381:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 382:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 383:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 384:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*------ In Case of PLLI2S is selected as source clock for SPDIFRX -------*/
 385:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX) &
 386:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 387:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* check for Parameters */
 388:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2SP_VALUE(PeriphClkInit->PLLI2S.PLLI2SP));
 389:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Read PLLI2SR value from PLLI2SCFGR register (this value is not need for SAI configuration)
 390:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       plli2sq = ((((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos) + 1U) 
 391:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       plli2sr = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 392:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Configure the PLLI2S division factors */
 393:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLI2SM) */
 394:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SPDIFRXCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
 395:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , Periph
 396:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 397:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 398:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****      /*----------------- In Case of PLLI2S is just selected  -----------------*/
 399:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 400:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 401:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check for Parameters */
 402:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2SP_VALUE(PeriphClkInit->PLLI2S.PLLI2SP));
 403:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
 404:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
 405:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 406:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Configure the PLLI2S division factors */
 407:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLI2SM) */
 408:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , Periph
 409:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 410:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 411:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLI2S */
 412:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLI2S_ENABLE();
 413:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
 414:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
 415:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLI2S is ready */
 416:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 417:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 418:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 419:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 420:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* return in case of Timeout detected */
 421:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
 422:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
 423:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 424:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 425:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
 426:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 427:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*----------------------------- PLLSAI Configuration -----------------------*/
 428:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, CLK48 or SDIO
ARM GAS  /tmp/cckRf2Ua.s 			page 9


 429:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(pllsaiused == 1U)
 430:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 431:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Disable PLLSAI Clock */
 432:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI_DISABLE();
 433:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
 434:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
 435:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLSAI is disabled */
 436:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 437:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 438:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 439:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 440:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* return in case of Timeout detected */
 441:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
 442:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
 443:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 444:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 445:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the PLLSAI division factors */
 446:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_PLLSAIM_VALUE(PeriphClkInit->PLLSAI.PLLSAIM));
 447:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));
 448:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 449:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*------ In Case of PLLSAI is selected as source clock for SAI -----------*/
 450:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (Pe
 451:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****        ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (Pe
 452:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 453:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* check for PLLSAIQ Parameter */
 454:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
 455:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* check for PLLSAI/DIVQ Parameter */
 456:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));
 457:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 458:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuratio
 459:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) 
 460:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
 461:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
 462:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
 463:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIM, PeriphClkInit->PLLSAI.PLLSAIN , pllsai
 464:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 465:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
 466:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 467:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 468:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 469:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*------ In Case of PLLSAI is selected as source clock for CLK48 ---------*/
 470:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* In Case of PLLI2S is selected as source clock for CLK48 */
 471:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (P
 472:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 473:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* check for Parameters */
 474:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
 475:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Read PLLSAIQ value from PLLI2SCFGR register (this value is not need for SAI configuration)
 476:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 477:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Configure the PLLSAI division factors */
 478:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) * (PLLI2SN/PLLSAIM) */
 479:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
 480:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIM, PeriphClkInit->PLLSAI.PLLSAIN , Periph
 481:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 482:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 483:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable PLLSAI Clock */
 484:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI_ENABLE();
 485:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
ARM GAS  /tmp/cckRf2Ua.s 			page 10


 486:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
 487:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLSAI is ready */
 488:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 489:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 490:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 491:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 492:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* return in case of Timeout detected */
 493:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
 494:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
 495:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 496:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 497:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   return HAL_OK;
 498:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
 499:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 500:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
 501:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Get the RCC_PeriphCLKInitTypeDef according to the internal
 502:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         RCC configuration registers.
 503:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PeriphClkInit pointer to an RCC_PeriphCLKInitTypeDef structure that
 504:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         will be configured.
 505:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval None
 506:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
 507:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** void HAL_RCCEx_GetPeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
 508:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
 509:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tempreg;
 510:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 511:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Set all possible values for the extended clock type parameter------------*/
 512:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_I2S_APB1 | RCC_PERIPHCLK_I2S_APB2 |\
 513:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_SAI1     | RCC_PERIPHCLK_SAI2     |\
 514:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_TIM      | RCC_PERIPHCLK_RTC      |\
 515:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_CEC      | RCC_PERIPHCLK_FMPI2C1  |\
 516:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_CLK48     | RCC_PERIPHCLK_SDIO     |\
 517:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_SPDIFRX;
 518:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 519:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the PLLI2S Clock configuration --------------------------------------*/
 520:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2S.PLLI2SM = (uint32_t)((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SM) >> RCC_PLLI
 521:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2S.PLLI2SN = (uint32_t)((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> RCC_PLLI
 522:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2S.PLLI2SP = (uint32_t)((((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PL
 523:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2S.PLLI2SQ = (uint32_t)((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI
 524:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2S.PLLI2SR = (uint32_t)((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI
 525:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the PLLSAI Clock configuration --------------------------------------*/
 526:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI.PLLSAIM = (uint32_t)((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIM) >> RCC_PLLS
 527:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI.PLLSAIN = (uint32_t)((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIN) >> RCC_PLLS
 528:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI.PLLSAIP = (uint32_t)((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PL
 529:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI.PLLSAIQ = (uint32_t)((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLS
 530:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the PLLSAI/PLLI2S division factors ----------------------------------*/
 531:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2SDivQ = (uint32_t)((RCC->DCKCFGR & RCC_DCKCFGR_PLLI2SDIVQ) >> RCC_DCKCFGR_PLL
 532:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAIDivQ = (uint32_t)((RCC->DCKCFGR & RCC_DCKCFGR_PLLSAIDIVQ) >> RCC_DCKCFGR_PLL
 533:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 534:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the SAI1 clock configuration ----------------------------------------*/
 535:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->Sai1ClockSelection = __HAL_RCC_GET_SAI1_SOURCE();
 536:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 537:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the SAI2 clock configuration ----------------------------------------*/
 538:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->Sai2ClockSelection = __HAL_RCC_GET_SAI2_SOURCE();
 539:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 540:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the I2S APB1 clock configuration ------------------------------------*/
 541:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->I2sApb1ClockSelection = __HAL_RCC_GET_I2S_APB1_SOURCE();
 542:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
ARM GAS  /tmp/cckRf2Ua.s 			page 11


 543:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the I2S APB2 clock configuration ------------------------------------*/
 544:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->I2sApb2ClockSelection = __HAL_RCC_GET_I2S_APB2_SOURCE();
 545:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 546:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the RTC Clock configuration -----------------------------------------*/
 547:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   tempreg = (RCC->CFGR & RCC_CFGR_RTCPRE);
 548:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->RTCClockSelection = (uint32_t)((tempreg) | (RCC->BDCR & RCC_BDCR_RTCSEL));
 549:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 550:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the CEC clock configuration -----------------------------------------*/
 551:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->CecClockSelection = __HAL_RCC_GET_CEC_SOURCE();
 552:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 553:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the FMPI2C1 clock configuration -------------------------------------*/
 554:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->Fmpi2c1ClockSelection = __HAL_RCC_GET_FMPI2C1_SOURCE();
 555:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 556:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the CLK48 clock configuration ----------------------------------------*/
 557:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->Clk48ClockSelection = __HAL_RCC_GET_CLK48_SOURCE();
 558:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 559:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the SDIO clock configuration ----------------------------------------*/
 560:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->SdioClockSelection = __HAL_RCC_GET_SDIO_SOURCE();
 561:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 562:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the SPDIFRX clock configuration -------------------------------------*/
 563:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->SpdifClockSelection = __HAL_RCC_GET_SPDIFRX_SOURCE();
 564:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 565:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the TIM Prescaler configuration -------------------------------------*/
 566:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if ((RCC->DCKCFGR & RCC_DCKCFGR_TIMPRE) == RESET)
 567:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 568:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     PeriphClkInit->TIMPresSelection = RCC_TIMPRES_DESACTIVATED;
 569:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 570:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   else
 571:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 572:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     PeriphClkInit->TIMPresSelection = RCC_TIMPRES_ACTIVATED;
 573:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 574:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
 575:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 576:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
 577:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Return the peripheral clock frequency for a given peripheral(SAI..)
 578:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   Return 0 if peripheral clock identifier not managed by this API
 579:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PeriphClk Peripheral clock identifier
 580:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         This parameter can be one of the following values:
 581:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            @arg RCC_PERIPHCLK_SAI1: SAI1 peripheral clock
 582:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            @arg RCC_PERIPHCLK_SAI2: SAI2 peripheral clock
 583:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            @arg RCC_PERIPHCLK_I2S_APB1: I2S APB1 peripheral clock
 584:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            @arg RCC_PERIPHCLK_I2S_APB2: I2S APB2 peripheral clock
 585:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval Frequency in KHz
 586:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
 587:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint32_t PeriphClk)
 588:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
 589:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tmpreg1 = 0U;
 590:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the SAI clock frequency (value in Hz) */
 591:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t frequency = 0U;
 592:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the VCO Input (value in Hz) */
 593:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t vcoinput = 0U;
 594:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the SAI clock source */
 595:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t saiclocksource = 0U;
 596:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t srcclk = 0U;
 597:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the VCO Output (value in Hz) */
 598:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t vcooutput = 0U;
 599:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   switch (PeriphClk)
ARM GAS  /tmp/cckRf2Ua.s 			page 12


 600:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 601:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_SAI1:
 602:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_SAI2:
 603:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 604:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       saiclocksource = RCC->DCKCFGR;
 605:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       saiclocksource &= (RCC_DCKCFGR_SAI1SRC | RCC_DCKCFGR_SAI2SRC);
 606:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       switch (saiclocksource)
 607:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 608:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case 0U: /* PLLSAI is the clock source for SAI*/
 609:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 610:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Configure the PLLSAI division factor */
 611:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLLSAI_VCO Input  = PLL_SOURCE/PLLSAIM */
 612:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSI)
 613:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 614:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* In Case the PLL Source is HSI (Internal Clock) */
 615:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (HSI_VALUE / (uint32_t)(RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIM));
 616:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 617:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
 618:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 619:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* In Case the PLL Source is HSE (External Clock) */
 620:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = ((HSE_VALUE / (uint32_t)(RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIM)));
 621:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 622:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
 623:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
 624:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           tmpreg1 = (RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> 24U;
 625:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = (vcoinput * ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIN) >> 6U))/(tmpreg1);
 626:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 627:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
 628:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           tmpreg1 = (((RCC->DCKCFGR & RCC_DCKCFGR_PLLSAIDIVQ) >> 8U) + 1U);
 629:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = frequency/(tmpreg1);
 630:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
 631:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
 632:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_DCKCFGR_SAI1SRC_0: /* PLLI2S is the clock source for SAI*/
 633:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_DCKCFGR_SAI2SRC_0: /* PLLI2S is the clock source for SAI*/
 634:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 635:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Configure the PLLI2S division factor */
 636:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLLI2S_VCO Input  = PLL_SOURCE/PLLI2SM */
 637:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSI)
 638:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 639:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* In Case the PLL Source is HSI (Internal Clock) */
 640:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (HSI_VALUE / (uint32_t)(RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SM));
 641:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 642:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
 643:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 644:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* In Case the PLL Source is HSE (External Clock) */
 645:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = ((HSE_VALUE / (uint32_t)(RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SM)));
 646:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 647:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 648:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
 649:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
 650:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           tmpreg1 = (RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> 24U;
 651:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = (vcoinput * ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6U))/(tmpreg1);
 652:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 653:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
 654:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           tmpreg1 = ((RCC->DCKCFGR & RCC_DCKCFGR_PLLI2SDIVQ) + 1U);
 655:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = frequency/(tmpreg1);
 656:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
ARM GAS  /tmp/cckRf2Ua.s 			page 13


 657:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
 658:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_DCKCFGR_SAI1SRC_1: /* PLLR is the clock source for SAI*/
 659:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_DCKCFGR_SAI2SRC_1: /* PLLR is the clock source for SAI*/
 660:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 661:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Configure the PLLI2S division factor */
 662:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLL_VCO Input  = PLL_SOURCE/PLLM */
 663:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSI)
 664:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 665:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* In Case the PLL Source is HSI (Internal Clock) */
 666:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 667:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 668:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
 669:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 670:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* In Case the PLL Source is HSE (External Clock) */
 671:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = ((HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM)));
 672:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 673:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 674:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLL_VCO Output = PLL_VCO Input * PLLN */
 675:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* SAI_CLK_x = PLL_VCO Output/PLLR */
 676:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           tmpreg1 = (RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 28U;
 677:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = (vcoinput * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6U))/(tmpreg1);
 678:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
 679:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
 680:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_DCKCFGR_SAI1SRC: /* External clock is the clock source for SAI*/
 681:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 682:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = EXTERNAL_CLOCK_VALUE;
 683:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
 684:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
 685:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_DCKCFGR_SAI2SRC: /* PLLSRC(HSE or HSI) is the clock source for SAI*/
 686:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 687:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSI)
 688:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 689:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* In Case the PLL Source is HSI (Internal Clock) */
 690:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             frequency = (uint32_t)(HSI_VALUE);
 691:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 692:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
 693:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 694:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* In Case the PLL Source is HSE (External Clock) */
 695:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             frequency = (uint32_t)(HSE_VALUE);
 696:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 697:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
 698:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
 699:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       default :
 700:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 701:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
 702:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
 703:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
 704:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       break;
 705:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 706:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_I2S_APB1:
 707:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 708:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Get the current I2S source */
 709:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       srcclk = __HAL_RCC_GET_I2S_APB1_SOURCE();
 710:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       switch (srcclk)
 711:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 712:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check if I2S clock selection is External clock mapped on the I2S_CKIN pin used as I2S cloc
 713:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPB1CLKSOURCE_EXT:
ARM GAS  /tmp/cckRf2Ua.s 			page 14


 714:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 715:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Set the I2S clock to the external clock  value */
 716:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = EXTERNAL_CLOCK_VALUE;
 717:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
 718:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
 719:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check if I2S clock selection is PLLI2S VCO output clock divided by PLLI2SR used as I2S clo
 720:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPB1CLKSOURCE_PLLI2S:
 721:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 722:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Configure the PLLI2S division factor */
 723:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLLI2S_VCO Input  = PLL_SOURCE/PLLI2SM */
 724:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 725:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 726:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
 727:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSE_VALUE / (uint32_t)(RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SM))
 728:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 729:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
 730:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 731:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
 732:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSI_VALUE / (uint32_t)(RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SM))
 733:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 734:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 735:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
 736:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           vcooutput = (uint32_t)(vcoinput * (((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6U) & (
 737:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* I2S_CLK = PLLI2S_VCO Output/PLLI2SR */
 738:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = (uint32_t)(vcooutput /(((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> 28U) & 
 739:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
 740:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
 741:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check if I2S clock selection is PLL VCO Output divided by PLLR used as I2S clock */
 742:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPB1CLKSOURCE_PLLR:
 743:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 744:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Configure the PLL division factor R */
 745:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLL_VCO Input  = PLL_SOURCE/PLLM */
 746:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 747:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 748:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
 749:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 750:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 751:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
 752:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 753:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
 754:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 755:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 756:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 757:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLL_VCO Output = PLL_VCO Input * PLLN */
 758:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           vcooutput = (uint32_t)(vcoinput * (((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6U) & (RCC_PLLCF
 759:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* I2S_CLK = PLL_VCO Output/PLLR */
 760:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = (uint32_t)(vcooutput /(((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 28U) & (RCC_PLLC
 761:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
 762:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
 763:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check if I2S clock selection is HSI or HSE depending from PLL source Clock */
 764:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPB1CLKSOURCE_PLLSRC:
 765:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 766:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 767:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 768:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             frequency = HSE_VALUE;
 769:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 770:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
ARM GAS  /tmp/cckRf2Ua.s 			page 15


 771:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 772:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
 773:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 774:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
 775:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
 776:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Clock not enabled for I2S*/
 777:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       default:
 778:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 779:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = 0U;
 780:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
 781:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
 782:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
 783:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       break;
 784:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 785:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_I2S_APB2:
 786:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 787:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Get the current I2S source */
 788:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       srcclk = __HAL_RCC_GET_I2S_APB2_SOURCE();
 789:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       switch (srcclk)
 790:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 791:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Check if I2S clock selection is External clock mapped on the I2S_CKIN pin used as I2S cl
 792:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPB2CLKSOURCE_EXT:
 793:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 794:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Set the I2S clock to the external clock  value */
 795:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = EXTERNAL_CLOCK_VALUE;
 796:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
 797:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
 798:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Check if I2S clock selection is PLLI2S VCO output clock divided by PLLI2SR used as I2S c
 799:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPB2CLKSOURCE_PLLI2S:
 800:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 801:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Configure the PLLI2S division factor */
 802:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLLI2S_VCO Input  = PLL_SOURCE/PLLI2SM */
 803:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 804:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 805:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
 806:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSE_VALUE / (uint32_t)(RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SM))
 807:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 808:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
 809:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 810:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
 811:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSI_VALUE / (uint32_t)(RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SM))
 812:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 813:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 814:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
 815:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           vcooutput = (uint32_t)(vcoinput * (((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6U) & (
 816:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* I2S_CLK = PLLI2S_VCO Output/PLLI2SR */
 817:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = (uint32_t)(vcooutput /(((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> 28U) & 
 818:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
 819:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
 820:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Check if I2S clock selection is PLL VCO Output divided by PLLR used as I2S clock */
 821:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPB2CLKSOURCE_PLLR:
 822:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 823:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Configure the PLL division factor R */
 824:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLL_VCO Input  = PLL_SOURCE/PLLM */
 825:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 826:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 827:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
ARM GAS  /tmp/cckRf2Ua.s 			page 16


 828:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 829:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 830:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
 831:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 832:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
 833:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 834:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 835:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 836:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLL_VCO Output = PLL_VCO Input * PLLN */
 837:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           vcooutput = (uint32_t)(vcoinput * (((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6U) & (RCC_PLLCF
 838:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* I2S_CLK = PLL_VCO Output/PLLR */
 839:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = (uint32_t)(vcooutput /(((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 28U) & (RCC_PLLC
 840:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
 841:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
 842:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Check if I2S clock selection is HSI or HSE depending from PLL source Clock */
 843:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPB2CLKSOURCE_PLLSRC:
 844:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 845:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 846:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 847:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             frequency = HSE_VALUE;
 848:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 849:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
 850:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 851:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
 852:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 853:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
 854:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
 855:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Clock not enabled for I2S*/
 856:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       default:
 857:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 858:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = 0U;
 859:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
 860:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
 861:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
 862:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       break;
 863:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 864:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 865:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   return frequency;
 866:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
 867:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F446xx */
 868:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 869:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F469xx) || defined(STM32F479xx)
 870:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
 871:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Initializes the RCC extended peripherals clocks according to the specified
 872:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         parameters in the RCC_PeriphCLKInitTypeDef.
 873:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PeriphClkInit pointer to an RCC_PeriphCLKInitTypeDef structure that
 874:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         contains the configuration information for the Extended Peripherals
 875:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         clocks(I2S, SAI, LTDC, RTC and TIM).
 876:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
 877:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   Care must be taken when HAL_RCCEx_PeriphCLKConfig() is used to select
 878:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         the RTC clock source; in this case the Backup domain will be reset in
 879:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         order to modify the RTC Clock source, as consequence RTC registers (including
 880:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         the backup registers) and RCC_BDCR register are set to their reset values.
 881:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
 882:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval HAL status
 883:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
 884:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
ARM GAS  /tmp/cckRf2Ua.s 			page 17


 885:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
 886:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tickstart = 0U;
 887:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tmpreg1 = 0U;
 888:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t pllsaip = 0U;
 889:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t pllsaiq = 0U;
 890:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t pllsair = 0U;
 891:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 892:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Check the parameters */
 893:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
 894:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 895:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------- CLK48 Configuration --------------------------*/
 896:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 897:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 898:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
 899:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));
 900:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 901:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the CLK48 clock source */
 902:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 903:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 904:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
 905:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 906:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*------------------------------ SDIO Configuration ------------------------*/
 907:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 908:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 909:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
 910:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));
 911:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 912:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the SDIO clock source */
 913:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 914:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 915:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
 916:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 917:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
 918:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*------------------- Common configuration SAI/I2S -------------------------*/
 919:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
 920:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****      factor is common parameters for both peripherals */
 921:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 922:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2
 923:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 924:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 925:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* check for Parameters */
 926:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));
 927:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 928:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Disable the PLLI2S */
 929:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLI2S_DISABLE();
 930:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
 931:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
 932:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLI2S is disabled */
 933:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 934:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 935:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 936:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 937:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* return in case of Timeout detected */
 938:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
 939:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
 940:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 941:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
ARM GAS  /tmp/cckRf2Ua.s 			page 18


 942:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*---------------------- I2S configuration -------------------------------*/
 943:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* In Case of I2S Clock Configuration through PLLI2S, PLLI2SR must be added
 944:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       only for I2S configuration */
 945:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 946:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 947:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* check for Parameters */
 948:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
 949:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Configure the PLLI2S division factors */
 950:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
 951:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
 952:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 953:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 954:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 955:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*---------------------------- SAI configuration -------------------------*/
 956:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* In Case of SAI Clock Configuration through PLLI2S, PLLI2SQ and PLLI2S_DIVQ must
 957:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****        be added only for SAI configuration */
 958:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLL
 959:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 960:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check the PLLI2S division factors */
 961:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
 962:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));
 963:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 964:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Read PLLI2SR value from PLLI2SCFGR register (this value is not need for SAI configuration)
 965:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 966:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Configure the PLLI2S division factors */
 967:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
 968:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
 969:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
 970:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ 
 971:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
 972:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 973:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 974:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 975:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*----------------- In Case of PLLI2S is just selected  -----------------*/
 976:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 977:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 978:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check for Parameters */
 979:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
 980:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
 981:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 982:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Configure the PLLI2S multiplication and division factors */
 983:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, 
 984:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 985:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 986:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLI2S */
 987:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLI2S_ENABLE();
 988:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
 989:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
 990:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLI2S is ready */
 991:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 992:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 993:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 994:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 995:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* return in case of Timeout detected */
 996:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
 997:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
 998:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
ARM GAS  /tmp/cckRf2Ua.s 			page 19


 999:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1000:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
1001:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1002:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
1003:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*----------------------- Common configuration SAI/LTDC --------------------*/
1004:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
1005:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****      factor is common parameters for these peripherals */
1006:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSA
1007:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)          
1008:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****      ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)       
1009:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP)))
1010:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1011:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the PLLSAI division factors */
1012:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));
1013:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1014:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Disable PLLSAI Clock */
1015:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI_DISABLE();
1016:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
1017:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
1018:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLSAI is disabled */
1019:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
1020:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1021:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
1022:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
1023:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* return in case of Timeout detected */
1024:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
1025:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
1026:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1027:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1028:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*---------------------------- SAI configuration -------------------------*/
1029:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
1030:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****        be added only for SAI configuration */
1031:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLL
1032:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1033:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
1034:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));
1035:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1036:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuratio
1037:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) 
1038:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration)
1039:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
1040:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
1041:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
1042:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
1043:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ
1044:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
1045:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
1046:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1047:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1048:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*---------------------------- LTDC configuration ------------------------*/
1049:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
1050:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1051:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
1052:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));
1053:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1054:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuratio
1055:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) 
ARM GAS  /tmp/cckRf2Ua.s 			page 20


1056:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration)
1057:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
1058:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
1059:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
1060:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
1061:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSA
1062:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
1063:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
1064:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1065:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1066:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*---------------------------- CLK48 configuration ------------------------*/
1067:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the PLLSAI when it is used as clock source for CLK48 */
1068:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
1069:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****        (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
1070:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1071:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
1072:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1073:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration)
1074:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
1075:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration)
1076:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
1077:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
1078:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
1079:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
1080:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq
1081:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1082:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1083:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable PLLSAI Clock */
1084:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI_ENABLE();
1085:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
1086:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
1087:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLSAI is ready */
1088:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
1089:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1090:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
1091:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
1092:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* return in case of Timeout detected */
1093:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
1094:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
1095:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1096:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1097:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1098:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
1099:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1100:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*---------------------------- RTC configuration ---------------------------*/
1101:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
1102:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1103:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check for RTC Parameters used to output RTCCLK */
1104:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
1105:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1106:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable Power Clock*/
1107:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PWR_CLK_ENABLE();
1108:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1109:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable write access to Backup domain */
1110:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     PWR->CR |= PWR_CR_DBP;
1111:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1112:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
ARM GAS  /tmp/cckRf2Ua.s 			page 21


1113:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
1114:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1115:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while((PWR->CR & PWR_CR_DBP) == RESET)
1116:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1117:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
1118:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
1119:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
1120:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
1121:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1122:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value 
1123:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
1124:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSE
1125:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1126:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Store the content of BDCR register before the reset of Backup Domain */
1127:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
1128:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
1129:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_BACKUPRESET_FORCE();
1130:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
1131:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Restore the Content of BDCR register */
1132:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       RCC->BDCR = tmpreg1;
1133:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1134:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
1135:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
1136:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
1137:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Get tick */
1138:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         tickstart = HAL_GetTick();
1139:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1140:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Wait till LSE is ready */
1141:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
1142:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
1143:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
1144:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
1145:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             return HAL_TIMEOUT;
1146:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
1147:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
1148:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
1149:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1150:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
1151:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1152:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
1153:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1154:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*---------------------------- TIM configuration ---------------------------*/
1155:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
1156:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1157:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
1158:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1159:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   return HAL_OK;
1160:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
1161:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1162:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
1163:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Configures the RCC_PeriphCLKInitTypeDef according to the internal
1164:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * RCC configuration registers.
1165:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PeriphClkInit pointer to an RCC_PeriphCLKInitTypeDef structure that
1166:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         will be configured.
1167:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval None
1168:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
1169:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** void HAL_RCCEx_GetPeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
ARM GAS  /tmp/cckRf2Ua.s 			page 22


1170:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
1171:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tempreg;
1172:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1173:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Set all possible values for the extended clock type parameter------------*/
1174:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_I2S        | RCC_PERIPHCLK_SAI_PLLSAI |\
1175:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_SAI_PLLI2S | RCC_PERIPHCLK_LTDC       |\
1176:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_TIM        | RCC_PERIPHCLK_RTC        |\
1177:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_CLK48       | RCC_PERIPHCLK_SDIO;
1178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1179:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the PLLI2S Clock configuration --------------------------------------*/
1180:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2S.PLLI2SN = (uint32_t)((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> RCC_PLLI
1181:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2S.PLLI2SR = (uint32_t)((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI
1182:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2S.PLLI2SQ = (uint32_t)((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI
1183:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the PLLSAI Clock configuration --------------------------------------*/
1184:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI.PLLSAIN = (uint32_t)((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIN) >> RCC_PLLS
1185:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI.PLLSAIR = (uint32_t)((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLS
1186:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI.PLLSAIQ = (uint32_t)((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLS
1187:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the PLLSAI/PLLI2S division factors ----------------------------------*/
1188:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2SDivQ = (uint32_t)((RCC->DCKCFGR & RCC_DCKCFGR_PLLI2SDIVQ) >> RCC_DCKCFGR_PLL
1189:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAIDivQ = (uint32_t)((RCC->DCKCFGR & RCC_DCKCFGR_PLLSAIDIVQ) >> RCC_DCKCFGR_PLL
1190:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAIDivR = (uint32_t)(RCC->DCKCFGR & RCC_DCKCFGR_PLLSAIDIVR);
1191:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the RTC Clock configuration -----------------------------------------*/
1192:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   tempreg = (RCC->CFGR & RCC_CFGR_RTCPRE);
1193:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->RTCClockSelection = (uint32_t)((tempreg) | (RCC->BDCR & RCC_BDCR_RTCSEL));
1194:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1195:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get the CLK48 clock configuration -------------------------------------*/
1196:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->Clk48ClockSelection = __HAL_RCC_GET_CLK48_SOURCE();
1197:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1198:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the SDIO clock configuration ----------------------------------------*/
1199:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->SdioClockSelection = __HAL_RCC_GET_SDIO_SOURCE();
1200:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1201:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if ((RCC->DCKCFGR & RCC_DCKCFGR_TIMPRE) == RESET)
1202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1203:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     PeriphClkInit->TIMPresSelection = RCC_TIMPRES_DESACTIVATED;
1204:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1205:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   else
1206:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1207:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     PeriphClkInit->TIMPresSelection = RCC_TIMPRES_ACTIVATED;
1208:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1209:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
1210:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1211:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
1212:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Return the peripheral clock frequency for a given peripheral(SAI..)
1213:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   Return 0 if peripheral clock identifier not managed by this API
1214:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PeriphClk Peripheral clock identifier
1215:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         This parameter can be one of the following values:
1216:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            @arg RCC_PERIPHCLK_I2S: I2S peripheral clock
1217:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval Frequency in KHz
1218:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
1219:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint32_t PeriphClk)
1220:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
1221:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the I2S clock frequency (value in Hz) */
1222:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t frequency = 0U;
1223:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the VCO Input (value in Hz) */
1224:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t vcoinput = 0U;
1225:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t srcclk = 0U;
1226:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the VCO Output (value in Hz) */
ARM GAS  /tmp/cckRf2Ua.s 			page 23


1227:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t vcooutput = 0U;
1228:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   switch (PeriphClk)
1229:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1230:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_I2S:
1231:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1232:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Get the current I2S source */
1233:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       srcclk = __HAL_RCC_GET_I2S_SOURCE();
1234:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       switch (srcclk)
1235:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
1236:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check if I2S clock selection is External clock mapped on the I2S_CKIN pin used as I2S cloc
1237:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SCLKSOURCE_EXT:
1238:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
1239:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Set the I2S clock to the external clock  value */
1240:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = EXTERNAL_CLOCK_VALUE;
1241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
1242:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
1243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check if I2S clock selection is PLLI2S VCO output clock divided by PLLI2SR used as I2S clo
1244:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SCLKSOURCE_PLLI2S:
1245:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
1246:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Configure the PLLI2S division factor */
1247:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLLI2S_VCO Input  = PLL_SOURCE/PLLI2SM */
1248:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
1249:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
1250:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
1251:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
1252:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
1253:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
1254:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
1255:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
1256:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
1257:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
1258:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1259:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
1260:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           vcooutput = (uint32_t)(vcoinput * (((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6U) & (
1261:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* I2S_CLK = PLLI2S_VCO Output/PLLI2SR */
1262:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = (uint32_t)(vcooutput /(((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> 28U) & 
1263:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
1264:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
1265:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Clock not enabled for I2S*/
1266:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       default:
1267:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
1268:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = 0U;
1269:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
1270:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
1271:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
1272:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       break;
1273:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1274:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1275:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   return frequency;
1276:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
1277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F469xx || STM32F479xx */
1278:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1279:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F412Zx) || defined(STM32F412Vx) || defined(STM32F412Rx) || defined(STM32F412Cx) ||
1280:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
1281:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Initializes the RCC extended peripherals clocks according to the specified
1282:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         parameters in the RCC_PeriphCLKInitTypeDef.
1283:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PeriphClkInit pointer to an RCC_PeriphCLKInitTypeDef structure that
ARM GAS  /tmp/cckRf2Ua.s 			page 24


1284:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         contains the configuration information for the Extended Peripherals
1285:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         clocks(I2S, LTDC RTC and TIM).
1286:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
1287:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   Care must be taken when HAL_RCCEx_PeriphCLKConfig() is used to select
1288:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         the RTC clock source; in this case the Backup domain will be reset in
1289:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         order to modify the RTC Clock source, as consequence RTC registers (including
1290:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         the backup registers) and RCC_BDCR register are set to their reset values.
1291:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
1292:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval HAL status
1293:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
1294:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
1295:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
1296:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tickstart = 0U;
1297:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tmpreg1 = 0U;
1298:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F413xx) || defined(STM32F423xx)
1299:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t plli2sq = 0U;
1300:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F413xx || STM32F423xx */
1301:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t plli2sused = 0U;
1302:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1303:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Check the peripheral clock selection parameters */
1304:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
1305:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1306:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*----------------------------------- I2S APB1 configuration ---------------*/
1307:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB1) == (RCC_PERIPHCLK_I2S_APB1))
1308:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1309:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
1310:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_I2SAPB1CLKSOURCE(PeriphClkInit->I2sApb1ClockSelection));
1311:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1312:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure I2S Clock source */
1313:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_I2S_APB1_CONFIG(PeriphClkInit->I2sApb1ClockSelection);
1314:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLI2S when it's used as clock source for I2S */
1315:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(PeriphClkInit->I2sApb1ClockSelection == RCC_I2SAPB1CLKSOURCE_PLLI2S)
1316:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1317:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       plli2sused = 1U;
1318:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1319:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1320:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
1321:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1322:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*----------------------------------- I2S APB2 configuration ---------------*/
1323:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB2) == (RCC_PERIPHCLK_I2S_APB2))
1324:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1325:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
1326:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_I2SAPB2CLKSOURCE(PeriphClkInit->I2sApb2ClockSelection));
1327:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1328:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure I2S Clock source */
1329:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_I2S_APB2_CONFIG(PeriphClkInit->I2sApb2ClockSelection);
1330:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLI2S when it's used as clock source for I2S */
1331:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(PeriphClkInit->I2sApb2ClockSelection == RCC_I2SAPB2CLKSOURCE_PLLI2S)
1332:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1333:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       plli2sused = 1U;
1334:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1335:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1336:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
1337:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1338:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F413xx) || defined(STM32F423xx)
1339:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*----------------------- SAI1 Block A configuration -----------------------*/
1340:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAIA) == (RCC_PERIPHCLK_SAIA))
ARM GAS  /tmp/cckRf2Ua.s 			page 25


1341:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1342:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
1343:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_SAIACLKSOURCE(PeriphClkInit->SaiAClockSelection));
1344:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1345:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure SAI1 Clock source */
1346:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_SAI_BLOCKACLKSOURCE_CONFIG(PeriphClkInit->SaiAClockSelection);
1347:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLI2S when it's used as clock source for SAI */
1348:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(PeriphClkInit->SaiAClockSelection == RCC_SAIACLKSOURCE_PLLI2SR)
1349:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1350:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       plli2sused = 1U;
1351:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1352:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLSAI when it's used as clock source for SAI */
1353:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(PeriphClkInit->SaiAClockSelection == RCC_SAIACLKSOURCE_PLLR)
1354:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1355:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check for PLL/DIVR parameters */
1356:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLL_DIVR_VALUE(PeriphClkInit->PLLDivR));
1357:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1358:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK_x = SAI_CLK(first level)/PLLDIVR */
1359:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLL_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLDivR);
1360:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1361:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1362:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
1363:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1364:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*---------------------- SAI1 Block B configuration ------------------------*/
1365:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAIB) == (RCC_PERIPHCLK_SAIB))
1366:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1367:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
1368:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_SAIBCLKSOURCE(PeriphClkInit->SaiBClockSelection));
1369:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1370:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure SAI1 Clock source */
1371:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_SAI_BLOCKBCLKSOURCE_CONFIG(PeriphClkInit->SaiBClockSelection);
1372:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLI2S when it's used as clock source for SAI */
1373:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(PeriphClkInit->SaiBClockSelection == RCC_SAIBCLKSOURCE_PLLI2SR)
1374:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1375:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       plli2sused = 1U;
1376:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1377:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLSAI when it's used as clock source for SAI */
1378:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(PeriphClkInit->SaiBClockSelection == RCC_SAIBCLKSOURCE_PLLR)
1379:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1380:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check for PLL/DIVR parameters */
1381:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLL_DIVR_VALUE(PeriphClkInit->PLLDivR));
1382:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1383:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK_x = SAI_CLK(first level)/PLLDIVR */
1384:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLL_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLDivR);
1385:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1386:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1387:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
1388:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F413xx || STM32F423xx */
1389:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1390:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*------------------------------------ RTC configuration -------------------*/
1391:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
1392:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1393:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check for RTC Parameters used to output RTCCLK */
1394:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
1395:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1396:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable Power Clock*/
1397:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PWR_CLK_ENABLE();
ARM GAS  /tmp/cckRf2Ua.s 			page 26


1398:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1399:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable write access to Backup domain */
1400:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     PWR->CR |= PWR_CR_DBP;
1401:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1402:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
1403:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
1404:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1405:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while((PWR->CR & PWR_CR_DBP) == RESET)
1406:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1407:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
1408:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
1409:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
1410:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
1411:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1412:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value 
1413:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
1414:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSE
1415:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1416:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Store the content of BDCR register before the reset of Backup Domain */
1417:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
1418:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
1419:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_BACKUPRESET_FORCE();
1420:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
1421:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Restore the Content of BDCR register */
1422:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       RCC->BDCR = tmpreg1;
1423:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1424:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
1425:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
1426:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
1427:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Get tick */
1428:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         tickstart = HAL_GetTick();
1429:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1430:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Wait till LSE is ready */
1431:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
1432:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
1433:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
1434:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
1435:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             return HAL_TIMEOUT;
1436:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
1437:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
1438:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
1439:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1440:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
1441:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1442:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
1443:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1444:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*------------------------------------ TIM configuration -------------------*/
1445:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
1446:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1447:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure Timer Prescaler */
1448:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
1449:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1450:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
1451:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1452:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*------------------------------------- FMPI2C1 Configuration --------------*/
1453:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMPI2C1) == RCC_PERIPHCLK_FMPI2C1)
1454:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
ARM GAS  /tmp/cckRf2Ua.s 			page 27


1455:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
1456:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_FMPI2C1CLKSOURCE(PeriphClkInit->Fmpi2c1ClockSelection));
1457:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1458:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the FMPI2C1 clock source */
1459:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_FMPI2C1_CONFIG(PeriphClkInit->Fmpi2c1ClockSelection);
1460:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1461:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
1462:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1463:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*------------------------------------- CLK48 Configuration ----------------*/
1464:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
1465:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1466:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
1467:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));
1468:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1469:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the SDIO clock source */
1470:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
1471:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1472:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLI2S when it's used as clock source for CLK48 */
1473:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLI2SQ)
1474:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1475:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       plli2sused = 1U;
1476:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1477:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1478:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
1479:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1480:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*------------------------------------- SDIO Configuration -----------------*/
1481:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
1482:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1483:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
1484:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));
1485:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1486:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the SDIO clock source */
1487:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
1488:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1489:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
1490:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1491:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*-------------------------------------- PLLI2S Configuration --------------*/
1492:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* PLLI2S is configured when a peripheral will use it as source clock : I2S on APB1 or
1493:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****      I2S on APB2*/
1494:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if((plli2sused == 1U) || (PeriphClkInit->PeriphClockSelection == RCC_PERIPHCLK_PLLI2S))
1495:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1496:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Disable the PLLI2S */
1497:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLI2S_DISABLE();
1498:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
1499:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
1500:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLI2S is disabled */
1501:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
1502:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1503:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
1504:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
1505:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* return in case of Timeout detected */
1506:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
1507:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
1508:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1509:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1510:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* check for common PLLI2S Parameters */
1511:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_PLLI2SCLKSOURCE(PeriphClkInit->PLLI2SSelection));
ARM GAS  /tmp/cckRf2Ua.s 			page 28


1512:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_PLLI2SM_VALUE(PeriphClkInit->PLLI2S.PLLI2SM));
1513:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));
1514:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*-------------------- Set the PLL I2S clock -----------------------------*/
1515:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLL_I2S_CONFIG(PeriphClkInit->PLLI2SSelection);
1516:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1517:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*------- In Case of PLLI2S is selected as source clock for I2S ----------*/
1518:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB1) == RCC_PERIPHCLK_I2S_APB1
1519:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****        ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S_APB2) == RCC_PERIPHCLK_I2S_APB2
1520:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****        ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (
1521:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****        ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO) && (Pe
1522:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1523:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* check for Parameters */
1524:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
1525:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
1526:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1527:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Configure the PLLI2S division factors */
1528:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLI2SM)*/
1529:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
1530:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , Periph
1531:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1532:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1533:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F413xx) || defined(STM32F423xx)
1534:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*------- In Case of PLLI2S is selected as source clock for SAI ----------*/
1535:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAIA) == RCC_PERIPHCLK_SAIA) && (Pe
1536:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****        ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAIB) == RCC_PERIPHCLK_SAIB) && (Pe
1537:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1538:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check for PLLI2S Parameters */
1539:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
1540:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check for PLLI2S/DIVR parameters */
1541:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2S_DIVR_VALUE(PeriphClkInit->PLLI2SDivR));
1542:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1543:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Read PLLI2SQ value from PLLI2SCFGR register (this value is not needed for SAI configuratio
1544:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       plli2sq = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
1545:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Configure the PLLI2S division factors */
1546:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLI2S_VCO Input  = PLL_SOURCE/PLLI2SM */
1547:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
1548:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
1549:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN, plli2sq
1550:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1551:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVR */
1552:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLI2S_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLI2SDivR);
1553:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1554:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F413xx || STM32F423xx */
1555:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1556:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*----------------- In Case of PLLI2S is just selected  ------------------*/
1557:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
1558:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1559:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check for Parameters */
1560:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
1561:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
1562:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1563:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Configure the PLLI2S division factors */
1564:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLI2SM)*/
1565:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SPDIFRXCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
1566:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN , Periph
1567:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1568:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
ARM GAS  /tmp/cckRf2Ua.s 			page 29


1569:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLI2S */
1570:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLI2S_ENABLE();
1571:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
1572:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
1573:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLI2S is ready */
1574:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
1575:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1576:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
1577:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
1578:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* return in case of Timeout detected */
1579:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
1580:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
1581:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1582:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1583:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
1584:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1585:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*-------------------- DFSDM1 clock source configuration -------------------*/
1586:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
1587:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1588:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
1589:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_DFSDM1CLKSOURCE(PeriphClkInit->Dfsdm1ClockSelection));
1590:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1591:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the DFSDM1 interface clock source */
1592:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
1593:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1594:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
1595:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1596:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*-------------------- DFSDM1 Audio clock source configuration -------------*/
1597:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1_AUDIO) == RCC_PERIPHCLK_DFSDM1_A
1598:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1599:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
1600:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_DFSDM1AUDIOCLKSOURCE(PeriphClkInit->Dfsdm1AudioClockSelection));
1601:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1602:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the DFSDM1 Audio interface clock source */
1603:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_DFSDM1AUDIO_CONFIG(PeriphClkInit->Dfsdm1AudioClockSelection);
1604:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1605:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
1606:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1607:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F413xx) || defined(STM32F423xx)
1608:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*-------------------- DFSDM2 clock source configuration -------------------*/
1609:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM2) == RCC_PERIPHCLK_DFSDM2)
1610:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1611:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
1612:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_DFSDM2CLKSOURCE(PeriphClkInit->Dfsdm2ClockSelection));
1613:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1614:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the DFSDM1 interface clock source */
1615:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_DFSDM2_CONFIG(PeriphClkInit->Dfsdm2ClockSelection);
1616:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1617:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
1618:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1619:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*-------------------- DFSDM2 Audio clock source configuration -------------*/
1620:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM2_AUDIO) == RCC_PERIPHCLK_DFSDM2_A
1621:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1622:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
1623:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_DFSDM2AUDIOCLKSOURCE(PeriphClkInit->Dfsdm2AudioClockSelection));
1624:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1625:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the DFSDM1 Audio interface clock source */
ARM GAS  /tmp/cckRf2Ua.s 			page 30


1626:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_DFSDM2AUDIO_CONFIG(PeriphClkInit->Dfsdm2AudioClockSelection);
1627:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1628:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
1629:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1630:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*---------------------------- LPTIM1 Configuration ------------------------*/
1631:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
1632:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1633:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
1634:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_LPTIM1CLKSOURCE(PeriphClkInit->Lptim1ClockSelection));
1635:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1636:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the LPTIM1 clock source */
1637:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
1638:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1639:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
1640:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F413xx || STM32F423xx */
1641:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1642:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   return HAL_OK;
1643:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
1644:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1645:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
1646:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Get the RCC_PeriphCLKInitTypeDef according to the internal
1647:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         RCC configuration registers.
1648:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PeriphClkInit pointer to an RCC_PeriphCLKInitTypeDef structure that
1649:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         will be configured.
1650:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval None
1651:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
1652:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** void HAL_RCCEx_GetPeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
1653:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
1654:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tempreg;
1655:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1656:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Set all possible values for the extended clock type parameter------------*/
1657:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F413xx) || defined(STM32F423xx)
1658:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_I2S_APB1     | RCC_PERIPHCLK_I2S_APB2 |\
1659:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_TIM          | RCC_PERIPHCLK_RTC      |\
1660:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_FMPI2C1      | RCC_PERIPHCLK_CLK48    |\
1661:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_SDIO         | RCC_PERIPHCLK_DFSDM1   |\
1662:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_DFSDM1_AUDIO | RCC_PERIPHCLK_DFSDM2   |\
1663:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_DFSDM2_AUDIO | RCC_PERIPHCLK_LPTIM1   |\
1664:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_SAIA         | RCC_PERIPHCLK_SAIB;
1665:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #else /* STM32F412Zx || STM32F412Vx || STM32F412Rx || STM32F412Cx */
1666:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_I2S_APB1 | RCC_PERIPHCLK_I2S_APB2 |\
1667:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_TIM      | RCC_PERIPHCLK_RTC      |\
1668:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_FMPI2C1  | RCC_PERIPHCLK_CLK48    |\
1669:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_SDIO     | RCC_PERIPHCLK_DFSDM1   |\
1670:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_DFSDM1_AUDIO;
1671:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F413xx || STM32F423xx */
1672:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1673:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1674:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1675:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the PLLI2S Clock configuration --------------------------------------*/
1676:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2S.PLLI2SM = (uint32_t)((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SM) >> RCC_PLLI
1677:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2S.PLLI2SN = (uint32_t)((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> RCC_PLLI
1678:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2S.PLLI2SQ = (uint32_t)((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI
1679:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2S.PLLI2SR = (uint32_t)((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI
1680:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F413xx) || defined(STM32F423xx)
1681:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the PLL/PLLI2S division factors -------------------------------------*/
1682:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2SDivR = (uint32_t)((RCC->DCKCFGR & RCC_DCKCFGR_PLLI2SDIVR) >> RCC_DCKCFGR_PLL
ARM GAS  /tmp/cckRf2Ua.s 			page 31


1683:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLDivR = (uint32_t)((RCC->DCKCFGR & RCC_DCKCFGR_PLLDIVR) >> RCC_DCKCFGR_PLLDIVR_P
1684:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F413xx || STM32F423xx */
1685:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1686:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the I2S APB1 clock configuration ------------------------------------*/
1687:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->I2sApb1ClockSelection = __HAL_RCC_GET_I2S_APB1_SOURCE();
1688:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1689:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the I2S APB2 clock configuration ------------------------------------*/
1690:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->I2sApb2ClockSelection = __HAL_RCC_GET_I2S_APB2_SOURCE();
1691:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1692:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the RTC Clock configuration -----------------------------------------*/
1693:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   tempreg = (RCC->CFGR & RCC_CFGR_RTCPRE);
1694:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->RTCClockSelection = (uint32_t)((tempreg) | (RCC->BDCR & RCC_BDCR_RTCSEL));
1695:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1696:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the FMPI2C1 clock configuration -------------------------------------*/
1697:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->Fmpi2c1ClockSelection = __HAL_RCC_GET_FMPI2C1_SOURCE();
1698:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1699:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the CLK48 clock configuration ---------------------------------------*/
1700:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->Clk48ClockSelection = __HAL_RCC_GET_CLK48_SOURCE();
1701:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1702:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the SDIO clock configuration ----------------------------------------*/
1703:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->SdioClockSelection = __HAL_RCC_GET_SDIO_SOURCE();
1704:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1705:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the DFSDM1 clock configuration --------------------------------------*/
1706:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->Dfsdm1ClockSelection = __HAL_RCC_GET_DFSDM1_SOURCE();
1707:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1708:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the DFSDM1 Audio clock configuration --------------------------------*/
1709:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->Dfsdm1AudioClockSelection = __HAL_RCC_GET_DFSDM1AUDIO_SOURCE();
1710:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1711:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F413xx) || defined(STM32F423xx)
1712:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the DFSDM2 clock configuration --------------------------------------*/
1713:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->Dfsdm2ClockSelection = __HAL_RCC_GET_DFSDM2_SOURCE();
1714:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1715:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the DFSDM2 Audio clock configuration --------------------------------*/
1716:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->Dfsdm2AudioClockSelection = __HAL_RCC_GET_DFSDM2AUDIO_SOURCE();
1717:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1718:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the LPTIM1 clock configuration --------------------------------------*/
1719:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->Lptim1ClockSelection = __HAL_RCC_GET_LPTIM1_SOURCE();
1720:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1721:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the SAI1 Block Aclock configuration ---------------------------------*/
1722:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->SaiAClockSelection = __HAL_RCC_GET_SAI_BLOCKA_SOURCE();
1723:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1724:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the SAI1 Block B clock configuration --------------------------------*/
1725:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->SaiBClockSelection = __HAL_RCC_GET_SAI_BLOCKB_SOURCE();
1726:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F413xx || STM32F423xx */
1727:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1728:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the TIM Prescaler configuration -------------------------------------*/
1729:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if ((RCC->DCKCFGR & RCC_DCKCFGR_TIMPRE) == RESET)
1730:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1731:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     PeriphClkInit->TIMPresSelection = RCC_TIMPRES_DESACTIVATED;
1732:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1733:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   else
1734:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1735:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     PeriphClkInit->TIMPresSelection = RCC_TIMPRES_ACTIVATED;
1736:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1737:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
1738:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1739:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
ARM GAS  /tmp/cckRf2Ua.s 			page 32


1740:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Return the peripheral clock frequency for a given peripheral(I2S..)
1741:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   Return 0 if peripheral clock identifier not managed by this API
1742:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PeriphClk Peripheral clock identifier
1743:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         This parameter can be one of the following values:
1744:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            @arg RCC_PERIPHCLK_I2S_APB1: I2S APB1 peripheral clock
1745:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            @arg RCC_PERIPHCLK_I2S_APB2: I2S APB2 peripheral clock
1746:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval Frequency in KHz
1747:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
1748:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint32_t PeriphClk)
1749:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
1750:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the I2S clock frequency (value in Hz) */
1751:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t frequency = 0U;
1752:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the VCO Input (value in Hz) */
1753:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t vcoinput = 0U;
1754:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t srcclk = 0U;
1755:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the VCO Output (value in Hz) */
1756:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t vcooutput = 0U;
1757:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   switch (PeriphClk)
1758:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1759:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_I2S_APB1:
1760:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1761:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Get the current I2S source */
1762:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       srcclk = __HAL_RCC_GET_I2S_APB1_SOURCE();
1763:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       switch (srcclk)
1764:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
1765:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check if I2S clock selection is External clock mapped on the I2S_CKIN pin used as I2S cloc
1766:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPB1CLKSOURCE_EXT:
1767:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
1768:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Set the I2S clock to the external clock  value */
1769:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = EXTERNAL_CLOCK_VALUE;
1770:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
1771:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
1772:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check if I2S clock selection is PLLI2S VCO output clock divided by PLLI2SR used as I2S clo
1773:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPB1CLKSOURCE_PLLI2S:
1774:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
1775:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SSRC) == RCC_PLLI2SCFGR_PLLI2SSRC)
1776:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
1777:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
1778:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(EXTERNAL_CLOCK_VALUE / (uint32_t)(RCC->PLLI2SCFGR & RCC_PLLI2SCFG
1779:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
1780:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
1781:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
1782:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Configure the PLLI2S division factor */
1783:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* PLLI2S_VCO Input  = PLL_SOURCE/PLLI2SM */
1784:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
1785:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             {
1786:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****               /* Get the I2S source clock value */
1787:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****               vcoinput = (uint32_t)(HSE_VALUE / (uint32_t)(RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SM
1788:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             }
1789:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             else
1790:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             {
1791:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****               /* Get the I2S source clock value */
1792:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****               vcoinput = (uint32_t)(HSI_VALUE / (uint32_t)(RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SM
1793:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             }
1794:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
1795:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
1796:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           vcooutput = (uint32_t)(vcoinput * (((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6U) & (
ARM GAS  /tmp/cckRf2Ua.s 			page 33


1797:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* I2S_CLK = PLLI2S_VCO Output/PLLI2SR */
1798:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = (uint32_t)(vcooutput /(((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> 28U) & 
1799:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
1800:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
1801:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check if I2S clock selection is PLL VCO Output divided by PLLR used as I2S clock */
1802:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPB1CLKSOURCE_PLLR:
1803:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
1804:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Configure the PLL division factor R */
1805:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLL_VCO Input  = PLL_SOURCE/PLLM */
1806:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
1807:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
1808:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
1809:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
1810:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
1811:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
1812:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
1813:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
1814:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
1815:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
1816:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1817:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLL_VCO Output = PLL_VCO Input * PLLN */
1818:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           vcooutput = (uint32_t)(vcoinput * (((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6U) & (RCC_PLLCF
1819:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* I2S_CLK = PLL_VCO Output/PLLR */
1820:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = (uint32_t)(vcooutput /(((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 28U) & (RCC_PLLC
1821:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
1822:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
1823:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check if I2S clock selection is HSI or HSE depending from PLL source Clock */
1824:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPB1CLKSOURCE_PLLSRC:
1825:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
1826:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
1827:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
1828:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             frequency = HSE_VALUE;
1829:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
1830:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
1831:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
1832:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
1833:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
1834:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
1835:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
1836:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Clock not enabled for I2S*/
1837:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       default:
1838:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
1839:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = 0U;
1840:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
1841:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
1842:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
1843:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       break;
1844:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1845:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_I2S_APB2:
1846:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1847:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Get the current I2S source */
1848:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       srcclk = __HAL_RCC_GET_I2S_APB2_SOURCE();
1849:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       switch (srcclk)
1850:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
1851:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Check if I2S clock selection is External clock mapped on the I2S_CKIN pin used as I2S cl
1852:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPB2CLKSOURCE_EXT:
1853:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
ARM GAS  /tmp/cckRf2Ua.s 			page 34


1854:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Set the I2S clock to the external clock  value */
1855:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = EXTERNAL_CLOCK_VALUE;
1856:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
1857:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
1858:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Check if I2S clock selection is PLLI2S VCO output clock divided by PLLI2SR used as I2S c
1859:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPB2CLKSOURCE_PLLI2S:
1860:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
1861:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SSRC) == RCC_PLLI2SCFGR_PLLI2SSRC)
1862:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
1863:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
1864:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(EXTERNAL_CLOCK_VALUE / (uint32_t)(RCC->PLLI2SCFGR & RCC_PLLI2SCFG
1865:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
1866:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
1867:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
1868:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Configure the PLLI2S division factor */
1869:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* PLLI2S_VCO Input  = PLL_SOURCE/PLLI2SM */
1870:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
1871:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             {
1872:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****               /* Get the I2S source clock value */
1873:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****               vcoinput = (uint32_t)(HSE_VALUE / (uint32_t)(RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SM
1874:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             }
1875:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             else
1876:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             {
1877:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****               /* Get the I2S source clock value */
1878:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****               vcoinput = (uint32_t)(HSI_VALUE / (uint32_t)(RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SM
1879:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             }
1880:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
1881:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
1882:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           vcooutput = (uint32_t)(vcoinput * (((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6U) & (
1883:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* I2S_CLK = PLLI2S_VCO Output/PLLI2SR */
1884:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = (uint32_t)(vcooutput /(((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> 28U) & 
1885:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
1886:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
1887:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Check if I2S clock selection is PLL VCO Output divided by PLLR used as I2S clock */
1888:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPB2CLKSOURCE_PLLR:
1889:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
1890:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Configure the PLL division factor R */
1891:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLL_VCO Input  = PLL_SOURCE/PLLM */
1892:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
1893:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
1894:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
1895:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
1896:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
1897:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
1898:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
1899:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
1900:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
1901:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
1902:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1903:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLL_VCO Output = PLL_VCO Input * PLLN */
1904:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           vcooutput = (uint32_t)(vcoinput * (((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6U) & (RCC_PLLCF
1905:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* I2S_CLK = PLL_VCO Output/PLLR */
1906:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = (uint32_t)(vcooutput /(((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 28U) & (RCC_PLLC
1907:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
1908:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
1909:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Check if I2S clock selection is HSI or HSE depending from PLL source Clock */
1910:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPB2CLKSOURCE_PLLSRC:
ARM GAS  /tmp/cckRf2Ua.s 			page 35


1911:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
1912:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
1913:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
1914:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             frequency = HSE_VALUE;
1915:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
1916:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
1917:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
1918:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
1919:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
1920:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
1921:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
1922:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Clock not enabled for I2S*/
1923:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       default:
1924:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
1925:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = 0U;
1926:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
1927:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
1928:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
1929:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       break;
1930:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1931:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
1932:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   return frequency;
1933:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
1934:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F412Zx || STM32F412Vx || STM32F412Rx || STM32F412Cx || STM32F413xx || STM32F423xx */
1935:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1936:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F410Tx) || defined(STM32F410Cx) || defined(STM32F410Rx)
1937:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
1938:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Initializes the RCC extended peripherals clocks according to the specified parameters i
1939:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         RCC_PeriphCLKInitTypeDef.
1940:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PeriphClkInit pointer to an RCC_PeriphCLKInitTypeDef structure that
1941:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         contains the configuration information for the Extended Peripherals clocks(I2S and RTC 
1942:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
1943:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   A caution to be taken when HAL_RCCEx_PeriphCLKConfig() is used to select RTC clock sele
1944:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         the Reset of Backup domain will be applied in order to modify the RTC Clock source as c
1945:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *        domain (RTC and RCC_BDCR register expect BKPSRAM) will be reset
1946:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
1947:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval HAL status
1948:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
1949:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
1950:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
1951:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tickstart = 0U;
1952:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tmpreg1 = 0U;
1953:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1954:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Check the parameters */
1955:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
1956:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1957:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*---------------------------- RTC configuration ---------------------------*/
1958:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
1959:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
1960:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check for RTC Parameters used to output RTCCLK */
1961:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
1962:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1963:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable Power Clock*/
1964:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PWR_CLK_ENABLE();
1965:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1966:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable write access to Backup domain */
1967:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     PWR->CR |= PWR_CR_DBP;
ARM GAS  /tmp/cckRf2Ua.s 			page 36


1968:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1969:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
1970:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
1971:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1972:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while((PWR->CR & PWR_CR_DBP) == RESET)
1973:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1974:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
1975:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
1976:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
1977:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
1978:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
1979:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value 
1980:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
1981:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSE
1982:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
1983:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Store the content of BDCR register before the reset of Backup Domain */
1984:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
1985:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
1986:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_BACKUPRESET_FORCE();
1987:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
1988:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Restore the Content of BDCR register */
1989:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       RCC->BDCR = tmpreg1;
1990:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1991:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
1992:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
1993:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
1994:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Get tick */
1995:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         tickstart = HAL_GetTick();
1996:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
1997:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Wait till LSE is ready */
1998:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
1999:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
2000:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
2001:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
2002:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             return HAL_TIMEOUT;
2003:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
2004:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
2005:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
2006:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2007:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
2008:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2009:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
2010:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2011:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*---------------------------- TIM configuration ---------------------------*/
2012:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
2013:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2014:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
2015:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2016:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
2017:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2018:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*---------------------------- FMPI2C1 Configuration -----------------------*/
2019:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMPI2C1) == RCC_PERIPHCLK_FMPI2C1)
2020:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2021:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
2022:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_FMPI2C1CLKSOURCE(PeriphClkInit->Fmpi2c1ClockSelection));
2023:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2024:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the FMPI2C1 clock source */
ARM GAS  /tmp/cckRf2Ua.s 			page 37


2025:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_FMPI2C1_CONFIG(PeriphClkInit->Fmpi2c1ClockSelection);
2026:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2027:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
2028:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2029:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*---------------------------- LPTIM1 Configuration ------------------------*/
2030:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
2031:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2032:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
2033:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_LPTIM1CLKSOURCE(PeriphClkInit->Lptim1ClockSelection));
2034:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2035:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the LPTIM1 clock source */
2036:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
2037:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2038:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2039:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*---------------------------- I2S Configuration ---------------------------*/
2040:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S)
2041:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2042:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the parameters */
2043:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_I2SAPBCLKSOURCE(PeriphClkInit->I2SClockSelection));
2044:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2045:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the I2S clock source */
2046:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2SClockSelection);
2047:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2048:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2049:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   return HAL_OK;
2050:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
2051:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2052:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
2053:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
2054:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * RCC configuration registers.
2055:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PeriphClkInit pointer to an RCC_PeriphCLKInitTypeDef structure that
2056:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * will be configured.
2057:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval None
2058:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
2059:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** void HAL_RCCEx_GetPeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
2060:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
2061:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tempreg;
2062:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2063:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Set all possible values for the extended clock type parameter------------*/
2064:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_FMPI2C1 | RCC_PERIPHCLK_LPTIM1 | RCC_PERIPHCL
2065:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2066:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   tempreg = (RCC->CFGR & RCC_CFGR_RTCPRE);
2067:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->RTCClockSelection = (uint32_t)((tempreg) | (RCC->BDCR & RCC_BDCR_RTCSEL));
2068:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2069:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if ((RCC->DCKCFGR & RCC_DCKCFGR_TIMPRE) == RESET)
2070:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2071:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     PeriphClkInit->TIMPresSelection = RCC_TIMPRES_DESACTIVATED;
2072:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2073:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   else
2074:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2075:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     PeriphClkInit->TIMPresSelection = RCC_TIMPRES_ACTIVATED;
2076:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2077:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the FMPI2C1 clock configuration -------------------------------------*/
2078:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->Fmpi2c1ClockSelection = __HAL_RCC_GET_FMPI2C1_SOURCE();
2079:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2080:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the I2S clock configuration -----------------------------------------*/
2081:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->I2SClockSelection = __HAL_RCC_GET_I2S_SOURCE();
ARM GAS  /tmp/cckRf2Ua.s 			page 38


2082:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2083:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2084:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
2085:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
2086:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Return the peripheral clock frequency for a given peripheral(SAI..)
2087:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   Return 0 if peripheral clock identifier not managed by this API
2088:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PeriphClk Peripheral clock identifier
2089:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         This parameter can be one of the following values:
2090:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            @arg RCC_PERIPHCLK_I2S: I2S peripheral clock
2091:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval Frequency in KHz
2092:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
2093:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint32_t PeriphClk)
2094:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
2095:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the I2S clock frequency (value in Hz) */
2096:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t frequency = 0U;
2097:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the VCO Input (value in Hz) */
2098:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t vcoinput = 0U;
2099:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t srcclk = 0U;
2100:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the VCO Output (value in Hz) */
2101:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t vcooutput = 0U;
2102:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   switch (PeriphClk)
2103:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2104:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_I2S:
2105:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2106:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Get the current I2S source */
2107:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       srcclk = __HAL_RCC_GET_I2S_SOURCE();
2108:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       switch (srcclk)
2109:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
2110:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check if I2S clock selection is External clock mapped on the I2S_CKIN pin used as I2S cloc
2111:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPBCLKSOURCE_EXT:
2112:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
2113:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Set the I2S clock to the external clock  value */
2114:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = EXTERNAL_CLOCK_VALUE;
2115:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
2116:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
2117:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check if I2S clock selection is PLL VCO Output divided by PLLR used as I2S clock */
2118:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPBCLKSOURCE_PLLR:
2119:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
2120:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Configure the PLL division factor R */
2121:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLL_VCO Input  = PLL_SOURCE/PLLM */
2122:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
2123:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
2124:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
2125:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
2126:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
2127:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
2128:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
2129:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
2130:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
2131:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
2132:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2133:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLL_VCO Output = PLL_VCO Input * PLLN */
2134:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           vcooutput = (uint32_t)(vcoinput * (((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6U) & (RCC_PLLCF
2135:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* I2S_CLK = PLL_VCO Output/PLLR */
2136:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = (uint32_t)(vcooutput /(((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 28U) & (RCC_PLLC
2137:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
2138:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
ARM GAS  /tmp/cckRf2Ua.s 			page 39


2139:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check if I2S clock selection is HSI or HSE depending from PLL source Clock */
2140:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SAPBCLKSOURCE_PLLSRC:
2141:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
2142:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
2143:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
2144:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             frequency = HSE_VALUE;
2145:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
2146:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
2147:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
2148:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
2149:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
2150:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
2151:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
2152:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Clock not enabled for I2S*/
2153:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       default:
2154:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
2155:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = 0U;
2156:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
2157:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
2158:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
2159:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       break;
2160:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2161:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2162:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   return frequency;
2163:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
2164:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F410Tx || STM32F410Cx || STM32F410Rx */
2165:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2166:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)
2167:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
2168:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Initializes the RCC extended peripherals clocks according to the specified
2169:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         parameters in the RCC_PeriphCLKInitTypeDef.
2170:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PeriphClkInit pointer to an RCC_PeriphCLKInitTypeDef structure that
2171:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         contains the configuration information for the Extended Peripherals
2172:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         clocks(I2S, SAI, LTDC RTC and TIM).
2173:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
2174:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   Care must be taken when HAL_RCCEx_PeriphCLKConfig() is used to select
2175:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         the RTC clock source; in this case the Backup domain will be reset in
2176:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         order to modify the RTC Clock source, as consequence RTC registers (including
2177:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         the backup registers) and RCC_BDCR register are set to their reset values.
2178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
2179:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval HAL status
2180:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
2181:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
2182:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
  30              		.loc 1 2182 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 2182 1 is_stmt 0 view .LVU1
  35 0000 30B5     		push	{r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 12
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 83B0     		sub	sp, sp, #12
  42              	.LCFI1:
ARM GAS  /tmp/cckRf2Ua.s 			page 40


  43              		.cfi_def_cfa_offset 24
  44 0004 0446     		mov	r4, r0
2183:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tickstart = 0U;
  45              		.loc 1 2183 3 is_stmt 1 view .LVU2
  46              	.LVL1:
2184:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tmpreg1 = 0U;
  47              		.loc 1 2184 3 view .LVU3
2185:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2186:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Check the parameters */
2187:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
  48              		.loc 1 2187 3 view .LVU4
2188:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2189:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
2190:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*----------------------- Common configuration SAI/I2S ---------------------*/
2191:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
2192:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****      factor is common parameters for both peripherals */
2193:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
  49              		.loc 1 2193 3 view .LVU5
  50              		.loc 1 2193 89 is_stmt 0 view .LVU6
  51 0006 0368     		ldr	r3, [r0]
  52              		.loc 1 2193 5 view .LVU7
  53 0008 13F0030F 		tst	r3, #3
  54 000c 15D1     		bne	.L33
  55              	.LVL2:
  56              	.L2:
2194:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2
2195:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2196:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* check for Parameters */
2197:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));
2198:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2199:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Disable the PLLI2S */
2200:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLI2S_DISABLE();
2201:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
2202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
2203:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLI2S is disabled */
2204:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
2205:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2206:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
2207:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
2208:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* return in case of Timeout detected */
2209:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
2210:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
2211:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2212:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2213:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*---------------------------- I2S configuration -------------------------*/
2214:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* In Case of I2S Clock Configuration through PLLI2S, PLLI2SR must be added
2215:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       only for I2S configuration */
2216:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
2217:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2218:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* check for Parameters */
2219:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
2220:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Configure the PLLI2S division factors */
2221:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLM) */
2222:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
2223:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
2224:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2225:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
ARM GAS  /tmp/cckRf2Ua.s 			page 41


2226:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*---------------------------- SAI configuration -------------------------*/
2227:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* In Case of SAI Clock Configuration through PLLI2S, PLLI2SQ and PLLI2S_DIVQ must
2228:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****        be added only for SAI configuration */
2229:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLL
2230:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2231:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check the PLLI2S division factors */
2232:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
2233:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));
2234:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2235:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Read PLLI2SR value from PLLI2SCFGR register (this value is not need for SAI configuration)
2236:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
2237:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Configure the PLLI2S division factors */
2238:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
2239:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
2240:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
2241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ 
2242:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
2243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
2244:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2245:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2246:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLI2S */
2247:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLI2S_ENABLE();
2248:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
2249:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
2250:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLI2S is ready */
2251:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
2252:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2253:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
2254:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
2255:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* return in case of Timeout detected */
2256:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
2257:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
2258:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2259:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2260:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
2261:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2262:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
2263:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*----------------------- Common configuration SAI/LTDC --------------------*/
2264:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
2265:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****      factor is common parameters for both peripherals */
2266:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSA
  57              		.loc 1 2266 3 is_stmt 1 view .LVU8
  58              		.loc 1 2266 103 is_stmt 0 view .LVU9
  59 000e 2368     		ldr	r3, [r4]
  60              		.loc 1 2266 5 view .LVU10
  61 0010 13F00C0F 		tst	r3, #12
  62 0014 5BD1     		bne	.L34
  63              	.L10:
2267:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC))
2268:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2269:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check the PLLSAI division factors */
2270:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));
2271:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2272:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Disable PLLSAI Clock */
2273:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI_DISABLE();
2274:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
2275:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
ARM GAS  /tmp/cckRf2Ua.s 			page 42


2276:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLSAI is disabled */
2277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
2278:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2279:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
2280:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
2281:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* return in case of Timeout detected */
2282:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
2283:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
2284:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2285:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2286:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*---------------------------- SAI configuration -------------------------*/
2287:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
2288:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****        be added only for SAI configuration */
2289:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLL
2290:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2291:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
2292:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));
2293:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2294:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration)
2295:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
2296:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
2297:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
2298:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
2299:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg
2300:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
2301:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
2302:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2303:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2304:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /*---------------------------- LTDC configuration ------------------------*/
2305:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
2306:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2307:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
2308:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));
2309:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2310:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration)
2311:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
2312:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
2313:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
2314:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
2315:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAI
2316:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
2317:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
2318:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2319:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable PLLSAI Clock */
2320:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI_ENABLE();
2321:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
2322:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
2323:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLSAI is ready */
2324:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
2325:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2326:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
2327:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
2328:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* return in case of Timeout detected */
2329:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
2330:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
2331:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2332:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
ARM GAS  /tmp/cckRf2Ua.s 			page 43


2333:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
2334:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2335:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*---------------------------- RTC configuration ---------------------------*/
2336:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
  64              		.loc 1 2336 3 is_stmt 1 view .LVU11
  65              		.loc 1 2336 21 is_stmt 0 view .LVU12
  66 0016 2368     		ldr	r3, [r4]
  67              		.loc 1 2336 5 view .LVU13
  68 0018 13F0200F 		tst	r3, #32
  69 001c 40F0B080 		bne	.L35
  70              	.L17:
2337:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2338:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check for RTC Parameters used to output RTCCLK */
2339:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
2340:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2341:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable Power Clock*/
2342:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PWR_CLK_ENABLE();
2343:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2344:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable write access to Backup domain */
2345:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     PWR->CR |= PWR_CR_DBP;
2346:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2347:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
2348:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
2349:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2350:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while((PWR->CR & PWR_CR_DBP) == RESET)
2351:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2352:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
2353:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
2354:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
2355:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
2356:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2357:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value 
2358:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
2359:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSE
2360:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2361:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Store the content of BDCR register before the reset of Backup Domain */
2362:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
2363:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
2364:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_BACKUPRESET_FORCE();
2365:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
2366:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Restore the Content of BDCR register */
2367:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       RCC->BDCR = tmpreg1;
2368:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2369:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
2370:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
2371:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
2372:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Get tick */
2373:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         tickstart = HAL_GetTick();
2374:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2375:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Wait till LSE is ready */
2376:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
2377:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
2378:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
2379:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
2380:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             return HAL_TIMEOUT;
2381:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
2382:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
ARM GAS  /tmp/cckRf2Ua.s 			page 44


2383:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
2384:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2385:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  71              		.loc 1 2385 5 is_stmt 1 discriminator 5 view .LVU14
2386:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2387:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*--------------------------------------------------------------------------*/
2388:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2389:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*---------------------------- TIM configuration ---------------------------*/
2390:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  72              		.loc 1 2390 3 discriminator 5 view .LVU15
  73              		.loc 1 2390 21 is_stmt 0 discriminator 5 view .LVU16
  74 0020 2368     		ldr	r3, [r4]
  75              		.loc 1 2390 5 discriminator 5 view .LVU17
  76 0022 13F0100F 		tst	r3, #16
  77 0026 00F01481 		beq	.L31
2391:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2392:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  78              		.loc 1 2392 5 is_stmt 1 view .LVU18
  79 002a 94F82C20 		ldrb	r2, [r4, #44]	@ zero_extendqisi2
  80 002e 8A4B     		ldr	r3, .L41
  81 0030 C3F8E021 		str	r2, [r3, #480]
2393:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2394:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   return HAL_OK;
  82              		.loc 1 2394 10 is_stmt 0 view .LVU19
  83 0034 0020     		movs	r0, #0
  84              	.L4:
2395:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
  85              		.loc 1 2395 1 view .LVU20
  86 0036 03B0     		add	sp, sp, #12
  87              	.LCFI2:
  88              		.cfi_remember_state
  89              		.cfi_def_cfa_offset 12
  90              		@ sp needed
  91 0038 30BD     		pop	{r4, r5, pc}
  92              	.LVL3:
  93              	.L33:
  94              	.LCFI3:
  95              		.cfi_restore_state
2197:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
  96              		.loc 1 2197 5 is_stmt 1 view .LVU21
2200:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
  97              		.loc 1 2200 5 view .LVU22
  98 003a 884B     		ldr	r3, .L41+4
  99 003c 0022     		movs	r2, #0
 100 003e 9A66     		str	r2, [r3, #104]
2202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLI2S is disabled */
 101              		.loc 1 2202 5 view .LVU23
2202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLI2S is disabled */
 102              		.loc 1 2202 17 is_stmt 0 view .LVU24
 103 0040 FFF7FEFF 		bl	HAL_GetTick
 104              	.LVL4:
2202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLI2S is disabled */
 105              		.loc 1 2202 17 view .LVU25
 106 0044 0546     		mov	r5, r0
 107              	.LVL5:
2204:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 108              		.loc 1 2204 5 is_stmt 1 view .LVU26
ARM GAS  /tmp/cckRf2Ua.s 			page 45


 109              	.L3:
2204:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 110              		.loc 1 2204 10 view .LVU27
2204:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 111              		.loc 1 2204 11 is_stmt 0 view .LVU28
 112 0046 864B     		ldr	r3, .L41+8
 113 0048 1B68     		ldr	r3, [r3]
2204:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 114              		.loc 1 2204 10 view .LVU29
 115 004a 13F0006F 		tst	r3, #134217728
 116 004e 06D0     		beq	.L36
2206:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 117              		.loc 1 2206 7 is_stmt 1 view .LVU30
2206:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 118              		.loc 1 2206 11 is_stmt 0 view .LVU31
 119 0050 FFF7FEFF 		bl	HAL_GetTick
 120              	.LVL6:
2206:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 121              		.loc 1 2206 25 view .LVU32
 122 0054 431B     		subs	r3, r0, r5
2206:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 123              		.loc 1 2206 9 view .LVU33
 124 0056 022B     		cmp	r3, #2
 125 0058 F5D9     		bls	.L3
2209:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
 126              		.loc 1 2209 16 view .LVU34
 127 005a 0320     		movs	r0, #3
 128 005c EBE7     		b	.L4
 129              	.L36:
2216:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 130              		.loc 1 2216 5 is_stmt 1 view .LVU35
2216:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 131              		.loc 1 2216 23 is_stmt 0 view .LVU36
 132 005e 2368     		ldr	r3, [r4]
2216:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 133              		.loc 1 2216 7 view .LVU37
 134 0060 13F0010F 		tst	r3, #1
 135 0064 07D0     		beq	.L6
2219:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Configure the PLLI2S division factors */
 136              		.loc 1 2219 7 is_stmt 1 view .LVU38
2223:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 137              		.loc 1 2223 7 view .LVU39
 138 0066 6268     		ldr	r2, [r4, #4]
 139 0068 A368     		ldr	r3, [r4, #8]
 140 006a 1B07     		lsls	r3, r3, #28
 141 006c 43EA8213 		orr	r3, r3, r2, lsl #6
 142 0070 7B4A     		ldr	r2, .L41+8
 143 0072 C2F88430 		str	r3, [r2, #132]
 144              	.L6:
2229:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 145              		.loc 1 2229 5 view .LVU40
2229:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 146              		.loc 1 2229 23 is_stmt 0 view .LVU41
 147 0076 2368     		ldr	r3, [r4]
2229:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 148              		.loc 1 2229 7 view .LVU42
 149 0078 13F0020F 		tst	r3, #2
ARM GAS  /tmp/cckRf2Ua.s 			page 46


 150 007c 15D0     		beq	.L7
2232:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));
 151              		.loc 1 2232 7 is_stmt 1 view .LVU43
2233:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 152              		.loc 1 2233 7 view .LVU44
2236:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Configure the PLLI2S division factors */
 153              		.loc 1 2236 7 view .LVU45
2236:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Configure the PLLI2S division factors */
 154              		.loc 1 2236 22 is_stmt 0 view .LVU46
 155 007e 784A     		ldr	r2, .L41+8
 156 0080 D2F88410 		ldr	r1, [r2, #132]
 157              	.LVL7:
2241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
 158              		.loc 1 2241 7 is_stmt 1 view .LVU47
 159 0084 6068     		ldr	r0, [r4, #4]
 160 0086 E368     		ldr	r3, [r4, #12]
 161 0088 1B06     		lsls	r3, r3, #24
 162 008a 43EA8013 		orr	r3, r3, r0, lsl #6
 163 008e 01F0E041 		and	r1, r1, #1879048192
 164              	.LVL8:
2241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
 165              		.loc 1 2241 7 is_stmt 0 view .LVU48
 166 0092 0B43     		orrs	r3, r3, r1
 167 0094 C2F88430 		str	r3, [r2, #132]
2243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 168              		.loc 1 2243 7 is_stmt 1 view .LVU49
 169 0098 D2F88C30 		ldr	r3, [r2, #140]
 170 009c 23F01F03 		bic	r3, r3, #31
 171 00a0 E169     		ldr	r1, [r4, #28]
 172 00a2 0139     		subs	r1, r1, #1
 173 00a4 0B43     		orrs	r3, r3, r1
 174 00a6 C2F88C30 		str	r3, [r2, #140]
 175              	.L7:
2247:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
 176              		.loc 1 2247 5 view .LVU50
 177 00aa 6C4B     		ldr	r3, .L41+4
 178 00ac 0122     		movs	r2, #1
 179 00ae 9A66     		str	r2, [r3, #104]
2249:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLI2S is ready */
 180              		.loc 1 2249 5 view .LVU51
2249:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLI2S is ready */
 181              		.loc 1 2249 17 is_stmt 0 view .LVU52
 182 00b0 FFF7FEFF 		bl	HAL_GetTick
 183              	.LVL9:
 184 00b4 0546     		mov	r5, r0
 185              	.LVL10:
2251:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 186              		.loc 1 2251 5 is_stmt 1 view .LVU53
 187              	.L8:
2251:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 188              		.loc 1 2251 10 view .LVU54
2251:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 189              		.loc 1 2251 11 is_stmt 0 view .LVU55
 190 00b6 6A4B     		ldr	r3, .L41+8
 191 00b8 1B68     		ldr	r3, [r3]
2251:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 192              		.loc 1 2251 10 view .LVU56
ARM GAS  /tmp/cckRf2Ua.s 			page 47


 193 00ba 13F0006F 		tst	r3, #134217728
 194 00be A6D1     		bne	.L2
2253:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 195              		.loc 1 2253 7 is_stmt 1 view .LVU57
2253:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 196              		.loc 1 2253 11 is_stmt 0 view .LVU58
 197 00c0 FFF7FEFF 		bl	HAL_GetTick
 198              	.LVL11:
2253:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 199              		.loc 1 2253 25 view .LVU59
 200 00c4 401B     		subs	r0, r0, r5
2253:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 201              		.loc 1 2253 9 view .LVU60
 202 00c6 0228     		cmp	r0, #2
 203 00c8 F5D9     		bls	.L8
2256:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
 204              		.loc 1 2256 16 view .LVU61
 205 00ca 0320     		movs	r0, #3
 206 00cc B3E7     		b	.L4
 207              	.LVL12:
 208              	.L34:
2270:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 209              		.loc 1 2270 5 is_stmt 1 view .LVU62
2273:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
 210              		.loc 1 2273 5 view .LVU63
 211 00ce 634B     		ldr	r3, .L41+4
 212 00d0 0022     		movs	r2, #0
 213 00d2 1A67     		str	r2, [r3, #112]
2275:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLSAI is disabled */
 214              		.loc 1 2275 5 view .LVU64
2275:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLSAI is disabled */
 215              		.loc 1 2275 17 is_stmt 0 view .LVU65
 216 00d4 FFF7FEFF 		bl	HAL_GetTick
 217              	.LVL13:
 218 00d8 0546     		mov	r5, r0
 219              	.LVL14:
2277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 220              		.loc 1 2277 5 is_stmt 1 view .LVU66
 221              	.L11:
2277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 222              		.loc 1 2277 10 view .LVU67
2277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 223              		.loc 1 2277 11 is_stmt 0 view .LVU68
 224 00da 614B     		ldr	r3, .L41+8
 225 00dc 1B68     		ldr	r3, [r3]
2277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 226              		.loc 1 2277 10 view .LVU69
 227 00de 13F0005F 		tst	r3, #536870912
 228 00e2 06D0     		beq	.L37
2279:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 229              		.loc 1 2279 7 is_stmt 1 view .LVU70
2279:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 230              		.loc 1 2279 11 is_stmt 0 view .LVU71
 231 00e4 FFF7FEFF 		bl	HAL_GetTick
 232              	.LVL15:
2279:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 233              		.loc 1 2279 25 view .LVU72
ARM GAS  /tmp/cckRf2Ua.s 			page 48


 234 00e8 431B     		subs	r3, r0, r5
2279:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 235              		.loc 1 2279 9 view .LVU73
 236 00ea 022B     		cmp	r3, #2
 237 00ec F5D9     		bls	.L11
2282:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
 238              		.loc 1 2282 16 view .LVU74
 239 00ee 0320     		movs	r0, #3
 240 00f0 A1E7     		b	.L4
 241              	.L37:
2289:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 242              		.loc 1 2289 5 is_stmt 1 view .LVU75
2289:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 243              		.loc 1 2289 23 is_stmt 0 view .LVU76
 244 00f2 2368     		ldr	r3, [r4]
2289:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 245              		.loc 1 2289 7 view .LVU77
 246 00f4 13F0040F 		tst	r3, #4
 247 00f8 16D0     		beq	.L13
2291:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));
 248              		.loc 1 2291 7 is_stmt 1 view .LVU78
2292:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 249              		.loc 1 2292 7 view .LVU79
2295:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
 250              		.loc 1 2295 7 view .LVU80
2295:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
 251              		.loc 1 2295 22 is_stmt 0 view .LVU81
 252 00fa 594A     		ldr	r2, .L41+8
 253 00fc D2F88810 		ldr	r1, [r2, #136]
 254              	.LVL16:
2299:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
 255              		.loc 1 2299 7 is_stmt 1 view .LVU82
 256 0100 2069     		ldr	r0, [r4, #16]
 257 0102 6369     		ldr	r3, [r4, #20]
 258 0104 1B06     		lsls	r3, r3, #24
 259 0106 43EA8013 		orr	r3, r3, r0, lsl #6
 260 010a 01F0E041 		and	r1, r1, #1879048192
 261              	.LVL17:
2299:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
 262              		.loc 1 2299 7 is_stmt 0 view .LVU83
 263 010e 0B43     		orrs	r3, r3, r1
 264 0110 C2F88830 		str	r3, [r2, #136]
2301:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 265              		.loc 1 2301 7 is_stmt 1 view .LVU84
 266 0114 D2F88C30 		ldr	r3, [r2, #140]
 267 0118 23F4F853 		bic	r3, r3, #7936
 268 011c 216A     		ldr	r1, [r4, #32]
 269 011e 0139     		subs	r1, r1, #1
 270 0120 43EA0123 		orr	r3, r3, r1, lsl #8
 271 0124 C2F88C30 		str	r3, [r2, #140]
 272              	.L13:
2305:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 273              		.loc 1 2305 5 view .LVU85
2305:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 274              		.loc 1 2305 23 is_stmt 0 view .LVU86
 275 0128 2368     		ldr	r3, [r4]
2305:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
ARM GAS  /tmp/cckRf2Ua.s 			page 49


 276              		.loc 1 2305 7 view .LVU87
 277 012a 13F0080F 		tst	r3, #8
 278 012e 14D0     		beq	.L14
2307:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));
 279              		.loc 1 2307 7 is_stmt 1 view .LVU88
2308:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 280              		.loc 1 2308 7 view .LVU89
2311:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
 281              		.loc 1 2311 7 view .LVU90
2311:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
 282              		.loc 1 2311 22 is_stmt 0 view .LVU91
 283 0130 4B4A     		ldr	r2, .L41+8
 284 0132 D2F88830 		ldr	r3, [r2, #136]
 285              	.LVL18:
2315:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
 286              		.loc 1 2315 7 is_stmt 1 view .LVU92
 287 0136 2169     		ldr	r1, [r4, #16]
 288 0138 03F07063 		and	r3, r3, #251658240
 289              	.LVL19:
2315:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
 290              		.loc 1 2315 7 is_stmt 0 view .LVU93
 291 013c 43EA8113 		orr	r3, r3, r1, lsl #6
 292 0140 A169     		ldr	r1, [r4, #24]
 293 0142 43EA0173 		orr	r3, r3, r1, lsl #28
 294 0146 C2F88830 		str	r3, [r2, #136]
2317:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 295              		.loc 1 2317 7 is_stmt 1 view .LVU94
 296 014a D2F88C30 		ldr	r3, [r2, #140]
 297 014e 23F44033 		bic	r3, r3, #196608
 298 0152 616A     		ldr	r1, [r4, #36]
 299 0154 0B43     		orrs	r3, r3, r1
 300 0156 C2F88C30 		str	r3, [r2, #140]
 301              	.L14:
2320:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
 302              		.loc 1 2320 5 view .LVU95
 303 015a 404B     		ldr	r3, .L41+4
 304 015c 0122     		movs	r2, #1
 305 015e 1A67     		str	r2, [r3, #112]
2322:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLSAI is ready */
 306              		.loc 1 2322 5 view .LVU96
2322:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLSAI is ready */
 307              		.loc 1 2322 17 is_stmt 0 view .LVU97
 308 0160 FFF7FEFF 		bl	HAL_GetTick
 309              	.LVL20:
 310 0164 0546     		mov	r5, r0
 311              	.LVL21:
2324:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 312              		.loc 1 2324 5 is_stmt 1 view .LVU98
 313              	.L15:
2324:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 314              		.loc 1 2324 10 view .LVU99
2324:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 315              		.loc 1 2324 11 is_stmt 0 view .LVU100
 316 0166 3E4B     		ldr	r3, .L41+8
 317 0168 1B68     		ldr	r3, [r3]
2324:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 318              		.loc 1 2324 10 view .LVU101
ARM GAS  /tmp/cckRf2Ua.s 			page 50


 319 016a 13F0005F 		tst	r3, #536870912
 320 016e 7FF452AF 		bne	.L10
2326:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 321              		.loc 1 2326 7 is_stmt 1 view .LVU102
2326:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 322              		.loc 1 2326 11 is_stmt 0 view .LVU103
 323 0172 FFF7FEFF 		bl	HAL_GetTick
 324              	.LVL22:
2326:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 325              		.loc 1 2326 25 view .LVU104
 326 0176 401B     		subs	r0, r0, r5
2326:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 327              		.loc 1 2326 9 view .LVU105
 328 0178 0228     		cmp	r0, #2
 329 017a F4D9     		bls	.L15
2329:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
 330              		.loc 1 2329 16 view .LVU106
 331 017c 0320     		movs	r0, #3
 332 017e 5AE7     		b	.L4
 333              	.LVL23:
 334              	.L35:
2339:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 335              		.loc 1 2339 5 is_stmt 1 view .LVU107
2342:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 336              		.loc 1 2342 5 view .LVU108
 337              	.LBB2:
2342:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 338              		.loc 1 2342 5 view .LVU109
 339 0180 0023     		movs	r3, #0
 340 0182 0193     		str	r3, [sp, #4]
2342:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 341              		.loc 1 2342 5 view .LVU110
 342 0184 364B     		ldr	r3, .L41+8
 343 0186 1A6C     		ldr	r2, [r3, #64]
 344 0188 42F08052 		orr	r2, r2, #268435456
 345 018c 1A64     		str	r2, [r3, #64]
2342:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 346              		.loc 1 2342 5 view .LVU111
 347 018e 1B6C     		ldr	r3, [r3, #64]
 348 0190 03F08053 		and	r3, r3, #268435456
 349 0194 0193     		str	r3, [sp, #4]
2342:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 350              		.loc 1 2342 5 view .LVU112
 351 0196 019B     		ldr	r3, [sp, #4]
 352              	.LBE2:
2342:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 353              		.loc 1 2342 5 view .LVU113
2345:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 354              		.loc 1 2345 5 view .LVU114
2345:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 355              		.loc 1 2345 13 is_stmt 0 view .LVU115
 356 0198 324A     		ldr	r2, .L41+12
 357 019a 1368     		ldr	r3, [r2]
 358 019c 43F48073 		orr	r3, r3, #256
 359 01a0 1360     		str	r3, [r2]
2348:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 360              		.loc 1 2348 5 is_stmt 1 view .LVU116
ARM GAS  /tmp/cckRf2Ua.s 			page 51


2348:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 361              		.loc 1 2348 17 is_stmt 0 view .LVU117
 362 01a2 FFF7FEFF 		bl	HAL_GetTick
 363              	.LVL24:
 364 01a6 0546     		mov	r5, r0
 365              	.LVL25:
2350:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 366              		.loc 1 2350 5 is_stmt 1 view .LVU118
 367              	.L18:
2350:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 368              		.loc 1 2350 10 view .LVU119
2350:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 369              		.loc 1 2350 15 is_stmt 0 view .LVU120
 370 01a8 2E4B     		ldr	r3, .L41+12
 371 01aa 1B68     		ldr	r3, [r3]
2350:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 372              		.loc 1 2350 10 view .LVU121
 373 01ac 13F4807F 		tst	r3, #256
 374 01b0 06D1     		bne	.L38
2352:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 375              		.loc 1 2352 7 is_stmt 1 view .LVU122
2352:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 376              		.loc 1 2352 11 is_stmt 0 view .LVU123
 377 01b2 FFF7FEFF 		bl	HAL_GetTick
 378              	.LVL26:
2352:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 379              		.loc 1 2352 25 view .LVU124
 380 01b6 401B     		subs	r0, r0, r5
2352:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 381              		.loc 1 2352 9 view .LVU125
 382 01b8 0228     		cmp	r0, #2
 383 01ba F5D9     		bls	.L18
2354:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
 384              		.loc 1 2354 16 view .LVU126
 385 01bc 0320     		movs	r0, #3
 386 01be 3AE7     		b	.L4
 387              	.L38:
2358:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSE
 388              		.loc 1 2358 5 is_stmt 1 view .LVU127
2358:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSE
 389              		.loc 1 2358 19 is_stmt 0 view .LVU128
 390 01c0 274B     		ldr	r3, .L41+8
 391 01c2 1B6F     		ldr	r3, [r3, #112]
 392              	.LVL27:
2359:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 393              		.loc 1 2359 5 is_stmt 1 view .LVU129
2359:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 394              		.loc 1 2359 7 is_stmt 0 view .LVU130
 395 01c4 13F44073 		ands	r3, r3, #768
 396              	.LVL28:
2359:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 397              		.loc 1 2359 7 view .LVU131
 398 01c8 14D0     		beq	.L20
2359:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 399              		.loc 1 2359 64 discriminator 1 view .LVU132
 400 01ca A26A     		ldr	r2, [r4, #40]
2359:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
ARM GAS  /tmp/cckRf2Ua.s 			page 52


 401              		.loc 1 2359 84 discriminator 1 view .LVU133
 402 01cc 02F44072 		and	r2, r2, #768
2359:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 403              		.loc 1 2359 33 discriminator 1 view .LVU134
 404 01d0 9A42     		cmp	r2, r3
 405 01d2 0FD0     		beq	.L20
2362:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 406              		.loc 1 2362 7 is_stmt 1 view .LVU135
2362:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 407              		.loc 1 2362 21 is_stmt 0 view .LVU136
 408 01d4 224B     		ldr	r3, .L41+8
 409              	.LVL29:
2362:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 410              		.loc 1 2362 21 view .LVU137
 411 01d6 1A6F     		ldr	r2, [r3, #112]
2362:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 412              		.loc 1 2362 15 view .LVU138
 413 01d8 22F44072 		bic	r2, r2, #768
 414              	.LVL30:
2364:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 415              		.loc 1 2364 7 is_stmt 1 view .LVU139
 416 01dc 1F49     		ldr	r1, .L41+4
 417 01de 0120     		movs	r0, #1
 418 01e0 C1F8400E 		str	r0, [r1, #3648]
2365:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Restore the Content of BDCR register */
 419              		.loc 1 2365 7 view .LVU140
 420 01e4 0020     		movs	r0, #0
 421 01e6 C1F8400E 		str	r0, [r1, #3648]
2367:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 422              		.loc 1 2367 7 view .LVU141
2367:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 423              		.loc 1 2367 17 is_stmt 0 view .LVU142
 424 01ea 1A67     		str	r2, [r3, #112]
2370:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 425              		.loc 1 2370 7 is_stmt 1 view .LVU143
2370:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 426              		.loc 1 2370 10 is_stmt 0 view .LVU144
 427 01ec 1B6F     		ldr	r3, [r3, #112]
2370:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
 428              		.loc 1 2370 9 view .LVU145
 429 01ee 13F0010F 		tst	r3, #1
 430 01f2 12D1     		bne	.L39
 431              	.LVL31:
 432              	.L20:
2385:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 433              		.loc 1 2385 5 is_stmt 1 view .LVU146
2385:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 434              		.loc 1 2385 5 view .LVU147
 435 01f4 A36A     		ldr	r3, [r4, #40]
 436 01f6 03F44072 		and	r2, r3, #768
 437 01fa B2F5407F 		cmp	r2, #768
 438 01fe 1DD0     		beq	.L40
2385:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 439              		.loc 1 2385 5 is_stmt 0 discriminator 2 view .LVU148
 440 0200 174A     		ldr	r2, .L41+8
 441 0202 9368     		ldr	r3, [r2, #8]
 442 0204 23F4F813 		bic	r3, r3, #2031616
ARM GAS  /tmp/cckRf2Ua.s 			page 53


 443 0208 9360     		str	r3, [r2, #8]
 444              	.L24:
2385:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 445              		.loc 1 2385 5 is_stmt 1 discriminator 4 view .LVU149
 446 020a 1549     		ldr	r1, .L41+8
 447 020c 0B6F     		ldr	r3, [r1, #112]
 448 020e A26A     		ldr	r2, [r4, #40]
 449 0210 C2F30B02 		ubfx	r2, r2, #0, #12
 450 0214 1343     		orrs	r3, r3, r2
 451 0216 0B67     		str	r3, [r1, #112]
 452 0218 02E7     		b	.L17
 453              	.LVL32:
 454              	.L39:
2373:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 455              		.loc 1 2373 9 view .LVU150
2373:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 456              		.loc 1 2373 21 is_stmt 0 view .LVU151
 457 021a FFF7FEFF 		bl	HAL_GetTick
 458              	.LVL33:
2373:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 459              		.loc 1 2373 21 view .LVU152
 460 021e 0546     		mov	r5, r0
 461              	.LVL34:
2376:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 462              		.loc 1 2376 9 is_stmt 1 view .LVU153
 463              	.L21:
2376:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 464              		.loc 1 2376 14 view .LVU154
2376:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 465              		.loc 1 2376 15 is_stmt 0 view .LVU155
 466 0220 0F4B     		ldr	r3, .L41+8
 467 0222 1B6F     		ldr	r3, [r3, #112]
2376:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
 468              		.loc 1 2376 14 view .LVU156
 469 0224 13F0020F 		tst	r3, #2
 470 0228 E4D1     		bne	.L20
2378:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 471              		.loc 1 2378 11 is_stmt 1 view .LVU157
2378:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 472              		.loc 1 2378 15 is_stmt 0 view .LVU158
 473 022a FFF7FEFF 		bl	HAL_GetTick
 474              	.LVL35:
2378:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 475              		.loc 1 2378 29 view .LVU159
 476 022e 401B     		subs	r0, r0, r5
2378:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
 477              		.loc 1 2378 13 view .LVU160
 478 0230 41F28833 		movw	r3, #5000
 479 0234 9842     		cmp	r0, r3
 480 0236 F3D9     		bls	.L21
2380:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 481              		.loc 1 2380 20 view .LVU161
 482 0238 0320     		movs	r0, #3
 483 023a FCE6     		b	.L4
 484              	.L40:
2385:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 485              		.loc 1 2385 5 discriminator 1 view .LVU162
ARM GAS  /tmp/cckRf2Ua.s 			page 54


 486 023c 0849     		ldr	r1, .L41+8
 487 023e 8A68     		ldr	r2, [r1, #8]
 488 0240 22F4F812 		bic	r2, r2, #2031616
 489 0244 23F07043 		bic	r3, r3, #-268435456
 490 0248 23F44073 		bic	r3, r3, #768
 491 024c 1343     		orrs	r3, r3, r2
 492 024e 8B60     		str	r3, [r1, #8]
 493 0250 DBE7     		b	.L24
 494              	.LVL36:
 495              	.L31:
2394:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
 496              		.loc 1 2394 10 view .LVU163
 497 0252 0020     		movs	r0, #0
 498 0254 EFE6     		b	.L4
 499              	.L42:
 500 0256 00BF     		.align	2
 501              	.L41:
 502 0258 00104742 		.word	1111953408
 503 025c 00004742 		.word	1111949312
 504 0260 00380240 		.word	1073887232
 505 0264 00700040 		.word	1073770496
 506              		.cfi_endproc
 507              	.LFE126:
 509              		.section	.text.HAL_RCCEx_GetPeriphCLKConfig,"ax",%progbits
 510              		.align	1
 511              		.global	HAL_RCCEx_GetPeriphCLKConfig
 512              		.syntax unified
 513              		.thumb
 514              		.thumb_func
 515              		.fpu fpv4-sp-d16
 517              	HAL_RCCEx_GetPeriphCLKConfig:
 518              	.LVL37:
 519              	.LFB127:
2396:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2397:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
2398:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Configures the PeriphClkInit according to the internal
2399:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * RCC configuration registers.
2400:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PeriphClkInit pointer to an RCC_PeriphCLKInitTypeDef structure that
2401:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         will be configured.
2402:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval None
2403:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
2404:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** void HAL_RCCEx_GetPeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
2405:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
 520              		.loc 1 2405 1 is_stmt 1 view -0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              		@ link register save eliminated.
2406:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tempreg;
 525              		.loc 1 2406 3 view .LVU165
2407:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2408:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Set all possible values for the extended clock type parameter------------*/
2409:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_I2S | RCC_PERIPHCLK_SAI_PLLSAI | RCC_PERIPHCL
 526              		.loc 1 2409 3 view .LVU166
 527              		.loc 1 2409 39 is_stmt 0 view .LVU167
 528 0000 3F23     		movs	r3, #63
 529 0002 0360     		str	r3, [r0]
ARM GAS  /tmp/cckRf2Ua.s 			page 55


2410:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2411:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the PLLI2S Clock configuration -----------------------------------------------*/
2412:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2S.PLLI2SN = (uint32_t)((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> RCC_PLLI
 530              		.loc 1 2412 3 is_stmt 1 view .LVU168
 531              		.loc 1 2412 50 is_stmt 0 view .LVU169
 532 0004 214B     		ldr	r3, .L46
 533 0006 D3F88420 		ldr	r2, [r3, #132]
 534              		.loc 1 2412 35 view .LVU170
 535 000a C2F38812 		ubfx	r2, r2, #6, #9
 536              		.loc 1 2412 33 view .LVU171
 537 000e 4260     		str	r2, [r0, #4]
2413:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2S.PLLI2SR = (uint32_t)((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI
 538              		.loc 1 2413 3 is_stmt 1 view .LVU172
 539              		.loc 1 2413 50 is_stmt 0 view .LVU173
 540 0010 D3F88420 		ldr	r2, [r3, #132]
 541              		.loc 1 2413 35 view .LVU174
 542 0014 C2F30272 		ubfx	r2, r2, #28, #3
 543              		.loc 1 2413 33 view .LVU175
 544 0018 8260     		str	r2, [r0, #8]
2414:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2S.PLLI2SQ = (uint32_t)((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI
 545              		.loc 1 2414 3 is_stmt 1 view .LVU176
 546              		.loc 1 2414 50 is_stmt 0 view .LVU177
 547 001a D3F88420 		ldr	r2, [r3, #132]
 548              		.loc 1 2414 35 view .LVU178
 549 001e C2F30362 		ubfx	r2, r2, #24, #4
 550              		.loc 1 2414 33 view .LVU179
 551 0022 C260     		str	r2, [r0, #12]
2415:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the PLLSAI Clock configuration -----------------------------------------------*/
2416:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI.PLLSAIN = (uint32_t)((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIN) >> RCC_PLLS
 552              		.loc 1 2416 3 is_stmt 1 view .LVU180
 553              		.loc 1 2416 50 is_stmt 0 view .LVU181
 554 0024 D3F88820 		ldr	r2, [r3, #136]
 555              		.loc 1 2416 35 view .LVU182
 556 0028 C2F38812 		ubfx	r2, r2, #6, #9
 557              		.loc 1 2416 33 view .LVU183
 558 002c 0261     		str	r2, [r0, #16]
2417:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI.PLLSAIR = (uint32_t)((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLS
 559              		.loc 1 2417 3 is_stmt 1 view .LVU184
 560              		.loc 1 2417 50 is_stmt 0 view .LVU185
 561 002e D3F88820 		ldr	r2, [r3, #136]
 562              		.loc 1 2417 35 view .LVU186
 563 0032 C2F30272 		ubfx	r2, r2, #28, #3
 564              		.loc 1 2417 33 view .LVU187
 565 0036 8261     		str	r2, [r0, #24]
2418:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI.PLLSAIQ = (uint32_t)((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLS
 566              		.loc 1 2418 3 is_stmt 1 view .LVU188
 567              		.loc 1 2418 50 is_stmt 0 view .LVU189
 568 0038 D3F88820 		ldr	r2, [r3, #136]
 569              		.loc 1 2418 35 view .LVU190
 570 003c C2F30362 		ubfx	r2, r2, #24, #4
 571              		.loc 1 2418 33 view .LVU191
 572 0040 4261     		str	r2, [r0, #20]
2419:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the PLLSAI/PLLI2S division factors -----------------------------------------------*/
2420:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2SDivQ = (uint32_t)((RCC->DCKCFGR & RCC_DCKCFGR_PLLI2SDIVQ) >> RCC_DCKCFGR_PLL
 573              		.loc 1 2420 3 is_stmt 1 view .LVU192
 574              		.loc 1 2420 46 is_stmt 0 view .LVU193
 575 0042 D3F88C20 		ldr	r2, [r3, #140]
ARM GAS  /tmp/cckRf2Ua.s 			page 56


 576              		.loc 1 2420 31 view .LVU194
 577 0046 02F01F02 		and	r2, r2, #31
 578              		.loc 1 2420 29 view .LVU195
 579 004a C261     		str	r2, [r0, #28]
2421:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAIDivQ = (uint32_t)((RCC->DCKCFGR & RCC_DCKCFGR_PLLSAIDIVQ) >> RCC_DCKCFGR_PLL
 580              		.loc 1 2421 3 is_stmt 1 view .LVU196
 581              		.loc 1 2421 46 is_stmt 0 view .LVU197
 582 004c D3F88C20 		ldr	r2, [r3, #140]
 583              		.loc 1 2421 31 view .LVU198
 584 0050 C2F30422 		ubfx	r2, r2, #8, #5
 585              		.loc 1 2421 29 view .LVU199
 586 0054 0262     		str	r2, [r0, #32]
2422:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAIDivR = (uint32_t)(RCC->DCKCFGR & RCC_DCKCFGR_PLLSAIDIVR);
 587              		.loc 1 2422 3 is_stmt 1 view .LVU200
 588              		.loc 1 2422 45 is_stmt 0 view .LVU201
 589 0056 D3F88C20 		ldr	r2, [r3, #140]
 590              		.loc 1 2422 31 view .LVU202
 591 005a 02F44032 		and	r2, r2, #196608
 592              		.loc 1 2422 29 view .LVU203
 593 005e 4262     		str	r2, [r0, #36]
2423:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the RTC Clock configuration -----------------------------------------------*/
2424:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   tempreg = (RCC->CFGR & RCC_CFGR_RTCPRE);
 594              		.loc 1 2424 3 is_stmt 1 view .LVU204
 595              		.loc 1 2424 17 is_stmt 0 view .LVU205
 596 0060 9968     		ldr	r1, [r3, #8]
 597              		.loc 1 2424 11 view .LVU206
 598 0062 01F4F811 		and	r1, r1, #2031616
 599              	.LVL38:
2425:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->RTCClockSelection = (uint32_t)((tempreg) | (RCC->BDCR & RCC_BDCR_RTCSEL));
 600              		.loc 1 2425 3 is_stmt 1 view .LVU207
 601              		.loc 1 2425 65 is_stmt 0 view .LVU208
 602 0066 1A6F     		ldr	r2, [r3, #112]
 603              		.loc 1 2425 72 view .LVU209
 604 0068 02F44072 		and	r2, r2, #768
 605              		.loc 1 2425 38 view .LVU210
 606 006c 0A43     		orrs	r2, r2, r1
 607              		.loc 1 2425 36 view .LVU211
 608 006e 8262     		str	r2, [r0, #40]
2426:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2427:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if ((RCC->DCKCFGR & RCC_DCKCFGR_TIMPRE) == RESET)
 609              		.loc 1 2427 3 is_stmt 1 view .LVU212
 610              		.loc 1 2427 11 is_stmt 0 view .LVU213
 611 0070 D3F88C30 		ldr	r3, [r3, #140]
 612              		.loc 1 2427 6 view .LVU214
 613 0074 13F0807F 		tst	r3, #16777216
 614 0078 03D1     		bne	.L44
2428:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2429:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     PeriphClkInit->TIMPresSelection = RCC_TIMPRES_DESACTIVATED;
 615              		.loc 1 2429 5 is_stmt 1 view .LVU215
 616              		.loc 1 2429 37 is_stmt 0 view .LVU216
 617 007a 0023     		movs	r3, #0
 618 007c 80F82C30 		strb	r3, [r0, #44]
 619 0080 7047     		bx	lr
 620              	.L44:
2430:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2431:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   else
2432:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
ARM GAS  /tmp/cckRf2Ua.s 			page 57


2433:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     PeriphClkInit->TIMPresSelection = RCC_TIMPRES_ACTIVATED;
 621              		.loc 1 2433 5 is_stmt 1 view .LVU217
 622              		.loc 1 2433 37 is_stmt 0 view .LVU218
 623 0082 0123     		movs	r3, #1
 624 0084 80F82C30 		strb	r3, [r0, #44]
2434:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2435:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
 625              		.loc 1 2435 1 view .LVU219
 626 0088 7047     		bx	lr
 627              	.L47:
 628 008a 00BF     		.align	2
 629              	.L46:
 630 008c 00380240 		.word	1073887232
 631              		.cfi_endproc
 632              	.LFE127:
 634              		.section	.text.HAL_RCCEx_GetPeriphCLKFreq,"ax",%progbits
 635              		.align	1
 636              		.global	HAL_RCCEx_GetPeriphCLKFreq
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 640              		.fpu fpv4-sp-d16
 642              	HAL_RCCEx_GetPeriphCLKFreq:
 643              	.LVL39:
 644              	.LFB128:
2436:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2437:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
2438:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Return the peripheral clock frequency for a given peripheral(SAI..)
2439:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   Return 0 if peripheral clock identifier not managed by this API
2440:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PeriphClk Peripheral clock identifier
2441:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         This parameter can be one of the following values:
2442:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            @arg RCC_PERIPHCLK_I2S: I2S peripheral clock
2443:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval Frequency in KHz
2444:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
2445:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint32_t PeriphClk)
2446:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
 645              		.loc 1 2446 1 is_stmt 1 view -0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              		@ link register save eliminated.
2447:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the I2S clock frequency (value in Hz) */
2448:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t frequency = 0U;
 650              		.loc 1 2448 3 view .LVU221
2449:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the VCO Input (value in Hz) */
2450:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t vcoinput = 0U;
 651              		.loc 1 2450 3 view .LVU222
2451:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t srcclk = 0U;
 652              		.loc 1 2451 3 view .LVU223
2452:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the VCO Output (value in Hz) */
2453:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t vcooutput = 0U;
 653              		.loc 1 2453 3 view .LVU224
2454:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   switch (PeriphClk)
 654              		.loc 1 2454 3 view .LVU225
 655 0000 0128     		cmp	r0, #1
 656 0002 01D0     		beq	.L55
2448:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the VCO Input (value in Hz) */
ARM GAS  /tmp/cckRf2Ua.s 			page 58


 657              		.loc 1 2448 12 is_stmt 0 view .LVU226
 658 0004 0020     		movs	r0, #0
 659              	.LVL40:
2448:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the VCO Input (value in Hz) */
 660              		.loc 1 2448 12 view .LVU227
 661 0006 7047     		bx	lr
 662              	.LVL41:
 663              	.L55:
2455:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2456:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_I2S:
2457:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2458:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Get the current I2S source */
2459:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       srcclk = __HAL_RCC_GET_I2S_SOURCE();
 664              		.loc 1 2459 7 is_stmt 1 view .LVU228
 665              		.loc 1 2459 16 is_stmt 0 view .LVU229
 666 0008 164B     		ldr	r3, .L56
 667 000a 9B68     		ldr	r3, [r3, #8]
 668              	.LVL42:
2460:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       switch (srcclk)
 669              		.loc 1 2460 7 is_stmt 1 view .LVU230
 670 000c 13F40003 		ands	r3, r3, #8388608
 671              	.LVL43:
 672              		.loc 1 2460 7 is_stmt 0 view .LVU231
 673 0010 03D0     		beq	.L50
 674 0012 012B     		cmp	r3, #1
 675 0014 23D1     		bne	.L54
 676 0016 1448     		ldr	r0, .L56+4
 677              	.LVL44:
 678              		.loc 1 2460 7 view .LVU232
 679 0018 7047     		bx	lr
 680              	.LVL45:
 681              	.L50:
2461:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
2462:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check if I2S clock selection is External clock mapped on the I2S_CKIN pin used as I2S cloc
2463:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SCLKSOURCE_EXT:
2464:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
2465:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Set the I2S clock to the external clock  value */
2466:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = EXTERNAL_CLOCK_VALUE;
2467:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
2468:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
2469:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check if I2S clock selection is PLLI2S VCO output clock divided by PLLI2SR used as I2S clo
2470:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SCLKSOURCE_PLLI2S:
2471:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
2472:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Configure the PLLI2S division factor */
2473:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
2474:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 682              		.loc 1 2474 11 is_stmt 1 view .LVU233
 683              		.loc 1 2474 18 is_stmt 0 view .LVU234
 684 001a 124B     		ldr	r3, .L56
 685              	.LVL46:
 686              		.loc 1 2474 18 view .LVU235
 687 001c 5B68     		ldr	r3, [r3, #4]
 688              		.loc 1 2474 13 view .LVU236
 689 001e 13F4800F 		tst	r3, #4194304
 690 0022 14D0     		beq	.L51
2475:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
2476:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
ARM GAS  /tmp/cckRf2Ua.s 			page 59


2477:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 691              		.loc 1 2477 13 is_stmt 1 view .LVU237
 692              		.loc 1 2477 61 is_stmt 0 view .LVU238
 693 0024 0F4B     		ldr	r3, .L56
 694 0026 5B68     		ldr	r3, [r3, #4]
 695              		.loc 1 2477 47 view .LVU239
 696 0028 03F03F03 		and	r3, r3, #63
 697              		.loc 1 2477 22 view .LVU240
 698 002c 0F48     		ldr	r0, .L56+8
 699              	.LVL47:
 700              		.loc 1 2477 22 view .LVU241
 701 002e B0FBF3F3 		udiv	r3, r0, r3
 702              	.LVL48:
 703              	.L52:
2478:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
2479:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
2480:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
2481:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
2482:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
2483:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
2484:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2485:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
2486:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           vcooutput = (uint32_t)(vcoinput * (((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6U) & (
 704              		.loc 1 2486 11 is_stmt 1 view .LVU242
 705              		.loc 1 2486 51 is_stmt 0 view .LVU243
 706 0032 0C4A     		ldr	r2, .L56
 707 0034 D2F88400 		ldr	r0, [r2, #132]
 708              		.loc 1 2486 97 view .LVU244
 709 0038 C0F38810 		ubfx	r0, r0, #6, #9
 710              		.loc 1 2486 21 view .LVU245
 711 003c 03FB00F0 		mul	r0, r3, r0
 712              	.LVL49:
2487:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* I2S_CLK = PLLI2S_VCO Output/PLLI2SR */
2488:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = (uint32_t)(vcooutput /(((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> 28U) & 
 713              		.loc 1 2488 11 is_stmt 1 view .LVU246
 714              		.loc 1 2488 51 is_stmt 0 view .LVU247
 715 0040 D2F88430 		ldr	r3, [r2, #132]
 716              	.LVL50:
 717              		.loc 1 2488 98 view .LVU248
 718 0044 C3F30273 		ubfx	r3, r3, #28, #3
 719              		.loc 1 2488 21 view .LVU249
 720 0048 B0FBF3F0 		udiv	r0, r0, r3
 721              	.LVL51:
2489:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
 722              		.loc 1 2489 11 is_stmt 1 view .LVU250
 723 004c 7047     		bx	lr
 724              	.LVL52:
 725              	.L51:
2482:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 726              		.loc 1 2482 13 view .LVU251
2482:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 727              		.loc 1 2482 61 is_stmt 0 view .LVU252
 728 004e 054B     		ldr	r3, .L56
 729 0050 5B68     		ldr	r3, [r3, #4]
2482:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 730              		.loc 1 2482 47 view .LVU253
 731 0052 03F03F03 		and	r3, r3, #63
ARM GAS  /tmp/cckRf2Ua.s 			page 60


2482:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 732              		.loc 1 2482 22 view .LVU254
 733 0056 0648     		ldr	r0, .L56+12
 734              	.LVL53:
2482:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 735              		.loc 1 2482 22 view .LVU255
 736 0058 B0FBF3F3 		udiv	r3, r0, r3
 737              	.LVL54:
2482:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
 738              		.loc 1 2482 22 view .LVU256
 739 005c E9E7     		b	.L52
 740              	.LVL55:
 741              	.L54:
2490:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
2491:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Clock not enabled for I2S */
2492:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       default:
2493:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
2494:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = 0U;
 742              		.loc 1 2494 21 view .LVU257
 743 005e 0020     		movs	r0, #0
 744              	.LVL56:
2495:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
2496:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
2497:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
2498:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       break;
2499:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2500:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2501:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   return frequency;
 745              		.loc 1 2501 3 is_stmt 1 view .LVU258
2502:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
 746              		.loc 1 2502 1 is_stmt 0 view .LVU259
 747 0060 7047     		bx	lr
 748              	.L57:
 749 0062 00BF     		.align	2
 750              	.L56:
 751 0064 00380240 		.word	1073887232
 752 0068 0080BB00 		.word	12288000
 753 006c 40787D01 		.word	25000000
 754 0070 0024F400 		.word	16000000
 755              		.cfi_endproc
 756              	.LFE128:
 758              		.section	.text.HAL_RCCEx_EnablePLLI2S,"ax",%progbits
 759              		.align	1
 760              		.global	HAL_RCCEx_EnablePLLI2S
 761              		.syntax unified
 762              		.thumb
 763              		.thumb_func
 764              		.fpu fpv4-sp-d16
 766              	HAL_RCCEx_EnablePLLI2S:
 767              	.LVL57:
 768              	.LFB129:
2503:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx */
2504:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2505:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F405xx) || defined(STM32F415xx) || defined(STM32F407xx)|| defined(STM32F417xx) ||\
2506:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F411xE)
2507:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
2508:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Initializes the RCC extended peripherals clocks according to the specified parameters i
ARM GAS  /tmp/cckRf2Ua.s 			page 61


2509:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         RCC_PeriphCLKInitTypeDef.
2510:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PeriphClkInit pointer to an RCC_PeriphCLKInitTypeDef structure that
2511:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         contains the configuration information for the Extended Peripherals clocks(I2S and RTC 
2512:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
2513:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   A caution to be taken when HAL_RCCEx_PeriphCLKConfig() is used to select RTC clock sele
2514:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         the Reset of Backup domain will be applied in order to modify the RTC Clock source as c
2515:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *        domain (RTC and RCC_BDCR register expect BKPSRAM) will be reset
2516:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
2517:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval HAL status
2518:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
2519:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
2520:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
2521:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tickstart = 0U;
2522:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tmpreg1 = 0U;
2523:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2524:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Check the parameters */
2525:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
2526:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2527:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*---------------------------- I2S configuration ---------------------------*/
2528:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
2529:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
2530:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2531:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* check for Parameters */
2532:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
2533:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));
2534:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F411xE)
2535:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_PLLI2SM_VALUE(PeriphClkInit->PLLI2S.PLLI2SM));
2536:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F411xE */
2537:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Disable the PLLI2S */
2538:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLI2S_DISABLE();
2539:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
2540:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
2541:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLI2S is disabled */
2542:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
2543:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2544:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
2545:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
2546:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* return in case of Timeout detected */
2547:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
2548:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
2549:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2550:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2551:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F411xE)
2552:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the PLLI2S division factors */
2553:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLI2SM) */
2554:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
2555:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLI2S_I2SCLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SM, PeriphClkInit->PLLI2S.PLLI2SN, Pe
2556:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #else
2557:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Configure the PLLI2S division factors */
2558:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLM) */
2559:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
2560:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
2561:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F411xE */
2562:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2563:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable the PLLI2S */
2564:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLI2S_ENABLE();
2565:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
ARM GAS  /tmp/cckRf2Ua.s 			page 62


2566:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
2567:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Wait till PLLI2S is ready */
2568:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
2569:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2570:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
2571:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
2572:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* return in case of Timeout detected */
2573:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
2574:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
2575:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2576:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2577:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2578:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*---------------------------- RTC configuration ---------------------------*/
2579:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
2580:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2581:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Check for RTC Parameters used to output RTCCLK */
2582:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
2583:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2584:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable Power Clock*/
2585:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_PWR_CLK_ENABLE();
2586:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2587:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Enable write access to Backup domain */
2588:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     PWR->CR |= PWR_CR_DBP;
2589:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2590:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Get tick */
2591:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
2592:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2593:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     while((PWR->CR & PWR_CR_DBP) == RESET)
2594:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2595:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
2596:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
2597:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         return HAL_TIMEOUT;
2598:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
2599:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2600:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value 
2601:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
2602:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSE
2603:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2604:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Store the content of BDCR register before the reset of Backup Domain */
2605:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
2606:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
2607:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_BACKUPRESET_FORCE();
2608:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
2609:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Restore the Content of BDCR register */
2610:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       RCC->BDCR = tmpreg1;
2611:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2612:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
2613:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
2614:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
2615:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Get tick */
2616:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         tickstart = HAL_GetTick();
2617:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2618:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Wait till LSE is ready */
2619:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
2620:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
2621:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
2622:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
ARM GAS  /tmp/cckRf2Ua.s 			page 63


2623:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             return HAL_TIMEOUT;
2624:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
2625:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
2626:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
2627:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2628:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
2629:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2630:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F411xE)
2631:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /*---------------------------- TIM configuration ---------------------------*/
2632:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
2633:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2634:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
2635:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2636:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F401xC || STM32F401xE || STM32F411xE */
2637:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   return HAL_OK;
2638:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
2639:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2640:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
2641:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
2642:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * RCC configuration registers.
2643:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PeriphClkInit pointer to an RCC_PeriphCLKInitTypeDef structure that
2644:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * will be configured.
2645:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval None
2646:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
2647:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** void HAL_RCCEx_GetPeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
2648:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
2649:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tempreg;
2650:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2651:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Set all possible values for the extended clock type parameter------------*/
2652:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_I2S | RCC_PERIPHCLK_RTC;
2653:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2654:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the PLLI2S Clock configuration --------------------------------------*/
2655:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2S.PLLI2SN = (uint32_t)((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> RCC_PLLI
2656:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2S.PLLI2SR = (uint32_t)((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI
2657:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F411xE)
2658:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLI2S.PLLI2SM = (uint32_t)(RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SM);
2659:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F411xE */
2660:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the RTC Clock configuration -----------------------------------------*/
2661:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   tempreg = (RCC->CFGR & RCC_CFGR_RTCPRE);
2662:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   PeriphClkInit->RTCClockSelection = (uint32_t)((tempreg) | (RCC->BDCR & RCC_BDCR_RTCSEL));
2663:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2664:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F411xE)
2665:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get the TIM Prescaler configuration -------------------------------------*/
2666:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if ((RCC->DCKCFGR & RCC_DCKCFGR_TIMPRE) == RESET)
2667:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2668:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     PeriphClkInit->TIMPresSelection = RCC_TIMPRES_DESACTIVATED;
2669:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2670:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   else
2671:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2672:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     PeriphClkInit->TIMPresSelection = RCC_TIMPRES_ACTIVATED;
2673:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2674:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F401xC || STM32F401xE || STM32F411xE */
2675:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
2676:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2677:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
2678:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Return the peripheral clock frequency for a given peripheral(SAI..)
2679:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   Return 0 if peripheral clock identifier not managed by this API
ARM GAS  /tmp/cckRf2Ua.s 			page 64


2680:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PeriphClk Peripheral clock identifier
2681:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         This parameter can be one of the following values:
2682:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            @arg RCC_PERIPHCLK_I2S: I2S peripheral clock
2683:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval Frequency in KHz
2684:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
2685:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint32_t PeriphClk)
2686:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
2687:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the I2S clock frequency (value in Hz) */
2688:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t frequency = 0U;
2689:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the VCO Input (value in Hz) */
2690:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t vcoinput = 0U;
2691:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t srcclk = 0U;
2692:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* This variable used to store the VCO Output (value in Hz) */
2693:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t vcooutput = 0U;
2694:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   switch (PeriphClk)
2695:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2696:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_I2S:
2697:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2698:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Get the current I2S source */
2699:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       srcclk = __HAL_RCC_GET_I2S_SOURCE();
2700:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       switch (srcclk)
2701:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
2702:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check if I2S clock selection is External clock mapped on the I2S_CKIN pin used as I2S cloc
2703:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SCLKSOURCE_EXT:
2704:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
2705:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Set the I2S clock to the external clock  value */
2706:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = EXTERNAL_CLOCK_VALUE;
2707:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
2708:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
2709:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* Check if I2S clock selection is PLLI2S VCO output clock divided by PLLI2SR used as I2S clo
2710:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       case RCC_I2SCLKSOURCE_PLLI2S:
2711:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
2712:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F411xE)
2713:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Configure the PLLI2S division factor */
2714:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLLI2S_VCO Input  = PLL_SOURCE/PLLI2SM */
2715:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
2716:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
2717:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
2718:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSE_VALUE / (uint32_t)(RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SM))
2719:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
2720:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
2721:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
2722:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
2723:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSI_VALUE / (uint32_t)(RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SM))
2724:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
2725:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #else
2726:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* Configure the PLLI2S division factor */
2727:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
2728:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
2729:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
2730:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
2731:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
2732:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
2733:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           else
2734:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           {
2735:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             /* Get the I2S source clock value */
2736:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****             vcoinput = (uint32_t)(HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
ARM GAS  /tmp/cckRf2Ua.s 			page 65


2737:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           }
2738:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F411xE */
2739:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
2740:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           vcooutput = (uint32_t)(vcoinput * (((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6U) & (
2741:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           /* I2S_CLK = PLLI2S_VCO Output/PLLI2SR */
2742:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = (uint32_t)(vcooutput /(((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> 28U) & 
2743:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
2744:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
2745:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* Clock not enabled for I2S*/
2746:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       default:
2747:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         {
2748:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           frequency = 0U;
2749:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****           break;
2750:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         }
2751:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
2752:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       break;
2753:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2754:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2755:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   return frequency;
2756:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
2757:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F405xx || STM32F415xx || STM32F407xx || STM32F417xx || STM32F401xC || STM32F401xE  |
2758:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2759:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F410Tx) || defined(STM32F410Cx) || defined(STM32F410Rx) || defined(STM32F411xE) ||
2760:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     defined(STM32F412Vx) || defined(STM32F412Rx) || defined(STM32F412Cx) || defined(STM32F413xx) ||
2761:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
2762:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Select LSE mode
2763:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
2764:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   This mode is only available for STM32F410xx/STM32F411xx/STM32F446xx/STM32F469xx/STM32F4
2765:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
2766:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  Mode specifies the LSE mode.
2767:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *          This parameter can be one of the following values:
2768:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            @arg RCC_LSE_LOWPOWER_MODE:  LSE oscillator in low power mode selection
2769:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            @arg RCC_LSE_HIGHDRIVE_MODE: LSE oscillator in High Drive mode selection
2770:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval None
2771:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
2772:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** void HAL_RCCEx_SelectLSEMode(uint8_t Mode)
2773:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
2774:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Check the parameters */
2775:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_LSE_MODE(Mode));
2776:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(Mode == RCC_LSE_HIGHDRIVE_MODE)
2777:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2778:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     SET_BIT(RCC->BDCR, RCC_BDCR_LSEMOD);
2779:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2780:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   else
2781:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2782:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEMOD);
2783:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2784:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
2785:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2786:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F410xx || STM32F411xE || STM32F446xx || STM32F469xx || STM32F479xx || STM32F412Zx ||
2787:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2788:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Exported_Functions_Group2 Extended Clock management functions
2789:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****  *  @brief  Extended Clock management functions
2790:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****  *
2791:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** @verbatim   
2792:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****  ===============================================================================
2793:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                 ##### Extended clock management functions  #####
ARM GAS  /tmp/cckRf2Ua.s 			page 66


2794:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****  ===============================================================================
2795:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     [..]
2796:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     This subsection provides a set of functions allowing to control the 
2797:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     activation or deactivation of PLLI2S, PLLSAI.
2798:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** @endverbatim
2799:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @{
2800:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
2801:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2802:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(RCC_PLLI2S_SUPPORT)
2803:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
2804:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Enable PLLI2S.
2805:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PLLI2SInit  pointer to an RCC_PLLI2SInitTypeDef structure that
2806:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         contains the configuration information for the PLLI2S
2807:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval HAL status
2808:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
2809:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCCEx_EnablePLLI2S(RCC_PLLI2SInitTypeDef  *PLLI2SInit)
2810:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
 769              		.loc 1 2810 1 is_stmt 1 view -0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              		.loc 1 2810 1 is_stmt 0 view .LVU261
 774 0000 38B5     		push	{r3, r4, r5, lr}
 775              	.LCFI4:
 776              		.cfi_def_cfa_offset 16
 777              		.cfi_offset 3, -16
 778              		.cfi_offset 4, -12
 779              		.cfi_offset 5, -8
 780              		.cfi_offset 14, -4
 781 0002 0546     		mov	r5, r0
2811:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tickstart;
 782              		.loc 1 2811 3 is_stmt 1 view .LVU262
2812:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2813:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Check for parameters */
2814:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLI2SN_VALUE(PLLI2SInit->PLLI2SN));
 783              		.loc 1 2814 3 view .LVU263
2815:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLI2SR_VALUE(PLLI2SInit->PLLI2SR));
 784              		.loc 1 2815 3 view .LVU264
2816:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(RCC_PLLI2SCFGR_PLLI2SM)
2817:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLI2SM_VALUE(PLLI2SInit->PLLI2SM));
2818:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* RCC_PLLI2SCFGR_PLLI2SM */
2819:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(RCC_PLLI2SCFGR_PLLI2SP)
2820:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLI2SP_VALUE(PLLI2SInit->PLLI2SP));
2821:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* RCC_PLLI2SCFGR_PLLI2SP */
2822:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(RCC_PLLI2SCFGR_PLLI2SQ)
2823:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLI2SQ_VALUE(PLLI2SInit->PLLI2SQ));
 785              		.loc 1 2823 3 view .LVU265
2824:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* RCC_PLLI2SCFGR_PLLI2SQ */
2825:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2826:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Disable the PLLI2S */
2827:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLI2S_DISABLE();
 786              		.loc 1 2827 3 view .LVU266
 787 0004 184B     		ldr	r3, .L69
 788 0006 0022     		movs	r2, #0
 789 0008 9A66     		str	r2, [r3, #104]
2828:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2829:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Wait till PLLI2S is disabled */
ARM GAS  /tmp/cckRf2Ua.s 			page 67


2830:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   tickstart = HAL_GetTick();
 790              		.loc 1 2830 3 view .LVU267
 791              		.loc 1 2830 15 is_stmt 0 view .LVU268
 792 000a FFF7FEFF 		bl	HAL_GetTick
 793              	.LVL58:
 794              		.loc 1 2830 15 view .LVU269
 795 000e 0446     		mov	r4, r0
 796              	.LVL59:
2831:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY) != RESET)
 797              		.loc 1 2831 3 is_stmt 1 view .LVU270
 798              	.L59:
 799              		.loc 1 2831 8 view .LVU271
 800              		.loc 1 2831 9 is_stmt 0 view .LVU272
 801 0010 164B     		ldr	r3, .L69+4
 802 0012 1B68     		ldr	r3, [r3]
 803              		.loc 1 2831 8 view .LVU273
 804 0014 13F0006F 		tst	r3, #134217728
 805 0018 06D0     		beq	.L67
2832:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2833:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 806              		.loc 1 2833 5 is_stmt 1 view .LVU274
 807              		.loc 1 2833 9 is_stmt 0 view .LVU275
 808 001a FFF7FEFF 		bl	HAL_GetTick
 809              	.LVL60:
 810              		.loc 1 2833 23 view .LVU276
 811 001e 001B     		subs	r0, r0, r4
 812              		.loc 1 2833 7 view .LVU277
 813 0020 0228     		cmp	r0, #2
 814 0022 F5D9     		bls	.L59
2834:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2835:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* return in case of Timeout detected */
2836:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       return HAL_TIMEOUT;
 815              		.loc 1 2836 14 view .LVU278
 816 0024 0320     		movs	r0, #3
 817              	.L60:
2837:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2838:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2839:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2840:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Configure the PLLI2S division factors */
2841:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F446xx)
2842:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLI2SM) */
2843:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* I2SPCLK = PLLI2S_VCO / PLLI2SP */
2844:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* I2SQCLK = PLLI2S_VCO / PLLI2SQ */
2845:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* I2SRCLK = PLLI2S_VCO / PLLI2SR */
2846:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLI2S_CONFIG(PLLI2SInit->PLLI2SM, PLLI2SInit->PLLI2SN, \
2847:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                           PLLI2SInit->PLLI2SP, PLLI2SInit->PLLI2SQ, PLLI2SInit->PLLI2SR);
2848:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #elif defined(STM32F412Zx) || defined(STM32F412Vx) || defined(STM32F412Rx) || defined(STM32F412Cx) 
2849:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       defined(STM32F413xx) || defined(STM32F423xx)
2850:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLI2SM)*/
2851:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* I2SQCLK = PLLI2S_VCO / PLLI2SQ */
2852:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* I2SRCLK = PLLI2S_VCO / PLLI2SR */
2853:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLI2S_CONFIG(PLLI2SInit->PLLI2SM, PLLI2SInit->PLLI2SN, \
2854:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                           PLLI2SInit->PLLI2SQ, PLLI2SInit->PLLI2SR);
2855:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #elif defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx) 
2856:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       defined(STM32F469xx) || defined(STM32F479xx)
2857:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * PLLI2SN */
2858:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* I2SQCLK = PLLI2S_VCO / PLLI2SQ */
ARM GAS  /tmp/cckRf2Ua.s 			page 68


2859:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* I2SRCLK = PLLI2S_VCO / PLLI2SR */
2860:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLI2S_SAICLK_CONFIG(PLLI2SInit->PLLI2SN, PLLI2SInit->PLLI2SQ, PLLI2SInit->PLLI2SR);
2861:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #elif defined(STM32F411xE)
2862:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLI2SM) */
2863:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* I2SRCLK = PLLI2S_VCO / PLLI2SR */
2864:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLI2S_I2SCLK_CONFIG(PLLI2SInit->PLLI2SM, PLLI2SInit->PLLI2SN, PLLI2SInit->PLLI2SR);
2865:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #else
2866:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x PLLI2SN */
2867:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* I2SRCLK = PLLI2S_VCO / PLLI2SR */
2868:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLI2S_CONFIG(PLLI2SInit->PLLI2SN, PLLI2SInit->PLLI2SR);
2869:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F446xx */
2870:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2871:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Enable the PLLI2S */
2872:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLI2S_ENABLE();
2873:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2874:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Wait till PLLI2S is ready */
2875:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   tickstart = HAL_GetTick();
2876:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY) == RESET)
2877:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2878:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
2879:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2880:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* return in case of Timeout detected */
2881:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       return HAL_TIMEOUT;
2882:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2883:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2884:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2885:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****  return HAL_OK;
2886:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
 818              		.loc 1 2886 1 view .LVU279
 819 0026 38BD     		pop	{r3, r4, r5, pc}
 820              	.LVL61:
 821              	.L67:
2860:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #elif defined(STM32F411xE)
 822              		.loc 1 2860 3 is_stmt 1 view .LVU280
 823 0028 2A68     		ldr	r2, [r5]
 824 002a AB68     		ldr	r3, [r5, #8]
 825 002c 1B06     		lsls	r3, r3, #24
 826 002e 43EA8213 		orr	r3, r3, r2, lsl #6
 827 0032 6A68     		ldr	r2, [r5, #4]
 828 0034 43EA0273 		orr	r3, r3, r2, lsl #28
 829 0038 0C4A     		ldr	r2, .L69+4
 830 003a C2F88430 		str	r3, [r2, #132]
2872:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 831              		.loc 1 2872 3 view .LVU281
 832 003e 0A4B     		ldr	r3, .L69
 833 0040 0122     		movs	r2, #1
 834 0042 9A66     		str	r2, [r3, #104]
2875:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY) == RESET)
 835              		.loc 1 2875 3 view .LVU282
2875:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY) == RESET)
 836              		.loc 1 2875 15 is_stmt 0 view .LVU283
 837 0044 FFF7FEFF 		bl	HAL_GetTick
 838              	.LVL62:
 839 0048 0446     		mov	r4, r0
 840              	.LVL63:
2876:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 841              		.loc 1 2876 3 is_stmt 1 view .LVU284
ARM GAS  /tmp/cckRf2Ua.s 			page 69


 842              	.L62:
2876:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 843              		.loc 1 2876 8 view .LVU285
2876:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 844              		.loc 1 2876 9 is_stmt 0 view .LVU286
 845 004a 084B     		ldr	r3, .L69+4
 846 004c 1B68     		ldr	r3, [r3]
2876:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 847              		.loc 1 2876 8 view .LVU287
 848 004e 13F0006F 		tst	r3, #134217728
 849 0052 06D1     		bne	.L68
2878:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 850              		.loc 1 2878 5 is_stmt 1 view .LVU288
2878:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 851              		.loc 1 2878 9 is_stmt 0 view .LVU289
 852 0054 FFF7FEFF 		bl	HAL_GetTick
 853              	.LVL64:
2878:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 854              		.loc 1 2878 23 view .LVU290
 855 0058 001B     		subs	r0, r0, r4
2878:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 856              		.loc 1 2878 7 view .LVU291
 857 005a 0228     		cmp	r0, #2
 858 005c F5D9     		bls	.L62
2881:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 859              		.loc 1 2881 14 view .LVU292
 860 005e 0320     		movs	r0, #3
 861 0060 E1E7     		b	.L60
 862              	.L68:
2885:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
 863              		.loc 1 2885 9 view .LVU293
 864 0062 0020     		movs	r0, #0
 865 0064 DFE7     		b	.L60
 866              	.L70:
 867 0066 00BF     		.align	2
 868              	.L69:
 869 0068 00004742 		.word	1111949312
 870 006c 00380240 		.word	1073887232
 871              		.cfi_endproc
 872              	.LFE129:
 874              		.section	.text.HAL_RCCEx_DisablePLLI2S,"ax",%progbits
 875              		.align	1
 876              		.global	HAL_RCCEx_DisablePLLI2S
 877              		.syntax unified
 878              		.thumb
 879              		.thumb_func
 880              		.fpu fpv4-sp-d16
 882              	HAL_RCCEx_DisablePLLI2S:
 883              	.LFB130:
2887:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2888:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
2889:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Disable PLLI2S.
2890:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval HAL status
2891:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
2892:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCCEx_DisablePLLI2S(void)
2893:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
 884              		.loc 1 2893 1 is_stmt 1 view -0
ARM GAS  /tmp/cckRf2Ua.s 			page 70


 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888 0000 10B5     		push	{r4, lr}
 889              	.LCFI5:
 890              		.cfi_def_cfa_offset 8
 891              		.cfi_offset 4, -8
 892              		.cfi_offset 14, -4
2894:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tickstart;
 893              		.loc 1 2894 3 view .LVU295
2895:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2896:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Disable the PLLI2S */
2897:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLI2S_DISABLE();
 894              		.loc 1 2897 3 view .LVU296
 895 0002 0A4B     		ldr	r3, .L78
 896 0004 0022     		movs	r2, #0
 897 0006 9A66     		str	r2, [r3, #104]
2898:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2899:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Wait till PLLI2S is disabled */
2900:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   tickstart = HAL_GetTick();
 898              		.loc 1 2900 3 view .LVU297
 899              		.loc 1 2900 15 is_stmt 0 view .LVU298
 900 0008 FFF7FEFF 		bl	HAL_GetTick
 901              	.LVL65:
 902 000c 0446     		mov	r4, r0
 903              	.LVL66:
2901:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLI2SRDY) != RESET)
 904              		.loc 1 2901 3 is_stmt 1 view .LVU299
 905              	.L72:
 906              		.loc 1 2901 8 view .LVU300
 907              		.loc 1 2901 9 is_stmt 0 view .LVU301
 908 000e 084B     		ldr	r3, .L78+4
 909 0010 1B68     		ldr	r3, [r3]
 910              		.loc 1 2901 8 view .LVU302
 911 0012 13F0006F 		tst	r3, #134217728
 912 0016 06D0     		beq	.L77
2902:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2903:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 913              		.loc 1 2903 5 is_stmt 1 view .LVU303
 914              		.loc 1 2903 9 is_stmt 0 view .LVU304
 915 0018 FFF7FEFF 		bl	HAL_GetTick
 916              	.LVL67:
 917              		.loc 1 2903 23 view .LVU305
 918 001c 001B     		subs	r0, r0, r4
 919              		.loc 1 2903 7 view .LVU306
 920 001e 0228     		cmp	r0, #2
 921 0020 F5D9     		bls	.L72
2904:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2905:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* return in case of Timeout detected */
2906:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       return HAL_TIMEOUT;
 922              		.loc 1 2906 14 view .LVU307
 923 0022 0320     		movs	r0, #3
 924 0024 00E0     		b	.L73
 925              	.L77:
2907:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2908:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2909:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
ARM GAS  /tmp/cckRf2Ua.s 			page 71


2910:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   return HAL_OK;
 926              		.loc 1 2910 10 view .LVU308
 927 0026 0020     		movs	r0, #0
 928              	.L73:
2911:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
 929              		.loc 1 2911 1 view .LVU309
 930 0028 10BD     		pop	{r4, pc}
 931              	.LVL68:
 932              	.L79:
 933              		.loc 1 2911 1 view .LVU310
 934 002a 00BF     		.align	2
 935              	.L78:
 936 002c 00004742 		.word	1111949312
 937 0030 00380240 		.word	1073887232
 938              		.cfi_endproc
 939              	.LFE130:
 941              		.section	.text.HAL_RCCEx_EnablePLLSAI,"ax",%progbits
 942              		.align	1
 943              		.global	HAL_RCCEx_EnablePLLSAI
 944              		.syntax unified
 945              		.thumb
 946              		.thumb_func
 947              		.fpu fpv4-sp-d16
 949              	HAL_RCCEx_EnablePLLSAI:
 950              	.LVL69:
 951              	.LFB131:
2912:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2913:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* RCC_PLLI2S_SUPPORT */
2914:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2915:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI_SUPPORT)
2916:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
2917:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Enable PLLSAI.
2918:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @param  PLLSAIInit  pointer to an RCC_PLLSAIInitTypeDef structure that
2919:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         contains the configuration information for the PLLSAI
2920:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval HAL status
2921:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
2922:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCCEx_EnablePLLSAI(RCC_PLLSAIInitTypeDef  *PLLSAIInit)
2923:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
 952              		.loc 1 2923 1 is_stmt 1 view -0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              		.loc 1 2923 1 is_stmt 0 view .LVU312
 957 0000 38B5     		push	{r3, r4, r5, lr}
 958              	.LCFI6:
 959              		.cfi_def_cfa_offset 16
 960              		.cfi_offset 3, -16
 961              		.cfi_offset 4, -12
 962              		.cfi_offset 5, -8
 963              		.cfi_offset 14, -4
 964 0002 0546     		mov	r5, r0
2924:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tickstart;
 965              		.loc 1 2924 3 is_stmt 1 view .LVU313
2925:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2926:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Check for parameters */
2927:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAIN_VALUE(PLLSAIInit->PLLSAIN));
 966              		.loc 1 2927 3 view .LVU314
ARM GAS  /tmp/cckRf2Ua.s 			page 72


2928:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAIQ_VALUE(PLLSAIInit->PLLSAIQ));
 967              		.loc 1 2928 3 view .LVU315
2929:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAICFGR_PLLSAIM)
2930:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAIM_VALUE(PLLSAIInit->PLLSAIM));
2931:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAICFGR_PLLSAIM */
2932:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAICFGR_PLLSAIP)
2933:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAIP_VALUE(PLLSAIInit->PLLSAIP));
2934:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAICFGR_PLLSAIP */
2935:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAICFGR_PLLSAIR)
2936:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAIR_VALUE(PLLSAIInit->PLLSAIR));
 968              		.loc 1 2936 3 view .LVU316
2937:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAICFGR_PLLSAIR */
2938:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2939:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Disable the PLLSAI */
2940:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLSAI_DISABLE();
 969              		.loc 1 2940 3 view .LVU317
 970 0004 184B     		ldr	r3, .L91
 971 0006 0022     		movs	r2, #0
 972 0008 1A67     		str	r2, [r3, #112]
2941:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2942:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Wait till PLLSAI is disabled */
2943:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   tickstart = HAL_GetTick();
 973              		.loc 1 2943 3 view .LVU318
 974              		.loc 1 2943 15 is_stmt 0 view .LVU319
 975 000a FFF7FEFF 		bl	HAL_GetTick
 976              	.LVL70:
 977              		.loc 1 2943 15 view .LVU320
 978 000e 0446     		mov	r4, r0
 979              	.LVL71:
2944:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 980              		.loc 1 2944 3 is_stmt 1 view .LVU321
 981              	.L81:
 982              		.loc 1 2944 8 view .LVU322
 983              		.loc 1 2944 9 is_stmt 0 view .LVU323
 984 0010 164B     		ldr	r3, .L91+4
 985 0012 1B68     		ldr	r3, [r3]
 986              		.loc 1 2944 8 view .LVU324
 987 0014 13F0005F 		tst	r3, #536870912
 988 0018 06D0     		beq	.L89
2945:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2946:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 989              		.loc 1 2946 5 is_stmt 1 view .LVU325
 990              		.loc 1 2946 9 is_stmt 0 view .LVU326
 991 001a FFF7FEFF 		bl	HAL_GetTick
 992              	.LVL72:
 993              		.loc 1 2946 23 view .LVU327
 994 001e 001B     		subs	r0, r0, r4
 995              		.loc 1 2946 7 view .LVU328
 996 0020 0228     		cmp	r0, #2
 997 0022 F5D9     		bls	.L81
2947:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2948:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* return in case of Timeout detected */
2949:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       return HAL_TIMEOUT;
 998              		.loc 1 2949 14 view .LVU329
 999 0024 0320     		movs	r0, #3
 1000              	.L82:
2950:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
ARM GAS  /tmp/cckRf2Ua.s 			page 73


2951:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2952:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2953:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Configure the PLLSAI division factors */
2954:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F446xx)
2955:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) * (PLLSAIN/PLLSAIM) */
2956:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* SAIPCLK = PLLSAI_VCO / PLLSAIP */
2957:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* SAIQCLK = PLLSAI_VCO / PLLSAIQ */
2958:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* SAIRCLK = PLLSAI_VCO / PLLSAIR */
2959:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLSAI_CONFIG(PLLSAIInit->PLLSAIM, PLLSAIInit->PLLSAIN, \
2960:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                           PLLSAIInit->PLLSAIP, PLLSAIInit->PLLSAIQ, 0U);
2961:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #elif defined(STM32F469xx) || defined(STM32F479xx)
2962:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) * PLLSAIN */
2963:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* SAIPCLK = PLLSAI_VCO / PLLSAIP */
2964:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* SAIQCLK = PLLSAI_VCO / PLLSAIQ */
2965:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* SAIRCLK = PLLSAI_VCO / PLLSAIR */
2966:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLSAI_CONFIG(PLLSAIInit->PLLSAIN, PLLSAIInit->PLLSAIP, \
2967:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****                           PLLSAIInit->PLLSAIQ, PLLSAIInit->PLLSAIR);
2968:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #else
2969:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x PLLSAIN */
2970:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* SAIQCLK = PLLSAI_VCO / PLLSAIQ */
2971:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* SAIRCLK = PLLSAI_VCO / PLLSAIR */
2972:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLSAI_CONFIG(PLLSAIInit->PLLSAIN, PLLSAIInit->PLLSAIQ, PLLSAIInit->PLLSAIR);
2973:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F446xx */
2974:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2975:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Enable the PLLSAI */
2976:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLSAI_ENABLE();
2977:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2978:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Wait till PLLSAI is ready */
2979:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   tickstart = HAL_GetTick();
2980:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
2981:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
2982:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
2983:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
2984:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* return in case of Timeout detected */
2985:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       return HAL_TIMEOUT;
2986:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
2987:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
2988:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2989:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****  return HAL_OK;
2990:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
 1001              		.loc 1 2990 1 view .LVU330
 1002 0026 38BD     		pop	{r3, r4, r5, pc}
 1003              	.LVL73:
 1004              	.L89:
2972:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F446xx */
 1005              		.loc 1 2972 3 is_stmt 1 view .LVU331
 1006 0028 2A68     		ldr	r2, [r5]
 1007 002a 6B68     		ldr	r3, [r5, #4]
 1008 002c 1B06     		lsls	r3, r3, #24
 1009 002e 43EA8213 		orr	r3, r3, r2, lsl #6
 1010 0032 AA68     		ldr	r2, [r5, #8]
 1011 0034 43EA0273 		orr	r3, r3, r2, lsl #28
 1012 0038 0C4A     		ldr	r2, .L91+4
 1013 003a C2F88830 		str	r3, [r2, #136]
2976:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1014              		.loc 1 2976 3 view .LVU332
 1015 003e 0A4B     		ldr	r3, .L91
ARM GAS  /tmp/cckRf2Ua.s 			page 74


 1016 0040 0122     		movs	r2, #1
 1017 0042 1A67     		str	r2, [r3, #112]
2979:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 1018              		.loc 1 2979 3 view .LVU333
2979:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 1019              		.loc 1 2979 15 is_stmt 0 view .LVU334
 1020 0044 FFF7FEFF 		bl	HAL_GetTick
 1021              	.LVL74:
 1022 0048 0446     		mov	r4, r0
 1023              	.LVL75:
2980:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1024              		.loc 1 2980 3 is_stmt 1 view .LVU335
 1025              	.L84:
2980:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1026              		.loc 1 2980 8 view .LVU336
2980:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1027              		.loc 1 2980 9 is_stmt 0 view .LVU337
 1028 004a 084B     		ldr	r3, .L91+4
 1029 004c 1B68     		ldr	r3, [r3]
2980:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1030              		.loc 1 2980 8 view .LVU338
 1031 004e 13F0005F 		tst	r3, #536870912
 1032 0052 06D1     		bne	.L90
2982:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1033              		.loc 1 2982 5 is_stmt 1 view .LVU339
2982:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1034              		.loc 1 2982 9 is_stmt 0 view .LVU340
 1035 0054 FFF7FEFF 		bl	HAL_GetTick
 1036              	.LVL76:
2982:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1037              		.loc 1 2982 23 view .LVU341
 1038 0058 001B     		subs	r0, r0, r4
2982:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1039              		.loc 1 2982 7 view .LVU342
 1040 005a 0228     		cmp	r0, #2
 1041 005c F5D9     		bls	.L84
2985:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 1042              		.loc 1 2985 14 view .LVU343
 1043 005e 0320     		movs	r0, #3
 1044 0060 E1E7     		b	.L82
 1045              	.L90:
2989:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
 1046              		.loc 1 2989 9 view .LVU344
 1047 0062 0020     		movs	r0, #0
 1048 0064 DFE7     		b	.L82
 1049              	.L92:
 1050 0066 00BF     		.align	2
 1051              	.L91:
 1052 0068 00004742 		.word	1111949312
 1053 006c 00380240 		.word	1073887232
 1054              		.cfi_endproc
 1055              	.LFE131:
 1057              		.section	.text.HAL_RCCEx_DisablePLLSAI,"ax",%progbits
 1058              		.align	1
 1059              		.global	HAL_RCCEx_DisablePLLSAI
 1060              		.syntax unified
 1061              		.thumb
ARM GAS  /tmp/cckRf2Ua.s 			page 75


 1062              		.thumb_func
 1063              		.fpu fpv4-sp-d16
 1065              	HAL_RCCEx_DisablePLLSAI:
 1066              	.LFB132:
2991:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
2992:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
2993:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Disable PLLSAI.
2994:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval HAL status
2995:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
2996:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCCEx_DisablePLLSAI(void)
2997:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
 1067              		.loc 1 2997 1 is_stmt 1 view -0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 0, uses_anonymous_args = 0
 1071 0000 10B5     		push	{r4, lr}
 1072              	.LCFI7:
 1073              		.cfi_def_cfa_offset 8
 1074              		.cfi_offset 4, -8
 1075              		.cfi_offset 14, -4
2998:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tickstart;
 1076              		.loc 1 2998 3 view .LVU346
2999:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3000:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Disable the PLLSAI */
3001:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLSAI_DISABLE();
 1077              		.loc 1 3001 3 view .LVU347
 1078 0002 0A4B     		ldr	r3, .L100
 1079 0004 0022     		movs	r2, #0
 1080 0006 1A67     		str	r2, [r3, #112]
3002:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3003:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Wait till PLLSAI is disabled */
3004:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   tickstart = HAL_GetTick();
 1081              		.loc 1 3004 3 view .LVU348
 1082              		.loc 1 3004 15 is_stmt 0 view .LVU349
 1083 0008 FFF7FEFF 		bl	HAL_GetTick
 1084              	.LVL77:
 1085 000c 0446     		mov	r4, r0
 1086              	.LVL78:
3005:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 1087              		.loc 1 3005 3 is_stmt 1 view .LVU350
 1088              	.L94:
 1089              		.loc 1 3005 8 view .LVU351
 1090              		.loc 1 3005 9 is_stmt 0 view .LVU352
 1091 000e 084B     		ldr	r3, .L100+4
 1092 0010 1B68     		ldr	r3, [r3]
 1093              		.loc 1 3005 8 view .LVU353
 1094 0012 13F0005F 		tst	r3, #536870912
 1095 0016 06D0     		beq	.L99
3006:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
3007:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 1096              		.loc 1 3007 5 is_stmt 1 view .LVU354
 1097              		.loc 1 3007 9 is_stmt 0 view .LVU355
 1098 0018 FFF7FEFF 		bl	HAL_GetTick
 1099              	.LVL79:
 1100              		.loc 1 3007 23 view .LVU356
 1101 001c 001B     		subs	r0, r0, r4
 1102              		.loc 1 3007 7 view .LVU357
ARM GAS  /tmp/cckRf2Ua.s 			page 76


 1103 001e 0228     		cmp	r0, #2
 1104 0020 F5D9     		bls	.L94
3008:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
3009:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* return in case of Timeout detected */
3010:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       return HAL_TIMEOUT;
 1105              		.loc 1 3010 14 view .LVU358
 1106 0022 0320     		movs	r0, #3
 1107 0024 00E0     		b	.L95
 1108              	.L99:
3011:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
3012:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
3013:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3014:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   return HAL_OK;
 1109              		.loc 1 3014 10 view .LVU359
 1110 0026 0020     		movs	r0, #0
 1111              	.L95:
3015:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
 1112              		.loc 1 3015 1 view .LVU360
 1113 0028 10BD     		pop	{r4, pc}
 1114              	.LVL80:
 1115              	.L101:
 1116              		.loc 1 3015 1 view .LVU361
 1117 002a 00BF     		.align	2
 1118              	.L100:
 1119 002c 00004742 		.word	1111949312
 1120 0030 00380240 		.word	1073887232
 1121              		.cfi_endproc
 1122              	.LFE132:
 1124              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
 1125              		.align	1
 1126              		.global	HAL_RCC_DeInit
 1127              		.syntax unified
 1128              		.thumb
 1129              		.thumb_func
 1130              		.fpu fpv4-sp-d16
 1132              	HAL_RCC_DeInit:
 1133              	.LFB133:
3016:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3017:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI_SUPPORT */
3018:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3019:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
3020:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @}
3021:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
3022:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3023:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F446xx)
3024:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
3025:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Returns the SYSCLK frequency
3026:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
3027:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   This function implementation is valid only for STM32F446xx devices.
3028:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   This function add the PLL/PLLR System clock source
3029:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
3030:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   The system frequency computed by this function is not the real
3031:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         frequency in the chip. It is calculated based on the predefined
3032:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         constant and the selected clock source:
3033:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
3034:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
3035:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note     If SYSCLK source is PLL or PLLR, function returns values based on HSE_VALUE(**)
ARM GAS  /tmp/cckRf2Ua.s 			page 77


3036:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.
3037:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
3038:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *               16 MHz) but the real value may vary depending on the variations
3039:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *               in voltage and temperature.
3040:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
3041:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
3042:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *                frequency of the crystal used. Otherwise, this function may
3043:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *                have wrong result.
3044:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
3045:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   The result of this function could be not correct when using fractional
3046:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         value for HSE crystal.
3047:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
3048:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   This function can be used by the user application to compute the
3049:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         baudrate for the communication peripherals or configure other parameters.
3050:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
3051:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
3052:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
3053:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
3054:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *
3055:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval SYSCLK frequency
3056:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
3057:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
3058:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
3059:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t pllm = 0U;
3060:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t pllvco = 0U;
3061:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t pllp = 0U;
3062:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t pllr = 0U;
3063:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t sysclockfreq = 0U;
3064:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3065:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get SYSCLK source -------------------------------------------------------*/
3066:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
3067:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
3068:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
3069:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
3070:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       sysclockfreq = HSI_VALUE;
3071:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****        break;
3072:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
3073:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
3074:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
3075:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       sysclockfreq = HSE_VALUE;
3076:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       break;
3077:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
3078:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     case RCC_CFGR_SWS_PLL:  /* PLL/PLLP used as system clock  source */
3079:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
3080:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
3081:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       SYSCLK = PLL_VCO / PLLP */
3082:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
3083:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
3084:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
3085:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* HSE used as PLL clock source */
3086:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
3087:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
3088:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       else
3089:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
3090:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* HSI used as PLL clock source */
3091:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
3092:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
ARM GAS  /tmp/cckRf2Ua.s 			page 78


3093:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
3094:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3095:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       sysclockfreq = pllvco/pllp;
3096:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       break;
3097:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
3098:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     case RCC_CFGR_SWS_PLLR:  /* PLL/PLLR used as system clock  source */
3099:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
3100:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
3101:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       SYSCLK = PLL_VCO / PLLR */
3102:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
3103:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
3104:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
3105:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* HSE used as PLL clock source */
3106:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
3107:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
3108:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       else
3109:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       {
3110:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         /* HSI used as PLL clock source */
3111:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****         pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
3112:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       }
3113:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       pllr = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos);
3114:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3115:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       sysclockfreq = pllvco/pllr;
3116:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       break;
3117:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
3118:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     default:
3119:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
3120:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       sysclockfreq = HSI_VALUE;
3121:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       break;
3122:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
3123:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
3124:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   return sysclockfreq;
3125:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
3126:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F446xx */
3127:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3128:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
3129:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @}
3130:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
3131:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3132:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
3133:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @}
3134:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
3135:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3136:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** /**
3137:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
3138:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   The default reset state of the clock configuration is given below:
3139:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            - HSI ON and used as system clock source
3140:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            - HSE, PLL, PLLI2S and PLLSAI OFF
3141:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
3142:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            - CSS, MCO1 and MCO2 OFF
3143:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            - All interrupts disabled
3144:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @note   This function doesn't modify the configuration of the
3145:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            - Peripheral clocks
3146:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   *            - LSI, LSE and RTC clocks
3147:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   * @retval HAL status
3148:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   */
3149:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
ARM GAS  /tmp/cckRf2Ua.s 			page 79


3150:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** {
 1134              		.loc 1 3150 1 is_stmt 1 view -0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138 0000 38B5     		push	{r3, r4, r5, lr}
 1139              	.LCFI8:
 1140              		.cfi_def_cfa_offset 16
 1141              		.cfi_offset 3, -16
 1142              		.cfi_offset 4, -12
 1143              		.cfi_offset 5, -8
 1144              		.cfi_offset 14, -4
3151:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   uint32_t tickstart;
 1145              		.loc 1 3151 3 view .LVU363
3152:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3153:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get Start Tick */
3154:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   tickstart = HAL_GetTick();
 1146              		.loc 1 3154 3 view .LVU364
 1147              		.loc 1 3154 15 is_stmt 0 view .LVU365
 1148 0002 FFF7FEFF 		bl	HAL_GetTick
 1149              	.LVL81:
 1150 0006 0446     		mov	r4, r0
 1151              	.LVL82:
3155:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3156:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Set HSION bit to the reset value */
3157:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
 1152              		.loc 1 3157 3 is_stmt 1 view .LVU366
 1153 0008 554A     		ldr	r2, .L129
 1154 000a 1368     		ldr	r3, [r2]
 1155 000c 43F00103 		orr	r3, r3, #1
 1156 0010 1360     		str	r3, [r2]
3158:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3159:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Wait till HSI is ready */
3160:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
 1157              		.loc 1 3160 3 view .LVU367
 1158              	.LVL83:
 1159              	.L103:
 1160              		.loc 1 3160 9 view .LVU368
 1161              		.loc 1 3160 10 is_stmt 0 view .LVU369
 1162 0012 534B     		ldr	r3, .L129
 1163 0014 1B68     		ldr	r3, [r3]
 1164              		.loc 1 3160 9 view .LVU370
 1165 0016 13F0020F 		tst	r3, #2
 1166 001a 06D1     		bne	.L123
3161:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
3162:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 1167              		.loc 1 3162 5 is_stmt 1 view .LVU371
 1168              		.loc 1 3162 10 is_stmt 0 view .LVU372
 1169 001c FFF7FEFF 		bl	HAL_GetTick
 1170              	.LVL84:
 1171              		.loc 1 3162 24 view .LVU373
 1172 0020 001B     		subs	r0, r0, r4
 1173              		.loc 1 3162 8 view .LVU374
 1174 0022 0228     		cmp	r0, #2
 1175 0024 F5D9     		bls	.L103
3163:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
3164:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       return HAL_TIMEOUT;
ARM GAS  /tmp/cckRf2Ua.s 			page 80


 1176              		.loc 1 3164 14 view .LVU375
 1177 0026 0320     		movs	r0, #3
 1178              	.L104:
3165:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
3166:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
3167:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3168:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Set HSITRIM[4:0] bits to the reset value */
3169:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   SET_BIT(RCC->CR, RCC_CR_HSITRIM_4);
3170:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3171:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get Start Tick */
3172:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   tickstart = HAL_GetTick();
3173:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3174:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Reset CFGR register */
3175:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   CLEAR_REG(RCC->CFGR);
3176:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3177:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Wait till clock switch is ready */
3178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RESET)
3179:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
3180:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
3181:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
3182:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       return HAL_TIMEOUT;
3183:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
3184:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
3185:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3186:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get Start Tick */
3187:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   tickstart = HAL_GetTick();
3188:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3189:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Clear HSEON, HSEBYP and CSSON bits */
3190:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSEBYP | RCC_CR_CSSON);
3191:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3192:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Wait till HSE is disabled */
3193:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != RESET)
3194:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
3195:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
3196:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
3197:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       return HAL_TIMEOUT;
3198:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
3199:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
3200:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3201:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get Start Tick */
3202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   tickstart = HAL_GetTick();
3203:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3204:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Clear PLLON bit */
3205:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
3206:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3207:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Wait till PLL is disabled */
3208:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != RESET)
3209:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
3210:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
3211:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
3212:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       return HAL_TIMEOUT;
3213:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
3214:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
3215:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3216:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(RCC_PLLI2S_SUPPORT)
3217:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get Start Tick */
3218:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   tickstart = HAL_GetTick();
ARM GAS  /tmp/cckRf2Ua.s 			page 81


3219:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3220:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Reset PLLI2SON bit */
3221:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLI2SON);
3222:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3223:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Wait till PLLI2S is disabled */
3224:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLI2SRDY) != RESET)
3225:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
3226:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
3227:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
3228:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       return HAL_TIMEOUT;
3229:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
3230:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
3231:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* RCC_PLLI2S_SUPPORT */
3232:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3233:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI_SUPPORT)
3234:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Get Start Tick */
3235:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   tickstart = HAL_GetTick();
3236:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3237:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Reset PLLSAI bit */
3238:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLSAION);
3239:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3240:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Wait till PLLSAI is disabled */
3241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLSAIRDY) != RESET)
3242:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
3243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
3244:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
3245:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****       return HAL_TIMEOUT;
3246:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
3247:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
3248:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI_SUPPORT */
3249:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3250:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Once PLL, PLLI2S and PLLSAI are OFF, reset PLLCFGR register to default value */
3251:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F412Cx) || defined(STM32F412Rx) || defined(STM32F412Vx) || defined(STM32F412Zx) ||
3252:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     defined(STM32F423xx) || defined(STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx)
3253:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   RCC->PLLCFGR = RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLN_6 | RCC_PLLCFGR_PLLN_7 | RCC_PLLCFGR_PLLQ_2 
3254:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #elif defined(STM32F410Tx) || defined(STM32F410Cx) || defined(STM32F410Rx)
3255:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   RCC->PLLCFGR = RCC_PLLCFGR_PLLR_0 | RCC_PLLCFGR_PLLR_1 | RCC_PLLCFGR_PLLR_2 | RCC_PLLCFGR_PLLM_4 
3256:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #else
3257:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   RCC->PLLCFGR = RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLN_6 | RCC_PLLCFGR_PLLN_7 | RCC_PLLCFGR_PLLQ_2;
3258:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F412Cx || STM32F412Rx || STM32F412Vx || STM32F412Zx || STM32F413xx || STM32F423xx ||
3259:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3260:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Reset PLLI2SCFGR register to default value */
3261:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F412Cx) || defined(STM32F412Rx) || defined(STM32F412Vx) || defined(STM32F412Zx) ||
3262:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     defined(STM32F423xx) || defined(STM32F446xx)
3263:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   RCC->PLLI2SCFGR = RCC_PLLI2SCFGR_PLLI2SM_4 | RCC_PLLI2SCFGR_PLLI2SN_6 | RCC_PLLI2SCFGR_PLLI2SN_7 
3264:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #elif defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F405xx) || defined(STM32F415xx) 
3265:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   RCC->PLLI2SCFGR = RCC_PLLI2SCFGR_PLLI2SN_6 | RCC_PLLI2SCFGR_PLLI2SN_7 | RCC_PLLI2SCFGR_PLLI2SR_1;
3266:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #elif defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx) 
3267:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   RCC->PLLI2SCFGR = RCC_PLLI2SCFGR_PLLI2SN_6 | RCC_PLLI2SCFGR_PLLI2SN_7 | RCC_PLLI2SCFGR_PLLI2SQ_2 
3268:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #elif defined(STM32F411xE)
3269:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   RCC->PLLI2SCFGR = RCC_PLLI2SCFGR_PLLI2SM_4 | RCC_PLLI2SCFGR_PLLI2SN_6 | RCC_PLLI2SCFGR_PLLI2SN_7 
3270:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F412Cx || STM32F412Rx || STM32F412Vx || STM32F412Zx || STM32F413xx || STM32F423xx ||
3271:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3272:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Reset PLLSAICFGR register */
3273:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(STM32F427xx) || defined(STM32F429xx) || defined(STM32F437xx) || defined(STM32F439xx) ||
3274:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   RCC->PLLSAICFGR = RCC_PLLSAICFGR_PLLSAIN_6 | RCC_PLLSAICFGR_PLLSAIN_7 | RCC_PLLSAICFGR_PLLSAIQ_2 
3275:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #elif defined(STM32F446xx)
ARM GAS  /tmp/cckRf2Ua.s 			page 82


3276:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   RCC->PLLSAICFGR = RCC_PLLSAICFGR_PLLSAIM_4 | RCC_PLLSAICFGR_PLLSAIN_6 | RCC_PLLSAICFGR_PLLSAIN_7 
3277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F427xx || STM32F429xx || STM32F437xx || STM32F439xx || STM32F469xx || STM32F479xx */
3278:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3279:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Disable all interrupts */
3280:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   CLEAR_BIT(RCC->CIR, RCC_CIR_LSIRDYIE | RCC_CIR_LSERDYIE | RCC_CIR_HSIRDYIE | RCC_CIR_HSERDYIE | R
3281:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3282:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(RCC_CIR_PLLI2SRDYIE)
3283:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   CLEAR_BIT(RCC->CIR, RCC_CIR_PLLI2SRDYIE);
3284:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* RCC_CIR_PLLI2SRDYIE */
3285:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3286:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(RCC_CIR_PLLSAIRDYIE)
3287:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   CLEAR_BIT(RCC->CIR, RCC_CIR_PLLSAIRDYIE);
3288:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* RCC_CIR_PLLSAIRDYIE */
3289:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3290:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Clear all interrupt flags */
3291:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   SET_BIT(RCC->CIR, RCC_CIR_LSIRDYC | RCC_CIR_LSERDYC | RCC_CIR_HSIRDYC | RCC_CIR_HSERDYC | RCC_CIR
3292:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3293:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(RCC_CIR_PLLI2SRDYC)
3294:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   SET_BIT(RCC->CIR, RCC_CIR_PLLI2SRDYC);
3295:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* RCC_CIR_PLLI2SRDYC */
3296:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3297:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #if defined(RCC_CIR_PLLSAIRDYC)
3298:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   SET_BIT(RCC->CIR, RCC_CIR_PLLSAIRDYC);
3299:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* RCC_CIR_PLLSAIRDYC */
3300:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3301:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Clear LSION bit */
3302:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSION);
3303:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3304:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Reset all CSR flags */
3305:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   SET_BIT(RCC->CSR, RCC_CSR_RMVF);
3306:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3307:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Update the SystemCoreClock global variable */
3308:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   SystemCoreClock = HSI_VALUE;
3309:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
3310:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   /* Adapt Systick interrupt period */
3311:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
3312:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
3313:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     return HAL_ERROR;
3314:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
3315:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   else
3316:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
3317:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     return HAL_OK;
3318:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
3319:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** }
 1179              		.loc 1 3319 1 view .LVU376
 1180 0028 38BD     		pop	{r3, r4, r5, pc}
 1181              	.LVL85:
 1182              	.L123:
3169:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1183              		.loc 1 3169 3 is_stmt 1 view .LVU377
 1184 002a 4D4D     		ldr	r5, .L129
 1185 002c 2B68     		ldr	r3, [r5]
 1186 002e 43F08003 		orr	r3, r3, #128
 1187 0032 2B60     		str	r3, [r5]
3172:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1188              		.loc 1 3172 3 view .LVU378
3172:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
ARM GAS  /tmp/cckRf2Ua.s 			page 83


 1189              		.loc 1 3172 15 is_stmt 0 view .LVU379
 1190 0034 FFF7FEFF 		bl	HAL_GetTick
 1191              	.LVL86:
 1192 0038 0446     		mov	r4, r0
 1193              	.LVL87:
3175:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1194              		.loc 1 3175 3 is_stmt 1 view .LVU380
 1195 003a 0023     		movs	r3, #0
 1196 003c AB60     		str	r3, [r5, #8]
3178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1197              		.loc 1 3178 3 view .LVU381
 1198              	.LVL88:
 1199              	.L106:
3178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1200              		.loc 1 3178 9 view .LVU382
3178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1201              		.loc 1 3178 10 is_stmt 0 view .LVU383
 1202 003e 484B     		ldr	r3, .L129
 1203 0040 9B68     		ldr	r3, [r3, #8]
3178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1204              		.loc 1 3178 9 view .LVU384
 1205 0042 13F00C0F 		tst	r3, #12
 1206 0046 08D0     		beq	.L124
3180:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1207              		.loc 1 3180 5 is_stmt 1 view .LVU385
3180:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1208              		.loc 1 3180 10 is_stmt 0 view .LVU386
 1209 0048 FFF7FEFF 		bl	HAL_GetTick
 1210              	.LVL89:
3180:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1211              		.loc 1 3180 24 view .LVU387
 1212 004c 001B     		subs	r0, r0, r4
3180:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1213              		.loc 1 3180 8 view .LVU388
 1214 004e 41F28833 		movw	r3, #5000
 1215 0052 9842     		cmp	r0, r3
 1216 0054 F3D9     		bls	.L106
3182:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 1217              		.loc 1 3182 14 view .LVU389
 1218 0056 0320     		movs	r0, #3
 1219 0058 E6E7     		b	.L104
 1220              	.L124:
3187:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1221              		.loc 1 3187 3 is_stmt 1 view .LVU390
3187:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1222              		.loc 1 3187 15 is_stmt 0 view .LVU391
 1223 005a FFF7FEFF 		bl	HAL_GetTick
 1224              	.LVL90:
 1225 005e 0446     		mov	r4, r0
 1226              	.LVL91:
3190:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1227              		.loc 1 3190 3 is_stmt 1 view .LVU392
 1228 0060 3F4A     		ldr	r2, .L129
 1229 0062 1368     		ldr	r3, [r2]
 1230 0064 23F45023 		bic	r3, r3, #851968
 1231 0068 1360     		str	r3, [r2]
3193:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
ARM GAS  /tmp/cckRf2Ua.s 			page 84


 1232              		.loc 1 3193 3 view .LVU393
 1233              	.LVL92:
 1234              	.L108:
3193:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1235              		.loc 1 3193 9 view .LVU394
3193:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1236              		.loc 1 3193 10 is_stmt 0 view .LVU395
 1237 006a 3D4B     		ldr	r3, .L129
 1238 006c 1B68     		ldr	r3, [r3]
3193:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1239              		.loc 1 3193 9 view .LVU396
 1240 006e 13F4003F 		tst	r3, #131072
 1241 0072 06D0     		beq	.L125
3195:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1242              		.loc 1 3195 5 is_stmt 1 view .LVU397
3195:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1243              		.loc 1 3195 10 is_stmt 0 view .LVU398
 1244 0074 FFF7FEFF 		bl	HAL_GetTick
 1245              	.LVL93:
3195:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1246              		.loc 1 3195 24 view .LVU399
 1247 0078 001B     		subs	r0, r0, r4
3195:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1248              		.loc 1 3195 8 view .LVU400
 1249 007a 6428     		cmp	r0, #100
 1250 007c F5D9     		bls	.L108
3197:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 1251              		.loc 1 3197 14 view .LVU401
 1252 007e 0320     		movs	r0, #3
 1253 0080 D2E7     		b	.L104
 1254              	.L125:
3202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1255              		.loc 1 3202 3 is_stmt 1 view .LVU402
3202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1256              		.loc 1 3202 15 is_stmt 0 view .LVU403
 1257 0082 FFF7FEFF 		bl	HAL_GetTick
 1258              	.LVL94:
 1259 0086 0446     		mov	r4, r0
 1260              	.LVL95:
3205:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1261              		.loc 1 3205 3 is_stmt 1 view .LVU404
 1262 0088 354A     		ldr	r2, .L129
 1263 008a 1368     		ldr	r3, [r2]
 1264 008c 23F08073 		bic	r3, r3, #16777216
 1265 0090 1360     		str	r3, [r2]
3208:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1266              		.loc 1 3208 3 view .LVU405
 1267              	.LVL96:
 1268              	.L110:
3208:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1269              		.loc 1 3208 9 view .LVU406
3208:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1270              		.loc 1 3208 10 is_stmt 0 view .LVU407
 1271 0092 334B     		ldr	r3, .L129
 1272 0094 1B68     		ldr	r3, [r3]
3208:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1273              		.loc 1 3208 9 view .LVU408
ARM GAS  /tmp/cckRf2Ua.s 			page 85


 1274 0096 13F0007F 		tst	r3, #33554432
 1275 009a 06D0     		beq	.L126
3210:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1276              		.loc 1 3210 5 is_stmt 1 view .LVU409
3210:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1277              		.loc 1 3210 10 is_stmt 0 view .LVU410
 1278 009c FFF7FEFF 		bl	HAL_GetTick
 1279              	.LVL97:
3210:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1280              		.loc 1 3210 24 view .LVU411
 1281 00a0 001B     		subs	r0, r0, r4
3210:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1282              		.loc 1 3210 8 view .LVU412
 1283 00a2 0228     		cmp	r0, #2
 1284 00a4 F5D9     		bls	.L110
3212:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 1285              		.loc 1 3212 14 view .LVU413
 1286 00a6 0320     		movs	r0, #3
 1287 00a8 BEE7     		b	.L104
 1288              	.L126:
3218:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1289              		.loc 1 3218 3 is_stmt 1 view .LVU414
3218:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1290              		.loc 1 3218 15 is_stmt 0 view .LVU415
 1291 00aa FFF7FEFF 		bl	HAL_GetTick
 1292              	.LVL98:
 1293 00ae 0446     		mov	r4, r0
 1294              	.LVL99:
3221:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1295              		.loc 1 3221 3 is_stmt 1 view .LVU416
 1296 00b0 2B4A     		ldr	r2, .L129
 1297 00b2 1368     		ldr	r3, [r2]
 1298 00b4 23F08063 		bic	r3, r3, #67108864
 1299 00b8 1360     		str	r3, [r2]
3224:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1300              		.loc 1 3224 3 view .LVU417
 1301              	.LVL100:
 1302              	.L112:
3224:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1303              		.loc 1 3224 9 view .LVU418
3224:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1304              		.loc 1 3224 10 is_stmt 0 view .LVU419
 1305 00ba 294B     		ldr	r3, .L129
 1306 00bc 1B68     		ldr	r3, [r3]
3224:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1307              		.loc 1 3224 9 view .LVU420
 1308 00be 13F0006F 		tst	r3, #134217728
 1309 00c2 06D0     		beq	.L127
3226:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1310              		.loc 1 3226 5 is_stmt 1 view .LVU421
3226:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1311              		.loc 1 3226 10 is_stmt 0 view .LVU422
 1312 00c4 FFF7FEFF 		bl	HAL_GetTick
 1313              	.LVL101:
3226:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1314              		.loc 1 3226 24 view .LVU423
 1315 00c8 001B     		subs	r0, r0, r4
ARM GAS  /tmp/cckRf2Ua.s 			page 86


3226:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1316              		.loc 1 3226 8 view .LVU424
 1317 00ca 0228     		cmp	r0, #2
 1318 00cc F5D9     		bls	.L112
3228:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 1319              		.loc 1 3228 14 view .LVU425
 1320 00ce 0320     		movs	r0, #3
 1321 00d0 AAE7     		b	.L104
 1322              	.L127:
3235:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1323              		.loc 1 3235 3 is_stmt 1 view .LVU426
3235:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1324              		.loc 1 3235 15 is_stmt 0 view .LVU427
 1325 00d2 FFF7FEFF 		bl	HAL_GetTick
 1326              	.LVL102:
 1327 00d6 0446     		mov	r4, r0
 1328              	.LVL103:
3238:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1329              		.loc 1 3238 3 is_stmt 1 view .LVU428
 1330 00d8 214A     		ldr	r2, .L129
 1331 00da 1368     		ldr	r3, [r2]
 1332 00dc 23F08053 		bic	r3, r3, #268435456
 1333 00e0 1360     		str	r3, [r2]
3241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1334              		.loc 1 3241 3 view .LVU429
 1335              	.LVL104:
 1336              	.L114:
3241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1337              		.loc 1 3241 9 view .LVU430
3241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1338              		.loc 1 3241 10 is_stmt 0 view .LVU431
 1339 00e2 1F4B     		ldr	r3, .L129
 1340 00e4 1B68     		ldr	r3, [r3]
3241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1341              		.loc 1 3241 9 view .LVU432
 1342 00e6 13F0005F 		tst	r3, #536870912
 1343 00ea 06D0     		beq	.L128
3243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1344              		.loc 1 3243 5 is_stmt 1 view .LVU433
3243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1345              		.loc 1 3243 10 is_stmt 0 view .LVU434
 1346 00ec FFF7FEFF 		bl	HAL_GetTick
 1347              	.LVL105:
3243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1348              		.loc 1 3243 24 view .LVU435
 1349 00f0 001B     		subs	r0, r0, r4
3243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     {
 1350              		.loc 1 3243 8 view .LVU436
 1351 00f2 0228     		cmp	r0, #2
 1352 00f4 F5D9     		bls	.L114
3245:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****     }
 1353              		.loc 1 3245 14 view .LVU437
 1354 00f6 0320     		movs	r0, #3
 1355 00f8 96E7     		b	.L104
 1356              	.L128:
3257:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F412Cx || STM32F412Rx || STM32F412Vx || STM32F412Zx || STM32F413xx || STM32F423xx ||
 1357              		.loc 1 3257 3 is_stmt 1 view .LVU438
ARM GAS  /tmp/cckRf2Ua.s 			page 87


3257:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* STM32F412Cx || STM32F412Rx || STM32F412Vx || STM32F412Zx || STM32F413xx || STM32F423xx ||
 1358              		.loc 1 3257 16 is_stmt 0 view .LVU439
 1359 00fa 194B     		ldr	r3, .L129
 1360 00fc 194A     		ldr	r2, .L129+4
 1361 00fe 5A60     		str	r2, [r3, #4]
3267:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #elif defined(STM32F411xE)
 1362              		.loc 1 3267 3 is_stmt 1 view .LVU440
3267:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #elif defined(STM32F411xE)
 1363              		.loc 1 3267 19 is_stmt 0 view .LVU441
 1364 0100 194A     		ldr	r2, .L129+8
 1365 0102 C3F88420 		str	r2, [r3, #132]
3274:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #elif defined(STM32F446xx)
 1366              		.loc 1 3274 3 is_stmt 1 view .LVU442
3274:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #elif defined(STM32F446xx)
 1367              		.loc 1 3274 19 is_stmt 0 view .LVU443
 1368 0106 C3F88820 		str	r2, [r3, #136]
3280:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1369              		.loc 1 3280 3 is_stmt 1 view .LVU444
 1370 010a DA68     		ldr	r2, [r3, #12]
 1371 010c 22F4F852 		bic	r2, r2, #7936
 1372 0110 DA60     		str	r2, [r3, #12]
3283:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* RCC_CIR_PLLI2SRDYIE */
 1373              		.loc 1 3283 3 view .LVU445
 1374 0112 DA68     		ldr	r2, [r3, #12]
 1375 0114 22F40052 		bic	r2, r2, #8192
 1376 0118 DA60     		str	r2, [r3, #12]
3287:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* RCC_CIR_PLLSAIRDYIE */
 1377              		.loc 1 3287 3 view .LVU446
 1378 011a DA68     		ldr	r2, [r3, #12]
 1379 011c 22F48042 		bic	r2, r2, #16384
 1380 0120 DA60     		str	r2, [r3, #12]
3291:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1381              		.loc 1 3291 3 view .LVU447
 1382 0122 DA68     		ldr	r2, [r3, #12]
 1383 0124 42F41F02 		orr	r2, r2, #10420224
 1384 0128 DA60     		str	r2, [r3, #12]
3294:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* RCC_CIR_PLLI2SRDYC */
 1385              		.loc 1 3294 3 view .LVU448
 1386 012a DA68     		ldr	r2, [r3, #12]
 1387 012c 42F40012 		orr	r2, r2, #2097152
 1388 0130 DA60     		str	r2, [r3, #12]
3298:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** #endif /* RCC_CIR_PLLSAIRDYC */
 1389              		.loc 1 3298 3 view .LVU449
 1390 0132 DA68     		ldr	r2, [r3, #12]
 1391 0134 42F48002 		orr	r2, r2, #4194304
 1392 0138 DA60     		str	r2, [r3, #12]
3302:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1393              		.loc 1 3302 3 view .LVU450
 1394 013a 5A6F     		ldr	r2, [r3, #116]
 1395 013c 22F00102 		bic	r2, r2, #1
 1396 0140 5A67     		str	r2, [r3, #116]
3305:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1397              		.loc 1 3305 3 view .LVU451
 1398 0142 5A6F     		ldr	r2, [r3, #116]
 1399 0144 42F08072 		orr	r2, r2, #16777216
 1400 0148 5A67     		str	r2, [r3, #116]
3308:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
ARM GAS  /tmp/cckRf2Ua.s 			page 88


 1401              		.loc 1 3308 3 view .LVU452
3308:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c **** 
 1402              		.loc 1 3308 19 is_stmt 0 view .LVU453
 1403 014a 084B     		ldr	r3, .L129+12
 1404 014c 084A     		ldr	r2, .L129+16
 1405 014e 1A60     		str	r2, [r3]
3311:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1406              		.loc 1 3311 3 is_stmt 1 view .LVU454
3311:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1407              		.loc 1 3311 6 is_stmt 0 view .LVU455
 1408 0150 0F20     		movs	r0, #15
 1409 0152 FFF7FEFF 		bl	HAL_InitTick
 1410              	.LVL106:
3311:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   {
 1411              		.loc 1 3311 5 view .LVU456
 1412 0156 0028     		cmp	r0, #0
 1413 0158 3FF466AF 		beq	.L104
3313:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c ****   }
 1414              		.loc 1 3313 12 view .LVU457
 1415 015c 0120     		movs	r0, #1
 1416 015e 63E7     		b	.L104
 1417              	.L130:
 1418              		.align	2
 1419              	.L129:
 1420 0160 00380240 		.word	1073887232
 1421 0164 10300004 		.word	67121168
 1422 0168 00300024 		.word	603992064
 1423 016c 00000000 		.word	SystemCoreClock
 1424 0170 0024F400 		.word	16000000
 1425              		.cfi_endproc
 1426              	.LFE133:
 1428              		.text
 1429              	.Letext0:
 1430              		.file 2 "/home/hao/Documents/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 1431              		.file 3 "/home/hao/Documents/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 1432              		.file 4 "./Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 1433              		.file 5 "./Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1434              		.file 6 "./Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1435              		.file 7 "./Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1436              		.file 8 "./Libraries/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1437              		.file 9 "./Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/cckRf2Ua.s 			page 89


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_rcc_ex.c
     /tmp/cckRf2Ua.s:18     .text.HAL_RCCEx_PeriphCLKConfig:0000000000000000 $t
     /tmp/cckRf2Ua.s:26     .text.HAL_RCCEx_PeriphCLKConfig:0000000000000000 HAL_RCCEx_PeriphCLKConfig
     /tmp/cckRf2Ua.s:502    .text.HAL_RCCEx_PeriphCLKConfig:0000000000000258 $d
     /tmp/cckRf2Ua.s:510    .text.HAL_RCCEx_GetPeriphCLKConfig:0000000000000000 $t
     /tmp/cckRf2Ua.s:517    .text.HAL_RCCEx_GetPeriphCLKConfig:0000000000000000 HAL_RCCEx_GetPeriphCLKConfig
     /tmp/cckRf2Ua.s:630    .text.HAL_RCCEx_GetPeriphCLKConfig:000000000000008c $d
     /tmp/cckRf2Ua.s:635    .text.HAL_RCCEx_GetPeriphCLKFreq:0000000000000000 $t
     /tmp/cckRf2Ua.s:642    .text.HAL_RCCEx_GetPeriphCLKFreq:0000000000000000 HAL_RCCEx_GetPeriphCLKFreq
     /tmp/cckRf2Ua.s:751    .text.HAL_RCCEx_GetPeriphCLKFreq:0000000000000064 $d
     /tmp/cckRf2Ua.s:759    .text.HAL_RCCEx_EnablePLLI2S:0000000000000000 $t
     /tmp/cckRf2Ua.s:766    .text.HAL_RCCEx_EnablePLLI2S:0000000000000000 HAL_RCCEx_EnablePLLI2S
     /tmp/cckRf2Ua.s:869    .text.HAL_RCCEx_EnablePLLI2S:0000000000000068 $d
     /tmp/cckRf2Ua.s:875    .text.HAL_RCCEx_DisablePLLI2S:0000000000000000 $t
     /tmp/cckRf2Ua.s:882    .text.HAL_RCCEx_DisablePLLI2S:0000000000000000 HAL_RCCEx_DisablePLLI2S
     /tmp/cckRf2Ua.s:936    .text.HAL_RCCEx_DisablePLLI2S:000000000000002c $d
     /tmp/cckRf2Ua.s:942    .text.HAL_RCCEx_EnablePLLSAI:0000000000000000 $t
     /tmp/cckRf2Ua.s:949    .text.HAL_RCCEx_EnablePLLSAI:0000000000000000 HAL_RCCEx_EnablePLLSAI
     /tmp/cckRf2Ua.s:1052   .text.HAL_RCCEx_EnablePLLSAI:0000000000000068 $d
     /tmp/cckRf2Ua.s:1058   .text.HAL_RCCEx_DisablePLLSAI:0000000000000000 $t
     /tmp/cckRf2Ua.s:1065   .text.HAL_RCCEx_DisablePLLSAI:0000000000000000 HAL_RCCEx_DisablePLLSAI
     /tmp/cckRf2Ua.s:1119   .text.HAL_RCCEx_DisablePLLSAI:000000000000002c $d
     /tmp/cckRf2Ua.s:1125   .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/cckRf2Ua.s:1132   .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/cckRf2Ua.s:1420   .text.HAL_RCC_DeInit:0000000000000160 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
SystemCoreClock
