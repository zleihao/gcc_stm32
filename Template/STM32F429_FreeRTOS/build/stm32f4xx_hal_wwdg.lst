ARM GAS  /tmp/cch4mbmN.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_wwdg.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_WWDG_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_WWDG_MspInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_WWDG_MspInit:
  27              	.LVL0:
  28              	.LFB127:
  29              		.file 1 "./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c"
   1:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /**
   2:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   ******************************************************************************
   3:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @file    stm32f4xx_hal_wwdg.c
   4:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @author  MCD Application Team
   5:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @brief   WWDG HAL module driver.
   6:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *          This file provides firmware functions to manage the following 
   7:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *          functionalities of the Window Watchdog (WWDG) peripheral:
   8:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *           + Initialization and de-initialization functions
   9:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *           + IO operation functions
  10:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *           + Peripheral State functions
  11:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   @verbatim
  12:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   ==============================================================================
  13:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****                       ##### WWDG specific features #####
  14:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   ==============================================================================
  15:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   [..] 
  16:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     Once enabled the WWDG generates a system reset on expiry of a programmed
  17:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     time period, unless the program refreshes the counter (downcounter) 
  18:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     before reaching 0x3F value (i.e. a reset is generated when the counter
  19:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     value rolls over from 0x40 to 0x3F). 
  20:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****        
  21:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     (+) An MCU reset is also generated if the counter value is refreshed
  22:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         before the counter has reached the refresh window value. This 
  23:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         implies that the counter must be refreshed in a limited window.
  24:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     (+) Once enabled the WWDG cannot be disabled except by a system reset.
  25:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     (+) WWDGRST flag in RCC_CSR register can be used to inform when a WWDG
  26:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         reset occurs.               
  27:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     (+) The WWDG counter input clock is derived from the APB clock divided 
  28:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         by a programmable prescaler.
  29:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     (+) WWDG clock (Hz) = PCLK1 / (4096 * Prescaler)
ARM GAS  /tmp/cch4mbmN.s 			page 2


  30:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     (+) WWDG timeout (mS) = 1000 * Counter / WWDG clock
  31:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     (+) WWDG Counter refresh is allowed between the following limits :
  32:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         (++) min time (mS) = 1000 * (Counter _ Window) / WWDG clock
  33:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         (++) max time (mS) = 1000 * (Counter _ 0x40) / WWDG clock
  34:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     
  35:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     (+) Min-max timeout value at 50 MHz(PCLK1): 81.9 us / 41.9 ms 
  36:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
  37:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     (+) The Early Wakeup Interrupt (EWI) can be used if specific safety 
  38:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         operations or data logging must be performed before the actual reset is
  39:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         generated. When the downcounter reaches the value 0x40, an EWI interrupt
  40:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         is generated and the corresponding interrupt service routine (ISR) can 
  41:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         be used to trigger specific actions (such as communications or data 
  42:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         logging), before resetting the device.
  43:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         In some applications, the EWI interrupt can be used to manage a software
  44:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         system check and/or system recovery/graceful degradation, without 
  45:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         generating a WWDG reset. In this case, the corresponding interrupt 
  46:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         service routine (ISR) should reload the WWDG counter to avoid the WWDG 
  47:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         reset, then trigger the required actions.
  48:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         Note:When the EWI interrupt cannot be served, e.g. due to a system lock 
  49:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         in a higher priority task, the WWDG reset will eventually be generated.
  50:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
  51:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     (+) Debug mode : When the microcontroller enters debug mode (core halted),
  52:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         the WWDG counter either continues to work normally or stops, depending 
  53:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         on DBG_WWDG_STOP configuration bit in DBG module, accessible through
  54:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         __HAL_DBGMCU_FREEZE_WWDG() and __HAL_DBGMCU_UNFREEZE_WWDG() macros
  55:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
  56:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****                      ##### How to use this driver #####
  57:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   ==============================================================================
  58:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   [..]
  59:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     (+) Enable WWDG APB1 clock using __HAL_RCC_WWDG_CLK_ENABLE().
  60:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
  61:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     (+) Set the WWDG prescaler, refresh window, counter value and Early Wakeup 
  62:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         Interrupt mode using using HAL_WWDG_Init() function.
  63:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         This enables WWDG peripheral and the downcounter starts downcounting 
  64:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         from given counter value.
  65:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         Init function can be called again to modify all watchdog parameters, 
  66:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         however if EWI mode has been set once, it can't be clear until next 
  67:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         reset.
  68:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
  69:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     (+) The application program must refresh the WWDG counter at regular
  70:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         intervals during normal operation to prevent an MCU reset using
  71:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         HAL_WWDG_Refresh() function. This operation must occur only when
  72:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         the counter is lower than the window value already programmed.
  73:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
  74:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     (+) if Early Wakeup Interrupt mode is enable an interrupt is generated when 
  75:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         the counter reaches 0x40. User can add his own code in weak function 
  76:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****         HAL_WWDG_EarlyWakeupCallback().
  77:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
  78:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****      *** WWDG HAL driver macros list ***
  79:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****      ==================================
  80:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****      [..]
  81:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****        Below the list of most used macros in WWDG HAL driver.
  82:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
  83:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****       (+) __HAL_WWDG_GET_IT_SOURCE: Check the selected WWDG's interrupt source.
  84:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****       (+) __HAL_WWDG_GET_FLAG: Get the selected WWDG's flag status.
  85:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****       (+) __HAL_WWDG_CLEAR_FLAG: Clear the WWDG's pending flags.
  86:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
ARM GAS  /tmp/cch4mbmN.s 			page 3


  87:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   @endverbatim
  88:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   ******************************************************************************
  89:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @attention
  90:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *
  91:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  92:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *
  93:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * Redistribution and use in source and binary forms, with or without modification,
  94:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * are permitted provided that the following conditions are met:
  95:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  96:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *      this list of conditions and the following disclaimer.
  97:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  98:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *      this list of conditions and the following disclaimer in the documentation
  99:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *      and/or other materials provided with the distribution.
 100:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 101:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *      may be used to endorse or promote products derived from this software
 102:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *      without specific prior written permission.
 103:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *
 104:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 105:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 106:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 107:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 108:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 109:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 110:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 111:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 112:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 113:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 114:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *
 115:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   ******************************************************************************
 116:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   */
 117:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 118:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /* Includes ------------------------------------------------------------------*/
 119:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** #include "stm32f4xx_hal.h"
 120:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 121:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /** @addtogroup STM32F4xx_HAL_Driver
 122:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @{
 123:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   */
 124:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 125:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** #ifdef HAL_WWDG_MODULE_ENABLED
 126:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /** @defgroup WWDG WWDG
 127:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @brief WWDG HAL module driver.
 128:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @{
 129:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   */
 130:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 131:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /* Private typedef -----------------------------------------------------------*/
 132:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /* Private define ------------------------------------------------------------*/
 133:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /* Private macro -------------------------------------------------------------*/
 134:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /* Private variables ---------------------------------------------------------*/
 135:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /* Private function prototypes -----------------------------------------------*/
 136:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /* Exported functions --------------------------------------------------------*/
 137:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 138:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /** @defgroup WWDG_Exported_Functions WWDG Exported Functions
 139:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @{
 140:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   */
 141:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 142:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /** @defgroup WWDG_Exported_Functions_Group1 Initialization and Configuration functions
 143:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *  @brief    Initialization and Configuration functions.
ARM GAS  /tmp/cch4mbmN.s 			page 4


 144:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *
 145:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** @verbatim
 146:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   ==============================================================================
 147:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****           ##### Initialization and Configuration functions #####
 148:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   ==============================================================================
 149:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   [..]  
 150:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     This section provides functions allowing to:
 151:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****       (+) Initialize and start the WWDG according to the specified parameters
 152:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****           in the WWDG_InitTypeDef of associated handle.
 153:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****       (+) Initialize the WWDG MSP.
 154:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 155:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** @endverbatim
 156:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @{
 157:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   */
 158:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 159:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /**
 160:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @brief  Initialize the WWDG according to the specified.
 161:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *         parameters in the WWDG_InitTypeDef of  associated handle.
 162:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @param  hwwdg  pointer to a WWDG_HandleTypeDef structure that contains
 163:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *                the configuration information for the specified WWDG module.
 164:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @retval HAL status
 165:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   */
 166:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** HAL_StatusTypeDef HAL_WWDG_Init(WWDG_HandleTypeDef *hwwdg)
 167:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** {
 168:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   /* Check the WWDG handle allocation */
 169:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   if(hwwdg == NULL)
 170:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   {
 171:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     return HAL_ERROR;
 172:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   }
 173:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 174:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   /* Check the parameters */
 175:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   assert_param(IS_WWDG_ALL_INSTANCE(hwwdg->Instance));
 176:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   assert_param(IS_WWDG_PRESCALER(hwwdg->Init.Prescaler));
 177:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   assert_param(IS_WWDG_WINDOW(hwwdg->Init.Window));
 178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   assert_param(IS_WWDG_COUNTER(hwwdg->Init.Counter));
 179:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   assert_param(IS_WWDG_EWI_MODE(hwwdg->Init.EWIMode));
 180:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 181:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   /* Init the low level hardware */
 182:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   HAL_WWDG_MspInit(hwwdg);
 183:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 184:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   /* Set WWDG Counter */
 185:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   WRITE_REG(hwwdg->Instance->CR, (WWDG_CR_WDGA | hwwdg->Init.Counter));
 186:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 187:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   /* Set WWDG Prescaler and Window */
 188:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   WRITE_REG(hwwdg->Instance->CFR, (hwwdg->Init.EWIMode | hwwdg->Init.Prescaler | hwwdg->Init.Window
 189:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 190:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   /* Return function status */
 191:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   return HAL_OK;
 192:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** }
 193:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 194:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /**
 195:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @brief  Initialize the WWDG MSP.
 196:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @param  hwwdg  pointer to a WWDG_HandleTypeDef structure that contains
 197:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *                the configuration information for the specified WWDG module.
 198:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @note   When rewriting this function in user file, mechanism may be added
 199:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *         to avoid multiple initialize when HAL_WWDG_Init function is called
 200:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *         again to change parameters.
ARM GAS  /tmp/cch4mbmN.s 			page 5


 201:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @retval None
 202:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   */
 203:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** __weak void HAL_WWDG_MspInit(WWDG_HandleTypeDef *hwwdg)
 204:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** {
  30              		.loc 1 204 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 205:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   /* Prevent unused argument(s) compilation warning */
 206:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   UNUSED(hwwdg);
  35              		.loc 1 206 3 view .LVU1
 207:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 208:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 209:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****            the HAL_WWDG_MspInit could be implemented in the user file
 210:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****    */
 211:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** }
  36              		.loc 1 211 1 is_stmt 0 view .LVU2
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE127:
  41              		.section	.text.HAL_WWDG_Init,"ax",%progbits
  42              		.align	1
  43              		.global	HAL_WWDG_Init
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	HAL_WWDG_Init:
  50              	.LVL1:
  51              	.LFB126:
 167:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   /* Check the WWDG handle allocation */
  52              		.loc 1 167 1 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
 169:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   {
  56              		.loc 1 169 3 view .LVU4
 169:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   {
  57              		.loc 1 169 5 is_stmt 0 view .LVU5
  58 0000 88B1     		cbz	r0, .L4
 167:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   /* Check the WWDG handle allocation */
  59              		.loc 1 167 1 view .LVU6
  60 0002 10B5     		push	{r4, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 4, -8
  64              		.cfi_offset 14, -4
  65 0004 0446     		mov	r4, r0
 175:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   assert_param(IS_WWDG_PRESCALER(hwwdg->Init.Prescaler));
  66              		.loc 1 175 3 is_stmt 1 view .LVU7
 176:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   assert_param(IS_WWDG_WINDOW(hwwdg->Init.Window));
  67              		.loc 1 176 3 view .LVU8
 177:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   assert_param(IS_WWDG_COUNTER(hwwdg->Init.Counter));
  68              		.loc 1 177 3 view .LVU9
 178:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   assert_param(IS_WWDG_EWI_MODE(hwwdg->Init.EWIMode));
  69              		.loc 1 178 3 view .LVU10
ARM GAS  /tmp/cch4mbmN.s 			page 6


 179:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
  70              		.loc 1 179 3 view .LVU11
 182:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
  71              		.loc 1 182 3 view .LVU12
  72 0006 FFF7FEFF 		bl	HAL_WWDG_MspInit
  73              	.LVL2:
 185:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
  74              		.loc 1 185 3 view .LVU13
  75 000a E368     		ldr	r3, [r4, #12]
  76 000c 2268     		ldr	r2, [r4]
  77 000e 43F08003 		orr	r3, r3, #128
  78 0012 1360     		str	r3, [r2]
 188:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
  79              		.loc 1 188 3 view .LVU14
  80 0014 2369     		ldr	r3, [r4, #16]
  81 0016 6268     		ldr	r2, [r4, #4]
  82 0018 1343     		orrs	r3, r3, r2
  83 001a A168     		ldr	r1, [r4, #8]
  84 001c 2268     		ldr	r2, [r4]
  85 001e 0B43     		orrs	r3, r3, r1
  86 0020 5360     		str	r3, [r2, #4]
 191:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** }
  87              		.loc 1 191 3 view .LVU15
 191:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** }
  88              		.loc 1 191 10 is_stmt 0 view .LVU16
  89 0022 0020     		movs	r0, #0
 192:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
  90              		.loc 1 192 1 view .LVU17
  91 0024 10BD     		pop	{r4, pc}
  92              	.LVL3:
  93              	.L4:
  94              	.LCFI1:
  95              		.cfi_def_cfa_offset 0
  96              		.cfi_restore 4
  97              		.cfi_restore 14
 171:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   }
  98              		.loc 1 171 12 view .LVU18
  99 0026 0120     		movs	r0, #1
 100              	.LVL4:
 192:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 101              		.loc 1 192 1 view .LVU19
 102 0028 7047     		bx	lr
 103              		.cfi_endproc
 104              	.LFE126:
 106              		.section	.text.HAL_WWDG_Refresh,"ax",%progbits
 107              		.align	1
 108              		.global	HAL_WWDG_Refresh
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 112              		.fpu fpv4-sp-d16
 114              	HAL_WWDG_Refresh:
 115              	.LVL5:
 116              	.LFB128:
 212:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 213:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /**
 214:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @}
ARM GAS  /tmp/cch4mbmN.s 			page 7


 215:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   */
 216:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 217:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /** @defgroup WWDG_Exported_Functions_Group2 IO operation functions
 218:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****  *  @brief    IO operation functions 
 219:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****  *
 220:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** @verbatim
 221:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   ==============================================================================
 222:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****                       ##### IO operation functions #####
 223:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   ==============================================================================  
 224:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   [..]
 225:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     This section provides functions allowing to:
 226:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     (+) Refresh the WWDG.
 227:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     (+) Handle WWDG interrupt request and associated function callback.
 228:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 229:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** @endverbatim
 230:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @{
 231:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   */
 232:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 233:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /**
 234:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @brief  Refresh the WWDG.
 235:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @param  hwwdg  pointer to a WWDG_HandleTypeDef structure that contains
 236:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *                the configuration information for the specified WWDG module.
 237:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @retval HAL status
 238:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   */
 239:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** HAL_StatusTypeDef HAL_WWDG_Refresh(WWDG_HandleTypeDef *hwwdg)
 240:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** {
 117              		.loc 1 240 1 is_stmt 1 view -0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 241:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   /* Write to WWDG CR the WWDG Counter value to refresh with */
 242:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   WRITE_REG(hwwdg->Instance->CR, (hwwdg->Init.Counter));
 122              		.loc 1 242 3 view .LVU21
 123 0000 0368     		ldr	r3, [r0]
 124 0002 C268     		ldr	r2, [r0, #12]
 125 0004 1A60     		str	r2, [r3]
 243:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 244:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   /* Return function status */
 245:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   return HAL_OK;
 126              		.loc 1 245 3 view .LVU22
 246:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** }
 127              		.loc 1 246 1 is_stmt 0 view .LVU23
 128 0006 0020     		movs	r0, #0
 129              	.LVL6:
 130              		.loc 1 246 1 view .LVU24
 131 0008 7047     		bx	lr
 132              		.cfi_endproc
 133              	.LFE128:
 135              		.section	.text.HAL_WWDG_EarlyWakeupCallback,"ax",%progbits
 136              		.align	1
 137              		.weak	HAL_WWDG_EarlyWakeupCallback
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	HAL_WWDG_EarlyWakeupCallback:
ARM GAS  /tmp/cch4mbmN.s 			page 8


 144              	.LVL7:
 145              	.LFB130:
 247:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 248:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /**
 249:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @brief  Handle WWDG interrupt request.
 250:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @note   The Early Wakeup Interrupt (EWI) can be used if specific safety operations
 251:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *         or data logging must be performed before the actual reset is generated.
 252:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *         The EWI interrupt is enabled by calling HAL_WWDG_Init function with 
 253:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *         EWIMode set to WWDG_EWI_ENABLE.
 254:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *         When the downcounter reaches the value 0x40, and EWI interrupt is
 255:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *         generated and the corresponding Interrupt Service Routine (ISR) can
 256:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *         be used to trigger specific actions (such as communications or data
 257:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *         logging), before resetting the device.
 258:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @param  hwwdg  pointer to a WWDG_HandleTypeDef structure that contains
 259:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *                the configuration information for the specified WWDG module.
 260:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @retval None
 261:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   */
 262:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** void HAL_WWDG_IRQHandler(WWDG_HandleTypeDef *hwwdg)
 263:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** {
 264:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   /* Check if Early Wakeup Interrupt is enable */
 265:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   if(__HAL_WWDG_GET_IT_SOURCE(hwwdg, WWDG_IT_EWI) != RESET)
 266:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   {
 267:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     /* Check if WWDG Early Wakeup Interrupt occurred */
 268:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     if(__HAL_WWDG_GET_FLAG(hwwdg, WWDG_FLAG_EWIF) != RESET)
 269:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     {
 270:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****       /* Clear the WWDG Early Wakeup flag */
 271:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****       __HAL_WWDG_CLEAR_FLAG(hwwdg, WWDG_FLAG_EWIF);
 272:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 273:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****       /* Early Wakeup callback */ 
 274:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****       HAL_WWDG_EarlyWakeupCallback(hwwdg);
 275:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     }
 276:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   }
 277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** }
 278:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 279:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** /**
 280:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @brief  WWDG Early Wakeup callback.
 281:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @param  hwwdg  pointer to a WWDG_HandleTypeDef structure that contains
 282:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   *                the configuration information for the specified WWDG module.
 283:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   * @retval None
 284:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   */
 285:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** __weak void HAL_WWDG_EarlyWakeupCallback(WWDG_HandleTypeDef* hwwdg)
 286:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** {
 146              		.loc 1 286 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 287:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   /* Prevent unused argument(s) compilation warning */
 288:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   UNUSED(hwwdg);
 151              		.loc 1 288 3 view .LVU26
 289:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 290:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 291:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****            the HAL_WWDG_EarlyWakeupCallback could be implemented in the user file
 292:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****    */
 293:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** }
 152              		.loc 1 293 1 is_stmt 0 view .LVU27
 153 0000 7047     		bx	lr
ARM GAS  /tmp/cch4mbmN.s 			page 9


 154              		.cfi_endproc
 155              	.LFE130:
 157              		.section	.text.HAL_WWDG_IRQHandler,"ax",%progbits
 158              		.align	1
 159              		.global	HAL_WWDG_IRQHandler
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	HAL_WWDG_IRQHandler:
 166              	.LVL8:
 167              	.LFB129:
 263:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   /* Check if Early Wakeup Interrupt is enable */
 168              		.loc 1 263 1 is_stmt 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 263:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   /* Check if Early Wakeup Interrupt is enable */
 172              		.loc 1 263 1 is_stmt 0 view .LVU29
 173 0000 08B5     		push	{r3, lr}
 174              	.LCFI2:
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 3, -8
 177              		.cfi_offset 14, -4
 265:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   {
 178              		.loc 1 265 3 is_stmt 1 view .LVU30
 265:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   {
 179              		.loc 1 265 6 is_stmt 0 view .LVU31
 180 0002 0368     		ldr	r3, [r0]
 181 0004 5A68     		ldr	r2, [r3, #4]
 265:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****   {
 182              		.loc 1 265 5 view .LVU32
 183 0006 12F4007F 		tst	r2, #512
 184 000a 03D0     		beq	.L11
 268:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     {
 185              		.loc 1 268 5 is_stmt 1 view .LVU33
 268:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     {
 186              		.loc 1 268 8 is_stmt 0 view .LVU34
 187 000c 9A68     		ldr	r2, [r3, #8]
 268:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     {
 188              		.loc 1 268 7 view .LVU35
 189 000e 12F0010F 		tst	r2, #1
 190 0012 00D1     		bne	.L14
 191              	.LVL9:
 192              	.L11:
 277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 193              		.loc 1 277 1 view .LVU36
 194 0014 08BD     		pop	{r3, pc}
 195              	.LVL10:
 196              	.L14:
 271:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 197              		.loc 1 271 7 is_stmt 1 view .LVU37
 198 0016 6FF00102 		mvn	r2, #1
 199 001a 9A60     		str	r2, [r3, #8]
 274:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c ****     }
 200              		.loc 1 274 7 view .LVU38
 201 001c FFF7FEFF 		bl	HAL_WWDG_EarlyWakeupCallback
ARM GAS  /tmp/cch4mbmN.s 			page 10


 202              	.LVL11:
 277:./Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_wwdg.c **** 
 203              		.loc 1 277 1 is_stmt 0 view .LVU39
 204 0020 F8E7     		b	.L11
 205              		.cfi_endproc
 206              	.LFE129:
 208              		.text
 209              	.Letext0:
 210              		.file 2 "/home/hao/Documents/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 211              		.file 3 "/home/hao/Documents/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 212              		.file 4 "./Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 213              		.file 5 "./Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 214              		.file 6 "./Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 215              		.file 7 "./Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_wwdg.h"
ARM GAS  /tmp/cch4mbmN.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_wwdg.c
     /tmp/cch4mbmN.s:18     .text.HAL_WWDG_MspInit:0000000000000000 $t
     /tmp/cch4mbmN.s:26     .text.HAL_WWDG_MspInit:0000000000000000 HAL_WWDG_MspInit
     /tmp/cch4mbmN.s:42     .text.HAL_WWDG_Init:0000000000000000 $t
     /tmp/cch4mbmN.s:49     .text.HAL_WWDG_Init:0000000000000000 HAL_WWDG_Init
     /tmp/cch4mbmN.s:107    .text.HAL_WWDG_Refresh:0000000000000000 $t
     /tmp/cch4mbmN.s:114    .text.HAL_WWDG_Refresh:0000000000000000 HAL_WWDG_Refresh
     /tmp/cch4mbmN.s:136    .text.HAL_WWDG_EarlyWakeupCallback:0000000000000000 $t
     /tmp/cch4mbmN.s:143    .text.HAL_WWDG_EarlyWakeupCallback:0000000000000000 HAL_WWDG_EarlyWakeupCallback
     /tmp/cch4mbmN.s:158    .text.HAL_WWDG_IRQHandler:0000000000000000 $t
     /tmp/cch4mbmN.s:165    .text.HAL_WWDG_IRQHandler:0000000000000000 HAL_WWDG_IRQHandler

NO UNDEFINED SYMBOLS
